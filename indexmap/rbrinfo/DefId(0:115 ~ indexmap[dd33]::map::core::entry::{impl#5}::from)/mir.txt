bb0
  0: PlaceMention(_1)
    SourceInfo(src/map/core/entry.rs:331:13-331:18)
  1: StorageLive(_2)
    SourceInfo(src/map/core/entry.rs:329:27-329:34)
  2: _2 = move ((_1.0: map::core::RefMut<'_, K, V>).0: &mut hashbrown::HashTable<usize>)
    SourceInfo(src/map/core/entry.rs:329:27-329:34)
  3: StorageLive(_3)
    SourceInfo(src/map/core/entry.rs:329:36-329:43)
  4: _3 = move ((_1.0: map::core::RefMut<'_, K, V>).1: &mut alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core/entry.rs:329:36-329:43)
  5: StorageLive(_4)
    SourceInfo(src/map/core/entry.rs:330:13-330:18)
  6: _4 = (_1.1: usize)
    SourceInfo(src/map/core/entry.rs:330:13-330:18)
  7: StorageLive(_5)
    SourceInfo(src/map/core/entry.rs:332:13-332:17)
  8: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:332:27-332:34)
  9: StorageLive(_7)
    SourceInfo(src/map/core/entry.rs:332:20-332:27)
  10: _7 = &(*_3)
    SourceInfo(src/map/core/entry.rs:332:20-332:27)
  11: StorageLive(_8)
    SourceInfo(src/map/core/entry.rs:332:28-332:33)
  12: _8 = _4
    SourceInfo(src/map/core/entry.rs:332:28-332:33)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:332:27-332:34)
      kind: _6 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Index<usize>>::index(move _7, move _8) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_8)
    SourceInfo(src/map/core/entry.rs:332:33-332:34)
  1: StorageDead(_7)
    SourceInfo(src/map/core/entry.rs:332:33-332:34)
  2: _5 = ((*_6).0: HashValue)
    SourceInfo(src/map/core/entry.rs:332:20-332:39)
  3: FakeRead(ForLet(None), _5)
    SourceInfo(src/map/core/entry.rs:332:13-332:17)
  4: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:332:39-332:40)
  5: StorageLive(_9)
    SourceInfo(src/map/core/entry.rs:334:13-334:20)
  6: _9 = &mut (*_3)
    SourceInfo(src/map/core/entry.rs:334:13-334:20)
  7: StorageLive(_10)
    SourceInfo(src/map/core/entry.rs:335:20-337:43)
  8: StorageLive(_11)
    SourceInfo(src/map/core/entry.rs:335:20-336:62)
  9: StorageLive(_12)
    SourceInfo(src/map/core/entry.rs:335:20-335:27)
  10: _12 = &mut (*_2)
    SourceInfo(src/map/core/entry.rs:335:20-335:27)
  11: StorageLive(_13)
    SourceInfo(src/map/core/entry.rs:336:29-336:39)
  12: StorageLive(_14)
    SourceInfo(src/map/core/entry.rs:336:29-336:33)
  13: _14 = _5
    SourceInfo(src/map/core/entry.rs:336:29-336:33)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:336:29-336:39)
      kind: _13 = HashValue::get(move _14) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_14)
    SourceInfo(src/map/core/entry.rs:336:38-336:39)
  1: StorageLive(_15)
    SourceInfo(src/map/core/entry.rs:336:41-336:61)
  2: _15 = {closure@src/map/core/entry.rs:336:41: 336:50} { index: _4 }
    SourceInfo(src/map/core/entry.rs:336:41-336:61)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:335:20-336:62)
      kind: _11 = hashbrown::HashTable::<usize>::find_entry::<{closure@src/map/core/entry.rs:336:41: 336:50}>(move _12, move _13, move _15) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_15)
    SourceInfo(src/map/core/entry.rs:336:61-336:62)
  1: StorageDead(_13)
    SourceInfo(src/map/core/entry.rs:336:61-336:62)
  2: StorageDead(_12)
    SourceInfo(src/map/core/entry.rs:336:61-336:62)
  3: StorageLive(_16)
    SourceInfo(src/map/core/entry.rs:337:25-337:42)
  4: StorageLive(_17)
    SourceInfo(src/map/core/entry.rs:337:25-337:42)
  5: _17 = const "index not found"
    SourceInfo(src/map/core/entry.rs:337:25-337:42)
  6: _16 = &(*_17)
    SourceInfo(src/map/core/entry.rs:337:25-337:42)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:335:20-337:43)
      kind: _10 = core::result::Result::<hashbrown::hash_table::OccupiedEntry<'_, usize>, hashbrown::hash_table::AbsentEntry<'_, usize>>::expect(move _11, move _16) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_16)
    SourceInfo(src/map/core/entry.rs:337:42-337:43)
  1: StorageDead(_11)
    SourceInfo(src/map/core/entry.rs:337:42-337:43)
  2: _0 = map::core::entry::OccupiedEntry::<'_, K, V> { entries: move _9, index: move _10 }
    SourceInfo(src/map/core/entry.rs:333:9-338:10)
  3: StorageDead(_10)
    SourceInfo(src/map/core/entry.rs:338:9-338:10)
  4: StorageDead(_9)
    SourceInfo(src/map/core/entry.rs:338:9-338:10)
  5: StorageDead(_5)
    SourceInfo(src/map/core/entry.rs:339:5-339:6)
  6: StorageDead(_4)
    SourceInfo(src/map/core/entry.rs:339:5-339:6)
  7: StorageDead(_3)
    SourceInfo(src/map/core/entry.rs:339:5-339:6)
  8: StorageDead(_2)
    SourceInfo(src/map/core/entry.rs:339:5-339:6)
  9: StorageDead(_17)
    SourceInfo(src/map/core/entry.rs:339:5-339:6)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:339:6-339:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:327:5-339:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

