bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core.rs:242:9-242:34)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:242:9-242:13)
  2: _4 = &mut (*_1)
    SourceInfo(src/map/core.rs:242:9-242:13)
  3: StorageLive(_5)
    SourceInfo(src/map/core.rs:242:22-242:33)
  4: StorageLive(_6)
    SourceInfo(src/map/core.rs:242:22-242:27)
  5: _6 = &(*_2)
    SourceInfo(src/map/core.rs:242:22-242:27)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:242:22-242:33)
      kind: _5 = map::core::IndexMapCore::<K, V>::len(move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:242:32-242:33)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:242:9-242:34)
      kind: _3 = map::core::IndexMapCore::<K, V>::reserve(move _4, move _5) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_5)
    SourceInfo(src/map/core.rs:242:33-242:34)
  1: StorageDead(_4)
    SourceInfo(src/map/core.rs:242:33-242:34)
  2: StorageDead(_3)
    SourceInfo(src/map/core.rs:242:34-242:35)
  3: StorageLive(_7)
    SourceInfo(src/map/core.rs:243:9-243:63)
  4: StorageLive(_8)
    SourceInfo(src/map/core.rs:243:29-243:46)
  5: StorageLive(_9)
    SourceInfo(src/map/core.rs:243:29-243:46)
  6: _9 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:243:29-243:46)
  7: _8 = &mut (*_9)
    SourceInfo(src/map/core.rs:243:29-243:46)
  8: StorageLive(_10)
    SourceInfo(src/map/core.rs:243:48-243:62)
  9: StorageLive(_11)
    SourceInfo(src/map/core.rs:243:48-243:62)
  10: StorageLive(_12)
    SourceInfo(src/map/core.rs:243:48-243:62)
  11: StorageLive(_13)
    SourceInfo(src/map/core.rs:243:48-243:62)
  12: _13 = &((*_2).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:243:48-243:62)
  13: _12 = &(*_13)
    SourceInfo(src/map/core.rs:243:48-243:62)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:243:48-243:62)
      kind: _11 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _12) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _10 = &(*_11)
    SourceInfo(src/map/core.rs:243:48-243:62)
  1: StorageDead(_12)
    SourceInfo(src/map/core.rs:243:61-243:62)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:243:9-243:63)
      kind: _7 = map::core::insert_bulk_no_grow::<K, V>(move _8, move _10) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:243:62-243:63)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:243:62-243:63)
  2: StorageDead(_13)
    SourceInfo(src/map/core.rs:243:63-243:64)
  3: StorageDead(_11)
    SourceInfo(src/map/core.rs:243:63-243:64)
  4: StorageDead(_9)
    SourceInfo(src/map/core.rs:243:63-243:64)
  5: StorageDead(_7)
    SourceInfo(src/map/core.rs:243:63-243:64)
  6: StorageLive(_14)
    SourceInfo(src/map/core.rs:244:9-244:48)
  7: StorageLive(_15)
    SourceInfo(src/map/core.rs:244:9-244:21)
  8: _15 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:244:9-244:21)
  9: StorageLive(_16)
    SourceInfo(src/map/core.rs:244:29-244:47)
  10: StorageLive(_17)
    SourceInfo(src/map/core.rs:244:29-244:47)
  11: _17 = &mut ((*_2).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:244:29-244:47)
  12: _16 = &mut (*_17)
    SourceInfo(src/map/core.rs:244:29-244:47)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:244:9-244:48)
      kind: _14 = alloc::vec::Vec::<Bucket<K, V>>::append(move _15, move _16) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_16)
    SourceInfo(src/map/core.rs:244:47-244:48)
  1: StorageDead(_15)
    SourceInfo(src/map/core.rs:244:47-244:48)
  2: StorageDead(_17)
    SourceInfo(src/map/core.rs:244:48-244:49)
  3: StorageDead(_14)
    SourceInfo(src/map/core.rs:244:48-244:49)
  4: StorageLive(_18)
    SourceInfo(src/map/core.rs:245:9-245:30)
  5: StorageLive(_19)
    SourceInfo(src/map/core.rs:245:9-245:22)
  6: _19 = &mut ((*_2).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:245:9-245:22)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:245:9-245:30)
      kind: _18 = hashbrown::HashTable::<usize>::clear(move _19) -> [return: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_19)
    SourceInfo(src/map/core.rs:245:29-245:30)
  1: StorageDead(_18)
    SourceInfo(src/map/core.rs:245:30-245:31)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:241:65-246:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:246:6-246:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/map/core.rs:241:5-246:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5]
  succs []

