bb0
  0: StorageLive(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:13-214:17)
  1: StorageLive(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:30-214:43)
  2: StorageLive(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:30-214:34)
  3: _6 = _2
    SourceInfo(src/map/core/raw_entry_v1.rs:214:30-214:34)
  4: _5 = move _6 as usize (IntToInt)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:30-214:43)
  5: StorageDead(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:42-214:43)
  6: _4 = HashValue(move _5)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:20-214:44)
  7: StorageDead(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:43-214:44)
  8: FakeRead(ForLet(None), _4)
    SourceInfo(src/map/core/raw_entry_v1.rs:214:13-214:17)
  9: StorageLive(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:13-215:14)
  10: StorageLive(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
  11: StorageLive(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:54)
  12: StorageLive(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:30)
  13: _10 = &((*(_1.0: &map::IndexMap<K, V, S>)).0: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:30)
  14: StorageLive(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:44-215:48)
  15: _11 = _4
    SourceInfo(src/map/core/raw_entry_v1.rs:215:44-215:48)
  16: StorageLive(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:50-215:53)
  17: _12 = &(*_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:50-215:53)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:54)
      kind: _9 = map::core::IndexMapCore::<K, V>::get_index_of::<Q>(move _10, move _11, move _12) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_12)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:53-215:54)
  1: StorageDead(_11)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:53-215:54)
  2: StorageDead(_10)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:53-215:54)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
      kind: _8 = <core::option::Option<usize> as core::ops::Try>::branch(move _9) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_9)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  1: PlaceMention(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
  2: _13 = discriminant(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
      kind: switchInt(move _13) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_17)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
  1: _17 = ((_8 as Continue).0: usize)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
  2: _7 = _17
    SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
  3: StorageDead(_17)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  4: FakeRead(ForLet(None), _7)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:13-215:14)
  5: StorageDead(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:55-215:56)
  6: StorageLive(_18)
    SourceInfo(src/map/core/raw_entry_v1.rs:216:9-216:17)
  7: _18 = &(*(_1.0: &map::IndexMap<K, V, S>))
    SourceInfo(src/map/core/raw_entry_v1.rs:216:9-216:17)
  8: StorageLive(_19)
    SourceInfo(src/map/core/raw_entry_v1.rs:216:28-216:29)
  9: _19 = _7
    SourceInfo(src/map/core/raw_entry_v1.rs:216:28-216:29)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:216:9-216:30)
      kind: _0 = map::IndexMap::<K, V, S>::get_index(move _18, move _19) -> [return: bb8, unwind: bb10]
  }
  preds [bb2, bb4]
  succs [bb8, bb10]

bb6
  0: StorageLive(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  1: _14 = ((_8 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  2: StorageLive(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  3: _16 = _14
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:215:17-215:55)
      kind: _0 = <core::option::Option<(&K, &V)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _16) -> [return: bb7, unwind: bb10]
  }
  preds [bb4]
  succs [bb7, bb10]

bb7
  0: StorageDead(_16)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  1: StorageDead(_14)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:54-215:55)
  2: StorageDead(_8)
    SourceInfo(src/map/core/raw_entry_v1.rs:215:55-215:56)
  3: StorageDead(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:217:5-217:6)
  4: StorageDead(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:217:5-217:6)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:217:6-217:6)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: StorageDead(_19)
    SourceInfo(src/map/core/raw_entry_v1.rs:216:29-216:30)
  1: StorageDead(_18)
    SourceInfo(src/map/core/raw_entry_v1.rs:216:29-216:30)
  2: StorageDead(_7)
    SourceInfo(src/map/core/raw_entry_v1.rs:217:5-217:6)
  3: StorageDead(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:217:5-217:6)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:217:6-217:6)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:217:6-217:6)
      kind: return
  }
  preds [bb7, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:210:5-217:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6]
  succs []

