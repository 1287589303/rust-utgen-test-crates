bb0
  0: StorageLive(_1)
    SourceInfo(src/map/iter.rs:154:19-154:32)
  1: StorageLive(_2)
    SourceInfo(src/map/iter.rs:154:19-154:21)
  2: StorageLive(_3)
    SourceInfo(src/map/iter.rs:154:19-154:21)
  3: StorageLive(_4)
    SourceInfo(src/map/iter.rs:154:19-154:21)
  4: _4 = []
    SourceInfo(src/map/iter.rs:154:19-154:21)
  5: _3 = &mut _4
    SourceInfo(src/map/iter.rs:154:19-154:21)
  6: _2 = move _3 as &mut [Bucket<K, V>] (PointerCoercion(Unsize))
    SourceInfo(src/map/iter.rs:154:19-154:21)
  7: StorageDead(_3)
    SourceInfo(src/map/iter.rs:154:20-154:21)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:154:19-154:32)
      kind: _1 = core::slice::<impl [Bucket<K, V>]>::iter_mut(move _2) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_2)
    SourceInfo(src/map/iter.rs:154:31-154:32)
  1: _0 = map::iter::IterMut::<'_, K, V> { iter: move _1 }
    SourceInfo(src/map/iter.rs:153:9-155:10)
  2: StorageDead(_1)
    SourceInfo(src/map/iter.rs:155:9-155:10)
  3: StorageDead(_4)
    SourceInfo(src/map/iter.rs:156:5-156:6)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:156:6-156:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:152:5-156:6)
      kind: resume
  }
  preds [bb0]
  succs []

