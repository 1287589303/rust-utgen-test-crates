bb0
  0: StorageLive(_3)
    SourceInfo(src/map/slice.rs:85:9-85:36)
  1: StorageLive(_4)
    SourceInfo(src/map/slice.rs:85:9-85:21)
  2: _4 = &mut ((*_1).0: [Bucket<K, V>])
    SourceInfo(src/map/slice.rs:85:9-85:21)
  3: StorageLive(_5)
    SourceInfo(src/map/slice.rs:85:30-85:35)
  4: _5 = _2
    SourceInfo(src/map/slice.rs:85:30-85:35)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:85:9-85:36)
      kind: _3 = core::slice::<impl [Bucket<K, V>]>::get_mut::<usize>(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map/slice.rs:85:35-85:36)
  1: StorageDead(_4)
    SourceInfo(src/map/slice.rs:85:35-85:36)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:85:9-85:57)
      kind: _0 = core::option::Option::<&mut Bucket<K, V>>::map::<(&K, &mut V), for<'a> fn(&'a mut Bucket<K, V>) -> (&'a K, &'a mut V) {Bucket::<K, V>::ref_mut}>(move _3, Bucket::<K, V>::ref_mut) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/map/slice.rs:85:56-85:57)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:86:6-86:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:84:5-86:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

