bb0
  0: StorageLive(_2)
    SourceInfo(src/set/iter.rs:609:9-609:22)
  1: StorageLive(_3)
    SourceInfo(src/set/iter.rs:609:9-609:15)
  2: _3 = &mut ((*_1).0: I)
    SourceInfo(src/set/iter.rs:609:9-609:15)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:609:9-609:22)
      kind: _2 = <I as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(src/set/iter.rs:609:21-609:22)
  1: StorageLive(_4)
    SourceInfo(src/set/iter.rs:609:27-609:38)
  2: _4 = {closure@src/set/iter.rs:609:27: 609:30}
    SourceInfo(src/set/iter.rs:609:27-609:38)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:609:9-609:39)
      kind: _0 = core::option::Option::<<I as core::iter::Iterator>::Item>::map::<(<I as core::iter::Iterator>::Item, ()), {closure@src/set/iter.rs:609:27: 609:30}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/set/iter.rs:609:38-609:39)
  1: StorageDead(_2)
    SourceInfo(src/set/iter.rs:609:38-609:39)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:610:6-610:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:609:38-609:39)
      kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:608:5-610:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

