bb0
  0: StorageLive(_2)
    SourceInfo(src/set/iter.rs:422:19-422:36)
  1: StorageLive(_3)
    SourceInfo(src/set/iter.rs:422:19-422:28)
  2: _3 = &((*_1).0: core::iter::Chain<set::iter::Difference<'_, T, S2>, set::iter::Difference<'_, T, S1>>)
    SourceInfo(src/set/iter.rs:422:19-422:28)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:422:19-422:36)
      kind: _2 = <core::iter::Chain<set::iter::Difference<'_, T, S2>, set::iter::Difference<'_, T, S1>> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_3)
    SourceInfo(src/set/iter.rs:422:35-422:36)
  1: _0 = set::iter::SymmetricDifference::<'_, T, S1, S2> { iter: move _2 }
    SourceInfo(src/set/iter.rs:421:9-423:10)
  2: StorageDead(_2)
    SourceInfo(src/set/iter.rs:423:9-423:10)
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:424:6-424:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/set/iter.rs:420:5-424:6)
      kind: resume
  }
  preds [bb0]
  succs []

