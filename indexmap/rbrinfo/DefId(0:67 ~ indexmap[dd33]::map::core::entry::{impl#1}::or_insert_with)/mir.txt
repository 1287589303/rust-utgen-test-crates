bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core/entry.rs:74:9-77:10)
  1: StorageLive(_4)
    SourceInfo(src/map/core/entry.rs:74:9-77:10)
  2: PlaceMention(_1)
    SourceInfo(src/map/core/entry.rs:74:15-74:19)
  3: _5 = discriminant(_1)
    SourceInfo(src/map/core/entry.rs:74:15-74:19)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:74:9-74:19)
      kind: switchInt(move _5) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map/core/entry.rs:74:15-74:19)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:74:15-74:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:75:13-75:35)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_9)
    SourceInfo(src/map/core/entry.rs:76:27-76:32)
  1: _9 = move ((_1 as Vacant).0: map::core::entry::VacantEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:76:27-76:32)
  2: StorageLive(_10)
    SourceInfo(src/map/core/entry.rs:76:37-76:57)
  3: StorageLive(_11)
    SourceInfo(src/map/core/entry.rs:76:37-76:42)
  4: _11 = move _9
    SourceInfo(src/map/core/entry.rs:76:37-76:42)
  5: StorageLive(_12)
    SourceInfo(src/map/core/entry.rs:76:50-76:56)
  6: StorageLive(_13)
    SourceInfo(src/map/core/entry.rs:76:50-76:54)
  7: _13 = move _2
    SourceInfo(src/map/core/entry.rs:76:50-76:54)
  8: StorageLive(_14)
    SourceInfo(src/map/core/entry.rs:76:50-76:56)
  9: _14 = ()
    SourceInfo(src/map/core/entry.rs:76:50-76:56)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:50-76:56)
      kind: _12 = <F as core::ops::FnOnce<()>>::call_once(move _13, move _14) -> [return: bb6, unwind: bb13]
  }
  preds [bb0, bb2]
  succs [bb6, bb13]

bb4
  0: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:75:29-75:34)
  1: _6 = move ((_1 as Occupied).0: map::core::entry::OccupiedEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:75:29-75:34)
  2: StorageLive(_7)
    SourceInfo(src/map/core/entry.rs:75:39-75:55)
  3: StorageLive(_8)
    SourceInfo(src/map/core/entry.rs:75:39-75:44)
  4: _8 = move _6
    SourceInfo(src/map/core/entry.rs:75:39-75:44)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:75:39-75:55)
      kind: _7 = map::core::entry::OccupiedEntry::<'_, K, V>::into_mut(move _8) -> [return: bb5, unwind: bb16]
  }
  preds [bb2]
  succs [bb5, bb16]

bb5
  0: _4 = &mut (*_7)
    SourceInfo(src/map/core/entry.rs:75:39-75:55)
  1: StorageDead(_8)
    SourceInfo(src/map/core/entry.rs:75:54-75:55)
  2: StorageDead(_7)
    SourceInfo(src/map/core/entry.rs:75:54-75:55)
  3: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:75:54-75:55)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:75:54-75:55)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb6
  0: StorageDead(_14)
    SourceInfo(src/map/core/entry.rs:76:55-76:56)
  1: StorageDead(_13)
    SourceInfo(src/map/core/entry.rs:76:55-76:56)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:37-76:57)
      kind: _10 = map::core::entry::VacantEntry::<'_, K, V>::insert(move _11, move _12) -> [return: bb7, unwind: bb12]
  }
  preds [bb3]
  succs [bb7, bb12]

bb7
  0: _4 = &mut (*_10)
    SourceInfo(src/map/core/entry.rs:76:37-76:57)
  1: StorageDead(_12)
    SourceInfo(src/map/core/entry.rs:76:56-76:57)
  2: StorageDead(_11)
    SourceInfo(src/map/core/entry.rs:76:56-76:57)
  3: StorageDead(_10)
    SourceInfo(src/map/core/entry.rs:76:56-76:57)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:56-76:57)
      kind: drop(_9) -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: StorageDead(_9)
    SourceInfo(src/map/core/entry.rs:76:56-76:57)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:56-76:57)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: _3 = &mut (*_4)
    SourceInfo(src/map/core/entry.rs:74:9-77:10)
  1: _0 = &mut (*_3)
    SourceInfo(src/map/core/entry.rs:74:9-77:10)
  2: StorageDead(_4)
    SourceInfo(src/map/core/entry.rs:78:5-78:6)
  3: StorageDead(_3)
    SourceInfo(src/map/core/entry.rs:78:5-78:6)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:78:5-78:6)
      kind: drop(_2) -> [return: bb10, unwind: bb17]
  }
  preds [bb5, bb8]
  succs [bb10, bb17]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:78:5-78:6)
      kind: drop(_1) -> [return: bb11, unwind: bb18]
  }
  preds [bb9]
  succs [bb11, bb18]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:78:6-78:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:56-76:57)
      kind: drop(_12) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb14]

bb13
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:55-76:56)
      kind: drop(_13) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:56-76:57)
      kind: drop(_11) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb12, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:76:56-76:57)
      kind: drop(_9) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:78:5-78:6)
      kind: drop(_2) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb4, bb7, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:78:5-78:6)
      kind: drop(_1) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb9, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:70:5-78:6)
      kind: resume
  }
  preds [bb10, bb17]
  succs []

