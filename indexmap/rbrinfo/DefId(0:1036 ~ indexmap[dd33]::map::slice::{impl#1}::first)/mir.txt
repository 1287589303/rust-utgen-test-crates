bb0
  0: StorageLive(_2)
    SourceInfo(src/map/slice.rs:106:9-106:29)
  1: StorageLive(_3)
    SourceInfo(src/map/slice.rs:106:9-106:21)
  2: _3 = &((*_1).0: [Bucket<K, V>])
    SourceInfo(src/map/slice.rs:106:9-106:21)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:106:9-106:29)
      kind: _2 = core::slice::<impl [Bucket<K, V>]>::first(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map/slice.rs:106:28-106:29)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:106:9-106:47)
      kind: _0 = core::option::Option::<&Bucket<K, V>>::map::<(&K, &V), for<'a> fn(&'a Bucket<K, V>) -> (&'a K, &'a V) {Bucket::<K, V>::refs}>(move _2, Bucket::<K, V>::refs) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_2)
    SourceInfo(src/map/slice.rs:106:46-106:47)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:107:6-107:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:105:5-107:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

