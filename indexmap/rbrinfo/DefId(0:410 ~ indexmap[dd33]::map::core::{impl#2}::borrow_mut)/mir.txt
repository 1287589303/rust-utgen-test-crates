bb0
  0: StorageLive(_2)
    SourceInfo(src/map/core.rs:153:21-153:38)
  1: StorageLive(_3)
    SourceInfo(src/map/core.rs:153:21-153:38)
  2: _3 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:153:21-153:38)
  3: _2 = &mut (*_3)
    SourceInfo(src/map/core.rs:153:21-153:38)
  4: StorageLive(_4)
    SourceInfo(src/map/core.rs:153:40-153:57)
  5: StorageLive(_5)
    SourceInfo(src/map/core.rs:153:40-153:57)
  6: _5 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:153:40-153:57)
  7: _4 = &mut (*_5)
    SourceInfo(src/map/core.rs:153:40-153:57)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:153:9-153:58)
      kind: _0 = map::core::RefMut::<'_, K, V>::new(move _2, move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(src/map/core.rs:153:57-153:58)
  1: StorageDead(_2)
    SourceInfo(src/map/core.rs:153:57-153:58)
  2: StorageDead(_5)
    SourceInfo(src/map/core.rs:154:5-154:6)
  3: StorageDead(_3)
    SourceInfo(src/map/core.rs:154:5-154:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:154:6-154:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/core.rs:152:5-154:6)
      kind: resume
  }
  preds [bb0]
  succs []

