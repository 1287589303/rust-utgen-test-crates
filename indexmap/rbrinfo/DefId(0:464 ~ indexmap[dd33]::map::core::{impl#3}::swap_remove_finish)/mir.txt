bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core.rs:629:13-629:18)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:629:21-629:33)
  2: _4 = &mut (*((*_1).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core.rs:629:21-629:33)
  3: StorageLive(_5)
    SourceInfo(src/map/core.rs:629:46-629:51)
  4: _5 = _2
    SourceInfo(src/map/core.rs:629:46-629:51)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:629:21-629:52)
      kind: _3 = alloc::vec::Vec::<Bucket<K, V>>::swap_remove(move _4, move _5) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map/core.rs:629:51-629:52)
  1: StorageDead(_4)
    SourceInfo(src/map/core.rs:629:51-629:52)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/map/core.rs:629:13-629:18)
  3: StorageLive(_6)
    SourceInfo(src/map/core.rs:632:9-637:10)
  4: StorageLive(_7)
    SourceInfo(src/map/core.rs:632:30-632:53)
  5: StorageLive(_8)
    SourceInfo(src/map/core.rs:632:30-632:42)
  6: StorageLive(_9)
    SourceInfo(src/map/core.rs:632:30-632:53)
  7: StorageLive(_10)
    SourceInfo(src/map/core.rs:632:30-632:42)
  8: _10 = &(*((*_1).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core.rs:632:30-632:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:632:30-632:53)
      kind: _9 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _10) -> [return: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: _8 = &(*_9)
    SourceInfo(src/map/core.rs:632:30-632:42)
  1: StorageDead(_10)
    SourceInfo(src/map/core.rs:632:41-632:42)
  2: StorageLive(_11)
    SourceInfo(src/map/core.rs:632:47-632:52)
  3: _11 = _2
    SourceInfo(src/map/core.rs:632:47-632:52)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:632:30-632:53)
      kind: _7 = core::slice::<impl [Bucket<K, V>]>::get::<usize>(move _8, move _11) -> [return: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: StorageDead(_11)
    SourceInfo(src/map/core.rs:632:52-632:53)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:632:52-632:53)
  2: PlaceMention(_7)
    SourceInfo(src/map/core.rs:632:30-632:53)
  3: _12 = discriminant(_7)
    SourceInfo(src/map/core.rs:632:30-632:53)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:632:16-632:27)
      kind: switchInt(move _12) -> [1: bb4, otherwise: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  Terminator {
      source_info: SourceInfo(src/map/core.rs:632:16-632:27)
      kind: falseEdge -> [real: bb5, imaginary: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageLive(_13)
    SourceInfo(src/map/core.rs:632:21-632:26)
  1: _13 = ((_7 as Some).0: &Bucket<K, V>)
    SourceInfo(src/map/core.rs:632:21-632:26)
  2: StorageLive(_14)
    SourceInfo(src/map/core.rs:635:17-635:21)
  3: StorageLive(_15)
    SourceInfo(src/map/core.rs:635:24-635:36)
  4: _15 = &(*((*_1).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core.rs:635:24-635:36)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:635:24-635:42)
      kind: _14 = alloc::vec::Vec::<Bucket<K, V>>::len(move _15) -> [return: bb6, unwind: bb14]
  }
  preds [bb4]
  succs [bb6, bb14]

bb6
  0: StorageDead(_15)
    SourceInfo(src/map/core.rs:635:41-635:42)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(src/map/core.rs:635:17-635:21)
  2: StorageLive(_16)
    SourceInfo(src/map/core.rs:636:13-636:64)
  3: StorageLive(_17)
    SourceInfo(src/map/core.rs:636:26-636:38)
  4: _17 = &mut (*((*_1).0: &mut hashbrown::HashTable<usize>))
    SourceInfo(src/map/core.rs:636:26-636:38)
  5: StorageLive(_18)
    SourceInfo(src/map/core.rs:636:40-636:50)
  6: _18 = ((*_13).0: HashValue)
    SourceInfo(src/map/core.rs:636:40-636:50)
  7: StorageLive(_19)
    SourceInfo(src/map/core.rs:636:52-636:56)
  8: _19 = _14
    SourceInfo(src/map/core.rs:636:52-636:56)
  9: StorageLive(_20)
    SourceInfo(src/map/core.rs:636:58-636:63)
  10: _20 = _2
    SourceInfo(src/map/core.rs:636:58-636:63)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:636:13-636:64)
      kind: _16 = map::core::update_index(move _17, move _18, move _19, move _20) -> [return: bb7, unwind: bb14]
  }
  preds [bb5]
  succs [bb7, bb14]

bb7
  0: StorageDead(_20)
    SourceInfo(src/map/core.rs:636:63-636:64)
  1: StorageDead(_19)
    SourceInfo(src/map/core.rs:636:63-636:64)
  2: StorageDead(_18)
    SourceInfo(src/map/core.rs:636:63-636:64)
  3: StorageDead(_17)
    SourceInfo(src/map/core.rs:636:63-636:64)
  4: StorageDead(_16)
    SourceInfo(src/map/core.rs:636:64-636:65)
  5: _6 = const ()
    SourceInfo(src/map/core.rs:632:54-637:10)
  6: StorageDead(_14)
    SourceInfo(src/map/core.rs:637:9-637:10)
  7: StorageDead(_13)
    SourceInfo(src/map/core.rs:637:9-637:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:632:9-637:10)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: _6 = const ()
    SourceInfo(src/map/core.rs:637:10-637:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:632:9-637:10)
      kind: goto -> bb9
  }
  preds [bb3, bb4]
  succs [bb9]

bb9
  0: StorageDead(_9)
    SourceInfo(src/map/core.rs:637:9-637:10)
  1: StorageDead(_7)
    SourceInfo(src/map/core.rs:637:9-637:10)
  2: StorageDead(_6)
    SourceInfo(src/map/core.rs:637:9-637:10)
  3: StorageLive(_21)
    SourceInfo(src/map/core.rs:639:10-639:19)
  4: _21 = move (_3.1: K)
    SourceInfo(src/map/core.rs:639:10-639:19)
  5: StorageLive(_22)
    SourceInfo(src/map/core.rs:639:21-639:32)
  6: _22 = move (_3.2: V)
    SourceInfo(src/map/core.rs:639:21-639:32)
  7: _0 = (move _21, move _22)
    SourceInfo(src/map/core.rs:639:9-639:33)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:639:32-639:33)
      kind: drop(_22) -> [return: bb10, unwind: bb13]
  }
  preds [bb7, bb8]
  succs [bb10, bb13]

bb10
  0: StorageDead(_22)
    SourceInfo(src/map/core.rs:639:32-639:33)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:639:32-639:33)
      kind: drop(_21) -> [return: bb11, unwind: bb14]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  0: StorageDead(_21)
    SourceInfo(src/map/core.rs:639:32-639:33)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:640:5-640:6)
      kind: drop(_3) -> [return: bb12, unwind: bb15]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  0: StorageDead(_3)
    SourceInfo(src/map/core.rs:640:5-640:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:640:6-640:6)
      kind: return
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/map/core.rs:639:32-639:33)
      kind: drop(_21) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map/core.rs:640:5-640:6)
      kind: drop(_3) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb5, bb6, bb10, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map/core.rs:626:5-640:6)
      kind: resume
  }
  preds [bb0, bb11, bb14]
  succs []

