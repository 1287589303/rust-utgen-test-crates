bb0
  0: StorageLive(_4)
    SourceInfo(src/map/core.rs:396:13-396:15)
  1: StorageLive(_5)
    SourceInfo(src/map/core.rs:396:29-396:32)
  2: _5 = &(*_3)
    SourceInfo(src/map/core.rs:396:29-396:32)
  3: StorageLive(_6)
    SourceInfo(src/map/core.rs:396:34-396:47)
  4: StorageLive(_7)
    SourceInfo(src/map/core.rs:396:34-396:47)
  5: StorageLive(_8)
    SourceInfo(src/map/core.rs:396:34-396:47)
  6: StorageLive(_9)
    SourceInfo(src/map/core.rs:396:34-396:47)
  7: _9 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:396:34-396:47)
  8: _8 = &(*_9)
    SourceInfo(src/map/core.rs:396:34-396:47)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:396:34-396:47)
      kind: _7 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _8) -> [return: bb1, unwind: bb26]
  }
  preds []
  succs [bb1, bb26]

bb1
  0: _6 = &(*_7)
    SourceInfo(src/map/core.rs:396:34-396:47)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:396:46-396:47)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:396:18-396:48)
      kind: _4 = map::core::equivalent::<K, V, Q>(move _5, move _6) -> [return: bb2, unwind: bb26]
  }
  preds [bb0]
  succs [bb2, bb26]

bb2
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:396:47-396:48)
  1: StorageDead(_5)
    SourceInfo(src/map/core.rs:396:47-396:48)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/map/core.rs:396:13-396:15)
  3: StorageDead(_9)
    SourceInfo(src/map/core.rs:396:48-396:49)
  4: StorageDead(_7)
    SourceInfo(src/map/core.rs:396:48-396:49)
  5: StorageLive(_10)
    SourceInfo(src/map/core.rs:397:15-397:54)
  6: StorageLive(_11)
    SourceInfo(src/map/core.rs:397:15-397:27)
  7: _11 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:397:15-397:27)
  8: StorageLive(_12)
    SourceInfo(src/map/core.rs:397:39-397:49)
  9: StorageLive(_13)
    SourceInfo(src/map/core.rs:397:39-397:43)
  10: _13 = _2
    SourceInfo(src/map/core.rs:397:39-397:43)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:397:39-397:49)
      kind: _12 = HashValue::get(move _13) -> [return: bb3, unwind: bb25]
  }
  preds [bb1]
  succs [bb3, bb25]

bb3
  0: StorageDead(_13)
    SourceInfo(src/map/core.rs:397:48-397:49)
  1: StorageLive(_14)
    SourceInfo(src/map/core.rs:397:51-397:53)
  2: _14 = move _4
    SourceInfo(src/map/core.rs:397:51-397:53)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:397:15-397:54)
      kind: _10 = hashbrown::HashTable::<usize>::find_entry::<impl for<'a> Fn(&'a usize) -> bool + '_>(move _11, move _12, move _14) -> [return: bb4, unwind: bb24]
  }
  preds [bb2]
  succs [bb4, bb24]

bb4
  0: StorageDead(_14)
    SourceInfo(src/map/core.rs:397:53-397:54)
  1: StorageDead(_12)
    SourceInfo(src/map/core.rs:397:53-397:54)
  2: StorageDead(_11)
    SourceInfo(src/map/core.rs:397:53-397:54)
  3: PlaceMention(_10)
    SourceInfo(src/map/core.rs:397:15-397:54)
  4: _15 = discriminant(_10)
    SourceInfo(src/map/core.rs:397:15-397:54)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:397:9-397:54)
      kind: switchInt(move _15) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(src/map/core.rs:397:15-397:54)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:397:15-397:54)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/map/core.rs:398:13-398:22)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: _0 = core::option::Option::<(usize, K, V)>::None
    SourceInfo(src/map/core.rs:403:23-403:27)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:403:23-403:27)
      kind: goto -> bb18
  }
  preds [bb4, bb6]
  succs [bb18]

bb8
  0: StorageLive(_16)
    SourceInfo(src/map/core.rs:398:16-398:21)
  1: _16 = move ((_10 as Ok).0: hashbrown::hash_table::OccupiedEntry<'_, usize>)
    SourceInfo(src/map/core.rs:398:16-398:21)
  2: StorageLive(_18)
    SourceInfo(src/map/core.rs:399:34-399:48)
  3: StorageLive(_19)
    SourceInfo(src/map/core.rs:399:34-399:39)
  4: _19 = move _16
    SourceInfo(src/map/core.rs:399:34-399:39)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:399:34-399:48)
      kind: _18 = hashbrown::hash_table::OccupiedEntry::<'_, usize>::remove(move _19) -> [return: bb9, unwind: bb25]
  }
  preds [bb6]
  succs [bb9, bb25]

bb9
  0: StorageDead(_19)
    SourceInfo(src/map/core.rs:399:47-399:48)
  1: PlaceMention(_18)
    SourceInfo(src/map/core.rs:399:34-399:48)
  2: StorageLive(_17)
    SourceInfo(src/map/core.rs:399:22-399:27)
  3: _17 = (_18.0: usize)
    SourceInfo(src/map/core.rs:399:22-399:27)
  4: StorageDead(_18)
    SourceInfo(src/map/core.rs:399:48-399:49)
  5: StorageLive(_22)
    SourceInfo(src/map/core.rs:400:36-400:80)
  6: StorageLive(_23)
    SourceInfo(src/map/core.rs:400:36-400:53)
  7: StorageLive(_24)
    SourceInfo(src/map/core.rs:400:36-400:53)
  8: StorageLive(_25)
    SourceInfo(src/map/core.rs:400:36-400:40)
  9: _25 = &mut (*_1)
    SourceInfo(src/map/core.rs:400:36-400:40)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:400:36-400:53)
      kind: _24 = map::core::IndexMapCore::<K, V>::borrow_mut(move _25) -> [return: bb10, unwind: bb25]
  }
  preds [bb8]
  succs [bb10, bb25]

bb10
  0: _23 = &mut _24
    SourceInfo(src/map/core.rs:400:36-400:53)
  1: StorageDead(_25)
    SourceInfo(src/map/core.rs:400:52-400:53)
  2: StorageLive(_26)
    SourceInfo(src/map/core.rs:400:74-400:79)
  3: _26 = _17
    SourceInfo(src/map/core.rs:400:74-400:79)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:400:36-400:80)
      kind: _22 = map::core::RefMut::<'_, K, V>::shift_remove_finish(move _23, move _26) -> [return: bb11, unwind: bb25]
  }
  preds [bb9]
  succs [bb11, bb25]

bb11
  0: StorageDead(_26)
    SourceInfo(src/map/core.rs:400:79-400:80)
  1: StorageDead(_23)
    SourceInfo(src/map/core.rs:400:79-400:80)
  2: PlaceMention(_22)
    SourceInfo(src/map/core.rs:400:36-400:80)
  3: StorageLive(_20)
    SourceInfo(src/map/core.rs:400:22-400:25)
  4: _20 = move (_22.0: K)
    SourceInfo(src/map/core.rs:400:22-400:25)
  5: StorageLive(_21)
    SourceInfo(src/map/core.rs:400:27-400:32)
  6: _21 = move (_22.1: V)
    SourceInfo(src/map/core.rs:400:27-400:32)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:400:80-400:81)
      kind: drop(_22) -> [return: bb12, unwind: bb22]
  }
  preds [bb10]
  succs [bb12, bb22]

bb12
  0: StorageDead(_24)
    SourceInfo(src/map/core.rs:400:80-400:81)
  1: StorageDead(_22)
    SourceInfo(src/map/core.rs:400:80-400:81)
  2: StorageLive(_27)
    SourceInfo(src/map/core.rs:401:22-401:41)
  3: StorageLive(_28)
    SourceInfo(src/map/core.rs:401:23-401:28)
  4: _28 = _17
    SourceInfo(src/map/core.rs:401:23-401:28)
  5: StorageLive(_29)
    SourceInfo(src/map/core.rs:401:30-401:33)
  6: _29 = move _20
    SourceInfo(src/map/core.rs:401:30-401:33)
  7: StorageLive(_30)
    SourceInfo(src/map/core.rs:401:35-401:40)
  8: _30 = move _21
    SourceInfo(src/map/core.rs:401:35-401:40)
  9: _27 = (move _28, move _29, move _30)
    SourceInfo(src/map/core.rs:401:22-401:41)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:401:40-401:41)
      kind: drop(_30) -> [return: bb13, unwind: bb20]
  }
  preds [bb11]
  succs [bb13, bb20]

bb13
  0: StorageDead(_30)
    SourceInfo(src/map/core.rs:401:40-401:41)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:401:40-401:41)
      kind: drop(_29) -> [return: bb14, unwind: bb21]
  }
  preds [bb12]
  succs [bb14, bb21]

bb14
  0: StorageDead(_29)
    SourceInfo(src/map/core.rs:401:40-401:41)
  1: StorageDead(_28)
    SourceInfo(src/map/core.rs:401:40-401:41)
  2: _0 = core::option::Option::<(usize, K, V)>::Some(move _27)
    SourceInfo(src/map/core.rs:401:17-401:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:401:41-401:42)
      kind: drop(_27) -> [return: bb15, unwind: bb22]
  }
  preds [bb13]
  succs [bb15, bb22]

bb15
  0: StorageDead(_27)
    SourceInfo(src/map/core.rs:401:41-401:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:402:13-402:14)
      kind: drop(_21) -> [return: bb16, unwind: bb23]
  }
  preds [bb14]
  succs [bb16, bb23]

bb16
  0: StorageDead(_21)
    SourceInfo(src/map/core.rs:402:13-402:14)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:402:13-402:14)
      kind: drop(_20) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  0: StorageDead(_20)
    SourceInfo(src/map/core.rs:402:13-402:14)
  1: StorageDead(_17)
    SourceInfo(src/map/core.rs:402:13-402:14)
  2: StorageDead(_16)
    SourceInfo(src/map/core.rs:402:13-402:14)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:402:13-402:14)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/map/core.rs:405:5-405:6)
      kind: drop(_4) -> [return: bb19, unwind: bb26]
  }
  preds [bb7, bb17]
  succs [bb19, bb26]

bb19
  0: StorageDead(_4)
    SourceInfo(src/map/core.rs:405:5-405:6)
  1: StorageDead(_10)
    SourceInfo(src/map/core.rs:405:5-405:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:405:6-405:6)
      kind: return
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(src/map/core.rs:401:40-401:41)
      kind: drop(_29) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/map/core.rs:401:41-401:42)
      kind: drop(_27) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb13, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(src/map/core.rs:402:13-402:14)
      kind: drop(_21) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb11, bb14, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/map/core.rs:402:13-402:14)
      kind: drop(_20) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb15, bb22]
  succs [bb25]

bb24
  Terminator {
      source_info: SourceInfo(src/map/core.rs:397:53-397:54)
      kind: drop(_14) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(src/map/core.rs:405:5-405:6)
      kind: drop(_4) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb2, bb8, bb9, bb10, bb16, bb23, bb24]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(src/map/core.rs:392:5-405:6)
      kind: resume
  }
  preds [bb0, bb1, bb18, bb25]
  succs []

