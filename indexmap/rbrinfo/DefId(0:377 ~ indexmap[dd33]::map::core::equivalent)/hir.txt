Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).1),
            pat: Pat {
                hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).2),
                    key#0,
                    None,
                ),
                span: src/map/core.rs:56:5: 56:8 (#0),
                default_binding_modes: true,
            },
            ty_span: src/map/core.rs:56:10: 56:15 (#0),
            span: src/map/core.rs:56:5: 56:15 (#0),
        },
        Param {
            hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).3),
            pat: Pat {
                hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).4),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).4),
                    entries#0,
                    None,
                ),
                span: src/map/core.rs:57:5: 57:12 (#0),
                default_binding_modes: true,
            },
            ty_span: src/map/core.rs:57:14: 57:32 (#0),
            span: src/map/core.rs:57:5: 57:32 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).25),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).5),
                        kind: Closure(
                            Closure {
                                def_id: DefId(0:382 ~ indexmap[dd33]::map::core::equivalent::{closure#0}),
                                binder: Default,
                                constness: NotConst,
                                capture_clause: Value {
                                    move_kw: src/map/core.rs:59:5: 59:9 (#0),
                                },
                                bound_generic_params: [],
                                fn_decl: FnDecl {
                                    inputs: [
                                        Ty {
                                            hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).23),
                                            kind: Infer,
                                            span: src/map/core.rs:59:11: 59:13 (#0),
                                        },
                                    ],
                                    output: DefaultReturn(
                                        src/map/core.rs:59:14: 59:14 (#0),
                                    ),
                                    c_variadic: false,
                                    implicit_self: None,
                                    lifetime_elision_allowed: false,
                                },
                                body: BodyId {
                                    hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).9),
                                },
                                fn_decl_span: src/map/core.rs:59:5: 59:14 (#0),
                                fn_arg_span: Some(
                                    src/map/core.rs:59:10: 59:14 (#0),
                                ),
                                kind: Closure,
                            },
                        ),
                        span: src/map/core.rs:59:5: 59:50 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:377 ~ indexmap[dd33]::map::core::equivalent).24),
                rules: DefaultBlock,
                span: src/map/core.rs:58:35: 60:2 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/map/core.rs:58:35: 60:2 (#0),
    },
}