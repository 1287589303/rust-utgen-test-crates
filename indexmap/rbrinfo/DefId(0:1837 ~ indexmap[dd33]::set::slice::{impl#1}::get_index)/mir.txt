bb0
  0: StorageLive(_3)
    SourceInfo(src/set/slice.rs:64:9-64:32)
  1: StorageLive(_4)
    SourceInfo(src/set/slice.rs:64:9-64:21)
  2: _4 = &((*_1).0: [Bucket<T, ()>])
    SourceInfo(src/set/slice.rs:64:9-64:21)
  3: StorageLive(_5)
    SourceInfo(src/set/slice.rs:64:26-64:31)
  4: _5 = _2
    SourceInfo(src/set/slice.rs:64:26-64:31)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:64:9-64:32)
      kind: _3 = core::slice::<impl [Bucket<T, ()>]>::get::<usize>(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/set/slice.rs:64:31-64:32)
  1: StorageDead(_4)
    SourceInfo(src/set/slice.rs:64:31-64:32)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:64:9-64:53)
      kind: _0 = core::option::Option::<&Bucket<T, ()>>::map::<&T, for<'a> fn(&'a Bucket<T, ()>) -> &'a T {Bucket::<T, ()>::key_ref}>(move _3, Bucket::<T, ()>::key_ref) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/set/slice.rs:64:52-64:53)
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:65:6-65:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/set/slice.rs:63:5-65:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

