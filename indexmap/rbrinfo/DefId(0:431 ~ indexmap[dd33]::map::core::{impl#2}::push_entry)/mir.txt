bb0
  0: StorageLive(_5)
    SourceInfo(src/map/core.rs:330:9-334:10)
  1: StorageLive(_6)
    SourceInfo(src/map/core.rs:330:12-330:57)
  2: StorageLive(_7)
    SourceInfo(src/map/core.rs:330:12-330:30)
  3: StorageLive(_8)
    SourceInfo(src/map/core.rs:330:12-330:24)
  4: _8 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:330:12-330:24)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:330:12-330:30)
      kind: _7 = alloc::vec::Vec::<Bucket<K, V>>::len(move _8) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_8)
    SourceInfo(src/map/core.rs:330:29-330:30)
  1: StorageLive(_9)
    SourceInfo(src/map/core.rs:330:34-330:57)
  2: StorageLive(_10)
    SourceInfo(src/map/core.rs:330:34-330:46)
  3: _10 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:330:34-330:46)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:330:34-330:57)
      kind: _9 = alloc::vec::Vec::<Bucket<K, V>>::capacity(move _10) -> [return: bb2, unwind: bb15]
  }
  preds [bb0]
  succs [bb2, bb15]

bb2
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:330:56-330:57)
  1: _6 = Eq(move _7, move _9)
    SourceInfo(src/map/core.rs:330:12-330:57)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:330:12-330:57)
      kind: switchInt(move _6) -> [0: bb6, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_9)
    SourceInfo(src/map/core.rs:330:56-330:57)
  1: StorageDead(_7)
    SourceInfo(src/map/core.rs:330:56-330:57)
  2: StorageLive(_11)
    SourceInfo(src/map/core.rs:333:13-333:49)
  3: StorageLive(_12)
    SourceInfo(src/map/core.rs:333:13-333:30)
  4: StorageLive(_13)
    SourceInfo(src/map/core.rs:333:13-333:30)
  5: StorageLive(_14)
    SourceInfo(src/map/core.rs:333:13-333:17)
  6: _14 = &mut (*_1)
    SourceInfo(src/map/core.rs:333:13-333:17)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:333:13-333:30)
      kind: _13 = map::core::IndexMapCore::<K, V>::borrow_mut(move _14) -> [return: bb4, unwind: bb15]
  }
  preds [bb2]
  succs [bb4, bb15]

bb4
  0: _12 = &mut _13
    SourceInfo(src/map/core.rs:333:13-333:30)
  1: StorageDead(_14)
    SourceInfo(src/map/core.rs:333:29-333:30)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:333:13-333:49)
      kind: _11 = map::core::RefMut::<'_, K, V>::reserve_entries(move _12, const 1_usize) -> [return: bb5, unwind: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  0: StorageDead(_12)
    SourceInfo(src/map/core.rs:333:48-333:49)
  1: StorageDead(_13)
    SourceInfo(src/map/core.rs:333:49-333:50)
  2: StorageDead(_11)
    SourceInfo(src/map/core.rs:333:49-333:50)
  3: _5 = const ()
    SourceInfo(src/map/core.rs:330:58-334:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:330:9-334:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_9)
    SourceInfo(src/map/core.rs:330:56-330:57)
  1: StorageDead(_7)
    SourceInfo(src/map/core.rs:330:56-330:57)
  2: _5 = const ()
    SourceInfo(src/map/core.rs:334:10-334:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:330:9-334:10)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb7
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:334:9-334:10)
  1: StorageDead(_5)
    SourceInfo(src/map/core.rs:334:9-334:10)
  2: StorageLive(_15)
    SourceInfo(src/map/core.rs:335:9-335:55)
  3: StorageLive(_16)
    SourceInfo(src/map/core.rs:335:9-335:21)
  4: _16 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:335:9-335:21)
  5: StorageLive(_17)
    SourceInfo(src/map/core.rs:335:27-335:54)
  6: StorageLive(_18)
    SourceInfo(src/map/core.rs:335:36-335:40)
  7: _18 = _2
    SourceInfo(src/map/core.rs:335:36-335:40)
  8: StorageLive(_19)
    SourceInfo(src/map/core.rs:335:42-335:45)
  9: _19 = move _3
    SourceInfo(src/map/core.rs:335:42-335:45)
  10: StorageLive(_20)
    SourceInfo(src/map/core.rs:335:47-335:52)
  11: _20 = move _4
    SourceInfo(src/map/core.rs:335:47-335:52)
  12: _17 = Bucket::<K, V> { hash: move _18, key: move _19, value: move _20 }
    SourceInfo(src/map/core.rs:335:27-335:54)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:335:53-335:54)
      kind: drop(_20) -> [return: bb8, unwind: bb13]
  }
  preds [bb5, bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_20)
    SourceInfo(src/map/core.rs:335:53-335:54)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:335:53-335:54)
      kind: drop(_19) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  0: StorageDead(_19)
    SourceInfo(src/map/core.rs:335:53-335:54)
  1: StorageDead(_18)
    SourceInfo(src/map/core.rs:335:53-335:54)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:335:9-335:55)
      kind: _15 = alloc::vec::Vec::<Bucket<K, V>>::push(move _16, move _17) -> [return: bb10, unwind: bb14]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  0: StorageDead(_17)
    SourceInfo(src/map/core.rs:335:54-335:55)
  1: StorageDead(_16)
    SourceInfo(src/map/core.rs:335:54-335:55)
  2: StorageDead(_15)
    SourceInfo(src/map/core.rs:335:55-335:56)
  3: _0 = const ()
    SourceInfo(src/map/core.rs:329:65-336:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:336:5-336:6)
      kind: drop(_4) -> [return: bb11, unwind: bb16]
  }
  preds [bb9]
  succs [bb11, bb16]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core.rs:336:5-336:6)
      kind: drop(_3) -> [return: bb12, unwind: bb17]
  }
  preds [bb10]
  succs [bb12, bb17]

bb12
  Terminator {
      source_info: SourceInfo(src/map/core.rs:336:6-336:6)
      kind: return
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/map/core.rs:335:53-335:54)
      kind: drop(_19) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map/core.rs:335:54-335:55)
      kind: drop(_17) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map/core.rs:336:5-336:6)
      kind: drop(_4) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb4, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/map/core.rs:336:5-336:6)
      kind: drop(_3) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb10, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/map/core.rs:329:5-336:6)
      kind: resume
  }
  preds [bb11, bb16]
  succs []

