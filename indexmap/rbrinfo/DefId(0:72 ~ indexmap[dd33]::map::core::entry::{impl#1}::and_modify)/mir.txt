bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core/entry.rs:112:9-114:10)
  1: StorageLive(_4)
    SourceInfo(src/map/core/entry.rs:112:41-112:50)
  2: _4 = &mut _1
    SourceInfo(src/map/core/entry.rs:112:41-112:50)
  3: PlaceMention(_4)
    SourceInfo(src/map/core/entry.rs:112:41-112:50)
  4: _5 = discriminant((*_4))
    SourceInfo(src/map/core/entry.rs:112:41-112:50)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:112:16-112:38)
      kind: switchInt(move _5) -> [0: bb1, otherwise: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:112:16-112:38)
      kind: falseEdge -> [real: bb2, imaginary: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:112:32-112:37)
  1: _6 = &mut (((*_4) as Occupied).0: map::core::entry::OccupiedEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:112:32-112:37)
  2: StorageLive(_7)
    SourceInfo(src/map/core/entry.rs:113:13-113:31)
  3: StorageLive(_8)
    SourceInfo(src/map/core/entry.rs:113:13-113:14)
  4: _8 = move _2
    SourceInfo(src/map/core/entry.rs:113:13-113:14)
  5: StorageLive(_9)
    SourceInfo(src/map/core/entry.rs:113:13-113:31)
  6: StorageLive(_10)
    SourceInfo(src/map/core/entry.rs:113:15-113:30)
  7: StorageLive(_11)
    SourceInfo(src/map/core/entry.rs:113:15-113:30)
  8: StorageLive(_12)
    SourceInfo(src/map/core/entry.rs:113:15-113:20)
  9: _12 = &mut (*_6)
    SourceInfo(src/map/core/entry.rs:113:15-113:20)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:113:15-113:30)
      kind: _11 = map::core::entry::OccupiedEntry::<'_, K, V>::get_mut(move _12) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: _10 = &mut (*_11)
    SourceInfo(src/map/core/entry.rs:113:15-113:30)
  1: StorageDead(_12)
    SourceInfo(src/map/core/entry.rs:113:29-113:30)
  2: _9 = (move _10,)
    SourceInfo(src/map/core/entry.rs:113:13-113:31)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:113:13-113:31)
      kind: _7 = <F as core::ops::FnOnce<(&mut V,)>>::call_once(move _8, move _9) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_10)
    SourceInfo(src/map/core/entry.rs:113:30-113:31)
  1: StorageDead(_9)
    SourceInfo(src/map/core/entry.rs:113:30-113:31)
  2: StorageDead(_8)
    SourceInfo(src/map/core/entry.rs:113:30-113:31)
  3: StorageDead(_11)
    SourceInfo(src/map/core/entry.rs:113:31-113:32)
  4: StorageDead(_7)
    SourceInfo(src/map/core/entry.rs:113:31-113:32)
  5: _3 = const ()
    SourceInfo(src/map/core/entry.rs:112:51-114:10)
  6: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:114:9-114:10)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:112:9-114:10)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: _3 = const ()
    SourceInfo(src/map/core/entry.rs:114:10-114:10)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:112:9-114:10)
      kind: goto -> bb6
  }
  preds [bb0, bb1]
  succs [bb6]

bb6
  0: StorageDead(_4)
    SourceInfo(src/map/core/entry.rs:114:9-114:10)
  1: StorageDead(_3)
    SourceInfo(src/map/core/entry.rs:114:9-114:10)
  2: _0 = move _1
    SourceInfo(src/map/core/entry.rs:115:9-115:13)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:116:5-116:6)
      kind: drop(_2) -> [return: bb7, unwind: bb11]
  }
  preds [bb4, bb5]
  succs [bb7, bb11]

bb7
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:116:5-116:6)
      kind: drop(_1) -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:116:6-116:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:113:30-113:31)
      kind: drop(_8) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb2, bb3]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:116:5-116:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:116:5-116:6)
      kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb6, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:108:5-116:6)
      kind: resume
  }
  preds [bb7, bb11]
  succs []

