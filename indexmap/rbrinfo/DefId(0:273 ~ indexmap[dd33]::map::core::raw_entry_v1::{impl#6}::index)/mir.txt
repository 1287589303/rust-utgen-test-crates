bb0
  0: PlaceMention(_1)
    SourceInfo(src/map/core/raw_entry_v1.rs:330:15-330:19)
  1: _2 = discriminant((*_1))
    SourceInfo(src/map/core/raw_entry_v1.rs:330:15-330:19)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:330:9-330:19)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map/core/raw_entry_v1.rs:330:15-330:19)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:330:15-330:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:331:13-331:34)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: AscribeUserType((*_1), +, UserTypeProjection { base: UserType(3), projs: [] })
    SourceInfo(src/map/core/raw_entry_v1.rs:332:13-332:32)
  1: StorageLive(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:332:26-332:31)
  2: _5 = &(((*_1) as Vacant).0: map::core::raw_entry_v1::RawVacantEntryMut<'_, K, V, S>)
    SourceInfo(src/map/core/raw_entry_v1.rs:332:26-332:31)
  3: StorageLive(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:332:36-332:41)
  4: _6 = &(*_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:332:36-332:41)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:332:36-332:49)
      kind: _0 = map::core::raw_entry_v1::RawVacantEntryMut::<'_, K, V, S>::index(move _6) -> [return: bb6, unwind: bb8]
  }
  preds [bb0, bb2]
  succs [bb6, bb8]

bb4
  0: AscribeUserType((*_1), +, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/map/core/raw_entry_v1.rs:331:13-331:34)
  1: StorageLive(_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:331:28-331:33)
  2: _3 = &(((*_1) as Occupied).0: map::core::raw_entry_v1::RawOccupiedEntryMut<'_, K, V, S>)
    SourceInfo(src/map/core/raw_entry_v1.rs:331:28-331:33)
  3: StorageLive(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:331:38-331:43)
  4: _4 = &(*_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:331:38-331:43)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:331:38-331:51)
      kind: _0 = map::core::raw_entry_v1::RawOccupiedEntryMut::<'_, K, V, S>::index(move _4) -> [return: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb5
  0: StorageDead(_4)
    SourceInfo(src/map/core/raw_entry_v1.rs:331:50-331:51)
  1: StorageDead(_3)
    SourceInfo(src/map/core/raw_entry_v1.rs:331:50-331:51)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:331:50-331:51)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_6)
    SourceInfo(src/map/core/raw_entry_v1.rs:332:48-332:49)
  1: StorageDead(_5)
    SourceInfo(src/map/core/raw_entry_v1.rs:332:48-332:49)
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:332:48-332:49)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:334:6-334:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map/core/raw_entry_v1.rs:329:5-334:6)
      kind: resume
  }
  preds [bb3, bb4]
  succs []

