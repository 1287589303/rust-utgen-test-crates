bb0
  0: StorageLive(_2)
    SourceInfo(src/lib.rs:241:19-248:14)
  1: PlaceMention(_1)
    SourceInfo(src/lib.rs:241:25-241:30)
  2: _3 = discriminant(_1)
    SourceInfo(src/lib.rs:241:25-241:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:241:19-241:30)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/lib.rs:241:25-241:30)
  Terminator {
      source_info: SourceInfo(src/lib.rs:241:25-241:30)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/lib.rs:242:17-242:61)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_4)
    SourceInfo(src/lib.rs:245:58-245:64)
  1: _4 = ((_1 as AllocError).0: core::alloc::Layout)
    SourceInfo(src/lib.rs:245:58-245:64)
  2: StorageLive(_5)
    SourceInfo(src/lib.rs:246:55-246:61)
  3: _5 = _4
    SourceInfo(src/lib.rs:246:55-246:61)
  4: _2 = TryReserveErrorKind::AllocError { layout: move _5 }
    SourceInfo(src/lib.rs:246:21-246:63)
  5: StorageDead(_5)
    SourceInfo(src/lib.rs:246:62-246:63)
  6: StorageDead(_4)
    SourceInfo(src/lib.rs:247:17-247:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:247:17-247:18)
      kind: goto -> bb5
  }
  preds [bb0, bb2]
  succs [bb5]

bb4
  0: _2 = TryReserveErrorKind::CapacityOverflow
    SourceInfo(src/lib.rs:243:21-243:58)
  Terminator {
      source_info: SourceInfo(src/lib.rs:243:21-243:58)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  0: _0 = TryReserveError { kind: move _2 }
    SourceInfo(src/lib.rs:240:9-249:10)
  1: StorageDead(_2)
    SourceInfo(src/lib.rs:249:9-249:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:250:6-250:6)
      kind: return
  }
  preds [bb3, bb4]
  succs []

