bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core.rs:259:9-259:66)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:259:9-259:21)
  2: _4 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:259:9-259:21)
  3: StorageLive(_5)
    SourceInfo(src/map/core.rs:259:30-259:40)
  4: _5 = _2
    SourceInfo(src/map/core.rs:259:30-259:40)
  5: StorageLive(_6)
    SourceInfo(src/map/core.rs:259:42-259:65)
  6: StorageLive(_7)
    SourceInfo(src/map/core.rs:259:51-259:64)
  7: StorageLive(_8)
    SourceInfo(src/map/core.rs:259:51-259:64)
  8: StorageLive(_9)
    SourceInfo(src/map/core.rs:259:51-259:64)
  9: StorageLive(_10)
    SourceInfo(src/map/core.rs:259:51-259:64)
  10: _10 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:259:51-259:64)
  11: _9 = &(*_10)
    SourceInfo(src/map/core.rs:259:51-259:64)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:259:51-259:64)
      kind: _8 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _9) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _7 = &(*_8)
    SourceInfo(src/map/core.rs:259:51-259:64)
  1: StorageDead(_9)
    SourceInfo(src/map/core.rs:259:63-259:64)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:259:42-259:65)
      kind: _6 = map::core::get_hash::<K, V>(move _7) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_7)
    SourceInfo(src/map/core.rs:259:64-259:65)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:259:9-259:66)
      kind: _3 = hashbrown::HashTable::<usize>::reserve::<impl for<'a> Fn(&'a usize) -> u64 + '_>(move _4, move _5, move _6) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:259:65-259:66)
  1: StorageDead(_5)
    SourceInfo(src/map/core.rs:259:65-259:66)
  2: StorageDead(_4)
    SourceInfo(src/map/core.rs:259:65-259:66)
  3: StorageDead(_10)
    SourceInfo(src/map/core.rs:259:66-259:67)
  4: StorageDead(_8)
    SourceInfo(src/map/core.rs:259:66-259:67)
  5: StorageDead(_3)
    SourceInfo(src/map/core.rs:259:66-259:67)
  6: StorageLive(_11)
    SourceInfo(src/map/core.rs:260:9-260:47)
  7: StorageLive(_12)
    SourceInfo(src/map/core.rs:260:9-260:21)
  8: _12 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:260:9-260:21)
  9: StorageLive(_13)
    SourceInfo(src/map/core.rs:260:36-260:46)
  10: _13 = _2
    SourceInfo(src/map/core.rs:260:36-260:46)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:260:9-260:47)
      kind: _11 = alloc::vec::Vec::<Bucket<K, V>>::reserve_exact(move _12, move _13) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_13)
    SourceInfo(src/map/core.rs:260:46-260:47)
  1: StorageDead(_12)
    SourceInfo(src/map/core.rs:260:46-260:47)
  2: StorageDead(_11)
    SourceInfo(src/map/core.rs:260:47-260:48)
  3: _0 = const ()
    SourceInfo(src/map/core.rs:258:63-261:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:261:6-261:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map/core.rs:259:65-259:66)
      kind: drop(_6) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core.rs:258:5-261:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5]
  succs []

