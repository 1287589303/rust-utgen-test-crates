bb0
  0: StorageLive(_2)
    SourceInfo(src/map/core.rs:309:30-309:48)
  1: StorageLive(_3)
    SourceInfo(src/map/core.rs:309:30-309:42)
  2: _3 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:309:30-309:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:309:30-309:48)
      kind: _2 = alloc::vec::Vec::<Bucket<K, V>>::pop(move _3) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map/core.rs:309:47-309:48)
  1: PlaceMention(_2)
    SourceInfo(src/map/core.rs:309:30-309:48)
  2: _4 = discriminant(_2)
    SourceInfo(src/map/core.rs:309:30-309:48)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:309:16-309:27)
      kind: switchInt(move _4) -> [1: bb2, otherwise: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  Terminator {
      source_info: SourceInfo(src/map/core.rs:309:16-309:27)
      kind: falseEdge -> [real: bb3, imaginary: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageLive(_5)
    SourceInfo(src/map/core.rs:309:21-309:26)
  1: _5 = move ((_2 as Some).0: Bucket<K, V>)
    SourceInfo(src/map/core.rs:309:21-309:26)
  2: StorageLive(_6)
    SourceInfo(src/map/core.rs:310:17-310:21)
  3: StorageLive(_7)
    SourceInfo(src/map/core.rs:310:24-310:36)
  4: _7 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:310:24-310:36)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:310:24-310:42)
      kind: _6 = alloc::vec::Vec::<Bucket<K, V>>::len(move _7) -> [return: bb4, unwind: bb15]
  }
  preds [bb2]
  succs [bb4, bb15]

bb4
  0: StorageDead(_7)
    SourceInfo(src/map/core.rs:310:41-310:42)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(src/map/core.rs:310:17-310:21)
  2: StorageLive(_8)
    SourceInfo(src/map/core.rs:311:13-311:61)
  3: StorageLive(_9)
    SourceInfo(src/map/core.rs:311:25-311:42)
  4: StorageLive(_10)
    SourceInfo(src/map/core.rs:311:25-311:42)
  5: _10 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:311:25-311:42)
  6: _9 = &mut (*_10)
    SourceInfo(src/map/core.rs:311:25-311:42)
  7: StorageLive(_11)
    SourceInfo(src/map/core.rs:311:44-311:54)
  8: _11 = (_5.0: HashValue)
    SourceInfo(src/map/core.rs:311:44-311:54)
  9: StorageLive(_12)
    SourceInfo(src/map/core.rs:311:56-311:60)
  10: _12 = _6
    SourceInfo(src/map/core.rs:311:56-311:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:311:13-311:61)
      kind: _8 = map::core::erase_index(move _9, move _11, move _12) -> [return: bb5, unwind: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  0: StorageDead(_12)
    SourceInfo(src/map/core.rs:311:60-311:61)
  1: StorageDead(_11)
    SourceInfo(src/map/core.rs:311:60-311:61)
  2: StorageDead(_9)
    SourceInfo(src/map/core.rs:311:60-311:61)
  3: StorageDead(_10)
    SourceInfo(src/map/core.rs:311:61-311:62)
  4: StorageDead(_8)
    SourceInfo(src/map/core.rs:311:61-311:62)
  5: StorageLive(_13)
    SourceInfo(src/map/core.rs:312:18-312:42)
  6: StorageLive(_14)
    SourceInfo(src/map/core.rs:312:19-312:28)
  7: _14 = move (_5.1: K)
    SourceInfo(src/map/core.rs:312:19-312:28)
  8: StorageLive(_15)
    SourceInfo(src/map/core.rs:312:30-312:41)
  9: _15 = move (_5.2: V)
    SourceInfo(src/map/core.rs:312:30-312:41)
  10: _13 = (move _14, move _15)
    SourceInfo(src/map/core.rs:312:18-312:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:312:41-312:42)
      kind: drop(_15) -> [return: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  0: StorageDead(_15)
    SourceInfo(src/map/core.rs:312:41-312:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:312:41-312:42)
      kind: drop(_14) -> [return: bb7, unwind: bb14]
  }
  preds [bb5]
  succs [bb7, bb14]

bb7
  0: StorageDead(_14)
    SourceInfo(src/map/core.rs:312:41-312:42)
  1: _0 = core::option::Option::<(K, V)>::Some(move _13)
    SourceInfo(src/map/core.rs:312:13-312:43)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:312:42-312:43)
      kind: drop(_13) -> [return: bb8, unwind: bb15]
  }
  preds [bb6]
  succs [bb8, bb15]

bb8
  0: StorageDead(_13)
    SourceInfo(src/map/core.rs:312:42-312:43)
  1: StorageDead(_6)
    SourceInfo(src/map/core.rs:313:9-313:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:313:9-313:10)
      kind: drop(_5) -> [return: bb10, unwind: bb16]
  }
  preds [bb7]
  succs [bb10, bb16]

bb9
  0: _0 = core::option::Option::<(K, V)>::None
    SourceInfo(src/map/core.rs:314:13-314:17)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:309:9-315:10)
      kind: goto -> bb11
  }
  preds [bb1, bb2]
  succs [bb11]

bb10
  0: StorageDead(_5)
    SourceInfo(src/map/core.rs:313:9-313:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:309:9-315:10)
      kind: goto -> bb11
  }
  preds [bb8]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map/core.rs:316:5-316:6)
      kind: drop(_2) -> [return: bb12, unwind: bb17]
  }
  preds [bb9, bb10]
  succs [bb12, bb17]

bb12
  0: StorageDead(_2)
    SourceInfo(src/map/core.rs:316:5-316:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:316:6-316:6)
      kind: return
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/map/core.rs:312:41-312:42)
      kind: drop(_14) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map/core.rs:312:42-312:43)
      kind: drop(_13) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb6, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map/core.rs:313:9-313:10)
      kind: drop(_5) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb7, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/map/core.rs:316:5-316:6)
      kind: drop(_2) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb8, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/map/core.rs:308:5-316:6)
      kind: resume
  }
  preds [bb0, bb11, bb16]
  succs []

