bb0
  0: StorageLive(_2)
    SourceInfo(src/map/core/entry.rs:126:9-129:10)
  1: StorageLive(_3)
    SourceInfo(src/map/core/entry.rs:126:9-129:10)
  2: PlaceMention(_1)
    SourceInfo(src/map/core/entry.rs:126:15-126:19)
  3: _4 = discriminant(_1)
    SourceInfo(src/map/core/entry.rs:126:15-126:19)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:126:9-126:19)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map/core/entry.rs:126:15-126:19)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:126:15-126:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:127:13-127:35)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_8)
    SourceInfo(src/map/core/entry.rs:128:27-128:32)
  1: _8 = move ((_1 as Vacant).0: map::core::entry::VacantEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:128:27-128:32)
  2: StorageLive(_9)
    SourceInfo(src/map/core/entry.rs:128:37-128:63)
  3: StorageLive(_10)
    SourceInfo(src/map/core/entry.rs:128:37-128:42)
  4: _10 = move _8
    SourceInfo(src/map/core/entry.rs:128:37-128:42)
  5: StorageLive(_11)
    SourceInfo(src/map/core/entry.rs:128:50-128:62)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:128:50-128:62)
      kind: _11 = <V as core::default::Default>::default() -> [return: bb6, unwind: bb12]
  }
  preds [bb0, bb2]
  succs [bb6, bb12]

bb4
  0: StorageLive(_5)
    SourceInfo(src/map/core/entry.rs:127:29-127:34)
  1: _5 = move ((_1 as Occupied).0: map::core::entry::OccupiedEntry<'_, K, V>)
    SourceInfo(src/map/core/entry.rs:127:29-127:34)
  2: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:127:39-127:55)
  3: StorageLive(_7)
    SourceInfo(src/map/core/entry.rs:127:39-127:44)
  4: _7 = move _5
    SourceInfo(src/map/core/entry.rs:127:39-127:44)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:127:39-127:55)
      kind: _6 = map::core::entry::OccupiedEntry::<'_, K, V>::into_mut(move _7) -> [return: bb5, unwind: bb14]
  }
  preds [bb2]
  succs [bb5, bb14]

bb5
  0: _3 = &mut (*_6)
    SourceInfo(src/map/core/entry.rs:127:39-127:55)
  1: StorageDead(_7)
    SourceInfo(src/map/core/entry.rs:127:54-127:55)
  2: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:127:54-127:55)
  3: StorageDead(_5)
    SourceInfo(src/map/core/entry.rs:127:54-127:55)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:127:54-127:55)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:128:37-128:63)
      kind: _9 = map::core::entry::VacantEntry::<'_, K, V>::insert(move _10, move _11) -> [return: bb7, unwind: bb11]
  }
  preds [bb3]
  succs [bb7, bb11]

bb7
  0: _3 = &mut (*_9)
    SourceInfo(src/map/core/entry.rs:128:37-128:63)
  1: StorageDead(_11)
    SourceInfo(src/map/core/entry.rs:128:62-128:63)
  2: StorageDead(_10)
    SourceInfo(src/map/core/entry.rs:128:62-128:63)
  3: StorageDead(_9)
    SourceInfo(src/map/core/entry.rs:128:62-128:63)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:128:62-128:63)
      kind: drop(_8) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: StorageDead(_8)
    SourceInfo(src/map/core/entry.rs:128:62-128:63)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:128:62-128:63)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: _2 = &mut (*_3)
    SourceInfo(src/map/core/entry.rs:126:9-129:10)
  1: _0 = &mut (*_2)
    SourceInfo(src/map/core/entry.rs:126:9-129:10)
  2: StorageDead(_3)
    SourceInfo(src/map/core/entry.rs:130:5-130:6)
  3: StorageDead(_2)
    SourceInfo(src/map/core/entry.rs:130:5-130:6)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:130:5-130:6)
      kind: drop(_1) -> [return: bb10, unwind: bb15]
  }
  preds [bb5, bb8]
  succs [bb10, bb15]

bb10
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:130:6-130:6)
      kind: return
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:128:62-128:63)
      kind: drop(_11) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:128:62-128:63)
      kind: drop(_10) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb3, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:128:62-128:63)
      kind: drop(_8) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:130:5-130:6)
      kind: drop(_1) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb4, bb7, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:122:5-130:6)
      kind: resume
  }
  preds [bb9, bb14]
  succs []

