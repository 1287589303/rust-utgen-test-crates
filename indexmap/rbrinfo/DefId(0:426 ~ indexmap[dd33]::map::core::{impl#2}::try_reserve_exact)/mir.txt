bb0
  0: StorageLive(_3)
    SourceInfo(src/map/core.rs:292:9-294:55)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:292:9-294:55)
  2: StorageLive(_5)
    SourceInfo(src/map/core.rs:292:9-294:54)
  3: StorageLive(_6)
    SourceInfo(src/map/core.rs:292:9-293:62)
  4: StorageLive(_7)
    SourceInfo(src/map/core.rs:292:9-292:21)
  5: _7 = &mut ((*_1).0: hashbrown::HashTable<usize>)
    SourceInfo(src/map/core.rs:292:9-292:21)
  6: StorageLive(_8)
    SourceInfo(src/map/core.rs:293:26-293:36)
  7: _8 = _2
    SourceInfo(src/map/core.rs:293:26-293:36)
  8: StorageLive(_9)
    SourceInfo(src/map/core.rs:293:38-293:61)
  9: StorageLive(_10)
    SourceInfo(src/map/core.rs:293:47-293:60)
  10: StorageLive(_11)
    SourceInfo(src/map/core.rs:293:47-293:60)
  11: StorageLive(_12)
    SourceInfo(src/map/core.rs:293:47-293:60)
  12: StorageLive(_13)
    SourceInfo(src/map/core.rs:293:47-293:60)
  13: _13 = &((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:293:47-293:60)
  14: _12 = &(*_13)
    SourceInfo(src/map/core.rs:293:47-293:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:293:47-293:60)
      kind: _11 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Deref>::deref(move _12) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: _10 = &(*_11)
    SourceInfo(src/map/core.rs:293:47-293:60)
  1: StorageDead(_12)
    SourceInfo(src/map/core.rs:293:59-293:60)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:293:38-293:61)
      kind: _9 = map::core::get_hash::<K, V>(move _10) -> [return: bb2, unwind: bb15]
  }
  preds [bb0]
  succs [bb2, bb15]

bb2
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:293:60-293:61)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:292:9-293:62)
      kind: _6 = hashbrown::HashTable::<usize>::try_reserve::<impl for<'a> Fn(&'a usize) -> u64 + '_>(move _7, move _8, move _9) -> [return: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: StorageDead(_9)
    SourceInfo(src/map/core.rs:293:61-293:62)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:293:61-293:62)
  2: StorageDead(_7)
    SourceInfo(src/map/core.rs:293:61-293:62)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:292:9-294:54)
      kind: _5 = core::result::Result::<(), hashbrown::TryReserveError>::map_err::<TryReserveError, fn(hashbrown::TryReserveError) -> TryReserveError {TryReserveError::from_hashbrown}>(move _6, TryReserveError::from_hashbrown) -> [return: bb4, unwind: bb15]
  }
  preds [bb2]
  succs [bb4, bb15]

bb4
  0: StorageDead(_6)
    SourceInfo(src/map/core.rs:294:53-294:54)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:292:9-294:55)
      kind: _4 = <core::result::Result<(), TryReserveError> as core::ops::Try>::branch(move _5) -> [return: bb5, unwind: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  0: StorageDead(_5)
    SourceInfo(src/map/core.rs:294:54-294:55)
  1: PlaceMention(_4)
    SourceInfo(src/map/core.rs:292:9-294:55)
  2: _14 = discriminant(_4)
    SourceInfo(src/map/core.rs:292:9-294:55)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:292:9-294:55)
      kind: switchInt(move _14) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/map/core.rs:292:9-294:55)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:292:9-294:55)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/map/core.rs:294:54-294:55)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_18)
    SourceInfo(src/map/core.rs:292:9-294:55)
  1: _18 = ((_4 as Continue).0: ())
    SourceInfo(src/map/core.rs:292:9-294:55)
  2: _3 = _18
    SourceInfo(src/map/core.rs:292:9-294:55)
  3: StorageDead(_18)
    SourceInfo(src/map/core.rs:294:54-294:55)
  4: StorageDead(_13)
    SourceInfo(src/map/core.rs:294:55-294:56)
  5: StorageDead(_11)
    SourceInfo(src/map/core.rs:294:55-294:56)
  6: StorageDead(_4)
    SourceInfo(src/map/core.rs:294:55-294:56)
  7: StorageDead(_3)
    SourceInfo(src/map/core.rs:294:55-294:56)
  8: StorageLive(_19)
    SourceInfo(src/map/core.rs:295:9-296:43)
  9: StorageLive(_20)
    SourceInfo(src/map/core.rs:295:9-295:21)
  10: _20 = &mut ((*_1).1: alloc::vec::Vec<Bucket<K, V>>)
    SourceInfo(src/map/core.rs:295:9-295:21)
  11: StorageLive(_21)
    SourceInfo(src/map/core.rs:296:32-296:42)
  12: _21 = _2
    SourceInfo(src/map/core.rs:296:32-296:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:295:9-296:43)
      kind: _19 = alloc::vec::Vec::<Bucket<K, V>>::try_reserve_exact(move _20, move _21) -> [return: bb11, unwind: bb15]
  }
  preds [bb5, bb7]
  succs [bb11, bb15]

bb9
  0: StorageLive(_15)
    SourceInfo(src/map/core.rs:294:54-294:55)
  1: _15 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, TryReserveError>)
    SourceInfo(src/map/core.rs:294:54-294:55)
  2: StorageLive(_17)
    SourceInfo(src/map/core.rs:294:54-294:55)
  3: _17 = move _15
    SourceInfo(src/map/core.rs:294:54-294:55)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:292:9-294:55)
      kind: _0 = <core::result::Result<(), TryReserveError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, TryReserveError>>>::from_residual(move _17) -> [return: bb10, unwind: bb15]
  }
  preds [bb7]
  succs [bb10, bb15]

bb10
  0: StorageDead(_17)
    SourceInfo(src/map/core.rs:294:54-294:55)
  1: StorageDead(_15)
    SourceInfo(src/map/core.rs:294:54-294:55)
  2: StorageDead(_13)
    SourceInfo(src/map/core.rs:294:55-294:56)
  3: StorageDead(_11)
    SourceInfo(src/map/core.rs:294:55-294:56)
  4: StorageDead(_4)
    SourceInfo(src/map/core.rs:294:55-294:56)
  5: StorageDead(_3)
    SourceInfo(src/map/core.rs:294:55-294:56)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:298:6-298:6)
      kind: goto -> bb13
  }
  preds [bb9]
  succs [bb13]

bb11
  0: StorageDead(_21)
    SourceInfo(src/map/core.rs:296:42-296:43)
  1: StorageDead(_20)
    SourceInfo(src/map/core.rs:296:42-296:43)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:295:9-297:50)
      kind: _0 = core::result::Result::<(), alloc::collections::TryReserveError>::map_err::<TryReserveError, fn(alloc::collections::TryReserveError) -> TryReserveError {TryReserveError::from_alloc}>(move _19, TryReserveError::from_alloc) -> [return: bb12, unwind: bb15]
  }
  preds [bb8]
  succs [bb12, bb15]

bb12
  0: StorageDead(_19)
    SourceInfo(src/map/core.rs:297:49-297:50)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:298:6-298:6)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/map/core.rs:298:6-298:6)
      kind: return
  }
  preds [bb10, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/map/core.rs:293:61-293:62)
      kind: drop(_9) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map/core.rs:291:5-298:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb8, bb9, bb11, bb14]
  succs []

