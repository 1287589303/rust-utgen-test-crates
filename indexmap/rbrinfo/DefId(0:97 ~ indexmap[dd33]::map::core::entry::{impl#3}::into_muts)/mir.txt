bb0
  0: StorageLive(_2)
    SourceInfo(src/map/core/entry.rs:206:13-206:18)
  1: StorageLive(_3)
    SourceInfo(src/map/core/entry.rs:206:21-206:25)
  2: _3 = &_1
    SourceInfo(src/map/core/entry.rs:206:21-206:25)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:206:21-206:33)
      kind: _2 = map::core::entry::OccupiedEntry::<'_, K, V>::index(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map/core/entry.rs:206:32-206:33)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/map/core/entry.rs:206:13-206:18)
  2: StorageLive(_4)
    SourceInfo(src/map/core/entry.rs:207:9-207:28)
  3: StorageLive(_5)
    SourceInfo(src/map/core/entry.rs:207:21-207:28)
  4: StorageLive(_6)
    SourceInfo(src/map/core/entry.rs:207:9-207:21)
  5: _6 = &mut (*(_1.0: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core/entry.rs:207:9-207:21)
  6: StorageLive(_7)
    SourceInfo(src/map/core/entry.rs:207:22-207:27)
  7: _7 = _2
    SourceInfo(src/map/core/entry.rs:207:22-207:27)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:207:21-207:28)
      kind: _5 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::IndexMut<usize>>::index_mut(move _6, move _7) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _4 = &mut (*_5)
    SourceInfo(src/map/core/entry.rs:207:9-207:28)
  1: StorageDead(_7)
    SourceInfo(src/map/core/entry.rs:207:27-207:28)
  2: StorageDead(_6)
    SourceInfo(src/map/core/entry.rs:207:27-207:28)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:207:9-207:35)
      kind: _0 = Bucket::<K, V>::muts(move _4) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_4)
    SourceInfo(src/map/core/entry.rs:207:34-207:35)
  1: StorageDead(_2)
    SourceInfo(src/map/core/entry.rs:208:5-208:6)
  2: StorageDead(_5)
    SourceInfo(src/map/core/entry.rs:208:5-208:6)
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:208:6-208:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/map/core/entry.rs:205:5-208:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

