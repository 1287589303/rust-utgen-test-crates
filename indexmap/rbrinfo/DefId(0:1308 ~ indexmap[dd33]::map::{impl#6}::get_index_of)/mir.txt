bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:759:15-759:32)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:759:15-759:19)
  2: _4 = &(*_1)
    SourceInfo(src/map.rs:759:15-759:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:759:15-759:32)
      kind: _3 = <map::IndexMap<K, V, S> as Entries>::as_entries(move _4) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: StorageDead(_4)
    SourceInfo(src/map.rs:759:31-759:32)
  1: PlaceMention(_3)
    SourceInfo(src/map.rs:759:15-759:32)
  2: _8 = Len((*_3))
    SourceInfo(src/map.rs:760:13-760:15)
  3: _9 = const 0_usize
    SourceInfo(src/map.rs:760:13-760:15)
  4: _10 = Eq(move _8, move _9)
    SourceInfo(src/map.rs:760:13-760:15)
  Terminator {
      source_info: SourceInfo(src/map.rs:760:13-760:15)
      kind: switchInt(move _10) -> [0: bb4, otherwise: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb2
  0: StorageLive(_16)
    SourceInfo(src/map.rs:763:21-763:25)
  1: StorageLive(_17)
    SourceInfo(src/map.rs:763:28-763:32)
  2: _17 = &(*_1)
    SourceInfo(src/map.rs:763:28-763:32)
  3: StorageLive(_18)
    SourceInfo(src/map.rs:763:38-763:41)
  4: _18 = &(*_2)
    SourceInfo(src/map.rs:763:38-763:41)
  Terminator {
      source_info: SourceInfo(src/map.rs:763:28-763:42)
      kind: _16 = map::IndexMap::<K, V, S>::hash::<Q>(move _17, move _18) -> [return: bb10, unwind: bb13]
  }
  preds [bb4, bb5]
  succs [bb10, bb13]

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:760:13-760:15)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb6]

bb4
  0: _5 = Len((*_3))
    SourceInfo(src/map.rs:761:13-761:16)
  1: _6 = const 1_usize
    SourceInfo(src/map.rs:761:13-761:16)
  2: _7 = Eq(move _5, move _6)
    SourceInfo(src/map.rs:761:13-761:16)
  Terminator {
      source_info: SourceInfo(src/map.rs:761:13-761:16)
      kind: switchInt(move _7) -> [0: bb2, otherwise: bb5]
  }
  preds [bb1, bb3]
  succs [bb2, bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:761:13-761:16)
      kind: falseEdge -> [real: bb7, imaginary: bb2]
  }
  preds [bb4]
  succs [bb2, bb7]

bb6
  0: _0 = core::option::Option::<usize>::None
    SourceInfo(src/map.rs:760:19-760:23)
  Terminator {
      source_info: SourceInfo(src/map.rs:760:19-760:23)
      kind: goto -> bb12
  }
  preds [bb3]
  succs [bb12]

bb7
  0: StorageLive(_11)
    SourceInfo(src/map.rs:761:14-761:15)
  1: _11 = &(*_3)[0 of 1]
    SourceInfo(src/map.rs:761:14-761:15)
  2: StorageLive(_12)
    SourceInfo(src/map.rs:761:20-761:42)
  3: StorageLive(_13)
    SourceInfo(src/map.rs:761:20-761:23)
  4: _13 = &(*_2)
    SourceInfo(src/map.rs:761:20-761:23)
  5: StorageLive(_14)
    SourceInfo(src/map.rs:761:35-761:41)
  6: StorageLive(_15)
    SourceInfo(src/map.rs:761:35-761:41)
  7: _15 = &((*_11).1: K)
    SourceInfo(src/map.rs:761:35-761:41)
  8: _14 = &(*_15)
    SourceInfo(src/map.rs:761:35-761:41)
  Terminator {
      source_info: SourceInfo(src/map.rs:761:20-761:42)
      kind: _12 = <Q as equivalent::Equivalent<K>>::equivalent(move _13, move _14) -> [return: bb8, unwind: bb13]
  }
  preds [bb5]
  succs [bb8, bb13]

bb8
  0: StorageDead(_14)
    SourceInfo(src/map.rs:761:41-761:42)
  1: StorageDead(_13)
    SourceInfo(src/map.rs:761:41-761:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:761:20-761:55)
      kind: _0 = core::bool::<impl bool>::then_some::<usize>(move _12, const 0_usize) -> [return: bb9, unwind: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_12)
    SourceInfo(src/map.rs:761:54-761:55)
  1: StorageDead(_15)
    SourceInfo(src/map.rs:761:54-761:55)
  2: StorageDead(_11)
    SourceInfo(src/map.rs:761:54-761:55)
  Terminator {
      source_info: SourceInfo(src/map.rs:761:54-761:55)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb10
  0: StorageDead(_18)
    SourceInfo(src/map.rs:763:41-763:42)
  1: StorageDead(_17)
    SourceInfo(src/map.rs:763:41-763:42)
  2: FakeRead(ForLet(None), _16)
    SourceInfo(src/map.rs:763:21-763:25)
  3: StorageLive(_19)
    SourceInfo(src/map.rs:764:17-764:26)
  4: _19 = &((*_1).0: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map.rs:764:17-764:26)
  5: StorageLive(_20)
    SourceInfo(src/map.rs:764:40-764:44)
  6: _20 = _16
    SourceInfo(src/map.rs:764:40-764:44)
  7: StorageLive(_21)
    SourceInfo(src/map.rs:764:46-764:49)
  8: _21 = &(*_2)
    SourceInfo(src/map.rs:764:46-764:49)
  Terminator {
      source_info: SourceInfo(src/map.rs:764:17-764:50)
      kind: _0 = map::core::IndexMapCore::<K, V>::get_index_of::<Q>(move _19, move _20, move _21) -> [return: bb11, unwind: bb13]
  }
  preds [bb2]
  succs [bb11, bb13]

bb11
  0: StorageDead(_21)
    SourceInfo(src/map.rs:764:49-764:50)
  1: StorageDead(_20)
    SourceInfo(src/map.rs:764:49-764:50)
  2: StorageDead(_19)
    SourceInfo(src/map.rs:764:49-764:50)
  3: StorageDead(_16)
    SourceInfo(src/map.rs:765:13-765:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:765:13-765:14)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_3)
    SourceInfo(src/map.rs:767:5-767:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:767:6-767:6)
      kind: return
  }
  preds [bb6, bb9, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/map.rs:755:5-767:6)
      kind: resume
  }
  preds [bb0, bb2, bb7, bb8, bb10]
  succs []

