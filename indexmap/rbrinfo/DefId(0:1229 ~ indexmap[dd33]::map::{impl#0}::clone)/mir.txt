bb0
  0: StorageLive(_2)
    SourceInfo(src/map.rs:105:19-105:36)
  1: StorageLive(_3)
    SourceInfo(src/map.rs:105:19-105:28)
  2: _3 = &((*_1).0: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map.rs:105:19-105:28)
  Terminator {
      source_info: SourceInfo(src/map.rs:105:19-105:36)
      kind: _2 = <map::core::IndexMapCore<K, V> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map.rs:105:35-105:36)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:106:27-106:52)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:106:27-106:44)
  3: _5 = &((*_1).1: S)
    SourceInfo(src/map.rs:106:27-106:44)
  Terminator {
      source_info: SourceInfo(src/map.rs:106:27-106:52)
      kind: _4 = <S as core::clone::Clone>::clone(move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(src/map.rs:106:51-106:52)
  1: _0 = map::IndexMap::<K, V, S> { core: move _2, hash_builder: move _4 }
    SourceInfo(src/map.rs:104:9-107:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:107:9-107:10)
      kind: drop(_4) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_4)
    SourceInfo(src/map.rs:107:9-107:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:107:9-107:10)
      kind: drop(_2) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_2)
    SourceInfo(src/map.rs:107:9-107:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:108:6-108:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:107:9-107:10)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:103:5-108:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

