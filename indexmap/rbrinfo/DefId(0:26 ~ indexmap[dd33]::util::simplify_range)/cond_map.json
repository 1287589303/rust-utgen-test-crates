{
  "src/util.rs:15:32:15:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/util.rs:20:21:20:38": [
    {
      "Match": {
        "match_source": "src/util.rs:20:21:20:38",
        "match_str": "range.end_bound()",
        "match_kind": {
          "Enum": [
            "Included",
            "Excluded",
            "Unbounded"
          ]
        },
        "arms": {
          "src/util.rs:21:9:21:25": {
            "pat": {
              "pat_str": "Bound::Unbounded",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "src/util.rs:21:29:21:32"
          },
          "src/util.rs:24:9:24:27": {
            "pat": {
              "pat_str": "Bound::Included(i)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "src/util.rs:24:52:26:10"
          },
          "src/util.rs:24:30:24:48": {
            "pat": {
              "pat_str": "Bound::Excluded(i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "src/util.rs:24:52:26:10"
          },
          "src/util.rs:23:9:23:28": {
            "pat": {
              "pat_str": "Bound::Included(&i)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": {
              "src/util.rs:23:32:23:39": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Lt",
                      "expr": "i < len",
                      "lhs": "i",
                      "rhs": "len",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "src/util.rs:23:43:23:48"
          },
          "src/util.rs:22:9:22:28": {
            "pat": {
              "pat_str": "Bound::Excluded(&i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": {
              "src/util.rs:22:32:22:40": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Le",
                      "expr": "i <= len",
                      "lhs": "i",
                      "rhs": "len",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "src/util.rs:22:44:22:45"
          }
        }
      }
    }
  ],
  "src/util.rs:12:23:12:42": [
    {
      "Match": {
        "match_source": "src/util.rs:12:23:12:42",
        "match_str": "range.start_bound()",
        "match_kind": {
          "Enum": [
            "Included",
            "Excluded",
            "Unbounded"
          ]
        },
        "arms": {
          "src/util.rs:13:9:13:25": {
            "pat": {
              "pat_str": "Bound::Unbounded",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "src/util.rs:13:29:13:30"
          },
          "src/util.rs:14:9:14:28": {
            "pat": {
              "pat_str": "Bound::Included(&i)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": {
              "src/util.rs:14:32:14:40": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Le",
                      "expr": "i <= len",
                      "lhs": "i",
                      "rhs": "len",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "src/util.rs:14:44:14:45"
          },
          "src/util.rs:15:9:15:28": {
            "pat": {
              "pat_str": "Bound::Excluded(&i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": {
              "src/util.rs:15:32:15:39": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Lt",
                      "expr": "i < len",
                      "lhs": "i",
                      "rhs": "len",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "src/util.rs:15:43:15:48"
          },
          "src/util.rs:16:9:16:27": {
            "pat": {
              "pat_str": "Bound::Included(i)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "src/util.rs:16:52:18:10"
          },
          "src/util.rs:16:30:16:48": {
            "pat": {
              "pat_str": "Bound::Excluded(i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "src/util.rs:16:52:18:10"
          }
        }
      }
    }
  ],
  "src/util.rs:23:32:23:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/util.rs:23:43:23:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/util.rs:15:43:15:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/util.rs:28:8:28:19": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "start > end",
          "lhs": "start",
          "rhs": "end",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/util.rs:14:32:14:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "i <= len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/util.rs:22:32:22:40": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "i <= len",
          "lhs": "i",
          "rhs": "len",
          "cmp_with_int": false
        }
      }
    }
  ]
}