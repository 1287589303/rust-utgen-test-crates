bb0
  0: StorageLive(_3)
    SourceInfo(src/map/slice.rs:356:18-356:31)
  1: StorageLive(_4)
    SourceInfo(src/map/slice.rs:356:18-356:31)
  2: _4 = &((*_1).0: [Bucket<K, V>])
    SourceInfo(src/map/slice.rs:356:18-356:31)
  3: _3 = &(*_4)
    SourceInfo(src/map/slice.rs:356:18-356:31)
  4: StorageLive(_5)
    SourceInfo(src/map/slice.rs:356:33-356:38)
  5: _5 = &(*_2)
    SourceInfo(src/map/slice.rs:356:33-356:38)
  6: StorageLive(_6)
    SourceInfo(src/map/slice.rs:356:40-356:77)
  7: _6 = {closure@src/map/slice.rs:356:40: 356:46}
    SourceInfo(src/map/slice.rs:356:40-356:77)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:356:9-356:78)
      kind: _0 = util::slice_eq::<Bucket<K, V>, (K2, V2), {closure@src/map/slice.rs:356:40: 356:46}>(move _3, move _5, move _6) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(src/map/slice.rs:356:77-356:78)
  1: StorageDead(_5)
    SourceInfo(src/map/slice.rs:356:77-356:78)
  2: StorageDead(_3)
    SourceInfo(src/map/slice.rs:356:77-356:78)
  3: StorageDead(_4)
    SourceInfo(src/map/slice.rs:357:5-357:6)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:357:6-357:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:355:5-357:6)
      kind: resume
  }
  preds [bb0]
  succs []

