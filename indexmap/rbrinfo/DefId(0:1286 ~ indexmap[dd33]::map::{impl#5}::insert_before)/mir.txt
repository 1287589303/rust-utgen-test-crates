bb0
  0: StorageLive(_5)
    SourceInfo(src/map.rs:500:13-500:16)
  1: StorageLive(_6)
    SourceInfo(src/map.rs:500:19-500:23)
  2: _6 = &(*_1)
    SourceInfo(src/map.rs:500:19-500:23)
  Terminator {
      source_info: SourceInfo(src/map.rs:500:19-500:29)
      kind: _5 = map::IndexMap::<K, V, S>::len(move _6) -> [return: bb1, unwind: bb38]
  }
  preds []
  succs [bb1, bb38]

bb1
  0: StorageDead(_6)
    SourceInfo(src/map.rs:500:28-500:29)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/map.rs:500:13-500:16)
  2: StorageLive(_7)
    SourceInfo(src/map.rs:502:9-505:10)
  3: StorageLive(_8)
    SourceInfo(src/map.rs:503:13-503:25)
  4: StorageLive(_9)
    SourceInfo(src/map.rs:503:13-503:18)
  5: _9 = _2
    SourceInfo(src/map.rs:503:13-503:18)
  6: StorageLive(_10)
    SourceInfo(src/map.rs:503:22-503:25)
  7: _10 = _5
    SourceInfo(src/map.rs:503:22-503:25)
  8: _8 = Le(move _9, move _10)
    SourceInfo(src/map.rs:503:13-503:25)
  Terminator {
      source_info: SourceInfo(src/map.rs:503:13-503:25)
      kind: switchInt(move _8) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_10)
    SourceInfo(src/map.rs:503:24-503:25)
  1: StorageDead(_9)
    SourceInfo(src/map.rs:503:24-503:25)
  2: _7 = const ()
    SourceInfo(src/map.rs:505:10-505:10)
  3: StorageDead(_8)
    SourceInfo(src/map.rs:505:9-505:10)
  4: StorageDead(_7)
    SourceInfo(src/map.rs:505:9-505:10)
  5: StorageLive(_26)
    SourceInfo(src/map.rs:507:15-507:30)
  6: StorageLive(_27)
    SourceInfo(src/map.rs:507:15-507:19)
  7: _27 = &mut (*_1)
    SourceInfo(src/map.rs:507:15-507:19)
  8: StorageLive(_28)
    SourceInfo(src/map.rs:507:26-507:29)
  9: _28 = move _3
    SourceInfo(src/map.rs:507:26-507:29)
  Terminator {
      source_info: SourceInfo(src/map.rs:507:15-507:30)
      kind: _26 = map::IndexMap::<K, V, S>::entry(move _27, move _28) -> [return: bb7, unwind: bb37]
  }
  preds [bb1]
  succs [bb7, bb37]

bb3
  0: StorageDead(_10)
    SourceInfo(src/map.rs:503:24-503:25)
  1: StorageDead(_9)
    SourceInfo(src/map.rs:503:24-503:25)
  2: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_14)
    SourceInfo(src/map.rs:504:13-504:100)
  5: StorageLive(_15)
    SourceInfo(src/map.rs:504:13-504:100)
  6: StorageLive(_16)
    SourceInfo(src/map.rs:504:13-504:100)
  7: _16 = [const "index out of bounds: the len is ", const " but the index is ", const ". Expected index <= len"]
    SourceInfo(src/map.rs:504:13-504:100)
  8: _15 = &_16
    SourceInfo(src/map.rs:504:13-504:100)
  9: _14 = &(*_15)
    SourceInfo(src/map.rs:504:13-504:100)
  10: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_20)
    SourceInfo(src/map.rs:504:46-504:51)
  14: StorageLive(_21)
    SourceInfo(src/map.rs:504:46-504:51)
  15: StorageLive(_22)
    SourceInfo(src/map.rs:504:46-504:51)
  16: _22 = &_5
    SourceInfo(src/map.rs:504:46-504:51)
  17: _21 = &(*_22)
    SourceInfo(src/map.rs:504:46-504:51)
  Terminator {
      source_info: SourceInfo(src/map.rs:504:46-504:51)
      kind: _20 = core::fmt::rt::Argument::<'_>::new_display::<usize>(move _21) -> [return: bb4, unwind: bb38]
  }
  preds [bb1]
  succs [bb4, bb38]

bb4
  0: StorageDead(_21)
    SourceInfo(src/map.rs:504:50-504:51)
  1: StorageLive(_23)
    SourceInfo(src/map.rs:504:69-504:76)
  2: StorageLive(_24)
    SourceInfo(src/map.rs:504:69-504:76)
  3: StorageLive(_25)
    SourceInfo(src/map.rs:504:69-504:76)
  4: _25 = &_2
    SourceInfo(src/map.rs:504:69-504:76)
  5: _24 = &(*_25)
    SourceInfo(src/map.rs:504:69-504:76)
  Terminator {
      source_info: SourceInfo(src/map.rs:504:69-504:76)
      kind: _23 = core::fmt::rt::Argument::<'_>::new_display::<usize>(move _24) -> [return: bb5, unwind: bb38]
  }
  preds [bb3]
  succs [bb5, bb38]

bb5
  0: StorageDead(_24)
    SourceInfo(src/map.rs:504:75-504:76)
  1: _19 = [move _20, move _23]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: StorageDead(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  4: _18 = &_19
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  5: _17 = &(*_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _13 = core::fmt::Arguments::<'_>::new_v1::<3, 2>(move _14, move _17) -> [return: bb6, unwind: bb38]
  }
  preds [bb4]
  succs [bb6, bb38]

bb6
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _12 = core::panicking::panic_fmt(move _13) -> bb38
  }
  preds [bb5]
  succs [bb38]

bb7
  0: StorageDead(_28)
    SourceInfo(src/map.rs:507:29-507:30)
  1: StorageDead(_27)
    SourceInfo(src/map.rs:507:29-507:30)
  2: PlaceMention(_26)
    SourceInfo(src/map.rs:507:15-507:30)
  3: _29 = discriminant(_26)
    SourceInfo(src/map.rs:507:15-507:30)
  Terminator {
      source_info: SourceInfo(src/map.rs:507:9-507:30)
      kind: switchInt(move _29) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb2]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _26)
    SourceInfo(src/map.rs:507:15-507:30)
  Terminator {
      source_info: SourceInfo(src/map.rs:507:15-507:30)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:508:13-508:39)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_48)
    SourceInfo(src/map.rs:519:27-519:32)
  1: _48 = move ((_26 as Vacant).0: map::core::entry::VacantEntry<'_, K, V>)
    SourceInfo(src/map.rs:519:27-519:32)
  2: StorageLive(_49)
    SourceInfo(src/map.rs:520:17-520:49)
  3: StorageLive(_50)
    SourceInfo(src/map.rs:520:17-520:22)
  4: _50 = move _48
    SourceInfo(src/map.rs:520:17-520:22)
  5: StorageLive(_51)
    SourceInfo(src/map.rs:520:36-520:41)
  6: _51 = _2
    SourceInfo(src/map.rs:520:36-520:41)
  7: StorageLive(_52)
    SourceInfo(src/map.rs:520:43-520:48)
  8: _52 = move _4
    SourceInfo(src/map.rs:520:43-520:48)
  Terminator {
      source_info: SourceInfo(src/map.rs:520:17-520:49)
      kind: _49 = map::core::entry::VacantEntry::<'_, K, V>::shift_insert(move _50, move _51, move _52) -> [return: bb23, unwind: bb30]
  }
  preds [bb7, bb9]
  succs [bb23, bb30]

bb11
  0: StorageLive(_30)
    SourceInfo(src/map.rs:508:29-508:38)
  1: _30 = move ((_26 as Occupied).0: map::core::entry::OccupiedEntry<'_, K, V>)
    SourceInfo(src/map.rs:508:29-508:38)
  2: StorageLive(_31)
    SourceInfo(src/map.rs:509:17-514:18)
  3: StorageLive(_32)
    SourceInfo(src/map.rs:509:20-509:41)
  4: StorageLive(_33)
    SourceInfo(src/map.rs:509:20-509:25)
  5: _33 = _2
    SourceInfo(src/map.rs:509:20-509:25)
  6: StorageLive(_34)
    SourceInfo(src/map.rs:509:28-509:41)
  7: StorageLive(_35)
    SourceInfo(src/map.rs:509:28-509:33)
  8: _35 = &_30
    SourceInfo(src/map.rs:509:28-509:33)
  Terminator {
      source_info: SourceInfo(src/map.rs:509:28-509:41)
      kind: _34 = map::core::entry::OccupiedEntry::<'_, K, V>::index(move _35) -> [return: bb12, unwind: bb36]
  }
  preds [bb9]
  succs [bb12, bb36]

bb12
  0: StorageDead(_35)
    SourceInfo(src/map.rs:509:40-509:41)
  1: _32 = Gt(move _33, move _34)
    SourceInfo(src/map.rs:509:20-509:41)
  Terminator {
      source_info: SourceInfo(src/map.rs:509:20-509:41)
      kind: switchInt(move _32) -> [0: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb15]

bb13
  0: StorageDead(_34)
    SourceInfo(src/map.rs:509:40-509:41)
  1: StorageDead(_33)
    SourceInfo(src/map.rs:509:40-509:41)
  2: _36 = SubWithOverflow(_2, const 1_usize)
    SourceInfo(src/map.rs:513:21-513:31)
  Terminator {
      source_info: SourceInfo(src/map.rs:513:21-513:31)
      kind: assert(!move (_36.1: bool), "attempt to compute `{} - {}`, which would overflow", _2, const 1_usize) -> [success: bb14, unwind: bb36]
  }
  preds [bb12]
  succs [bb14, bb36]

bb14
  0: _2 = move (_36.0: usize)
    SourceInfo(src/map.rs:513:21-513:31)
  1: _31 = const ()
    SourceInfo(src/map.rs:509:42-514:18)
  Terminator {
      source_info: SourceInfo(src/map.rs:509:17-514:18)
      kind: goto -> bb16
  }
  preds [bb13]
  succs [bb16]

bb15
  0: StorageDead(_34)
    SourceInfo(src/map.rs:509:40-509:41)
  1: StorageDead(_33)
    SourceInfo(src/map.rs:509:40-509:41)
  2: _31 = const ()
    SourceInfo(src/map.rs:514:18-514:18)
  Terminator {
      source_info: SourceInfo(src/map.rs:509:17-514:18)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb16
  0: StorageDead(_32)
    SourceInfo(src/map.rs:514:17-514:18)
  1: StorageDead(_31)
    SourceInfo(src/map.rs:514:17-514:18)
  2: StorageLive(_37)
    SourceInfo(src/map.rs:515:21-515:24)
  3: StorageLive(_38)
    SourceInfo(src/map.rs:515:40-515:55)
  4: StorageLive(_39)
    SourceInfo(src/map.rs:515:40-515:55)
  5: StorageLive(_40)
    SourceInfo(src/map.rs:515:40-515:45)
  6: _40 = &mut _30
    SourceInfo(src/map.rs:515:40-515:45)
  Terminator {
      source_info: SourceInfo(src/map.rs:515:40-515:55)
      kind: _39 = map::core::entry::OccupiedEntry::<'_, K, V>::get_mut(move _40) -> [return: bb17, unwind: bb36]
  }
  preds [bb14, bb15]
  succs [bb17, bb36]

bb17
  0: _38 = &mut (*_39)
    SourceInfo(src/map.rs:515:40-515:55)
  1: StorageDead(_40)
    SourceInfo(src/map.rs:515:54-515:55)
  2: StorageLive(_41)
    SourceInfo(src/map.rs:515:57-515:62)
  3: _41 = move _4
    SourceInfo(src/map.rs:515:57-515:62)
  Terminator {
      source_info: SourceInfo(src/map.rs:515:27-515:63)
      kind: _37 = core::mem::replace::<V>(move _38, move _41) -> [return: bb18, unwind: bb35]
  }
  preds [bb16]
  succs [bb18, bb35]

bb18
  0: StorageDead(_41)
    SourceInfo(src/map.rs:515:62-515:63)
  1: StorageDead(_38)
    SourceInfo(src/map.rs:515:62-515:63)
  2: FakeRead(ForLet(None), _37)
    SourceInfo(src/map.rs:515:21-515:24)
  3: StorageDead(_39)
    SourceInfo(src/map.rs:515:63-515:64)
  4: StorageLive(_42)
    SourceInfo(src/map.rs:516:17-516:40)
  5: StorageLive(_43)
    SourceInfo(src/map.rs:516:17-516:22)
  6: _43 = move _30
    SourceInfo(src/map.rs:516:17-516:22)
  7: StorageLive(_44)
    SourceInfo(src/map.rs:516:34-516:39)
  8: _44 = _2
    SourceInfo(src/map.rs:516:34-516:39)
  Terminator {
      source_info: SourceInfo(src/map.rs:516:17-516:40)
      kind: _42 = map::core::entry::OccupiedEntry::<'_, K, V>::move_index(move _43, move _44) -> [return: bb19, unwind: bb34]
  }
  preds [bb17]
  succs [bb19, bb34]

bb19
  0: StorageDead(_44)
    SourceInfo(src/map.rs:516:39-516:40)
  1: StorageDead(_43)
    SourceInfo(src/map.rs:516:39-516:40)
  2: StorageDead(_42)
    SourceInfo(src/map.rs:516:40-516:41)
  3: StorageLive(_45)
    SourceInfo(src/map.rs:517:18-517:23)
  4: _45 = _2
    SourceInfo(src/map.rs:517:18-517:23)
  5: StorageLive(_46)
    SourceInfo(src/map.rs:517:25-517:34)
  6: StorageLive(_47)
    SourceInfo(src/map.rs:517:30-517:33)
  7: _47 = move _37
    SourceInfo(src/map.rs:517:30-517:33)
  8: _46 = core::option::Option::<V>::Some(move _47)
    SourceInfo(src/map.rs:517:25-517:34)
  Terminator {
      source_info: SourceInfo(src/map.rs:517:33-517:34)
      kind: drop(_47) -> [return: bb20, unwind: bb33]
  }
  preds [bb18]
  succs [bb20, bb33]

bb20
  0: StorageDead(_47)
    SourceInfo(src/map.rs:517:33-517:34)
  1: _0 = (move _45, move _46)
    SourceInfo(src/map.rs:517:17-517:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:517:34-517:35)
      kind: drop(_46) -> [return: bb21, unwind: bb34]
  }
  preds [bb19]
  succs [bb21, bb34]

bb21
  0: StorageDead(_46)
    SourceInfo(src/map.rs:517:34-517:35)
  1: StorageDead(_45)
    SourceInfo(src/map.rs:517:34-517:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:518:13-518:14)
      kind: drop(_37) -> [return: bb22, unwind: bb36]
  }
  preds [bb20]
  succs [bb22, bb36]

bb22
  0: StorageDead(_37)
    SourceInfo(src/map.rs:518:13-518:14)
  1: StorageDead(_30)
    SourceInfo(src/map.rs:518:13-518:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:518:13-518:14)
      kind: goto -> bb26
  }
  preds [bb21]
  succs [bb26]

bb23
  0: StorageDead(_52)
    SourceInfo(src/map.rs:520:48-520:49)
  1: StorageDead(_51)
    SourceInfo(src/map.rs:520:48-520:49)
  2: StorageDead(_50)
    SourceInfo(src/map.rs:520:48-520:49)
  3: StorageDead(_49)
    SourceInfo(src/map.rs:520:49-520:50)
  4: StorageLive(_53)
    SourceInfo(src/map.rs:521:18-521:23)
  5: _53 = _2
    SourceInfo(src/map.rs:521:18-521:23)
  6: StorageLive(_54)
    SourceInfo(src/map.rs:521:25-521:29)
  7: _54 = core::option::Option::<V>::None
    SourceInfo(src/map.rs:521:25-521:29)
  8: _0 = (move _53, move _54)
    SourceInfo(src/map.rs:521:17-521:30)
  Terminator {
      source_info: SourceInfo(src/map.rs:521:29-521:30)
      kind: drop(_54) -> [return: bb24, unwind: bb32]
  }
  preds [bb10]
  succs [bb24, bb32]

bb24
  0: StorageDead(_54)
    SourceInfo(src/map.rs:521:29-521:30)
  1: StorageDead(_53)
    SourceInfo(src/map.rs:521:29-521:30)
  Terminator {
      source_info: SourceInfo(src/map.rs:522:13-522:14)
      kind: drop(_48) -> [return: bb25, unwind: bb36]
  }
  preds [bb23]
  succs [bb25, bb36]

bb25
  0: StorageDead(_48)
    SourceInfo(src/map.rs:522:13-522:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:522:13-522:14)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageDead(_5)
    SourceInfo(src/map.rs:524:5-524:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:524:5-524:6)
      kind: drop(_26) -> [return: bb27, unwind: bb38]
  }
  preds [bb22, bb25]
  succs [bb27, bb38]

bb27
  0: StorageDead(_26)
    SourceInfo(src/map.rs:524:5-524:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:524:5-524:6)
      kind: drop(_4) -> [return: bb28, unwind: bb39]
  }
  preds [bb26]
  succs [bb28, bb39]

bb28
  Terminator {
      source_info: SourceInfo(src/map.rs:524:5-524:6)
      kind: drop(_3) -> [return: bb29, unwind: bb40]
  }
  preds [bb27]
  succs [bb29, bb40]

bb29
  Terminator {
      source_info: SourceInfo(src/map.rs:524:6-524:6)
      kind: return
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(src/map.rs:520:48-520:49)
      kind: drop(_52) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(src/map.rs:520:48-520:49)
      kind: drop(_50) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(src/map.rs:522:13-522:14)
      kind: drop(_48) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb23, bb31]
  succs [bb36]

bb33
  Terminator {
      source_info: SourceInfo(src/map.rs:517:34-517:35)
      kind: drop(_46) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(src/map.rs:518:13-518:14)
      kind: drop(_37) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb18, bb20, bb33]
  succs [bb36]

bb35
  Terminator {
      source_info: SourceInfo(src/map.rs:515:62-515:63)
      kind: drop(_41) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(src/map.rs:524:5-524:6)
      kind: drop(_26) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb11, bb13, bb16, bb21, bb24, bb32, bb34, bb35]
  succs [bb38]

bb37
  Terminator {
      source_info: SourceInfo(src/map.rs:507:29-507:30)
      kind: drop(_28) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(src/map.rs:524:5-524:6)
      kind: drop(_4) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb0, bb3, bb4, bb5, bb6, bb26, bb36, bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(src/map.rs:524:5-524:6)
      kind: drop(_3) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb27, bb38]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(src/map.rs:499:5-524:6)
      kind: resume
  }
  preds [bb28, bb39]
  succs []

