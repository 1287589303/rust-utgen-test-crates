{
  "name": "indexmap::set::{impl#4}::split_off",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:124:1:124:13"
  },
  "visible": true,
  "loc": "src/set.rs:269:5:276:6",
  "doc": "/// Splits the collection into two at the given index.\n///\n/// Returns a newly allocated set containing the elements in the range\n/// `[at, len)`. After the call, the original set will be left containing\n/// the elements `[0, at)` with its previous capacity unchanged.\n///\n/// ***Panics*** if `at > len`.\n",
  "code": [
    "pub fn split_off(&mut self, at: usize) -> Self",
    "where",
    "    S: Clone,",
    "{",
    "    Self {",
    "        map: self.map.split_off(at),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Self {\n            map: self.map.split_off(at),\n        }",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}