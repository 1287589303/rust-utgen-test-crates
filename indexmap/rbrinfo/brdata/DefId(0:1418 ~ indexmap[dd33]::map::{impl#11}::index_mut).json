{
  "name": "indexmap::map::{impl#11}::index_mut",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:1478:5:1486:6",
  "doc": "/// Returns a mutable reference to the value at the supplied `index`.\n///\n/// ***Panics*** if `index` is out of bounds.\n",
  "code": [
    "fn index_mut(&mut self, index: usize) -> &mut V {",
    "    let len: usize = self.len();",
    "",
    "    self.get_index_mut(index)",
    "        .unwrap_or_else(|| {",
    "            panic!(\"index out of bounds: the len is {len} but the index is {index}\");",
    "        })",
    "        .1",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.get_index_mut(index)\n            .unwrap_or_else(|| {\n                panic!(\"index out of bounds: the len is {len} but the index is {index}\");\n            })\n            .1",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}