{
  "name": "indexmap::map::{impl#5}::entry",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:613:5:616:6",
  "doc": "/// Get the given keyâ€™s corresponding entry in the map for insertion and/or\n/// in-place manipulation.\n///\n/// Computes in **O(1)** time (amortized average).\n",
  "code": [
    "pub fn entry(&mut self, key: K) -> Entry<'_, K, V> {",
    "    let hash = self.hash(&key);",
    "    self.core.entry(hash, key)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}