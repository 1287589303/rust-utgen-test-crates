{
  "name": "indexmap::map::{impl#7}::sort_keys",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:983:5:990:6",
  "doc": "/// Sort the mapâ€™s key-value pairs by the default ordering of the keys.\n///\n/// This is a stable sort -- but equivalent keys should not normally coexist in\n/// a map at all, so [`sort_unstable_keys`][Self::sort_unstable_keys] is preferred\n/// because it is generally faster and doesn't allocate auxiliary memory.\n///\n/// See [`sort_by`](Self::sort_by) for details.\n",
  "code": [
    "pub fn sort_keys(&mut self)",
    "where",
    "    K: Ord,",
    "{",
    "    self.with_entries(move |entries| {",
    "        entries.sort_by(move |a, b| K::cmp(&a.key, &b.key));",
    "    });",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}