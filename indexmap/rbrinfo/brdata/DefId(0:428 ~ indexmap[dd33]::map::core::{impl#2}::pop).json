{
  "name": "indexmap::map::core::{impl#2}::pop",
  "mod_info": {
    "name": "map::core",
    "loc": "src/map.rs:4:1:4:10"
  },
  "visible": true,
  "loc": "src/map/core.rs:308:5:316:6",
  "doc": "/// Remove the last key-value pair\n",
  "code": [
    "pub(crate) fn pop(&mut self) -> Option<(K, V)> {",
    "    if let Some(entry) = self.entries.pop() {",
    "        let last = self.entries.len();",
    "        erase_index(&mut self.indices, entry.hash, last);",
    "        Some((entry.key, entry.value))",
    "    } else {",
    "        None",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(entry) = self.entries.pop()",
          "norm": null,
          "value": "true",
          "line": 309,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        9,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(entry) = self.entries.pop()",
          "norm": null,
          "value": "true",
          "line": 309,
          "bound": null
        }
      ],
      "ret": "Some((entry.key, entry.value))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}