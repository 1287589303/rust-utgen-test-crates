{
  "name": "indexmap::map::slice::{impl#1}::split_at",
  "mod_info": {
    "name": "map::slice",
    "loc": "src/map.rs:7:1:7:11"
  },
  "visible": true,
  "loc": "src/map/slice.rs:127:5:130:6",
  "doc": "/// Divides one slice into two at an index.\n///\n/// ***Panics*** if `index > len`.\n",
  "code": [
    "pub fn split_at(&self, index: usize) -> (&Self, &Self) {",
    "    let (first, second) = self.entries.split_at(index);",
    "    (Self::from_slice(first), Self::from_slice(second))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "(Self::from_slice(first), Self::from_slice(second))",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}