{
  "name": "indexmap::set::{impl#5}::replace_full",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:124:1:124:13"
  },
  "visible": true,
  "loc": "src/set.rs:508:5:514:6",
  "doc": "/// Adds a value to the set, replacing the existing value, if any, that is\n/// equal to the given one, without altering its insertion order. Returns\n/// the index of the item and its replaced value.\n///\n/// Computes in **O(1)** time (average).\n",
  "code": [
    "pub fn replace_full(&mut self, value: T) -> (usize, Option<T>) {",
    "    let hash = self.map.hash(&value);",
    "    match self.map.core.replace_full(hash, value, ()) {",
    "        (i, Some((replaced, ()))) => (i, Some(replaced)),",
    "        (i, None) => (i, None),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.map.core.replace_full(hash, value, ()) matches (i, Some((replaced, ())))",
          "norm": null,
          "value": "true",
          "line": 510,
          "bound": null
        }
      ],
      "ret": "(i, Some(replaced))",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        8,
        9,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.map.core.replace_full(hash, value, ()) matches (i, None)",
          "norm": null,
          "value": "true",
          "line": 512,
          "bound": null
        }
      ],
      "ret": "(i, None)",
      "path": [
        0,
        1,
        2,
        5,
        10,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}