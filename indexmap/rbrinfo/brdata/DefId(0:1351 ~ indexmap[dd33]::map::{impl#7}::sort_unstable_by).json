{
  "name": "indexmap::map::{impl#7}::sort_unstable_by",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:1043:5:1050:6",
  "doc": "/// Sort the map's key-value pairs in place using the comparison function `cmp`, but\n/// may not preserve the order of equal elements.\n///\n/// The comparison function receives two key and value pairs to compare (you\n/// can sort by keys or values or their combination as needed).\n///\n/// Computes in **O(n log n + c)** time where *n* is\n/// the length of the map and *c* is the capacity. The sort is unstable.\n",
  "code": [
    "pub fn sort_unstable_by<F>(&mut self, mut cmp: F)",
    "where",
    "    F: FnMut(&K, &V, &K, &V) -> Ordering,",
    "{",
    "    self.with_entries(move |entries| {",
    "        entries.sort_unstable_by(move |a, b| cmp(&a.key, &a.value, &b.key, &b.value));",
    "    });",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}