{
  "name": "indexmap::map::core::raw_entry_v1::{impl#6}::and_modify",
  "mod_info": {
    "name": "map::core::raw_entry_v1",
    "loc": "src/map/core.rs:12:1:12:22"
  },
  "visible": true,
  "loc": "src/map/core/raw_entry_v1.rs:367:5:376:6",
  "doc": "/// Modifies the entry if it is occupied.\n",
  "code": [
    "pub fn and_modify<F>(mut self, f: F) -> Self",
    "where",
    "    F: FnOnce(&mut K, &mut V),",
    "{",
    "    if let Self::Occupied(entry) = &mut self {",
    "        let (k, v) = entry.get_key_value_mut();",
    "        f(k, v);",
    "    }",
    "    self",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Self::Occupied(entry) = &mut self",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        }
      ],
      "ret": "self",
      "path": [
        0,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Self::Occupied(entry) = &mut self",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        }
      ],
      "ret": "self",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}