{
  "name": "indexmap::map::core::{impl#3}::swap_remove_finish",
  "mod_info": {
    "name": "map::core",
    "loc": "src/map.rs:4:1:4:10"
  },
  "visible": false,
  "loc": "src/map/core.rs:626:5:640:6",
  "doc": "/// Finish removing an entry by swapping it with the last\n///\n/// The index should already be removed from `self.indices`.\n",
  "code": [
    "fn swap_remove_finish(&mut self, index: usize) -> (K, V) {",
    "    // use swap_remove, but then we need to update the index that points",
    "    // to the other entry that has to move",
    "    let entry = self.entries.swap_remove(index);",
    "",
    "    // correct index that points to the entry that had to swap places",
    "    if let Some(entry) = self.entries.get(index) {",
    "        // was not last element",
    "        // examine new element in `index` and find it in indices",
    "        let last = self.entries.len();",
    "        update_index(self.indices, entry.hash, last, index);",
    "    }",
    "",
    "    (entry.key, entry.value)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(entry) = self.entries.get(index)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        }
      ],
      "ret": "(entry.key, entry.value)",
      "path": [
        0,
        1,
        2,
        3,
        8,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(entry) = self.entries.get(index)",
          "norm": null,
          "value": "true",
          "line": 632,
          "bound": null
        }
      ],
      "ret": "(entry.key, entry.value)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}