{
  "name": "indexmap::map::core::entry::{impl#5}::from",
  "mod_info": {
    "name": "map::core::entry",
    "loc": "src/map/core.rs:10:1:10:11"
  },
  "visible": true,
  "loc": "src/map/core/entry.rs:327:5:339:6",
  "doc": "",
  "code": [
    "fn from(other: IndexedEntry<'a, K, V>) -> Self {",
    "    let IndexedEntry {",
    "        map: RefMut { indices, entries },",
    "        index,",
    "    } = other;",
    "    let hash = entries[index].hash;",
    "    Self {",
    "        entries,",
    "        index: indices",
    "            .find_entry(hash.get(), move |&i| i == index)",
    "            .expect(\"index not found\"),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Self {\n            entries,\n            index: indices\n                .find_entry(hash.get(), move |&i| i == index)\n                .expect(\"index not found\"),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}