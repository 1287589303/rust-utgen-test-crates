{
  "name": "indexmap::map::{impl#7}::get_index_entry",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:1192:5:1197:6",
  "doc": "/// Get an entry in the map by index for in-place manipulation.\n///\n/// Valid indices are `0 <= index < self.len()`.\n///\n/// Computes in **O(1)** time.\n",
  "code": [
    "pub fn get_index_entry(&mut self, index: usize) -> Option<IndexedEntry<'_, K, V>> {",
    "    if index >= self.len() {",
    "        return None;",
    "    }",
    "    Some(IndexedEntry::new(&mut self.core, index))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "index >= self.len()",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": "index == self.len()"
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "index >= self.len()",
          "norm": null,
          "value": "false",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "Some(IndexedEntry::new(&mut self.core, index))",
      "path": [
        0,
        1,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}