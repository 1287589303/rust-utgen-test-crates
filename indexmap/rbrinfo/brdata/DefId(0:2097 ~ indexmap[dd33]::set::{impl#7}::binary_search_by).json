{
  "name": "indexmap::set::{impl#7}::binary_search_by",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:124:1:124:13"
  },
  "visible": true,
  "loc": "src/set.rs:932:5:937:6",
  "doc": "/// Search over a sorted set with a comparator function.\n///\n/// Returns the position where that value is present, or the position where it can be inserted\n/// to maintain the sort. See [`slice::binary_search_by`] for more details.\n///\n/// Computes in **O(log(n))** time.\n",
  "code": [
    "pub fn binary_search_by<'a, F>(&'a self, f: F) -> Result<usize, usize>",
    "where",
    "    F: FnMut(&'a T) -> Ordering,",
    "{",
    "    self.as_slice().binary_search_by(f)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}