{
  "name": "indexmap::util::try_simplify_range",
  "mod_info": {
    "name": "util",
    "loc": "src/lib.rs:121:1:121:10"
  },
  "visible": true,
  "loc": "src/util.rs:38:1:58:2",
  "doc": "",
  "code": [
    "pub(crate) fn try_simplify_range<R>(range: R, len: usize) -> Option<Range<usize>>",
    "where",
    "    R: RangeBounds<usize>,",
    "{",
    "    let start = match range.start_bound() {",
    "        Bound::Unbounded => 0,",
    "        Bound::Included(&i) if i <= len => i,",
    "        Bound::Excluded(&i) if i < len => i + 1,",
    "        _ => return None,",
    "    };",
    "    let end = match range.end_bound() {",
    "        Bound::Unbounded => len,",
    "        Bound::Excluded(&i) if i <= len => i,",
    "        Bound::Included(&i) if i < len => i + 1,",
    "        _ => return None,",
    "    };",
    "    if start > end {",
    "        return None;",
    "    }",
    "    Some(start..end)",
    "}"
  ],
  "size": {
    "chain": 30,
    "contra": 0,
    "min_set": 9
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "false",
          "line": 43,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches _",
          "norm": null,
          "value": "true",
          "line": 46,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "false",
          "line": 44,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "false",
          "line": 45,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "false",
          "line": 50,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches _",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "false",
          "line": 51,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "false",
          "line": 49,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        17,
        20,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        17,
        20,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 50,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        18,
        21,
        22,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 50,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        18,
        21,
        22,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 50,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        18,
        21,
        23,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 51,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        19,
        24,
        25,
        27,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 51,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        19,
        24,
        25,
        27,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 51,
          "bound": "i == len"
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        6,
        14,
        15,
        19,
        24,
        26,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "false",
          "line": 50,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches _",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "false",
          "line": 51,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "false",
          "line": 49,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        17,
        20,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        17,
        20,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 50,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        18,
        21,
        22,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 50,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        18,
        21,
        22,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 50,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        18,
        21,
        23,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 51,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        19,
        24,
        25,
        27,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 51,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        19,
        24,
        25,
        27,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 45,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 51,
          "bound": "i == len"
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        10,
        11,
        13,
        14,
        15,
        19,
        24,
        26,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 45,
          "bound": "i == len"
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        10,
        12,
        2,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "false",
          "line": 50,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches _",
          "norm": null,
          "value": "true",
          "line": 52,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "false",
          "line": 51,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "false",
          "line": 49,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        17,
        20,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        17,
        20,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 50,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        18,
        21,
        22,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 50,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        18,
        21,
        22,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 50,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        18,
        21,
        23,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 51,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        19,
        24,
        25,
        27,
        28,
        29,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 51,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 54,
          "bound": "start == end"
        }
      ],
      "ret": "Some(start..end)",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        19,
        24,
        25,
        27,
        28,
        30,
        33
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 48,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 51,
          "bound": "i == len"
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        7,
        8,
        14,
        15,
        19,
        24,
        26,
        16,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 42,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 44,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        7,
        9,
        2,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}