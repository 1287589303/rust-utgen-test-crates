{
  "name": "indexmap::map::core::entry::{impl#3}::move_index",
  "mod_info": {
    "name": "map::core::entry",
    "loc": "src/map/core.rs:10:1:10:11"
  },
  "visible": true,
  "loc": "src/map/core/entry.rs:298:5:301:6",
  "doc": "/// Moves the position of the entry to a new index\n/// by shifting all other entries in-between.\n///\n/// This is equivalent to [`IndexMap::move_index`][`crate::IndexMap::move_index`]\n/// coming `from` the current [`.index()`][Self::index].\n///\n/// * If `self.index() < to`, the other pairs will shift down while the targeted pair moves up.\n/// * If `self.index() > to`, the other pairs will shift up while the targeted pair moves down.\n///\n/// ***Panics*** if `to` is out of bounds.\n///\n/// Computes in **O(n)** time (average).\n",
  "code": [
    "pub fn move_index(self, to: usize) {",
    "    let index = self.index();",
    "    self.into_ref_mut().move_index(index, to);",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}