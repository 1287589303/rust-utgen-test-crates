{
  "name": "indexmap::map::{impl#13}::from",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:1523:5:1525:6",
  "doc": "/// # Examples\n///\n/// ```\n/// use indexmap::IndexMap;\n///\n/// let map1 = IndexMap::from([(1, 2), (3, 4)]);\n/// let map2: IndexMap<_, _> = [(1, 2), (3, 4)].into();\n/// assert_eq!(map1, map2);\n/// ```\n",
  "code": [
    "fn from(arr: [(K, V); N]) -> Self {",
    "    Self::from_iter(arr)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}