{
  "name": "indexmap::map::core::{impl#2}::split_off",
  "mod_info": {
    "name": "map::core",
    "loc": "src/map.rs:4:1:4:10"
  },
  "visible": true,
  "loc": "src/map/core.rs:210:5:223:6",
  "doc": "",
  "code": [
    "pub(crate) fn split_off(&mut self, at: usize) -> Self {",
    "    let len = self.entries.len();",
    "    assert!(",
    "        at <= len,",
    "        \"index out of bounds: the len is {len} but the index is {at}. Expected index <= len\"",
    "    );",
    "",
    "    self.erase_indices(at, self.entries.len());",
    "    let entries = self.entries.split_off(at);",
    "",
    "    let mut indices = Indices::with_capacity(entries.len());",
    "    insert_bulk_no_grow(&mut indices, &entries);",
    "    Self { indices, entries }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "at <= len",
          "norm": null,
          "value": "true",
          "line": 213,
          "bound": "at == len"
        }
      ],
      "ret": "Self { indices, entries }",
      "path": [
        0,
        1,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "at <= len",
          "norm": null,
          "value": "false",
          "line": 213,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        21
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}