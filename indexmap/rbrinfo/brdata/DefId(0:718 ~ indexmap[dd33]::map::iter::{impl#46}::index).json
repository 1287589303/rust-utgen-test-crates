{
  "name": "indexmap::map::iter::{impl#46}::index",
  "mod_info": {
    "name": "map::iter",
    "loc": "src/map.rs:5:1:5:10"
  },
  "visible": true,
  "loc": "src/map/iter.rs:441:5:443:6",
  "doc": "/// Returns a reference to the key at the supplied `index`.\n///\n/// ***Panics*** if `index` is out of bounds.\n",
  "code": [
    "fn index(&self, index: usize) -> &K {",
    "    &self.iter.as_slice()[index].key",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "&self.iter.as_slice()[index].key",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}