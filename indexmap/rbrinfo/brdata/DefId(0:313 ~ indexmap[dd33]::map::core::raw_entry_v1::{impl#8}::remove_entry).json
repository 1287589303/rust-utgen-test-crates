{
  "name": "indexmap::map::core::raw_entry_v1::{impl#8}::remove_entry",
  "mod_info": {
    "name": "map::core::raw_entry_v1",
    "loc": "src/map/core.rs:12:1:12:22"
  },
  "visible": true,
  "loc": "src/map/core/raw_entry_v1.rs:529:5:531:6",
  "doc": "/// Remove and return the key, value pair stored in the map for this entry\n///\n/// **NOTE:** This is equivalent to [`.swap_remove_entry()`][Self::swap_remove_entry],\n/// replacing this entry's position with the last element, and it is deprecated in favor of\n/// calling that explicitly. If you need to preserve the relative order of the keys in the map,\n/// use [`.shift_remove_entry()`][Self::shift_remove_entry] instead.\n",
  "code": [
    "pub fn remove_entry(self) -> (K, V) {",
    "    self.swap_remove_entry()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}