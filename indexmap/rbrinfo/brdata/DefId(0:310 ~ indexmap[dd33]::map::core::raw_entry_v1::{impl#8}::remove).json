{
  "name": "indexmap::map::core::raw_entry_v1::{impl#8}::remove",
  "mod_info": {
    "name": "map::core::raw_entry_v1",
    "loc": "src/map/core.rs:12:1:12:22"
  },
  "visible": true,
  "loc": "src/map/core/raw_entry_v1.rs:495:5:497:6",
  "doc": "/// Remove the key, value pair stored in the map for this entry, and return the value.\n///\n/// **NOTE:** This is equivalent to [`.swap_remove()`][Self::swap_remove], replacing this\n/// entry's position with the last element, and it is deprecated in favor of calling that\n/// explicitly. If you need to preserve the relative order of the keys in the map, use\n/// [`.shift_remove()`][Self::shift_remove] instead.\n",
  "code": [
    "pub fn remove(self) -> V {",
    "    self.swap_remove()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}