{
  "name": "indexmap::map::core::{impl#2}::get_index_of",
  "mod_info": {
    "name": "map::core",
    "loc": "src/map.rs:4:1:4:10"
  },
  "visible": true,
  "loc": "src/map/core.rs:319:5:325:6",
  "doc": "/// Return the index in `entries` where an equivalent key can be found\n",
  "code": [
    "pub(crate) fn get_index_of<Q>(&self, hash: HashValue, key: &Q) -> Option<usize>",
    "where",
    "    Q: ?Sized + Equivalent<K>,",
    "{",
    "    let eq = equivalent(key, &self.entries);",
    "    self.indices.find(hash.get(), eq).copied()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}