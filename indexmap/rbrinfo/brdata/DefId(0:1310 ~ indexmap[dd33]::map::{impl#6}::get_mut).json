{
  "name": "indexmap::map::{impl#6}::get_mut",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:769:5:779:6",
  "doc": "",
  "code": [
    "pub fn get_mut<Q>(&mut self, key: &Q) -> Option<&mut V>",
    "where",
    "    Q: ?Sized + Hash + Equivalent<K>,",
    "{",
    "    if let Some(i) = self.get_index_of(key) {",
    "        let entry = &mut self.as_entries_mut()[i];",
    "        Some(&mut entry.value)",
    "    } else {",
    "        None",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(i) = self.get_index_of(key)",
          "norm": null,
          "value": "true",
          "line": 773,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(i) = self.get_index_of(key)",
          "norm": null,
          "value": "true",
          "line": 773,
          "bound": null
        }
      ],
      "ret": "Some(&mut entry.value)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}