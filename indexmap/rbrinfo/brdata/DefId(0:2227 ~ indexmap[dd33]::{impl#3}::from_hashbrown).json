{
  "name": "indexmap::{impl#3}::from_hashbrown",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:2:1:271:46"
  },
  "visible": true,
  "loc": "src/lib.rs:239:5:250:6",
  "doc": "",
  "code": [
    "fn from_hashbrown(error: hashbrown::TryReserveError) -> Self {",
    "    Self {",
    "        kind: match error {",
    "            hashbrown::TryReserveError::CapacityOverflow => {",
    "                TryReserveErrorKind::CapacityOverflow",
    "            }",
    "            hashbrown::TryReserveError::AllocError { layout } => {",
    "                TryReserveErrorKind::AllocError { layout }",
    "            }",
    "        },",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "error matches hashbrown::TryReserveError::AllocError { layout }",
          "norm": null,
          "value": "true",
          "line": 241,
          "bound": null
        }
      ],
      "ret": "Self {\n            kind: match error {\n                hashbrown::TryReserveError::CapacityOverflow => {\n                    TryReserveErrorKind::CapacityOverflow\n                }\n                hashbrown::TryReserveError::AllocError { layout } => {\n                    TryReserveErrorKind::AllocError { layout }\n                }\n            },\n        }",
      "path": [
        0,
        3,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "error matches hashbrown::TryReserveError::CapacityOverflow",
          "norm": null,
          "value": "true",
          "line": 241,
          "bound": null
        },
        {
          "cond": "error matches hashbrown::TryReserveError::CapacityOverflow",
          "norm": null,
          "value": "true",
          "line": 241,
          "bound": null
        }
      ],
      "ret": "Self {\n            kind: match error {\n                hashbrown::TryReserveError::CapacityOverflow => {\n                    TryReserveErrorKind::CapacityOverflow\n                }\n                hashbrown::TryReserveError::AllocError { layout } => {\n                    TryReserveErrorKind::AllocError { layout }\n                }\n            },\n        }",
      "path": [
        0,
        2,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}