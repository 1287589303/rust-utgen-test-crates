{
  "name": "indexmap::map::core::entry::{impl#3}::shift_remove",
  "mod_info": {
    "name": "map::core::entry",
    "loc": "src/map/core.rs:10:1:10:11"
  },
  "visible": true,
  "loc": "src/map/core/entry.rs:245:5:247:6",
  "doc": "/// Remove the key, value pair stored in the map for this entry, and return the value.\n///\n/// Like [`Vec::remove`][crate::Vec::remove], the pair is removed by shifting all of the\n/// elements that follow it, preserving their relative order.\n/// **This perturbs the index of all of those elements!**\n///\n/// Computes in **O(n)** time (average).\n",
  "code": [
    "pub fn shift_remove(self) -> V {",
    "    self.shift_remove_entry().1",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.shift_remove_entry().1",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}