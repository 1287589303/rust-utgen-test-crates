{
  "name": "indexmap::util::slice_eq",
  "mod_info": {
    "name": "util",
    "loc": "src/lib.rs:121:1:121:10"
  },
  "visible": true,
  "loc": "src/util.rs:62:1:78:2",
  "doc": "",
  "code": [
    "pub(crate) fn slice_eq<T, U>(left: &[T], right: &[U], eq: impl Fn(&T, &U) -> bool) -> bool {",
    "    if left.len() != right.len() {",
    "        return false;",
    "    }",
    "",
    "    // Implemented as explicit indexing rather",
    "    // than zipped iterators for performance reasons.",
    "    // See PR https://github.com/rust-lang/rust/pull/116846",
    "    for i in 0..left.len() {",
    "        // bound checks are optimized away",
    "        if !eq(&left[i], &right[i]) {",
    "            return false;",
    "        }",
    "    }",
    "",
    "    true",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 1,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "left.len() != right.len()",
          "norm": null,
          "value": "true",
          "line": 63,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        2,
        3,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "left.len() != right.len()",
          "norm": null,
          "value": "false",
          "line": 63,
          "bound": null
        },
        {
          "cond": "i in 0..left.len()",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        },
        {
          "cond": "eq(&left[i], &right[i])",
          "norm": null,
          "value": "true",
          "line": 72,
          "bound": null
        },
        {
          "cond": "i in 0..left.len()",
          "norm": null,
          "value": "false",
          "line": 70,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        12,
        14,
        15,
        16,
        17,
        7,
        8,
        9,
        11,
        13,
        20
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "left.len() != right.len()",
          "norm": null,
          "value": "false",
          "line": 63,
          "bound": null
        },
        {
          "cond": "i in 0..left.len()",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        },
        {
          "cond": "eq(&left[i], &right[i])",
          "norm": null,
          "value": "false",
          "line": 72,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        12,
        14,
        15,
        16,
        18,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "left.len() != right.len()",
          "norm": null,
          "value": "false",
          "line": 63,
          "bound": null
        },
        {
          "cond": "i in 0..left.len()",
          "norm": null,
          "value": "false",
          "line": 70,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        8,
        9,
        11,
        13,
        20
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}