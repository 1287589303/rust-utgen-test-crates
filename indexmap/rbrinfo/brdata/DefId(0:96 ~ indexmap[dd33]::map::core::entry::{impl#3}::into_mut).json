{
  "name": "indexmap::map::core::entry::{impl#3}::into_mut",
  "mod_info": {
    "name": "map::core::entry",
    "loc": "src/map/core.rs:10:1:10:11"
  },
  "visible": true,
  "loc": "src/map/core/entry.rs:200:5:203:6",
  "doc": "/// Converts into a mutable reference to the entry's value in the map,\n/// with a lifetime bound to the map itself.\n",
  "code": [
    "pub fn into_mut(self) -> &'a mut V {",
    "    let index = self.index();",
    "    &mut self.entries[index].value",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "&mut self.entries[index].value",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}