{
  "name": "indexmap::map::core::{impl#2}::try_reserve",
  "mod_info": {
    "name": "map::core",
    "loc": "src/map.rs:4:1:4:10"
  },
  "visible": true,
  "loc": "src/map/core.rs:264:5:274:6",
  "doc": "/// Try to reserve capacity for `additional` more key-value pairs.\n",
  "code": [
    "pub(crate) fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {",
    "    self.indices",
    "        .try_reserve(additional, get_hash(&self.entries))",
    "        .map_err(TryReserveError::from_hashbrown)?;",
    "    // Only grow entries if necessary, since we also round up capacity.",
    "    if additional > self.entries.capacity() - self.entries.len() {",
    "        self.try_reserve_entries(additional)",
    "    } else {",
    "        Ok(())",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.indices\n            .try_reserve(additional, get_hash(&self.entries))\n            .map_err(TryReserveError::from_hashbrown)?",
          "norm": null,
          "value": "Err/None",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        10,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.indices\n            .try_reserve(additional, get_hash(&self.entries))\n            .map_err(TryReserveError::from_hashbrown)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 265,
          "bound": null
        },
        {
          "cond": "additional > self.entries.capacity() - self.entries.len()",
          "norm": null,
          "value": "true",
          "line": 269,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        11,
        12,
        13,
        14,
        15,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.indices\n            .try_reserve(additional, get_hash(&self.entries))\n            .map_err(TryReserveError::from_hashbrown)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 265,
          "bound": null
        },
        {
          "cond": "additional > self.entries.capacity() - self.entries.len()",
          "norm": null,
          "value": "false",
          "line": 269,
          "bound": "additional == self.entries.capacity() - self.entries.len()"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        11,
        12,
        13,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}