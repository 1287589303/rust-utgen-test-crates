{
  "name": "indexmap::map::core::entry::{impl#6}::insert_entry",
  "mod_info": {
    "name": "map::core::entry",
    "loc": "src/map/core.rs:10:1:10:11"
  },
  "visible": true,
  "loc": "src/map/core/entry.rs:381:5:384:6",
  "doc": "/// Inserts the entry's key and the given value into the map, and returns an `OccupiedEntry`.\n///\n/// Computes in **O(1)** time (amortized average).\n",
  "code": [
    "pub fn insert_entry(self, value: V) -> OccupiedEntry<'a, K, V> {",
    "    let Self { map, hash, key } = self;",
    "    map.insert_unique(hash, key, value)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}