{
  "name": "indexmap::map::{impl#4}::with_capacity_and_hasher",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:186:5:195:6",
  "doc": "/// Create a new map with capacity for `n` key-value pairs. (Does not\n/// allocate if `n` is zero.)\n///\n/// Computes in **O(n)** time.\n",
  "code": [
    "pub fn with_capacity_and_hasher(n: usize, hash_builder: S) -> Self {",
    "    if n == 0 {",
    "        Self::with_hasher(hash_builder)",
    "    } else {",
    "        IndexMap {",
    "            core: IndexMapCore::with_capacity(n),",
    "            hash_builder,",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "n == 0",
          "norm": "0 == n",
          "value": "false",
          "line": 187,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "n == 0",
          "norm": "0 == n",
          "value": "true",
          "line": 187,
          "bound": null
        }
      ],
      "ret": "IndexMap {\n                core: IndexMapCore::with_capacity(n),\n                hash_builder,\n            }",
      "path": [
        0,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}