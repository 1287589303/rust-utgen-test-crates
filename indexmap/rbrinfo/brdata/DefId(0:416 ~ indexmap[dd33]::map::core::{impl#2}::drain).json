{
  "name": "indexmap::map::core::{impl#2}::drain",
  "mod_info": {
    "name": "map::core",
    "loc": "src/map.rs:4:1:4:10"
  },
  "visible": true,
  "loc": "src/map/core.rs:187:5:194:6",
  "doc": "",
  "code": [
    "pub(crate) fn drain<R>(&mut self, range: R) -> vec::Drain<'_, Bucket<K, V>>",
    "where",
    "    R: RangeBounds<usize>,",
    "{",
    "    let range = simplify_range(range, self.entries.len());",
    "    self.erase_indices(range.start, range.end);",
    "    self.entries.drain(range)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}