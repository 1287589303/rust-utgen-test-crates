{
  "name": "indexmap::map::core::entry::{impl#0}::entry",
  "mod_info": {
    "name": "map::core::entry",
    "loc": "src/map/core.rs:10:1:10:11"
  },
  "visible": true,
  "loc": "src/map/core/entry.rs:7:5:21:6",
  "doc": "",
  "code": [
    "pub(crate) fn entry(&mut self, hash: HashValue, key: K) -> Entry<'_, K, V>",
    "where",
    "    K: Eq,",
    "{",
    "    let entries = &mut self.entries;",
    "    let eq = equivalent(&key, entries);",
    "    match self.indices.find_entry(hash.get(), eq) {",
    "        Ok(index) => Entry::Occupied(OccupiedEntry { entries, index }),",
    "        Err(absent) => Entry::Vacant(VacantEntry {",
    "            map: RefMut::new(absent.into_table(), entries),",
    "            hash,",
    "            key,",
    "        }),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.indices.find_entry(hash.get(), eq) matches Err(absent)",
          "norm": null,
          "value": "true",
          "line": 13,
          "bound": null
        }
      ],
      "ret": "Entry::Vacant(VacantEntry {\n                map: RefMut::new(absent.into_table(), entries),\n                hash,\n                key,\n            })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.indices.find_entry(hash.get(), eq) matches Ok(index)",
          "norm": null,
          "value": "true",
          "line": 13,
          "bound": null
        },
        {
          "cond": "self.indices.find_entry(hash.get(), eq) matches Ok(index)",
          "norm": null,
          "value": "true",
          "line": 13,
          "bound": null
        }
      ],
      "ret": "Entry::Occupied(OccupiedEntry { entries, index })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}