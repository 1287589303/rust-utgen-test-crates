{
  "name": "indexmap::set::{impl#6}::take",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:124:1:124:13"
  },
  "visible": true,
  "loc": "src/set.rs:730:5:735:6",
  "doc": "/// Removes and returns the value in the set, if any, that is equal to the\n/// given one.\n///\n/// **NOTE:** This is equivalent to [`.swap_take(value)`][Self::swap_take], replacing this\n/// value's position with the last element, and it is deprecated in favor of calling that\n/// explicitly. If you need to preserve the relative order of the values in the set, use\n/// [`.shift_take(value)`][Self::shift_take] instead.\n",
  "code": [
    "pub fn take<Q>(&mut self, value: &Q) -> Option<T>",
    "where",
    "    Q: ?Sized + Hash + Equivalent<T>,",
    "{",
    "    self.swap_take(value)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}