{
  "name": "indexmap::map::mutable::{impl#1}::key_mut",
  "mod_info": {
    "name": "map::mutable",
    "loc": "src/map.rs:6:1:6:13"
  },
  "visible": true,
  "loc": "src/map/mutable.rs:120:5:125:6",
  "doc": "",
  "code": [
    "fn key_mut(&mut self) -> &mut Self::Key {",
    "    match self {",
    "        Entry::Occupied(e) => e.key_mut(),",
    "        Entry::Vacant(e) => e.key_mut(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Entry::Vacant(e)",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        }
      ],
      "ret": "match self {\n            Entry::Occupied(e) => e.key_mut(),\n            Entry::Vacant(e) => e.key_mut(),\n        }",
      "path": [
        0,
        3,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Entry::Occupied(e)",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        },
        {
          "cond": "self matches Entry::Occupied(e)",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        }
      ],
      "ret": "match self {\n            Entry::Occupied(e) => e.key_mut(),\n            Entry::Vacant(e) => e.key_mut(),\n        }",
      "path": [
        0,
        2,
        4,
        5,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}