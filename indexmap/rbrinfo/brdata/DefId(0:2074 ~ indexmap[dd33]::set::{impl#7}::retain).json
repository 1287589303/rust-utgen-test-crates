{
  "name": "indexmap::set::{impl#7}::retain",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:124:1:124:13"
  },
  "visible": true,
  "loc": "src/set.rs:818:5:823:6",
  "doc": "/// Scan through each value in the set and keep those where the\n/// closure `keep` returns `true`.\n///\n/// The elements are visited in order, and remaining elements keep their\n/// order.\n///\n/// Computes in **O(n)** time (average).\n",
  "code": [
    "pub fn retain<F>(&mut self, mut keep: F)",
    "where",
    "    F: FnMut(&T) -> bool,",
    "{",
    "    self.map.retain(move |x, &mut ()| keep(x))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}