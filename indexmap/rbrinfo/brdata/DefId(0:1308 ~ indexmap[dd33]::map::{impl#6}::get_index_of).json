{
  "name": "indexmap::map::{impl#6}::get_index_of",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:755:5:767:6",
  "doc": "/// Return item index, if it exists in the map\n///\n/// Computes in **O(1)** time (average).\n",
  "code": [
    "pub fn get_index_of<Q>(&self, key: &Q) -> Option<usize>",
    "where",
    "    Q: ?Sized + Hash + Equivalent<K>,",
    "{",
    "    match self.as_entries() {",
    "        [] => None,",
    "        [x] => key.equivalent(&x.key).then_some(0),",
    "        _ => {",
    "            let hash = self.hash(key);",
    "            self.core.get_index_of(hash, key)",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.as_entries() matches []",
          "norm": null,
          "value": "true",
          "line": 760,
          "bound": null
        },
        {
          "cond": "self.as_entries() matches []",
          "norm": null,
          "value": "true",
          "line": 759,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        6,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.as_entries() matches []",
          "norm": null,
          "value": "false",
          "line": 760,
          "bound": null
        },
        {
          "cond": "self.as_entries() matches [x]",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.as_entries() matches [x]",
          "norm": null,
          "value": "true",
          "line": 759,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        7,
        8,
        9,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.as_entries() matches []",
          "norm": null,
          "value": "false",
          "line": 760,
          "bound": null
        },
        {
          "cond": "self.as_entries() matches [x]",
          "norm": null,
          "value": "false",
          "line": 761,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        2,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}