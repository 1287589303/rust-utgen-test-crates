{
  "name": "indexmap::map::{impl#7}::partition_point",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:1134:5:1139:6",
  "doc": "/// Returns the index of the partition point of a sorted map according to the given predicate\n/// (the index of the first element of the second partition).\n///\n/// See [`slice::partition_point`] for more details.\n///\n/// Computes in **O(log(n))** time.\n",
  "code": [
    "pub fn partition_point<P>(&self, pred: P) -> usize",
    "where",
    "    P: FnMut(&K, &V) -> bool,",
    "{",
    "    self.as_slice().partition_point(pred)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}