{
  "name": "indexmap::util::simplify_range",
  "mod_info": {
    "name": "util",
    "loc": "src/lib.rs:121:1:121:10"
  },
  "visible": true,
  "loc": "src/util.rs:8:1:36:2",
  "doc": "",
  "code": [
    "pub(crate) fn simplify_range<R>(range: R, len: usize) -> Range<usize>",
    "where",
    "    R: RangeBounds<usize>,",
    "{",
    "    let start = match range.start_bound() {",
    "        Bound::Unbounded => 0,",
    "        Bound::Included(&i) if i <= len => i,",
    "        Bound::Excluded(&i) if i < len => i + 1,",
    "        Bound::Included(i) | Bound::Excluded(i) => {",
    "            panic!(\"range start index {i} out of range for slice of length {len}\")",
    "        }",
    "    };",
    "    let end = match range.end_bound() {",
    "        Bound::Unbounded => len,",
    "        Bound::Excluded(&i) if i <= len => i,",
    "        Bound::Included(&i) if i < len => i + 1,",
    "        Bound::Included(i) | Bound::Excluded(i) => {",
    "            panic!(\"range end index {i} out of range for slice of length {len}\")",
    "        }",
    "    };",
    "    if start > end {",
    "        panic!(",
    "            \"range start index {:?} should be <= range end index {:?}\",",
    "            range.start_bound(),",
    "            range.end_bound()",
    "        );",
    "    }",
    "    start..end",
    "}"
  ],
  "size": {
    "chain": 26,
    "contra": 0,
    "min_set": 7
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        24,
        29,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        24,
        29,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 22,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        25,
        30,
        31,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 22,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        25,
        30,
        31,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 22,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        25,
        30,
        32,
        26,
        37,
        39,
        40,
        41,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 23,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        27,
        33,
        34,
        36,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 23,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        27,
        33,
        34,
        36,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 23,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        8,
        21,
        22,
        27,
        33,
        35,
        28,
        38,
        37,
        39,
        40,
        41,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        24,
        29,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        24,
        29,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 22,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        25,
        30,
        31,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 22,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        25,
        30,
        31,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 22,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        25,
        30,
        32,
        26,
        37,
        39,
        40,
        41,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 23,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        27,
        33,
        34,
        36,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 23,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        27,
        33,
        34,
        36,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 23,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        12,
        13,
        15,
        21,
        22,
        27,
        33,
        35,
        28,
        38,
        37,
        39,
        40,
        41,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i) or Bound::Excluded(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 15,
          "bound": "i == len"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        12,
        14,
        7,
        16,
        18,
        19,
        20,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        24,
        29,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Unbounded",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        24,
        29,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 22,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        25,
        30,
        31,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 22,
          "bound": "i == len"
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        25,
        30,
        31,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(i) or Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Excluded(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 22,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        25,
        30,
        32,
        26,
        37,
        39,
        40,
        41,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 23,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        27,
        33,
        34,
        36,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "true",
          "line": 23,
          "bound": null
        },
        {
          "cond": "start > end",
          "norm": "end < start",
          "value": "false",
          "line": 28,
          "bound": "start == end"
        }
      ],
      "ret": "start..end",
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        27,
        33,
        34,
        36,
        42,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i) or Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "range.end_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        },
        {
          "cond": "i < len",
          "norm": null,
          "value": "false",
          "line": 23,
          "bound": "i == len"
        },
        {
          "cond": "range.end_bound() matches Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 20,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        9,
        10,
        21,
        22,
        27,
        33,
        35,
        28,
        38,
        37,
        39,
        40,
        41,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "range.start_bound() matches Bound::Included(&i) or Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(&i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        },
        {
          "cond": "i <= len",
          "norm": null,
          "value": "false",
          "line": 14,
          "bound": null
        },
        {
          "cond": "range.start_bound() matches Bound::Included(i)",
          "norm": null,
          "value": "true",
          "line": 12,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        9,
        11,
        5,
        17,
        16,
        18,
        19,
        20,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}