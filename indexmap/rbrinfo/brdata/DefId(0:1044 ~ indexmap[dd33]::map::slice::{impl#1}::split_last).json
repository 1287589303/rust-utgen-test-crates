{
  "name": "indexmap::map::slice::{impl#1}::split_last",
  "mod_info": {
    "name": "map::slice",
    "loc": "src/map.rs:7:1:7:11"
  },
  "visible": true,
  "loc": "src/map/slice.rs:162:5:168:6",
  "doc": "/// Returns the last key-value pair and the rest of the slice,\n/// or `None` if it is empty.\n",
  "code": [
    "pub fn split_last(&self) -> Option<((&K, &V), &Self)> {",
    "    if let [rest @ .., last] = &self.entries {",
    "        Some((last.refs(), Self::from_slice(rest)))",
    "    } else {",
    "        None",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let [rest @ .., last] = &self.entries",
          "norm": null,
          "value": "true",
          "line": 163,
          "bound": null
        }
      ],
      "ret": "Some((last.refs(), Self::from_slice(rest)))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let [rest @ .., last] = &self.entries",
          "norm": null,
          "value": "false",
          "line": 163,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}