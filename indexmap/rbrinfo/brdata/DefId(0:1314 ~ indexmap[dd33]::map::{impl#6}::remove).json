{
  "name": "indexmap::map::{impl#6}::remove",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:802:5:807:6",
  "doc": "/// Remove the key-value pair equivalent to `key` and return\n/// its value.\n///\n/// **NOTE:** This is equivalent to [`.swap_remove(key)`][Self::swap_remove], replacing this\n/// entry's position with the last element, and it is deprecated in favor of calling that\n/// explicitly. If you need to preserve the relative order of the keys in the map, use\n/// [`.shift_remove(key)`][Self::shift_remove] instead.\n",
  "code": [
    "pub fn remove<Q>(&mut self, key: &Q) -> Option<V>",
    "where",
    "    Q: ?Sized + Hash + Equivalent<K>,",
    "{",
    "    self.swap_remove(key)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}