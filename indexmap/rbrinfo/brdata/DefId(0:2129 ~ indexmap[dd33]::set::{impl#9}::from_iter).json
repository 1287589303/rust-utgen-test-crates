{
  "name": "indexmap::set::{impl#9}::from_iter",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:124:1:124:13"
  },
  "visible": true,
  "loc": "src/set.rs:1123:5:1128:6",
  "doc": "",
  "code": [
    "fn from_iter<I: IntoIterator<Item = T>>(iterable: I) -> Self {",
    "    let iter = iterable.into_iter().map(|x| (x, ()));",
    "    IndexSet {",
    "        map: IndexMap::from_iter(iter),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "IndexSet {\n            map: IndexMap::from_iter(iter),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}