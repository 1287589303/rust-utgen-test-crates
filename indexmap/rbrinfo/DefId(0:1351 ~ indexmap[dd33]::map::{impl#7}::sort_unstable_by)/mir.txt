bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:1047:9-1049:11)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:1047:9-1047:13)
  2: _4 = &mut (*_1)
    SourceInfo(src/map.rs:1047:9-1047:13)
  3: StorageLive(_5)
    SourceInfo(src/map.rs:1047:27-1049:10)
  4: _5 = {closure@src/map.rs:1047:27: 1047:41} { cmp: move _2 }
    SourceInfo(src/map.rs:1047:27-1049:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:1047:9-1049:11)
      kind: _3 = <map::IndexMap<K, V, S> as Entries>::with_entries::<{closure@src/map.rs:1047:27: 1047:41}>(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map.rs:1049:10-1049:11)
  1: StorageDead(_4)
    SourceInfo(src/map.rs:1049:10-1049:11)
  2: StorageDead(_3)
    SourceInfo(src/map.rs:1049:11-1049:12)
  3: _0 = const ()
    SourceInfo(src/map.rs:1046:5-1050:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:1050:5-1050:6)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(src/map.rs:1050:6-1050:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:1049:10-1049:11)
      kind: drop(_5) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/map.rs:1050:5-1050:6)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:1043:5-1050:6)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

