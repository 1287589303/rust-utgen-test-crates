bb0
  0: StorageLive(_2)
    SourceInfo(src/map/slice.rs:39:32-39:67)
  1: StorageLive(_3)
    SourceInfo(src/map/slice.rs:39:32-39:54)
  2: StorageLive(_4)
    SourceInfo(src/map/slice.rs:39:46-39:53)
  3: _4 = move _1
    SourceInfo(src/map/slice.rs:39:46-39:53)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:39:32-39:54)
      kind: _3 = alloc::boxed::Box::<[Bucket<K, V>]>::into_raw(move _4) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_4)
    SourceInfo(src/map/slice.rs:39:53-39:54)
  1: _2 = move _3 as *mut map::slice::Slice<K, V> (PtrToPtr)
    SourceInfo(src/map/slice.rs:39:32-39:67)
  2: StorageDead(_3)
    SourceInfo(src/map/slice.rs:39:66-39:67)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:39:18-39:68)
      kind: _0 = alloc::boxed::Box::<map::slice::Slice<K, V>>::from_raw(move _2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_2)
    SourceInfo(src/map/slice.rs:39:67-39:68)
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:40:5-40:6)
      kind: drop(_1) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:40:6-40:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:39:53-39:54)
      kind: drop(_4) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:40:5-40:6)
      kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map/slice.rs:38:5-40:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

