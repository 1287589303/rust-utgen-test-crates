bb0
  0: StorageLive(_2)
    SourceInfo(src/map/iter.rs:695:17-695:43)
  1: StorageLive(_3)
    SourceInfo(src/map/iter.rs:695:17-695:27)
  2: _3 = &mut ((*_1).2: alloc::vec::IntoIter<Bucket<K, V>>)
    SourceInfo(src/map/iter.rs:695:17-695:27)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:695:17-695:43)
      kind: _2 = <alloc::vec::IntoIter<Bucket<K, V>> as core::iter::Iterator>::nth(move _3, const core::num::<impl usize>::MAX) -> [return: bb1, unwind: bb33]
  }
  preds []
  succs [bb1, bb33]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map/iter.rs:695:42-695:43)
  1: PlaceMention(_2)
    SourceInfo(src/map/iter.rs:695:17-695:43)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:695:43-695:44)
      kind: drop(_2) -> [return: bb2, unwind: bb33]
  }
  preds [bb0]
  succs [bb2, bb33]

bb2
  0: StorageDead(_2)
    SourceInfo(src/map/iter.rs:695:43-695:44)
  1: StorageLive(_4)
    SourceInfo(src/map/iter.rs:699:9-708:10)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:699:9-708:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:699:9-708:10)
      kind: falseUnwind -> [real: bb4, unwind: bb33]
  }
  preds [bb2, bb24]
  succs [bb4, bb33]

bb4
  0: StorageLive(_6)
    SourceInfo(src/map/iter.rs:699:40-699:64)
  1: StorageLive(_7)
    SourceInfo(src/map/iter.rs:699:40-699:57)
  2: _7 = &mut ((*_1).3: I)
    SourceInfo(src/map/iter.rs:699:40-699:57)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:699:40-699:64)
      kind: _6 = <I as core::iter::Iterator>::next(move _7) -> [return: bb5, unwind: bb33]
  }
  preds [bb3]
  succs [bb5, bb33]

bb5
  0: StorageDead(_7)
    SourceInfo(src/map/iter.rs:699:63-699:64)
  1: PlaceMention(_6)
    SourceInfo(src/map/iter.rs:699:40-699:64)
  2: _8 = discriminant(_6)
    SourceInfo(src/map/iter.rs:699:40-699:64)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:699:19-699:37)
      kind: switchInt(move _8) -> [1: bb6, otherwise: bb21]
  }
  preds [bb4]
  succs [bb6, bb21]

bb6
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:699:19-699:37)
      kind: falseEdge -> [real: bb7, imaginary: bb21]
  }
  preds [bb5]
  succs [bb7, bb21]

bb7
  0: StorageLive(_9)
    SourceInfo(src/map/iter.rs:699:25-699:28)
  1: _9 = move (((_6 as Some).0: (K, V)).0: K)
    SourceInfo(src/map/iter.rs:699:25-699:28)
  2: StorageLive(_10)
    SourceInfo(src/map/iter.rs:699:30-699:35)
  3: _10 = move (((_6 as Some).0: (K, V)).1: V)
    SourceInfo(src/map/iter.rs:699:30-699:35)
  4: StorageLive(_11)
    SourceInfo(src/map/iter.rs:702:17-702:21)
  5: StorageLive(_12)
    SourceInfo(src/map/iter.rs:702:24-702:32)
  6: _12 = &(*((*_1).0: &mut map::IndexMap<K, V, S>))
    SourceInfo(src/map/iter.rs:702:24-702:32)
  7: StorageLive(_13)
    SourceInfo(src/map/iter.rs:702:38-702:42)
  8: StorageLive(_14)
    SourceInfo(src/map/iter.rs:702:38-702:42)
  9: _14 = &_9
    SourceInfo(src/map/iter.rs:702:38-702:42)
  10: _13 = &(*_14)
    SourceInfo(src/map/iter.rs:702:38-702:42)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:702:24-702:43)
      kind: _11 = map::IndexMap::<K, V, S>::hash::<K>(move _12, move _13) -> [return: bb8, unwind: bb30]
  }
  preds [bb6]
  succs [bb8, bb30]

bb8
  0: StorageDead(_13)
    SourceInfo(src/map/iter.rs:702:42-702:43)
  1: StorageDead(_12)
    SourceInfo(src/map/iter.rs:702:42-702:43)
  2: FakeRead(ForLet(None), _11)
    SourceInfo(src/map/iter.rs:702:17-702:21)
  3: StorageDead(_14)
    SourceInfo(src/map/iter.rs:702:43-702:44)
  4: StorageLive(_15)
    SourceInfo(src/map/iter.rs:703:30-703:64)
  5: StorageLive(_16)
    SourceInfo(src/map/iter.rs:703:30-703:39)
  6: _16 = &((*_1).1: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map/iter.rs:703:30-703:39)
  7: StorageLive(_17)
    SourceInfo(src/map/iter.rs:703:53-703:57)
  8: _17 = _11
    SourceInfo(src/map/iter.rs:703:53-703:57)
  9: StorageLive(_18)
    SourceInfo(src/map/iter.rs:703:59-703:63)
  10: StorageLive(_19)
    SourceInfo(src/map/iter.rs:703:59-703:63)
  11: _19 = &_9
    SourceInfo(src/map/iter.rs:703:59-703:63)
  12: _18 = &(*_19)
    SourceInfo(src/map/iter.rs:703:59-703:63)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:703:30-703:64)
      kind: _15 = map::core::IndexMapCore::<K, V>::get_index_of::<K>(move _16, move _17, move _18) -> [return: bb9, unwind: bb30]
  }
  preds [bb7]
  succs [bb9, bb30]

bb9
  0: StorageDead(_18)
    SourceInfo(src/map/iter.rs:703:63-703:64)
  1: StorageDead(_17)
    SourceInfo(src/map/iter.rs:703:63-703:64)
  2: StorageDead(_16)
    SourceInfo(src/map/iter.rs:703:63-703:64)
  3: PlaceMention(_15)
    SourceInfo(src/map/iter.rs:703:30-703:64)
  4: _20 = discriminant(_15)
    SourceInfo(src/map/iter.rs:703:30-703:64)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:703:20-703:27)
      kind: switchInt(move _20) -> [1: bb10, otherwise: bb17]
  }
  preds [bb8]
  succs [bb10, bb17]

bb10
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:703:20-703:27)
      kind: falseEdge -> [real: bb11, imaginary: bb17]
  }
  preds [bb9]
  succs [bb11, bb17]

bb11
  0: StorageLive(_21)
    SourceInfo(src/map/iter.rs:703:25-703:26)
  1: _21 = ((_15 as Some).0: usize)
    SourceInfo(src/map/iter.rs:703:25-703:26)
  2: StorageLive(_22)
    SourceInfo(src/map/iter.rs:704:55-704:60)
  3: _22 = move _10
    SourceInfo(src/map/iter.rs:704:55-704:60)
  4: StorageLive(_23)
    SourceInfo(src/map/iter.rs:704:17-704:43)
  5: StorageLive(_24)
    SourceInfo(src/map/iter.rs:704:17-704:26)
  6: _24 = &mut ((*_1).1: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map/iter.rs:704:17-704:26)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:704:17-704:43)
      kind: _23 = <map::core::IndexMapCore<K, V> as Entries>::as_entries_mut(move _24) -> [return: bb12, unwind: bb29]
  }
  preds [bb10]
  succs [bb12, bb29]

bb12
  0: StorageDead(_24)
    SourceInfo(src/map/iter.rs:704:42-704:43)
  1: StorageLive(_25)
    SourceInfo(src/map/iter.rs:704:44-704:45)
  2: _25 = _21
    SourceInfo(src/map/iter.rs:704:44-704:45)
  3: _26 = Len((*_23))
    SourceInfo(src/map/iter.rs:704:17-704:46)
  4: _27 = Lt(_25, _26)
    SourceInfo(src/map/iter.rs:704:17-704:46)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:704:17-704:46)
      kind: assert(move _27, "index out of bounds: the length is {} but the index is {}", move _26, _25) -> [success: bb13, unwind: bb29]
  }
  preds [bb11]
  succs [bb13, bb29]

bb13
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:704:17-704:52)
      kind: drop(((*_23)[_25].2: V)) -> [return: bb14, unwind: bb15]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: ((*_23)[_25].2: V) = move _22
    SourceInfo(src/map/iter.rs:704:17-704:52)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:704:59-704:60)
      kind: drop(_22) -> [return: bb16, unwind: bb30]
  }
  preds [bb13]
  succs [bb16, bb30]

bb15
  0: ((*_23)[_25].2: V) = move _22
    SourceInfo(src/map/iter.rs:704:17-704:52)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:704:17-704:52)
      kind: goto -> bb29
  }
  preds [bb13]
  succs [bb29]

bb16
  0: StorageDead(_22)
    SourceInfo(src/map/iter.rs:704:59-704:60)
  1: StorageDead(_25)
    SourceInfo(src/map/iter.rs:704:60-704:61)
  2: StorageDead(_23)
    SourceInfo(src/map/iter.rs:704:60-704:61)
  3: _5 = const ()
    SourceInfo(src/map/iter.rs:703:65-705:14)
  4: StorageDead(_21)
    SourceInfo(src/map/iter.rs:705:13-705:14)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:703:13-707:14)
      kind: goto -> bb20
  }
  preds [bb14]
  succs [bb20]

bb17
  0: StorageLive(_28)
    SourceInfo(src/map/iter.rs:706:17-706:60)
  1: StorageLive(_29)
    SourceInfo(src/map/iter.rs:706:17-706:30)
  2: _29 = &mut ((*((*_1).0: &mut map::IndexMap<K, V, S>)).0: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map/iter.rs:706:17-706:30)
  3: StorageLive(_30)
    SourceInfo(src/map/iter.rs:706:43-706:47)
  4: _30 = _11
    SourceInfo(src/map/iter.rs:706:43-706:47)
  5: StorageLive(_31)
    SourceInfo(src/map/iter.rs:706:49-706:52)
  6: _31 = move _9
    SourceInfo(src/map/iter.rs:706:49-706:52)
  7: StorageLive(_32)
    SourceInfo(src/map/iter.rs:706:54-706:59)
  8: _32 = move _10
    SourceInfo(src/map/iter.rs:706:54-706:59)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:706:17-706:60)
      kind: _28 = map::core::IndexMapCore::<K, V>::insert_full(move _29, move _30, move _31, move _32) -> [return: bb18, unwind: bb27]
  }
  preds [bb9, bb10]
  succs [bb18, bb27]

bb18
  0: StorageDead(_32)
    SourceInfo(src/map/iter.rs:706:59-706:60)
  1: StorageDead(_31)
    SourceInfo(src/map/iter.rs:706:59-706:60)
  2: StorageDead(_30)
    SourceInfo(src/map/iter.rs:706:59-706:60)
  3: StorageDead(_29)
    SourceInfo(src/map/iter.rs:706:59-706:60)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:706:60-706:61)
      kind: drop(_28) -> [return: bb19, unwind: bb30]
  }
  preds [bb17]
  succs [bb19, bb30]

bb19
  0: StorageDead(_28)
    SourceInfo(src/map/iter.rs:706:60-706:61)
  1: _5 = const ()
    SourceInfo(src/map/iter.rs:705:20-707:14)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:703:13-707:14)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  0: StorageDead(_11)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  1: StorageDead(_19)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  2: StorageDead(_15)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:708:9-708:10)
      kind: drop(_10) -> [return: bb22, unwind: bb31]
  }
  preds [bb16, bb19]
  succs [bb22, bb31]

bb21
  0: StorageLive(_34)
    SourceInfo(src/map/iter.rs:699:9-708:10)
  1: _4 = const ()
    SourceInfo(src/map/iter.rs:699:9-708:10)
  2: StorageDead(_34)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:708:9-708:10)
      kind: drop(_6) -> [return: bb25, unwind: bb33]
  }
  preds [bb5, bb6]
  succs [bb25, bb33]

bb22
  0: StorageDead(_10)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:708:9-708:10)
      kind: drop(_9) -> [return: bb23, unwind: bb32]
  }
  preds [bb20]
  succs [bb23, bb32]

bb23
  0: StorageDead(_9)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:708:9-708:10)
      kind: drop(_6) -> [return: bb24, unwind: bb33]
  }
  preds [bb22]
  succs [bb24, bb33]

bb24
  0: StorageDead(_6)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:699:9-708:10)
      kind: goto -> bb3
  }
  preds [bb23]
  succs [bb3]

bb25
  0: StorageDead(_6)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  1: StorageDead(_4)
    SourceInfo(src/map/iter.rs:708:9-708:10)
  2: StorageLive(_36)
    SourceInfo(src/map/iter.rs:711:9-711:55)
  3: StorageLive(_37)
    SourceInfo(src/map/iter.rs:711:9-711:22)
  4: _37 = &mut ((*((*_1).0: &mut map::IndexMap<K, V, S>)).0: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map/iter.rs:711:9-711:22)
  5: StorageLive(_38)
    SourceInfo(src/map/iter.rs:711:40-711:54)
  6: StorageLive(_39)
    SourceInfo(src/map/iter.rs:711:40-711:54)
  7: _39 = &mut ((*_1).1: map::core::IndexMapCore<K, V>)
    SourceInfo(src/map/iter.rs:711:40-711:54)
  8: _38 = &mut (*_39)
    SourceInfo(src/map/iter.rs:711:40-711:54)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:711:9-711:55)
      kind: _36 = map::core::IndexMapCore::<K, V>::append_unchecked(move _37, move _38) -> [return: bb26, unwind: bb33]
  }
  preds [bb21]
  succs [bb26, bb33]

bb26
  0: StorageDead(_38)
    SourceInfo(src/map/iter.rs:711:54-711:55)
  1: StorageDead(_37)
    SourceInfo(src/map/iter.rs:711:54-711:55)
  2: StorageDead(_39)
    SourceInfo(src/map/iter.rs:711:55-711:56)
  3: StorageDead(_36)
    SourceInfo(src/map/iter.rs:711:55-711:56)
  4: _0 = const ()
    SourceInfo(src/map/iter.rs:691:24-712:6)
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:712:6-712:6)
      kind: return
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:706:59-706:60)
      kind: drop(_32) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:706:59-706:60)
      kind: drop(_31) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb27]
  succs [bb30]

bb29
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:704:59-704:60)
      kind: drop(_22) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb11, bb12, bb15]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:708:9-708:10)
      kind: drop(_10) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb7, bb8, bb14, bb18, bb28, bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:708:9-708:10)
      kind: drop(_9) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb20, bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:708:9-708:10)
      kind: drop(_6) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb22, bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(src/map/iter.rs:691:5-712:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb21, bb23, bb25, bb32]
  succs []

