bb0
  0: StorageLive(_2)
    SourceInfo(src/map/core.rs:159:22-159:47)
  1: StorageLive(_3)
    SourceInfo(src/map/core.rs:159:45-159:46)
  2: _3 = _1
    SourceInfo(src/map/core.rs:159:45-159:46)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:159:22-159:47)
      kind: _2 = hashbrown::HashTable::<usize>::with_capacity(move _3) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map/core.rs:159:46-159:47)
  1: StorageLive(_4)
    SourceInfo(src/map/core.rs:160:22-160:43)
  2: StorageLive(_5)
    SourceInfo(src/map/core.rs:160:41-160:42)
  3: _5 = _1
    SourceInfo(src/map/core.rs:160:41-160:42)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:160:22-160:43)
      kind: _4 = alloc::vec::Vec::<Bucket<K, V>>::with_capacity(move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(src/map/core.rs:160:42-160:43)
  1: _0 = map::core::IndexMapCore::<K, V> { indices: move _2, entries: move _4 }
    SourceInfo(src/map/core.rs:158:9-161:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:161:9-161:10)
      kind: drop(_4) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_4)
    SourceInfo(src/map/core.rs:161:9-161:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:161:9-161:10)
      kind: drop(_2) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_2)
    SourceInfo(src/map/core.rs:161:9-161:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:162:6-162:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map/core.rs:161:9-161:10)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map/core.rs:157:5-162:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

