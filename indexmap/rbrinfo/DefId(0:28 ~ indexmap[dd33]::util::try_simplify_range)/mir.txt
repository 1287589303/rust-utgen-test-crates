bb0
  0: StorageLive(_3)
    SourceInfo(src/util.rs:42:9-42:14)
  1: StorageLive(_4)
    SourceInfo(src/util.rs:42:23-42:42)
  2: StorageLive(_5)
    SourceInfo(src/util.rs:42:23-42:28)
  3: _5 = &_1
    SourceInfo(src/util.rs:42:23-42:28)
  Terminator {
      source_info: SourceInfo(src/util.rs:42:23-42:42)
      kind: _4 = <R as core::ops::RangeBounds<usize>>::start_bound(move _5) -> [return: bb1, unwind: bb34]
  }
  preds []
  succs [bb1, bb34]

bb1
  0: StorageDead(_5)
    SourceInfo(src/util.rs:42:41-42:42)
  1: PlaceMention(_4)
    SourceInfo(src/util.rs:42:23-42:42)
  2: _9 = discriminant(_4)
    SourceInfo(src/util.rs:42:23-42:42)
  Terminator {
      source_info: SourceInfo(src/util.rs:42:17-42:42)
      kind: switchInt(move _9) -> [0: bb4, 1: bb5, 2: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5]

bb2
  0: _0 = core::option::Option::<core::ops::Range<usize>>::None
    SourceInfo(src/util.rs:46:21-46:25)
  1: StorageDead(_4)
    SourceInfo(src/util.rs:47:6-47:7)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb1, bb5, bb9, bb12, bb12]
  succs [bb32]

bb3
  Terminator {
      source_info: SourceInfo(src/util.rs:43:9-43:25)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(src/util.rs:44:9-44:28)
      kind: falseEdge -> [real: bb7, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb7]

bb5
  Terminator {
      source_info: SourceInfo(src/util.rs:45:9-45:28)
      kind: falseEdge -> [real: bb10, imaginary: bb2]
  }
  preds [bb1, bb4, bb9]
  succs [bb2, bb10]

bb6
  0: _3 = const 0_usize
    SourceInfo(src/util.rs:43:29-43:30)
  Terminator {
      source_info: SourceInfo(src/util.rs:43:29-43:30)
      kind: goto -> bb14
  }
  preds [bb3]
  succs [bb14]

bb7
  0: StorageLive(_11)
    SourceInfo(src/util.rs:44:26-44:27)
  1: _11 = &(*((_4 as Included).0: &usize))
    SourceInfo(src/util.rs:44:26-44:27)
  2: _6 = &fake shallow _4
    SourceInfo(src/util.rs:42:23-42:42)
  3: _7 = &fake shallow ((_4 as Included).0: &usize)
    SourceInfo(src/util.rs:42:23-42:42)
  4: _8 = &fake shallow ((_4 as Excluded).0: &usize)
    SourceInfo(src/util.rs:42:23-42:42)
  5: StorageLive(_12)
    SourceInfo(src/util.rs:44:32-44:40)
  6: StorageLive(_13)
    SourceInfo(src/util.rs:44:32-44:33)
  7: _13 = (*_11)
    SourceInfo(src/util.rs:44:32-44:33)
  8: StorageLive(_14)
    SourceInfo(src/util.rs:44:37-44:40)
  9: _14 = _2
    SourceInfo(src/util.rs:44:37-44:40)
  10: _12 = Le(move _13, move _14)
    SourceInfo(src/util.rs:44:32-44:40)
  Terminator {
      source_info: SourceInfo(src/util.rs:44:32-44:40)
      kind: switchInt(move _12) -> [0: bb9, otherwise: bb8]
  }
  preds [bb4]
  succs [bb8, bb9]

bb8
  0: StorageDead(_14)
    SourceInfo(src/util.rs:44:39-44:40)
  1: StorageDead(_13)
    SourceInfo(src/util.rs:44:39-44:40)
  2: StorageDead(_12)
    SourceInfo(src/util.rs:44:39-44:40)
  3: FakeRead(ForMatchGuard, _6)
    SourceInfo(src/util.rs:44:39-44:40)
  4: FakeRead(ForMatchGuard, _7)
    SourceInfo(src/util.rs:44:39-44:40)
  5: FakeRead(ForMatchGuard, _8)
    SourceInfo(src/util.rs:44:39-44:40)
  6: FakeRead(ForGuardBinding, _11)
    SourceInfo(src/util.rs:44:39-44:40)
  7: StorageLive(_10)
    SourceInfo(src/util.rs:44:26-44:27)
  8: _10 = (*((_4 as Included).0: &usize))
    SourceInfo(src/util.rs:44:26-44:27)
  9: _3 = _10
    SourceInfo(src/util.rs:44:44-44:45)
  10: StorageDead(_10)
    SourceInfo(src/util.rs:44:44-44:45)
  11: StorageDead(_11)
    SourceInfo(src/util.rs:44:44-44:45)
  Terminator {
      source_info: SourceInfo(src/util.rs:44:44-44:45)
      kind: goto -> bb14
  }
  preds [bb7]
  succs [bb14]

bb9
  0: StorageDead(_14)
    SourceInfo(src/util.rs:44:39-44:40)
  1: StorageDead(_13)
    SourceInfo(src/util.rs:44:39-44:40)
  2: StorageDead(_12)
    SourceInfo(src/util.rs:44:39-44:40)
  3: StorageDead(_11)
    SourceInfo(src/util.rs:44:44-44:45)
  Terminator {
      source_info: SourceInfo(src/util.rs:44:32-44:40)
      kind: falseEdge -> [real: bb2, imaginary: bb5]
  }
  preds [bb7]
  succs [bb2, bb5]

bb10
  0: StorageLive(_16)
    SourceInfo(src/util.rs:45:26-45:27)
  1: _16 = &(*((_4 as Excluded).0: &usize))
    SourceInfo(src/util.rs:45:26-45:27)
  2: _6 = &fake shallow _4
    SourceInfo(src/util.rs:42:23-42:42)
  3: _7 = &fake shallow ((_4 as Included).0: &usize)
    SourceInfo(src/util.rs:42:23-42:42)
  4: _8 = &fake shallow ((_4 as Excluded).0: &usize)
    SourceInfo(src/util.rs:42:23-42:42)
  5: StorageLive(_17)
    SourceInfo(src/util.rs:45:32-45:39)
  6: StorageLive(_18)
    SourceInfo(src/util.rs:45:32-45:33)
  7: _18 = (*_16)
    SourceInfo(src/util.rs:45:32-45:33)
  8: StorageLive(_19)
    SourceInfo(src/util.rs:45:36-45:39)
  9: _19 = _2
    SourceInfo(src/util.rs:45:36-45:39)
  10: _17 = Lt(move _18, move _19)
    SourceInfo(src/util.rs:45:32-45:39)
  Terminator {
      source_info: SourceInfo(src/util.rs:45:32-45:39)
      kind: switchInt(move _17) -> [0: bb12, otherwise: bb11]
  }
  preds [bb5]
  succs [bb11, bb12]

bb11
  0: StorageDead(_19)
    SourceInfo(src/util.rs:45:38-45:39)
  1: StorageDead(_18)
    SourceInfo(src/util.rs:45:38-45:39)
  2: StorageDead(_17)
    SourceInfo(src/util.rs:45:38-45:39)
  3: FakeRead(ForMatchGuard, _6)
    SourceInfo(src/util.rs:45:38-45:39)
  4: FakeRead(ForMatchGuard, _7)
    SourceInfo(src/util.rs:45:38-45:39)
  5: FakeRead(ForMatchGuard, _8)
    SourceInfo(src/util.rs:45:38-45:39)
  6: FakeRead(ForGuardBinding, _16)
    SourceInfo(src/util.rs:45:38-45:39)
  7: StorageLive(_15)
    SourceInfo(src/util.rs:45:26-45:27)
  8: _15 = (*((_4 as Excluded).0: &usize))
    SourceInfo(src/util.rs:45:26-45:27)
  9: StorageLive(_20)
    SourceInfo(src/util.rs:45:43-45:44)
  10: _20 = _15
    SourceInfo(src/util.rs:45:43-45:44)
  11: _21 = AddWithOverflow(_20, const 1_usize)
    SourceInfo(src/util.rs:45:43-45:48)
  Terminator {
      source_info: SourceInfo(src/util.rs:45:43-45:48)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", move _20, const 1_usize) -> [success: bb13, unwind: bb34]
  }
  preds [bb10]
  succs [bb13, bb34]

bb12
  0: StorageDead(_19)
    SourceInfo(src/util.rs:45:38-45:39)
  1: StorageDead(_18)
    SourceInfo(src/util.rs:45:38-45:39)
  2: StorageDead(_17)
    SourceInfo(src/util.rs:45:38-45:39)
  3: StorageDead(_16)
    SourceInfo(src/util.rs:45:47-45:48)
  Terminator {
      source_info: SourceInfo(src/util.rs:45:32-45:39)
      kind: falseEdge -> [real: bb2, imaginary: bb2]
  }
  preds [bb10]
  succs [bb2, bb2]

bb13
  0: _3 = move (_21.0: usize)
    SourceInfo(src/util.rs:45:43-45:48)
  1: StorageDead(_20)
    SourceInfo(src/util.rs:45:47-45:48)
  2: StorageDead(_15)
    SourceInfo(src/util.rs:45:47-45:48)
  3: StorageDead(_16)
    SourceInfo(src/util.rs:45:47-45:48)
  Terminator {
      source_info: SourceInfo(src/util.rs:45:47-45:48)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb14
  0: FakeRead(ForLet(None), _3)
    SourceInfo(src/util.rs:42:9-42:14)
  1: StorageDead(_4)
    SourceInfo(src/util.rs:47:6-47:7)
  2: StorageLive(_23)
    SourceInfo(src/util.rs:48:9-48:12)
  3: StorageLive(_24)
    SourceInfo(src/util.rs:48:21-48:38)
  4: StorageLive(_25)
    SourceInfo(src/util.rs:48:21-48:26)
  5: _25 = &_1
    SourceInfo(src/util.rs:48:21-48:26)
  Terminator {
      source_info: SourceInfo(src/util.rs:48:21-48:38)
      kind: _24 = <R as core::ops::RangeBounds<usize>>::end_bound(move _25) -> [return: bb15, unwind: bb34]
  }
  preds [bb6, bb8, bb13]
  succs [bb15, bb34]

bb15
  0: StorageDead(_25)
    SourceInfo(src/util.rs:48:37-48:38)
  1: PlaceMention(_24)
    SourceInfo(src/util.rs:48:21-48:38)
  2: _29 = discriminant(_24)
    SourceInfo(src/util.rs:48:21-48:38)
  Terminator {
      source_info: SourceInfo(src/util.rs:48:15-48:38)
      kind: switchInt(move _29) -> [0: bb19, 1: bb18, 2: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18, bb19]

bb16
  0: _0 = core::option::Option::<core::ops::Range<usize>>::None
    SourceInfo(src/util.rs:52:21-52:25)
  1: StorageDead(_24)
    SourceInfo(src/util.rs:53:6-53:7)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb31
  }
  preds [bb15, bb19, bb23, bb26, bb26]
  succs [bb31]

bb17
  Terminator {
      source_info: SourceInfo(src/util.rs:49:9-49:25)
      kind: falseEdge -> [real: bb20, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb20]

bb18
  Terminator {
      source_info: SourceInfo(src/util.rs:50:9-50:28)
      kind: falseEdge -> [real: bb21, imaginary: bb19]
  }
  preds [bb15, bb17]
  succs [bb19, bb21]

bb19
  Terminator {
      source_info: SourceInfo(src/util.rs:51:9-51:28)
      kind: falseEdge -> [real: bb24, imaginary: bb16]
  }
  preds [bb15, bb18, bb23]
  succs [bb16, bb24]

bb20
  0: _23 = _2
    SourceInfo(src/util.rs:49:29-49:32)
  Terminator {
      source_info: SourceInfo(src/util.rs:49:29-49:32)
      kind: goto -> bb28
  }
  preds [bb17]
  succs [bb28]

bb21
  0: StorageLive(_31)
    SourceInfo(src/util.rs:50:26-50:27)
  1: _31 = &(*((_24 as Excluded).0: &usize))
    SourceInfo(src/util.rs:50:26-50:27)
  2: _26 = &fake shallow _24
    SourceInfo(src/util.rs:48:21-48:38)
  3: _27 = &fake shallow ((_24 as Excluded).0: &usize)
    SourceInfo(src/util.rs:48:21-48:38)
  4: _28 = &fake shallow ((_24 as Included).0: &usize)
    SourceInfo(src/util.rs:48:21-48:38)
  5: StorageLive(_32)
    SourceInfo(src/util.rs:50:32-50:40)
  6: StorageLive(_33)
    SourceInfo(src/util.rs:50:32-50:33)
  7: _33 = (*_31)
    SourceInfo(src/util.rs:50:32-50:33)
  8: StorageLive(_34)
    SourceInfo(src/util.rs:50:37-50:40)
  9: _34 = _2
    SourceInfo(src/util.rs:50:37-50:40)
  10: _32 = Le(move _33, move _34)
    SourceInfo(src/util.rs:50:32-50:40)
  Terminator {
      source_info: SourceInfo(src/util.rs:50:32-50:40)
      kind: switchInt(move _32) -> [0: bb23, otherwise: bb22]
  }
  preds [bb18]
  succs [bb22, bb23]

bb22
  0: StorageDead(_34)
    SourceInfo(src/util.rs:50:39-50:40)
  1: StorageDead(_33)
    SourceInfo(src/util.rs:50:39-50:40)
  2: StorageDead(_32)
    SourceInfo(src/util.rs:50:39-50:40)
  3: FakeRead(ForMatchGuard, _26)
    SourceInfo(src/util.rs:50:39-50:40)
  4: FakeRead(ForMatchGuard, _27)
    SourceInfo(src/util.rs:50:39-50:40)
  5: FakeRead(ForMatchGuard, _28)
    SourceInfo(src/util.rs:50:39-50:40)
  6: FakeRead(ForGuardBinding, _31)
    SourceInfo(src/util.rs:50:39-50:40)
  7: StorageLive(_30)
    SourceInfo(src/util.rs:50:26-50:27)
  8: _30 = (*((_24 as Excluded).0: &usize))
    SourceInfo(src/util.rs:50:26-50:27)
  9: _23 = _30
    SourceInfo(src/util.rs:50:44-50:45)
  10: StorageDead(_30)
    SourceInfo(src/util.rs:50:44-50:45)
  11: StorageDead(_31)
    SourceInfo(src/util.rs:50:44-50:45)
  Terminator {
      source_info: SourceInfo(src/util.rs:50:44-50:45)
      kind: goto -> bb28
  }
  preds [bb21]
  succs [bb28]

bb23
  0: StorageDead(_34)
    SourceInfo(src/util.rs:50:39-50:40)
  1: StorageDead(_33)
    SourceInfo(src/util.rs:50:39-50:40)
  2: StorageDead(_32)
    SourceInfo(src/util.rs:50:39-50:40)
  3: StorageDead(_31)
    SourceInfo(src/util.rs:50:44-50:45)
  Terminator {
      source_info: SourceInfo(src/util.rs:50:32-50:40)
      kind: falseEdge -> [real: bb16, imaginary: bb19]
  }
  preds [bb21]
  succs [bb16, bb19]

bb24
  0: StorageLive(_36)
    SourceInfo(src/util.rs:51:26-51:27)
  1: _36 = &(*((_24 as Included).0: &usize))
    SourceInfo(src/util.rs:51:26-51:27)
  2: _26 = &fake shallow _24
    SourceInfo(src/util.rs:48:21-48:38)
  3: _27 = &fake shallow ((_24 as Excluded).0: &usize)
    SourceInfo(src/util.rs:48:21-48:38)
  4: _28 = &fake shallow ((_24 as Included).0: &usize)
    SourceInfo(src/util.rs:48:21-48:38)
  5: StorageLive(_37)
    SourceInfo(src/util.rs:51:32-51:39)
  6: StorageLive(_38)
    SourceInfo(src/util.rs:51:32-51:33)
  7: _38 = (*_36)
    SourceInfo(src/util.rs:51:32-51:33)
  8: StorageLive(_39)
    SourceInfo(src/util.rs:51:36-51:39)
  9: _39 = _2
    SourceInfo(src/util.rs:51:36-51:39)
  10: _37 = Lt(move _38, move _39)
    SourceInfo(src/util.rs:51:32-51:39)
  Terminator {
      source_info: SourceInfo(src/util.rs:51:32-51:39)
      kind: switchInt(move _37) -> [0: bb26, otherwise: bb25]
  }
  preds [bb19]
  succs [bb25, bb26]

bb25
  0: StorageDead(_39)
    SourceInfo(src/util.rs:51:38-51:39)
  1: StorageDead(_38)
    SourceInfo(src/util.rs:51:38-51:39)
  2: StorageDead(_37)
    SourceInfo(src/util.rs:51:38-51:39)
  3: FakeRead(ForMatchGuard, _26)
    SourceInfo(src/util.rs:51:38-51:39)
  4: FakeRead(ForMatchGuard, _27)
    SourceInfo(src/util.rs:51:38-51:39)
  5: FakeRead(ForMatchGuard, _28)
    SourceInfo(src/util.rs:51:38-51:39)
  6: FakeRead(ForGuardBinding, _36)
    SourceInfo(src/util.rs:51:38-51:39)
  7: StorageLive(_35)
    SourceInfo(src/util.rs:51:26-51:27)
  8: _35 = (*((_24 as Included).0: &usize))
    SourceInfo(src/util.rs:51:26-51:27)
  9: StorageLive(_40)
    SourceInfo(src/util.rs:51:43-51:44)
  10: _40 = _35
    SourceInfo(src/util.rs:51:43-51:44)
  11: _41 = AddWithOverflow(_40, const 1_usize)
    SourceInfo(src/util.rs:51:43-51:48)
  Terminator {
      source_info: SourceInfo(src/util.rs:51:43-51:48)
      kind: assert(!move (_41.1: bool), "attempt to compute `{} + {}`, which would overflow", move _40, const 1_usize) -> [success: bb27, unwind: bb34]
  }
  preds [bb24]
  succs [bb27, bb34]

bb26
  0: StorageDead(_39)
    SourceInfo(src/util.rs:51:38-51:39)
  1: StorageDead(_38)
    SourceInfo(src/util.rs:51:38-51:39)
  2: StorageDead(_37)
    SourceInfo(src/util.rs:51:38-51:39)
  3: StorageDead(_36)
    SourceInfo(src/util.rs:51:47-51:48)
  Terminator {
      source_info: SourceInfo(src/util.rs:51:32-51:39)
      kind: falseEdge -> [real: bb16, imaginary: bb16]
  }
  preds [bb24]
  succs [bb16, bb16]

bb27
  0: _23 = move (_41.0: usize)
    SourceInfo(src/util.rs:51:43-51:48)
  1: StorageDead(_40)
    SourceInfo(src/util.rs:51:47-51:48)
  2: StorageDead(_35)
    SourceInfo(src/util.rs:51:47-51:48)
  3: StorageDead(_36)
    SourceInfo(src/util.rs:51:47-51:48)
  Terminator {
      source_info: SourceInfo(src/util.rs:51:47-51:48)
      kind: goto -> bb28
  }
  preds [bb25]
  succs [bb28]

bb28
  0: FakeRead(ForLet(None), _23)
    SourceInfo(src/util.rs:48:9-48:12)
  1: StorageDead(_24)
    SourceInfo(src/util.rs:53:6-53:7)
  2: StorageLive(_43)
    SourceInfo(src/util.rs:54:5-56:6)
  3: StorageLive(_44)
    SourceInfo(src/util.rs:54:8-54:19)
  4: StorageLive(_45)
    SourceInfo(src/util.rs:54:8-54:13)
  5: _45 = _3
    SourceInfo(src/util.rs:54:8-54:13)
  6: StorageLive(_46)
    SourceInfo(src/util.rs:54:16-54:19)
  7: _46 = _23
    SourceInfo(src/util.rs:54:16-54:19)
  8: _44 = Gt(move _45, move _46)
    SourceInfo(src/util.rs:54:8-54:19)
  Terminator {
      source_info: SourceInfo(src/util.rs:54:8-54:19)
      kind: switchInt(move _44) -> [0: bb30, otherwise: bb29]
  }
  preds [bb20, bb22, bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_46)
    SourceInfo(src/util.rs:54:18-54:19)
  1: StorageDead(_45)
    SourceInfo(src/util.rs:54:18-54:19)
  2: _0 = core::option::Option::<core::ops::Range<usize>>::None
    SourceInfo(src/util.rs:55:16-55:20)
  3: StorageDead(_44)
    SourceInfo(src/util.rs:56:5-56:6)
  4: StorageDead(_43)
    SourceInfo(src/util.rs:56:5-56:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb30
  0: StorageDead(_46)
    SourceInfo(src/util.rs:54:18-54:19)
  1: StorageDead(_45)
    SourceInfo(src/util.rs:54:18-54:19)
  2: _43 = const ()
    SourceInfo(src/util.rs:56:6-56:6)
  3: StorageDead(_44)
    SourceInfo(src/util.rs:56:5-56:6)
  4: StorageDead(_43)
    SourceInfo(src/util.rs:56:5-56:6)
  5: StorageLive(_48)
    SourceInfo(src/util.rs:57:10-57:20)
  6: StorageLive(_49)
    SourceInfo(src/util.rs:57:10-57:15)
  7: _49 = _3
    SourceInfo(src/util.rs:57:10-57:15)
  8: StorageLive(_50)
    SourceInfo(src/util.rs:57:17-57:20)
  9: _50 = _23
    SourceInfo(src/util.rs:57:17-57:20)
  10: _48 = core::ops::Range::<usize> { start: move _49, end: move _50 }
    SourceInfo(src/util.rs:57:10-57:20)
  11: StorageDead(_50)
    SourceInfo(src/util.rs:57:19-57:20)
  12: StorageDead(_49)
    SourceInfo(src/util.rs:57:19-57:20)
  13: _0 = core::option::Option::<core::ops::Range<usize>>::Some(move _48)
    SourceInfo(src/util.rs:57:5-57:21)
  14: StorageDead(_48)
    SourceInfo(src/util.rs:57:20-57:21)
  15: StorageDead(_23)
    SourceInfo(src/util.rs:58:1-58:2)
  16: StorageDead(_3)
    SourceInfo(src/util.rs:58:1-58:2)
  Terminator {
      source_info: SourceInfo(src/util.rs:58:1-58:2)
      kind: drop(_1) -> [return: bb33, unwind: bb35]
  }
  preds [bb28]
  succs [bb33, bb35]

bb31
  0: StorageDead(_23)
    SourceInfo(src/util.rs:58:1-58:2)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb16, bb29]
  succs [bb32]

bb32
  0: StorageDead(_3)
    SourceInfo(src/util.rs:58:1-58:2)
  Terminator {
      source_info: SourceInfo(src/util.rs:58:1-58:2)
      kind: drop(_1) -> [return: bb33, unwind: bb35]
  }
  preds [bb2, bb31]
  succs [bb33, bb35]

bb33
  Terminator {
      source_info: SourceInfo(src/util.rs:58:2-58:2)
      kind: return
  }
  preds [bb30, bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(src/util.rs:58:1-58:2)
      kind: drop(_1) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb0, bb11, bb14, bb25]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(src/util.rs:38:1-58:2)
      kind: resume
  }
  preds [bb30, bb32, bb34]
  succs []

