bb0
  0: StorageLive(_4)
    SourceInfo(src/map/core.rs:712:9-714:10)
  1: StorageLive(_5)
    SourceInfo(src/map/core.rs:712:12-712:18)
  2: StorageLive(_6)
    SourceInfo(src/map/core.rs:712:12-712:13)
  3: _6 = _2
    SourceInfo(src/map/core.rs:712:12-712:13)
  4: StorageLive(_7)
    SourceInfo(src/map/core.rs:712:17-712:18)
  5: _7 = _3
    SourceInfo(src/map/core.rs:712:17-712:18)
  6: _5 = Eq(move _6, move _7)
    SourceInfo(src/map/core.rs:712:12-712:18)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:712:12-712:18)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_7)
    SourceInfo(src/map/core.rs:712:17-712:18)
  1: StorageDead(_6)
    SourceInfo(src/map/core.rs:712:17-712:18)
  2: StorageLive(_8)
    SourceInfo(src/map/core.rs:712:22-712:44)
  3: StorageLive(_9)
    SourceInfo(src/map/core.rs:712:22-712:23)
  4: _9 = _2
    SourceInfo(src/map/core.rs:712:22-712:23)
  5: StorageLive(_10)
    SourceInfo(src/map/core.rs:712:26-712:44)
  6: StorageLive(_11)
    SourceInfo(src/map/core.rs:712:26-712:38)
  7: _11 = &(*((*_1).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core.rs:712:26-712:38)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:712:26-712:44)
      kind: _10 = alloc::vec::Vec::<Bucket<K, V>>::len(move _11) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_11)
    SourceInfo(src/map/core.rs:712:43-712:44)
  1: _8 = Lt(move _9, move _10)
    SourceInfo(src/map/core.rs:712:22-712:44)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:712:22-712:44)
      kind: switchInt(move _8) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:712:43-712:44)
  1: StorageDead(_9)
    SourceInfo(src/map/core.rs:712:43-712:44)
  2: _0 = const ()
    SourceInfo(src/map/core.rs:713:13-713:19)
  3: StorageDead(_8)
    SourceInfo(src/map/core.rs:714:9-714:10)
  4: StorageDead(_5)
    SourceInfo(src/map/core.rs:714:9-714:10)
  5: StorageDead(_4)
    SourceInfo(src/map/core.rs:714:9-714:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:728:6-728:6)
      kind: goto -> bb20
  }
  preds [bb2]
  succs [bb20]

bb4
  0: StorageDead(_10)
    SourceInfo(src/map/core.rs:712:43-712:44)
  1: StorageDead(_9)
    SourceInfo(src/map/core.rs:712:43-712:44)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb5
  0: StorageDead(_7)
    SourceInfo(src/map/core.rs:712:17-712:18)
  1: StorageDead(_6)
    SourceInfo(src/map/core.rs:712:17-712:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb6
  }
  preds [bb0]
  succs [bb6]

bb6
  0: _4 = const ()
    SourceInfo(src/map/core.rs:714:10-714:10)
  1: StorageDead(_8)
    SourceInfo(src/map/core.rs:714:9-714:10)
  2: StorageDead(_5)
    SourceInfo(src/map/core.rs:714:9-714:10)
  3: StorageDead(_4)
    SourceInfo(src/map/core.rs:714:9-714:10)
  4: StorageLive(_13)
    SourceInfo(src/map/core.rs:718:15-721:10)
  5: StorageLive(_14)
    SourceInfo(src/map/core.rs:718:15-718:27)
  6: _14 = &mut (*((*_1).0: &mut hashbrown::HashTable<usize>))
    SourceInfo(src/map/core.rs:718:15-718:27)
  7: StorageLive(_15)
    SourceInfo(src/map/core.rs:719:13-719:69)
  8: StorageLive(_16)
    SourceInfo(src/map/core.rs:719:14-719:40)
  9: StorageLive(_17)
    SourceInfo(src/map/core.rs:719:14-719:34)
  10: StorageLive(_18)
    SourceInfo(src/map/core.rs:719:26-719:29)
  11: StorageLive(_19)
    SourceInfo(src/map/core.rs:719:14-719:26)
  12: _19 = &(*((*_1).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core.rs:719:14-719:26)
  13: StorageLive(_20)
    SourceInfo(src/map/core.rs:719:27-719:28)
  14: _20 = _2
    SourceInfo(src/map/core.rs:719:27-719:28)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:719:26-719:29)
      kind: _18 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Index<usize>>::index(move _19, move _20) -> [return: bb7, unwind: bb21]
  }
  preds [bb4, bb5]
  succs [bb7, bb21]

bb7
  0: StorageDead(_20)
    SourceInfo(src/map/core.rs:719:28-719:29)
  1: StorageDead(_19)
    SourceInfo(src/map/core.rs:719:28-719:29)
  2: _17 = ((*_18).0: HashValue)
    SourceInfo(src/map/core.rs:719:14-719:34)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:719:14-719:40)
      kind: _16 = HashValue::get(move _17) -> [return: bb8, unwind: bb21]
  }
  preds [bb6]
  succs [bb8, bb21]

bb8
  0: StorageDead(_17)
    SourceInfo(src/map/core.rs:719:39-719:40)
  1: StorageLive(_21)
    SourceInfo(src/map/core.rs:719:42-719:68)
  2: StorageLive(_22)
    SourceInfo(src/map/core.rs:719:42-719:62)
  3: StorageLive(_23)
    SourceInfo(src/map/core.rs:719:54-719:57)
  4: StorageLive(_24)
    SourceInfo(src/map/core.rs:719:42-719:54)
  5: _24 = &(*((*_1).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core.rs:719:42-719:54)
  6: StorageLive(_25)
    SourceInfo(src/map/core.rs:719:55-719:56)
  7: _25 = _3
    SourceInfo(src/map/core.rs:719:55-719:56)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:719:54-719:57)
      kind: _23 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::Index<usize>>::index(move _24, move _25) -> [return: bb9, unwind: bb21]
  }
  preds [bb7]
  succs [bb9, bb21]

bb9
  0: StorageDead(_25)
    SourceInfo(src/map/core.rs:719:56-719:57)
  1: StorageDead(_24)
    SourceInfo(src/map/core.rs:719:56-719:57)
  2: _22 = ((*_23).0: HashValue)
    SourceInfo(src/map/core.rs:719:42-719:62)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:719:42-719:68)
      kind: _21 = HashValue::get(move _22) -> [return: bb10, unwind: bb21]
  }
  preds [bb8]
  succs [bb10, bb21]

bb10
  0: StorageDead(_22)
    SourceInfo(src/map/core.rs:719:67-719:68)
  1: _15 = [move _16, move _21]
    SourceInfo(src/map/core.rs:719:13-719:69)
  2: StorageDead(_21)
    SourceInfo(src/map/core.rs:719:68-719:69)
  3: StorageDead(_16)
    SourceInfo(src/map/core.rs:719:68-719:69)
  4: StorageLive(_26)
    SourceInfo(src/map/core.rs:720:13-720:62)
  5: _26 = {closure@src/map/core.rs:720:13: 720:25} { a: _2, b: _3 }
    SourceInfo(src/map/core.rs:720:13-720:62)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:718:15-721:10)
      kind: _13 = hashbrown::HashTable::<usize>::get_many_mut::<2, {closure@src/map/core.rs:720:13: 720:25}>(move _14, move _15, move _26) -> [return: bb11, unwind: bb21]
  }
  preds [bb9]
  succs [bb11, bb21]

bb11
  0: StorageDead(_26)
    SourceInfo(src/map/core.rs:721:9-721:10)
  1: StorageDead(_15)
    SourceInfo(src/map/core.rs:721:9-721:10)
  2: StorageDead(_14)
    SourceInfo(src/map/core.rs:721:9-721:10)
  3: PlaceMention(_13)
    SourceInfo(src/map/core.rs:718:15-721:10)
  4: _28 = discriminant(_13[0 of 2])
    SourceInfo(src/map/core.rs:718:15-721:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:718:9-721:10)
      kind: switchInt(move _28) -> [1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageLive(_41)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  1: StorageLive(_42)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageLive(_43)
    SourceInfo(src/map/core.rs:726:25-726:44)
  3: StorageLive(_44)
    SourceInfo(src/map/core.rs:726:25-726:44)
  4: StorageLive(_45)
    SourceInfo(src/map/core.rs:726:25-726:44)
  5: _45 = [const "indices not found"]
    SourceInfo(src/map/core.rs:726:25-726:44)
  6: _44 = &_45
    SourceInfo(src/map/core.rs:726:25-726:44)
  7: _43 = &(*_44)
    SourceInfo(src/map/core.rs:726:25-726:44)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _42 = core::fmt::Arguments::<'_>::new_const::<1>(move _43) -> [return: bb19, unwind: bb21]
  }
  preds [bb11, bb13, bb14]
  succs [bb19, bb21]

bb13
  0: _27 = discriminant(_13[1 of 2])
    SourceInfo(src/map/core.rs:718:15-721:10)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:718:9-721:10)
      kind: switchInt(move _27) -> [1: bb14, otherwise: bb12]
  }
  preds [bb11]
  succs [bb12, bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map/core.rs:722:13-722:39)
      kind: falseEdge -> [real: bb15, imaginary: bb12]
  }
  preds [bb13]
  succs [bb12, bb15]

bb15
  0: StorageLive(_29)
    SourceInfo(src/map/core.rs:722:19-722:24)
  1: _29 = move ((_13[0 of 2] as Some).0: &mut usize)
    SourceInfo(src/map/core.rs:722:19-722:24)
  2: StorageLive(_30)
    SourceInfo(src/map/core.rs:722:32-722:37)
  3: _30 = move ((_13[1 of 2] as Some).0: &mut usize)
    SourceInfo(src/map/core.rs:722:32-722:37)
  4: StorageLive(_31)
    SourceInfo(src/map/core.rs:723:17-723:40)
  5: StorageLive(_32)
    SourceInfo(src/map/core.rs:723:27-723:32)
  6: _32 = &mut (*_29)
    SourceInfo(src/map/core.rs:723:27-723:32)
  7: StorageLive(_33)
    SourceInfo(src/map/core.rs:723:34-723:39)
  8: _33 = &mut (*_30)
    SourceInfo(src/map/core.rs:723:34-723:39)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:723:17-723:40)
      kind: _31 = core::mem::swap::<usize>(move _32, move _33) -> [return: bb16, unwind: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  0: StorageDead(_33)
    SourceInfo(src/map/core.rs:723:39-723:40)
  1: StorageDead(_32)
    SourceInfo(src/map/core.rs:723:39-723:40)
  2: StorageDead(_31)
    SourceInfo(src/map/core.rs:723:40-723:41)
  3: StorageLive(_34)
    SourceInfo(src/map/core.rs:724:17-724:40)
  4: StorageLive(_35)
    SourceInfo(src/map/core.rs:724:17-724:29)
  5: StorageLive(_36)
    SourceInfo(src/map/core.rs:724:17-724:40)
  6: StorageLive(_37)
    SourceInfo(src/map/core.rs:724:17-724:29)
  7: _37 = &mut (*((*_1).1: &mut alloc::vec::Vec<Bucket<K, V>>))
    SourceInfo(src/map/core.rs:724:17-724:29)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:724:17-724:40)
      kind: _36 = <alloc::vec::Vec<Bucket<K, V>> as core::ops::DerefMut>::deref_mut(move _37) -> [return: bb17, unwind: bb21]
  }
  preds [bb15]
  succs [bb17, bb21]

bb17
  0: _35 = &mut (*_36)
    SourceInfo(src/map/core.rs:724:17-724:29)
  1: StorageDead(_37)
    SourceInfo(src/map/core.rs:724:28-724:29)
  2: StorageLive(_38)
    SourceInfo(src/map/core.rs:724:35-724:36)
  3: _38 = _2
    SourceInfo(src/map/core.rs:724:35-724:36)
  4: StorageLive(_39)
    SourceInfo(src/map/core.rs:724:38-724:39)
  5: _39 = _3
    SourceInfo(src/map/core.rs:724:38-724:39)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:724:17-724:40)
      kind: _34 = core::slice::<impl [Bucket<K, V>]>::swap(move _35, move _38, move _39) -> [return: bb18, unwind: bb21]
  }
  preds [bb16]
  succs [bb18, bb21]

bb18
  0: StorageDead(_39)
    SourceInfo(src/map/core.rs:724:39-724:40)
  1: StorageDead(_38)
    SourceInfo(src/map/core.rs:724:39-724:40)
  2: StorageDead(_35)
    SourceInfo(src/map/core.rs:724:39-724:40)
  3: StorageDead(_36)
    SourceInfo(src/map/core.rs:724:40-724:41)
  4: StorageDead(_34)
    SourceInfo(src/map/core.rs:724:40-724:41)
  5: _0 = const ()
    SourceInfo(src/map/core.rs:722:43-725:14)
  6: StorageDead(_30)
    SourceInfo(src/map/core.rs:725:13-725:14)
  7: StorageDead(_29)
    SourceInfo(src/map/core.rs:725:13-725:14)
  8: StorageDead(_23)
    SourceInfo(src/map/core.rs:728:5-728:6)
  9: StorageDead(_18)
    SourceInfo(src/map/core.rs:728:5-728:6)
  10: StorageDead(_13)
    SourceInfo(src/map/core.rs:728:5-728:6)
  Terminator {
      source_info: SourceInfo(src/map/core.rs:728:6-728:6)
      kind: goto -> bb20
  }
  preds [bb17]
  succs [bb20]

bb19
  0: StorageDead(_43)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _41 = core::panicking::panic_fmt(move _42) -> bb21
  }
  preds [bb12]
  succs [bb21]

bb20
  Terminator {
      source_info: SourceInfo(src/map/core.rs:728:6-728:6)
      kind: return
  }
  preds [bb3, bb18]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(src/map/core.rs:710:5-728:6)
      kind: resume
  }
  preds [bb1, bb6, bb7, bb8, bb9, bb10, bb12, bb15, bb16, bb17, bb19]
  succs []

