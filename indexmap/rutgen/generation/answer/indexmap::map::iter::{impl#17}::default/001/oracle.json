[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let iter_mut: IterMut<i32, i32> = Default::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(iter_mut.iter.len(), 0);",
          "    assert!(iter_mut.iter.as_slice().is_empty());",
          "    assert_eq!(iter_mut.iter.next(), None);",
          "    assert_eq!(iter_mut.iter.size_hint(), (0, Some(0)));",
          "    assert!(iter_mut.iter.is_fused());"
        ],
        "code": [
          "{",
          "    let iter_mut: IterMut<i32, i32> = Default::default();",
          "    assert_eq!(iter_mut.iter.len(), 0);",
          "    assert!(iter_mut.iter.as_slice().is_empty());",
          "    assert_eq!(iter_mut.iter.next(), None);",
          "    assert_eq!(iter_mut.iter.size_hint(), (0, Some(0)));",
          "    assert!(iter_mut.iter.is_fused());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let iter_mut: IterMut<String, String> = Default::default();",
          "}"
        ],
        "oracle": [
          "    assert!(iter_mut.iter.as_slice().is_empty());",
          "    assert_eq!(iter_mut.iter.len(), 0);",
          "    assert!(iter_mut.iter.iter_mut().next().is_none());",
          "    assert_eq!(iter_mut.iter, [].iter_mut());",
          "    assert_eq!(std::mem::size_of_val(&iter_mut), std::mem::size_of::<IterMut<String, String>>());"
        ],
        "code": [
          "{",
          "    let iter_mut: IterMut<String, String> = Default::default();",
          "    assert!(iter_mut.iter.as_slice().is_empty());",
          "    assert_eq!(iter_mut.iter.len(), 0);",
          "    assert!(iter_mut.iter.iter_mut().next().is_none());",
          "    assert_eq!(iter_mut.iter, [].iter_mut());",
          "    assert_eq!(std::mem::size_of_val(&iter_mut), std::mem::size_of::<IterMut<String, String>>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]