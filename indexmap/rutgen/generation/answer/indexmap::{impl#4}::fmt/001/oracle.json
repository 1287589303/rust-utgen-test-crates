[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [
      "fn fmt_alloc_error_test() {",
      "    struct MockFormatter<'a> {",
      "        should_fail: bool,",
      "        _marker: std::marker::PhantomData<&'a ()>,",
      "    }",
      "",
      "    impl<'a> core::fmt::Write for MockFormatter<'a> {",
      "        fn write_str(&mut self, _s: &str) -> core::fmt::Result {",
      "            if self.should_fail {",
      "                Err(core::fmt::Error)",
      "            } else {",
      "                Ok(())",
      "            }",
      "        }",
      "    }",
      "",
      "    let layout = alloc::alloc::Layout::from_size_align(1, 1).unwrap();",
      "    let error = TryReserveError {",
      "        kind: TryReserveErrorKind::AllocError { layout },",
      "    };",
      "    ",
      "    let mut formatter = MockFormatter {",
      "        should_fail: true,",
      "        _marker: std::marker::PhantomData,",
      "    };",
      "    ",
      "    let _ = error.fmt(&mut formatter);",
      "}"
    ],
    "chain_tests": []
  }
]