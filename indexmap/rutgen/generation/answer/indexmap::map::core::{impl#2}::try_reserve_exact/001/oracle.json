[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut index_map = IndexMapCore::<usize, usize>::new();",
          "    index_map.try_reserve_exact(0).unwrap();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(index_map.len(), 0);",
          "    assert_eq!(index_map.capacity(), 0);",
          "    assert!(index_map.indices.try_reserve(0, get_hash(&index_map.entries)).is_ok());",
          "    assert!(index_map.entries.try_reserve_exact(0).is_ok());",
          "    assert!(matches!(index_map.try_reserve_exact(100), Ok(_)));"
        ],
        "code": [
          "{",
          "    let mut index_map = IndexMapCore::<usize, usize>::new();",
          "    index_map.try_reserve_exact(0).unwrap();",
          "    assert_eq!(index_map.len(), 0);",
          "    assert_eq!(index_map.capacity(), 0);",
          "    assert!(index_map.indices.try_reserve(0, get_hash(&index_map.entries)).is_ok());",
          "    assert!(index_map.entries.try_reserve_exact(0).is_ok());",
          "    assert!(matches!(index_map.try_reserve_exact(100), Ok(_)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut index_map = IndexMapCore::<usize, usize>::with_capacity(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY);",
          "    index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY).unwrap();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(index_map.try_reserve_exact(0), Ok(()));",
          "    assert_eq!(index_map.try_reserve_exact(1), Ok(()));",
          "    assert_eq!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY), Ok(()));",
          "    assert!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1).is_err());"
        ],
        "code": [
          "{",
          "    let mut index_map = IndexMapCore::<usize, usize>::with_capacity(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY);",
          "    index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY).unwrap();",
          "    assert_eq!(index_map.try_reserve_exact(0), Ok(()));",
          "    assert_eq!(index_map.try_reserve_exact(1), Ok(()));",
          "    assert_eq!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY), Ok(()));",
          "    assert!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let mut index_map = IndexMapCore::<usize, usize>::with_capacity(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY);",
          "    index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1).unwrap_err();",
          "}"
        ],
        "oracle": [
          "    assert!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1).is_err());",
          "    assert_eq!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1), Err(TryReserveError { kind: TryReserveErrorKind::CapacityOverflow }));",
          "    assert!(index_map.len() == 0);",
          "    assert!(index_map.capacity() == IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY);"
        ],
        "code": [
          "{",
          "    let mut index_map = IndexMapCore::<usize, usize>::with_capacity(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY);",
          "    index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1).unwrap_err();",
          "    assert!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1).is_err());",
          "    assert_eq!(index_map.try_reserve_exact(IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY + 1), Err(TryReserveError { kind: TryReserveErrorKind::CapacityOverflow }));",
          "    assert!(index_map.len() == 0);",
          "    assert!(index_map.capacity() == IndexMapCore::<usize, usize>::MAX_ENTRIES_CAPACITY);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]