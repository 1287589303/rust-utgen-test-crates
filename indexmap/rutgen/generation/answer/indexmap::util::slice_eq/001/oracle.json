[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left = &[1, 2, 3];",
          "    let right = &[1, 2];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let left = &[1, 2, 3];",
          "    let right = &[1, 2];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left = &[\"a\", \"b\"];",
          "    let right = &[\"a\", \"b\", \"c\"];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let left = &[\"a\", \"b\"];",
          "    let right = &[\"a\", \"b\", \"c\"];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left = &[3.14, 2.71];",
          "    let right = &[3.14];",
          "    let result = slice_eq(left, right, |a, b| (a - b).abs() < f64::EPSILON);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let left = &[3.14, 2.71];",
          "    let right = &[3.14];",
          "    let result = slice_eq(left, right, |a, b| (a - b).abs() < f64::EPSILON);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left = &[true, false];",
          "    let right = &[false];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let left = &[true, false];",
          "    let right = &[false];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: &[i32] = &[];",
          "    let right: &[i32] = &[1];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let left: &[i32] = &[];",
          "    let right: &[i32] = &[1];",
          "    let result = slice_eq(left, right, |a, b| a == b);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]