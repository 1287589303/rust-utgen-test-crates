[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestKey;",
          "    struct TestValue;",
          "",
          "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_index_map_core.len(), 0);",
          "    assert_eq!(_index_map_core.capacity(), 0);",
          "    assert_eq!(_index_map_core.indices, Indices::new());",
          "    assert_eq!(_index_map_core.entries, Vec::new());"
        ],
        "code": [
          "{",
          "    struct TestKey;",
          "    struct TestValue;",
          "",
          "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
          "    assert_eq!(_index_map_core.len(), 0);",
          "    assert_eq!(_index_map_core.capacity(), 0);",
          "    assert_eq!(_index_map_core.indices, Indices::new());",
          "    assert_eq!(_index_map_core.entries, Vec::new());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestKey;",
          "    struct TestValue;",
          "",
          "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_index_map_core.len(), 0);",
          "    assert_eq!(_index_map_core.capacity(), 0);",
          "    assert_eq!(_index_map_core.indices, Indices::new());",
          "    assert_eq!(_index_map_core.entries, Vec::new());"
        ],
        "code": [
          "{",
          "    struct TestKey;",
          "    struct TestValue;",
          "",
          "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
          "    assert_eq!(_index_map_core.len(), 0);",
          "    assert_eq!(_index_map_core.capacity(), 0);",
          "    assert_eq!(_index_map_core.indices, Indices::new());",
          "    assert_eq!(_index_map_core.entries, Vec::new());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]