{
  "name": "indexmap::set::{impl#13}::default",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:124:1:124:13"
  },
  "visible": true,
  "loc": "src/set.rs:1178:5:1182:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: IndexSet {\n            map: IndexMap::default(),\n        }\n"
      ],
      "input_infer": "Test input conditions: No input required; expect the return of an empty `IndexSet` with a default `IndexMap`.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let index_set: IndexSet<(), ()> = IndexSet::default();",
                "}"
              ],
              "oracle": [
                "    let expected_index_set = IndexSet { map: IndexMap::default() };",
                "    assert_eq!(index_set, expected_index_set);"
              ],
              "code": [
                "{",
                "    let index_set: IndexSet<(), ()> = IndexSet::default();",
                "    let expected_index_set = IndexSet { map: IndexMap::default() };",
                "    assert_eq!(index_set, expected_index_set);",
                "}"
              ],
              "can_compile": false,
              "repaired": true
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let index_set: IndexSet<(), ()> = IndexSet::default();",
                "    let map = index_set.map; // This should be an empty IndexMap",
                "}"
              ],
              "oracle": [
                "    let index_set: IndexSet<(), ()> = IndexSet::default();",
                "    assert!(map.is_empty());",
                "    assert_eq!(map.len(), 0);",
                "    assert_eq!(map, IndexMap::default());",
                "    assert_eq!(index_set.map.hash_builder, Default::default());"
              ],
              "code": [
                "{",
                "   let index_set: IndexSet<(), ()> = IndexSet::default();",
                "   let map = index_set.map; // This should be an empty IndexMap",
                "   let index_set: IndexSet<(), ()> = IndexSet::default();",
                "   assert!(map.is_empty());",
                "   assert_eq!(map.len(), 0);",
                "   assert_eq!(map, IndexMap::default());",
                "   assert_eq!(map.hasher(), Default::default());",
                "}"
              ],
              "can_compile": false,
              "repaired": true
            }
          ]
        }
      ]
    }
  ]
}