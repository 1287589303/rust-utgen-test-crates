{
  "name": "indexmap::map::core::{impl#2}::new",
  "mod_info": {
    "name": "map::core",
    "loc": "src/map.rs:4:1:4:10"
  },
  "visible": true,
  "loc": "src/map/core.rs:144:5:149:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: IndexMapCore {\n            indices: Indices::new(),\n            entries: Vec::new(),\n        }\n"
      ],
      "input_infer": "Test input conditions: Call the `new()` function without any parameters to create a new instance of `IndexMapCore<K, V>` with default state.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct TestKey;",
                "    struct TestValue;",
                "",
                "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(_index_map_core.len(), 0);",
                "    assert_eq!(_index_map_core.capacity(), 0);",
                "    assert_eq!(_index_map_core.indices, Indices::new());",
                "    assert_eq!(_index_map_core.entries, Vec::new());"
              ],
              "code": [
                "{",
                "    struct TestKey;",
                "    struct TestValue;",
                "",
                "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
                "    assert_eq!(_index_map_core.len(), 0);",
                "    assert_eq!(_index_map_core.capacity(), 0);",
                "    assert_eq!(_index_map_core.indices, Indices::new());",
                "    assert_eq!(_index_map_core.entries, Vec::new());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct TestKey;",
                "    struct TestValue;",
                "",
                "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(_index_map_core.len(), 0);",
                "    assert_eq!(_index_map_core.capacity(), 0);",
                "    assert_eq!(_index_map_core.indices, Indices::new());",
                "    assert_eq!(_index_map_core.entries, Vec::new());"
              ],
              "code": [
                "{",
                "    struct TestKey;",
                "    struct TestValue;",
                "",
                "    let _index_map_core: IndexMapCore<TestKey, TestValue> = IndexMapCore::new();",
                "    assert_eq!(_index_map_core.len(), 0);",
                "    assert_eq!(_index_map_core.capacity(), 0);",
                "    assert_eq!(_index_map_core.indices, Indices::new());",
                "    assert_eq!(_index_map_core.entries, Vec::new());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}