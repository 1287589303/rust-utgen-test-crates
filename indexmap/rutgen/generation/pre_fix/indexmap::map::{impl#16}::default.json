{
  "name": "indexmap::map::{impl#16}::default",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:123:1:123:13"
  },
  "visible": true,
  "loc": "src/map.rs:1580:5:1582:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "S must implement the Default trait, and n must be 0 for testing the default function of IndexMap.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct DefaultHasher;",
                "",
                "    impl Default for DefaultHasher {",
                "        fn default() -> Self {",
                "            DefaultHasher",
                "        }",
                "    }",
                "",
                "    let map: crate::IndexMap<i32, i32, DefaultHasher> = crate::IndexMap::default();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(map.len(), 0);",
                "    assert!(map.is_empty());",
                "    assert!(map.capacity() >= 0);",
                "    assert_eq!(map.hasher().default(), DefaultHasher);"
              ],
              "code": [
                "{",
                "    struct DefaultHasher;",
                "",
                "    impl Default for DefaultHasher {",
                "        fn default() -> Self {",
                "            DefaultHasher",
                "        }",
                "    }",
                "",
                "    let map: crate::IndexMap<i32, i32, DefaultHasher> = crate::IndexMap::default();",
                "    assert_eq!(map.len(), 0);",
                "    assert!(map.is_empty());",
                "    assert!(map.capacity() >= 0);",
                "    assert_eq!(map.hasher().default(), DefaultHasher);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    #[cfg(feature = \"std\")]",
                "    let map: crate::IndexMap<i32, i32, std::collections::hash_map::RandomState> = crate::IndexMap::default();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(map.len(), 0);",
                "    assert!(map.is_empty());",
                "    assert_eq!(map.capacity(), 0);"
              ],
              "code": [
                "{",
                "    #[cfg(feature = \"std\")]",
                "    let map: crate::IndexMap<i32, i32, std::collections::hash_map::RandomState> = crate::IndexMap::default();",
                "    assert_eq!(map.len(), 0);",
                "    assert!(map.is_empty());",
                "    assert_eq!(map.capacity(), 0);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}