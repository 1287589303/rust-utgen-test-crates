{"mod_name":"raw","calls":["raw::RawTableInner::is_in_same_group","core::panicking::assert_failed::<control::tag::Tag, control::tag::Tag>","core::mem::forget::<scopeguard::ScopeGuard<&mut raw::RawTableInner, {closure@src/raw/mod.rs:2847:37: 2847:49}>>","<scopeguard::ScopeGuard<&mut raw::RawTableInner, {closure@src/raw/mod.rs:2847:37: 2847:49}> as core::ops::Deref>::deref","raw::RawTableInner::set_ctrl_hash","raw::RawTableInner::replace_ctrl_hash","<control::tag::Tag as core::cmp::PartialEq>::ne","core::convert::identity::<bool>","<dyn for<'a> core::ops::Fn","<core::ops::Range<usize> as core::iter::Iterator>::next","raw::RawTableInner::prepare_rehash_in_place","<scopeguard::ScopeGuard<&mut raw::RawTableInner, {closure@src/raw/mod.rs:2847:37: 2847:49}> as core::ops::DerefMut>::deref_mut","raw::RawTableInner::find_insert_slot","raw::RawTableInner::ctrl","<control::tag::Tag as core::cmp::PartialEq>::eq","<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","core::intrinsics::copy_nonoverlapping::<u8>","raw::RawTableInner::set_ctrl","core::ptr::swap_nonoverlapping::<u8>","raw::bucket_mask_to_capacity","raw::RawTableInner::bucket_ptr","scopeguard::guard::<&mut raw::RawTableInner, {closure@src/raw/mod.rs:2847:37: 2847:49}>","raw::RawTableInner::buckets"],"types":["core::ops::Range<usize>","(&mut raw::RawTableInner, usize)","dyn for<'a> core::ops::Fn(&'a mut raw::RawTableInner, usize) -> u64","core::option::Option<usize>","!","*mut control::tag::Tag","()","scopeguard::ScopeGuard<&mut raw::RawTableInner, {closure@src/raw/mod.rs:2847:37: 2847:49}>","*mut u8","*const u8","raw::RawTableInner","bool","usize","core::panicking::AssertKind","u64","control::tag::Tag","raw::InsertSlot","unsafe fn(*mut u8)","(&control::tag::Tag, &control::tag::Tag)","core::option::Option<core::fmt::Arguments<'_>>","(usize, bool)","isize","u8","core::fmt::Arguments<'_>","{closure@src/raw/mod.rs:2847:37: 2847:49}","core::option::Option<unsafe fn(*mut u8)>"]}