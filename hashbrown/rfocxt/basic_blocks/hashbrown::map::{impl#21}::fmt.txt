[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:2344:9: 2344:23 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::fmt::Formatter::<'_>::debug_list(move _7) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &mut _6,
            StorageDead(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &((*_1).0: map::IntoIter<K, V, A>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:2345:22: 2345:39 (#0),
                    scope: scope[0],
                },
                kind: _9 = map::IntoIter::<K, V, A>::iter(move _10) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageLive(_11),
            _11 = {closure@src/map.rs:2345:44: 2345:52},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:2345:22: 2345:55 (#0),
                    scope: scope[0],
                },
                kind: _8 = <map::Iter<'_, K, V> as core::iter::Iterator>::map::<&K, {closure@src/map.rs:2345:44: 2345:52}>(move _9, move _11) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:2344:9: 2345:56 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::fmt::DebugList::<'_, '_>::entries::<&K, core::iter::Map<map::Iter<'_, K, V>, {closure@src/map.rs:2345:44: 2345:52}>>(move _5, move _8) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &mut (*_4),
            StorageDead(_8),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:2344:9: 2346:22 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::DebugList::<'_, '_>::finish(move _3) -> [return: bb5, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:2347:6: 2347:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:2343:5: 2347:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2343:50: 2343:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} map::IntoKeys<K/#0, V/#1, A/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2343:12: 2343:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map.rs:2343:22: 2343:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map.rs:2343:19: 2343:20 (#0),
                            ),
                        ),
                        pat_span: src/map.rs:2343:19: 2343:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2343:19: 2343:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugList<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2344:9: 2345:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugList<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2344:9: 2345:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugList<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2344:9: 2344:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: core::fmt::DebugList<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2344:9: 2344:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2344:9: 2344:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: core::iter::Map<map::Iter<'{erased}, K/#0, V/#1>, Closure(DefId(0:785 ~ hashbrown[7d72]::map::{impl#21}::fmt::{closure#0}), [K/#0, V/#1, A/#2, i16, Binder { value: extern "RustCall" fn(((&'{erased} K/#0, &'{erased} V/#1),)) -> &'{erased} K/#0, bound_vars: [] }, ()])>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2345:22: 2345:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: map::Iter<'{erased}, K/#0, V/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2345:22: 2345:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: &'{erased} map::IntoIter<K/#0, V/#1, A/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2345:22: 2345:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:2344:9: 2346:22 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:785 ~ hashbrown[7d72]::map::{impl#21}::fmt::{closure#0}),
            [
                K/#0,
                V/#1,
                A/#2,
                i16,
                Binder { value: extern "RustCall" fn(((&'{erased} K/#0, &'{erased} V/#1),)) -> &'{erased} K/#0, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:2345:44: 2345:54 (#0),
            scope: scope[0],
        },
    },
]