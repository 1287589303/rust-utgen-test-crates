[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
            StorageLive(_5),
            _5 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:42:15: 42:37 (#0),
                    scope: scope[0],
                },
                kind: _3 = <A as allocator_api2::alloc::Allocator>::allocate(move _4, move _5) -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            PlaceMention(_3),
            _6 = discriminant(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:42:9: 42:37 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:42:15: 42:37 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:43:13: 43:20 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            _10 = (),
            _0 = core::result::Result::<core::ptr::NonNull<u8>, ()>::Err(move _10),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:44:29: 44:30 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = ((_3 as Ok).0: core::ptr::NonNull<[u8]>),
            StorageLive(_8),
            StorageLive(_9),
            _9 = _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:43:27: 43:37 (#0),
                    scope: scope[1],
                },
                kind: _8 = core::ptr::NonNull::<[u8]>::cast::<u8>(move _9) -> [return: bb6, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            _0 = core::result::Result::<core::ptr::NonNull<u8>, ()>::Ok(move _8),
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:43:37: 43:38 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:46:6: 46:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/alloc.rs:41:5: 46:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::ptr::NonNull<u8>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:41:72: 41:95 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/raw/alloc.rs:41:49: 41:51 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/raw/alloc.rs:41:42: 41:47 (#0),
                            ),
                        ),
                        pat_span: src/raw/alloc.rs:41:42: 41:47 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:41:42: 41:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/raw/alloc.rs:41:61: 41:67 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/raw/alloc.rs:41:53: 41:59 (#0),
                            ),
                        ),
                        pat_span: src/raw/alloc.rs:41:53: 41:59 (#0),
                    },
                ),
            ),
        ),
        ty: core::alloc::Layout,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:41:53: 41:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/alloc.rs:42:9: 45:10 (#0),
                },
            ),
        ),
        ty: core::result::Result<core::ptr::NonNull<[u8]>, allocator_api2::alloc::AllocError>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:42:15: 42:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/alloc.rs:42:9: 45:10 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:42:15: 42:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/alloc.rs:42:9: 45:10 (#0),
                },
            ),
        ),
        ty: core::alloc::Layout,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:42:30: 42:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:43:13: 43:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/raw/alloc.rs:42:15: 42:37 (#0),
                            ),
                        ),
                        pat_span: src/raw/alloc.rs:43:13: 43:20 (#0),
                    },
                ),
            ),
        ),
        ty: core::ptr::NonNull<[u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:43:16: 43:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::ptr::NonNull<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:43:27: 43:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/alloc.rs:42:9: 45:10 (#0),
                },
            ),
        ),
        ty: core::ptr::NonNull<[u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:43:27: 43:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/alloc.rs:44:27: 44:29 (#0),
            scope: scope[0],
        },
    },
]