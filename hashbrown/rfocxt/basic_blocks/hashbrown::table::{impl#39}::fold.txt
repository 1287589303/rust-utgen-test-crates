[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = move (_1.0: raw::RawIntoIter<T, A>),
            StorageLive(_5),
            _5 = move _2,
            StorageLive(_6),
            _6 = move _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2261:9: 2261:33 (#0),
                    scope: scope[0],
                },
                kind: _0 = <raw::RawIntoIter<T, A> as core::iter::Iterator>::fold::<B, F>(move _4, move _5, move _6) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2262:5: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb2, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2262:5: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb3, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2262:5: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2262:6: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2261:32: 2261:33 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2261:32: 2261:33 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2261:32: 2261:33 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb8, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2262:5: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2262:5: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb10, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2262:5: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb11, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2256:5: 2262:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: B/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2256:43: 2256:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: table::IntoIter<T/#0, A/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2256:19: 2256:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/table.rs:2256:31: 2256:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/table.rs:2256:25: 2256:29 (#0),
                            ),
                        ),
                        pat_span: src/table.rs:2256:25: 2256:29 (#0),
                    },
                ),
            ),
        ),
        ty: B/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2256:25: 2256:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/table.rs:2256:37: 2256:38 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/table.rs:2256:34: 2256:35 (#0),
                            ),
                        ),
                        pat_span: src/table.rs:2256:34: 2256:35 (#0),
                    },
                ),
            ),
        ),
        ty: F/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2256:34: 2256:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/table.rs:2261:9: 2261:33 (#0),
                },
            ),
        ),
        ty: raw::RawIntoIter<T/#0, A/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2261:9: 2261:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/table.rs:2261:9: 2261:33 (#0),
                },
            ),
        ),
        ty: B/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2261:25: 2261:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/table.rs:2261:9: 2261:33 (#0),
                },
            ),
        ),
        ty: F/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2261:31: 2261:32 (#0),
            scope: scope[0],
        },
    },
]