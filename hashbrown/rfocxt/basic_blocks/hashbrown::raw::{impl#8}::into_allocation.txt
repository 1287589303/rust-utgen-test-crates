[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(_1.0: raw::RawTableInner),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1361:24: 1361:55 (#0),
                    scope: scope[0],
                },
                kind: _3 = raw::RawTableInner::is_empty_singleton(move _4) -> [return: bb1, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1361:24: 1361:55 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _2 = core::option::Option::<(core::ptr::NonNull<u8>, core::alloc::Layout, A)>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1361:21: 1375:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb17,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &(_1.0: raw::RawTableInner),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1366:63: 1366:83 (#0),
                    scope: scope[0],
                },
                kind: _9 = raw::RawTableInner::buckets(move _10) -> [return: bb4, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1366:23: 1366:84 (#0),
                    scope: scope[0],
                },
                kind: _8 = raw::TableLayout::calculate_layout_for(const raw::RawTable::<T, A>::TABLE_LAYOUT, move _9) -> [return: bb5, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            PlaceMention(_8),
            _11 = discriminant(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1366:17: 1366:84 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _11) -> [0: bb8, 1: bb7, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1366:23: 1366:84 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1367:21: 1367:30 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb9, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1368:38: 1368:67 (#0),
                    scope: scope[0],
                },
                kind: _13 = core::hint::unreachable_unchecked() -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = ((_8 as Some).0: (core::alloc::Layout, usize)),
            _7 = _12,
            StorageDead(_12),
            PlaceMention(_7),
            StorageLive(_5),
            _5 = (_7.0: core::alloc::Layout),
            StorageLive(_6),
            _6 = (_7.1: usize),
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            _19 = ((_1.0: raw::RawTableInner).1: core::ptr::NonNull<u8>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1371:49: 1371:73 (#0),
                    scope: scope[2],
                },
                kind: _18 = core::ptr::NonNull::<u8>::as_ptr(move _19) -> [return: bb10, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageLive(_20),
            _20 = _6,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1371:49: 1371:90 (#0),
                    scope: scope[2],
                },
                kind: _17 = core::ptr::mut_ptr::<impl *mut u8>::sub(move _18, move _20) -> [return: bb11, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1371:49: 1371:97 (#0),
                    scope: scope[2],
                },
                kind: _16 = core::ptr::mut_ptr::<impl *mut u8>::cast::<u8>(move _17) -> [return: bb12, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1371:26: 1371:98 (#0),
                    scope: scope[2],
                },
                kind: _15 = core::ptr::NonNull::<u8>::new_unchecked(move _16) -> [return: bb13, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageLive(_21),
            _21 = _5,
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &(_1.1: A),
            _23 = &raw const (*_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1373:26: 1373:48 (#0),
                    scope: scope[2],
                },
                kind: _22 = core::ptr::read::<A>(move _23) -> [return: bb14, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            _14 = (move _15, move _21, move _22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1374:13: 1374:14 (#0),
                    scope: scope[2],
                },
                kind: drop(_22) -> [return: bb15, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_15),
            _2 = core::option::Option::<(core::ptr::NonNull<u8>, core::alloc::Layout, A)>::Some(move _14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1374:14: 1374:15 (#0),
                    scope: scope[2],
                },
                kind: drop(_14) -> [return: bb16, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1361:21: 1375:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb17,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_25),
            StorageLive(_26),
            _26 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1376:9: 1376:26 (#0),
                    scope: scope[1],
                },
                kind: _25 = core::mem::forget::<raw::RawTable<T, A>>(move _26) -> [return: bb18, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_25),
            _0 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1378:5: 1378:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb19, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1378:5: 1378:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb20, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1378:6: 1378:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1376:25: 1376:26 (#0),
                    scope: scope[1],
                },
                kind: drop(_26) -> [return: bb22, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1378:5: 1378:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb24, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1374:14: 1374:15 (#0),
                    scope: scope[2],
                },
                kind: drop(_14) -> [return: bb24, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1378:5: 1378:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb25, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:1360:5: 1378:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(core::ptr::NonNull<u8>, core::alloc::Layout, A/#1)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1360:44: 1360:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: raw::RawTable<T/#0, A/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1360:35: 1360:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/raw/mod.rs:1361:21: 1375:10 (#0),
                            ),
                        ),
                        pat_span: src/raw/mod.rs:1361:13: 1361:18 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<(core::ptr::NonNull<u8>, core::alloc::Layout, A/#1)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1361:13: 1361:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1361:24: 1361:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} raw::RawTableInner,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1361:24: 1361:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _7,
                                ),
                                src/raw/mod.rs:1366:17: 1369:18 (#0),
                            ),
                        ),
                        pat_span: src/raw/mod.rs:1365:17: 1365:38 (#0),
                    },
                ),
            ),
        ),
        ty: core::alloc::Layout,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1365:18: 1365:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _7,
                                ),
                                src/raw/mod.rs:1366:17: 1369:18 (#0),
                            ),
                        ),
                        pat_span: src/raw/mod.rs:1365:17: 1365:38 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1365:26: 1365:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (core::alloc::Layout, usize),
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1366:17: 1369:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(core::alloc::Layout, usize)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1366:23: 1366:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1366:63: 1366:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} raw::RawTableInner,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1366:63: 1366:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1367:21: 1367:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _8,
                                ),
                                src/raw/mod.rs:1366:23: 1366:84 (#0),
                            ),
                        ),
                        pat_span: src/raw/mod.rs:1367:21: 1367:30 (#0),
                    },
                ),
            ),
        ),
        ty: (core::alloc::Layout, usize),
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1367:26: 1367:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1368:38: 1368:67 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1368:38: 1368:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (core::ptr::NonNull<u8>, core::alloc::Layout, A/#1),
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1370:18: 1374:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1370:13: 1374:15 (#0),
                },
            ),
        ),
        ty: core::ptr::NonNull<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1371:17: 1371:100 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1371:26: 1371:98 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1371:49: 1371:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1371:26: 1371:98 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1371:49: 1371:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1371:26: 1371:98 (#0),
                },
            ),
        ),
        ty: *mut u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1371:49: 1371:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1371:26: 1371:98 (#0),
                },
            ),
        ),
        ty: core::ptr::NonNull<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1371:49: 1371:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1371:26: 1371:98 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1371:78: 1371:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1370:13: 1374:15 (#0),
                },
            ),
        ),
        ty: core::alloc::Layout,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1372:17: 1372:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1370:13: 1374:15 (#0),
                },
            ),
        ),
        ty: A/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1373:17: 1373:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1373:26: 1373:48 (#0),
                },
            ),
        ),
        ty: *const A/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1373:36: 1373:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:1373:26: 1373:48 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1373:36: 1373:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1376:9: 1376:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: raw::RawTable<T/#0, A/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:1376:21: 1376:25 (#0),
            scope: scope[0],
        },
    },
]