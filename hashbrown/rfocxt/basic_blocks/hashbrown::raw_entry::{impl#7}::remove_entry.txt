[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &mut (*(_1.1: &mut raw::RawTable<(K, V), A>)),
            StorageLive(_4),
            _4 = move (_1.0: raw::Bucket<(K, V)>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw_entry.rs:1243:18: 1243:46 (#0),
                    scope: scope[0],
                },
                kind: _2 = raw::RawTable::<(K, V), A>::remove(move _3, move _4) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
            _0 = move (_2.0: (K, V)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw_entry.rs:1244:5: 1244:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw_entry.rs:1244:6: 1244:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw_entry.rs:1242:5: 1244:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (K/#1, V/#2),
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw_entry.rs:1242:34: 1242:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: raw_entry::RawOccupiedEntryMut<'{erased}, K/#1, V/#2, S/#3, A/#4>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw_entry.rs:1242:25: 1242:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw_entry.rs:1243:18: 1243:48 (#0),
                },
            ),
        ),
        ty: ((K/#1, V/#2), raw::InsertSlot),
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw_entry.rs:1243:18: 1243:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw_entry.rs:1243:18: 1243:48 (#0),
                },
            ),
        ),
        ty: &'{erased} mut raw::RawTable<(K/#1, V/#2), A/#4>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw_entry.rs:1243:18: 1243:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw_entry.rs:1243:18: 1243:48 (#0),
                },
            ),
        ),
        ty: raw::Bucket<(K/#1, V/#2)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw_entry.rs:1243:36: 1243:45 (#0),
            scope: scope[0],
        },
    },
]