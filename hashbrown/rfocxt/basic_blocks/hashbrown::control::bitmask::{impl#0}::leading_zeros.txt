[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = (_1.0: u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/bitmask.rs:87:9: 87:31 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::num::<impl u16>::leading_zeros(move _4) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _2 = move _3 as usize (IntToInt),
            StorageDead(_3),
            _5 = Eq(const control::group::sse2::BITMASK_STRIDE, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/bitmask.rs:87:9: 87:57 (#0),
                    scope: scope[0],
                },
                kind: assert(!move _5, "attempt to divide `{}` by zero", _2) -> [success: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = Div(move _2, const control::group::sse2::BITMASK_STRIDE),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/bitmask.rs:88:6: 88:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/bitmask.rs:86:5: 88:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/bitmask.rs:86:42: 86:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: control::bitmask::BitMask,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/bitmask.rs:86:33: 86:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/bitmask.rs:87:9: 87:57 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/bitmask.rs:87:9: 87:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/bitmask.rs:87:9: 87:57 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/bitmask.rs:87:9: 87:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/bitmask.rs:87:9: 87:57 (#0),
                },
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/bitmask.rs:87:9: 87:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/bitmask.rs:87:9: 87:57 (#0),
            scope: scope[0],
        },
    },
]