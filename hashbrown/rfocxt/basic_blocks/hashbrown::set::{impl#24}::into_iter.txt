[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1745:9: 1745:20 (#0),
                    scope: scope[0],
                },
                kind: _0 = set::HashSet::<T, S, A>::iter(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1746:6: 1746:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1744:5: 1746:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: set::Iter<'{erased}, T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1744:27: 1744:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: &'{erased} set::HashSet<T/#1, S/#2, A/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1744:18: 1744:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1745:9: 1745:20 (#0),
                },
            ),
        ),
        ty: &'{erased} set::HashSet<T/#1, S/#2, A/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1745:9: 1745:13 (#0),
            scope: scope[0],
        },
    },
]