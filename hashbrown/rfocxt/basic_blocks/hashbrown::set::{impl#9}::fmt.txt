[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1252:9: 1252:22 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::fmt::Formatter::<'_>::debug_set(move _7) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &mut _6,
            StorageDead(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1252:31: 1252:42 (#0),
                    scope: scope[0],
                },
                kind: _8 = set::HashSet::<T, S, A>::iter(move _9) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1252:9: 1252:43 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::fmt::DebugSet::<'_, '_>::entries::<&T, set::Iter<'_, T>>(move _5, move _8) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &mut (*_4),
            StorageDead(_8),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1252:9: 1252:52 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::DebugSet::<'_, '_>::finish(move _3) -> [return: bb4, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1253:6: 1253:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/set.rs:1251:5: 1253:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1251:50: 1251:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} set::HashSet<T/#0, S/#1, A/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1251:12: 1251:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/set.rs:1251:22: 1251:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/set.rs:1251:19: 1251:20 (#0),
                            ),
                        ),
                        pat_span: src/set.rs:1251:19: 1251:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1251:19: 1251:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1252:9: 1252:52 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugSet<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1252:9: 1252:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1252:9: 1252:52 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugSet<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1252:9: 1252:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1252:9: 1252:52 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugSet<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1252:9: 1252:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1252:9: 1252:52 (#0),
                },
            ),
        ),
        ty: core::fmt::DebugSet<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1252:9: 1252:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1252:9: 1252:52 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1252:9: 1252:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1252:9: 1252:52 (#0),
                },
            ),
        ),
        ty: set::Iter<'{erased}, T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1252:31: 1252:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/set.rs:1252:9: 1252:52 (#0),
                },
            ),
        ),
        ty: &'{erased} set::HashSet<T/#0, S/#1, A/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/set.rs:1252:31: 1252:35 (#0),
            scope: scope[0],
        },
    },
]