[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &((*_1).1: raw::Bucket<(K, V)>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:3820:19: 3820:37 (#0),
                    scope: scope[0],
                },
                kind: _3 = raw::Bucket::<(K, V)>::as_ref::<'_>(move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _2 = &((*_3).1: V),
            _0 = &(*_2),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:3821:6: 3821:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:3819:5: 3821:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3819:26: 3819:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} map::OccupiedEntry<'{erased}, K/#1, V/#2, S/#3, A/#4>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3819:16: 3819:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:3820:18: 3820:39 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3820:18: 3820:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:3820:18: 3820:39 (#0),
                },
            ),
        ),
        ty: &'{erased} (K/#1, V/#2),
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3820:19: 3820:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:3820:18: 3820:39 (#0),
                },
            ),
        ),
        ty: &'{erased} raw::Bucket<(K/#1, V/#2)>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3820:19: 3820:28 (#0),
            scope: scope[0],
        },
    },
]