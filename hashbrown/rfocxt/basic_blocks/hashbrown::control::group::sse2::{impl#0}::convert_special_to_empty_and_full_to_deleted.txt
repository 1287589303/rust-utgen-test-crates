[
    BasicBlockData {
        statements: [
            StorageLive(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:138:24: 138:48 (#0),
                    scope: scope[1],
                },
                kind: _2 = core::arch::x86_64::_mm_setzero_si128() -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = _2,
            StorageLive(_5),
            _5 = (_1.0: core::arch::x86_64::__m128i),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:139:27: 139:60 (#0),
                    scope: scope[2],
                },
                kind: _3 = core::arch::x86_64::_mm_cmpgt_epi8(move _4, move _5) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_6),
            StorageLive(_7),
            _7 = _3,
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = const control::tag::Tag::DELETED,
            _10 = (_11.0: u8),
            _9 = move _10 as i8 (IntToInt),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:142:17: 142:57 (#0),
                    scope: scope[3],
                },
                kind: _8 = core::arch::x86_64::_mm_set1_epi8(move _9) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:140:19: 143:14 (#0),
                    scope: scope[3],
                },
                kind: _6 = core::arch::x86_64::_mm_or_si128(move _7, move _8) -> [return: bb4, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            _0 = control::group::sse2::Group(move _6),
            StorageDead(_6),
            StorageDead(_3),
            StorageDead(_2),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:145:6: 145:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:126:5: 145:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: control::group::sse2::Group,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:126:73: 126:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: control::group::sse2::Group,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:126:64: 126:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/control/group/sse2.rs:138:24: 138:48 (#0),
                            ),
                        ),
                        pat_span: src/control/group/sse2.rs:138:17: 138:21 (#0),
                    },
                ),
            ),
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:138:17: 138:21 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/control/group/sse2.rs:139:27: 139:60 (#0),
                            ),
                        ),
                        pat_span: src/control/group/sse2.rs:139:17: 139:24 (#0),
                    },
                ),
            ),
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:139:17: 139:24 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:139:47: 139:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:139:53: 139:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:140:19: 143:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/group/sse2.rs:140:13: 143:15 (#0),
                },
            ),
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:141:17: 141:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/group/sse2.rs:140:13: 143:15 (#0),
                },
            ),
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:142:17: 142:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/group/sse2.rs:140:13: 143:15 (#0),
                },
            ),
        ),
        ty: i8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:142:36: 142:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/group/sse2.rs:140:13: 143:15 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:142:36: 142:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:46 ~ hashbrown[7d72]::control::tag::{impl#0}::DELETED),
            },
        ),
        ty: control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:142:36: 142:48 (#0),
            scope: scope[0],
        },
    },
]