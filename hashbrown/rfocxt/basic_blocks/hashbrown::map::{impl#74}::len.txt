[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &((*_1).0: raw::RawDrain<'_, (K, V), A>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:3456:9: 3456:25 (#0),
                    scope: scope[0],
                },
                kind: _0 = <raw::RawDrain<'_, (K, V), A> as core::iter::ExactSizeIterator>::len(move _2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:3457:6: 3457:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:3455:5: 3457:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3455:22: 3455:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} map::Drain<'{erased}, K/#1, V/#2, A/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3455:12: 3455:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:3456:9: 3456:25 (#0),
                },
            ),
        ),
        ty: &'{erased} raw::RawDrain<'{erased}, (K/#1, V/#2), A/#3>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:3456:9: 3456:19 (#0),
            scope: scope[0],
        },
    },
]