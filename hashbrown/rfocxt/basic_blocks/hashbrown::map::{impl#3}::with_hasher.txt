[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = move _1,
            StorageLive(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:460:20: 460:35 (#0),
                    scope: scope[0],
                },
                kind: _3 = raw::RawTable::<(K, V)>::new() -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = map::HashMap::<K, V, S> { hash_builder: move _2, table: move _3 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:461:9: 461:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:461:9: 461:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:462:5: 462:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:462:6: 462:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:461:9: 461:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:462:5: 462:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:457:5: 462:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::HashMap<K/#0, V/#1, S/#2, allocator_api2::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:457:50: 457:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/map.rs:457:44: 457:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/map.rs:457:30: 457:42 (#0),
                            ),
                        ),
                        pat_span: src/map.rs:457:30: 457:42 (#0),
                    },
                ),
            ),
        ),
        ty: S/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:457:30: 457:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: S/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:459:13: 459:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: raw::RawTable<(K/#0, V/#1), allocator_api2::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:460:20: 460:35 (#0),
            scope: scope[0],
        },
    },
]