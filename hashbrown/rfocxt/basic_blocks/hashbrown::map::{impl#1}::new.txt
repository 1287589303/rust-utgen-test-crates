[
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:290:9: 290:24 (#0),
                    scope: scope[0],
                },
                kind: _0 = <map::HashMap<K, V> as core::default::Default>::default() -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:291:6: 291:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:289:5: 291:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::HashMap<K/#0, V/#1, foldhash::fast::RandomState, allocator_api2::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:289:21: 289:25 (#0),
            scope: scope[0],
        },
    },
]