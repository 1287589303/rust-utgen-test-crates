[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:81:18: 81:35 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::slice::<impl [control::tag::Tag]>::as_mut_ptr(move _4) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            _5 = (_2.0: u8),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:81:55: 81:65 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::slice::<impl [control::tag::Tag]>::len(move _7) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:81:18: 81:66 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::ptr::mut_ptr::<impl *mut control::tag::Tag>::write_bytes(move _3, move _5, move _6) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:82:6: 82:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:79:5: 82:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:79:37: 79:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut [control::tag::Tag],
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:79:17: 79:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/control/tag.rs:79:33: 79:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/control/tag.rs:79:28: 79:31 (#0),
                            ),
                        ),
                        pat_span: src/control/tag.rs:79:28: 79:31 (#0),
                    },
                ),
            ),
        ),
        ty: control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:79:28: 79:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/control/tag.rs:81:18: 81:66 (#0),
                },
            ),
        ),
        ty: *mut control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:81:18: 81:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/control/tag.rs:81:18: 81:66 (#0),
                },
            ),
        ),
        ty: &'{erased} mut [control::tag::Tag],
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:81:18: 81:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/control/tag.rs:81:18: 81:66 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:81:48: 81:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/control/tag.rs:81:18: 81:66 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:81:55: 81:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: src/control/tag.rs:81:18: 81:66 (#0),
                },
            ),
        ),
        ty: &'{erased} [control::tag::Tag],
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:81:55: 81:59 (#0),
            scope: scope[0],
        },
    },
]