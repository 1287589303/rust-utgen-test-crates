[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
            StorageLive(_5),
            _5 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:21:5: 21:25 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::ptr::const_ptr::<impl *const T>::offset_from(move _4, move _5) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            _0 = move _3 as usize (IntToInt),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:22:2: 22:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/raw/mod.rs:20:1: 22:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:20:59: 20:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/raw/mod.rs:20:30: 20:38 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/raw/mod.rs:20:26: 20:28 (#0),
                            ),
                        ),
                        pat_span: src/raw/mod.rs:20:26: 20:28 (#0),
                    },
                ),
            ),
        ),
        ty: *const T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:20:26: 20:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/raw/mod.rs:20:46: 20:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/raw/mod.rs:20:40: 20:44 (#0),
                            ),
                        ),
                        pat_span: src/raw/mod.rs:20:40: 20:44 (#0),
                    },
                ),
            ),
        ),
        ty: *const T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:20:40: 20:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:21:5: 21:34 (#0),
                },
            ),
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:21:5: 21:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:21:5: 21:34 (#0),
                },
            ),
        ),
        ty: *const T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:21:5: 21:7 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/raw/mod.rs:21:5: 21:34 (#0),
                },
            ),
        ),
        ty: *const T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/raw/mod.rs:21:20: 21:24 (#0),
            scope: scope[0],
        },
    },
]