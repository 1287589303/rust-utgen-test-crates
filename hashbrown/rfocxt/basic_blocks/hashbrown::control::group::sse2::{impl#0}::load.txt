[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:52:36: 52:46 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::ptr::const_ptr::<impl *const control::tag::Tag>::cast::<core::arch::x86_64::__m128i>(move _4) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:52:15: 52:47 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::arch::x86_64::_mm_loadu_si128(move _3) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            _0 = control::group::sse2::Group(move _2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:53:6: 53:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:51:5: 53:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: control::group::sse2::Group,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:51:51: 51:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/control/group/sse2.rs:51:36: 51:46 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/control/group/sse2.rs:51:31: 51:34 (#0),
                            ),
                        ),
                        pat_span: src/control/group/sse2.rs:51:31: 51:34 (#0),
                    },
                ),
            ),
        ),
        ty: *const control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:51:31: 51:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:52:15: 52:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/group/sse2.rs:52:9: 52:48 (#0),
                },
            ),
        ),
        ty: *const core::arch::x86_64::__m128i,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:52:36: 52:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/group/sse2.rs:52:9: 52:48 (#0),
                },
            ),
        ),
        ty: *const control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:52:36: 52:39 (#0),
            scope: scope[0],
        },
    },
]