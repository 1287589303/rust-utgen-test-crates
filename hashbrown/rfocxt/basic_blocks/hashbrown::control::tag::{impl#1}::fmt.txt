[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:54:12: 54:29 (#0),
                    scope: scope[0],
                },
                kind: _3 = control::tag::Tag::is_special(move _4) -> [return: bb1, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:54:12: 54:29 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb9, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:55:16: 55:39 (#0),
                    scope: scope[0],
                },
                kind: _5 = control::tag::Tag::special_is_empty(move _6) -> [return: bb3, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:55:16: 55:39 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb6, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_7),
            _7 = &mut (*_2),
            StorageLive(_8),
            StorageLive(_9),
            _9 = const "EMPTY",
            _8 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:56:17: 56:31 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::pad(move _7, move _8) -> [return: bb5, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:55:13: 59:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_10),
            _10 = &mut (*_2),
            StorageLive(_11),
            StorageLive(_12),
            _12 = const "DELETED",
            _11 = &(*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:58:17: 58:33 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::pad(move _10, move _11) -> [return: bb7, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:55:13: 59:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:54:9: 62:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &mut (*_2),
            StorageLive(_18),
            StorageLive(_19),
            _19 = const "full",
            _18 = &(*_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:61:13: 61:34 (#0),
                    scope: scope[0],
                },
                kind: _16 = core::fmt::Formatter::<'_>::debug_tuple(move _17, move _18) -> [return: bb10, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _15 = &mut _16,
            StorageDead(_18),
            StorageDead(_17),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = ((*_1).0: u8),
            _23 = BitAnd(move _24, const 127_u8),
            StorageDead(_24),
            _22 = &_23,
            _21 = &(*_22),
            _20 = move _21 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:61:13: 61:58 (#0),
                    scope: scope[0],
                },
                kind: _14 = core::fmt::DebugTuple::<'_, '_>::field(move _15, move _20) -> [return: bb11, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = &mut (*_14),
            StorageDead(_20),
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::DebugTuple::<'_, '_>::finish(move _13) -> [return: bb12, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_23),
            StorageDead(_22),
            StorageDead(_19),
            StorageDead(_16),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:54:9: 62:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:63:6: 63:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/tag.rs:53:5: 63:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:53:50: 53:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:53:12: 53:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/control/tag.rs:53:22: 53:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/control/tag.rs:53:19: 53:20 (#0),
                            ),
                        ),
                        pat_span: src/control/tag.rs:53:19: 53:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:53:19: 53:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:54:9: 62:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:54:12: 54:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:54:9: 62:10 (#0),
                },
            ),
        ),
        ty: control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:54:12: 54:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:55:13: 59:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:55:16: 55:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:55:13: 59:14 (#0),
                },
            ),
        ),
        ty: control::tag::Tag,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:55:16: 55:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:56:17: 56:31 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:56:17: 56:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:56:17: 56:31 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:56:23: 56:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:56:17: 56:31 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:56:23: 56:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:58:17: 58:33 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:58:17: 58:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:58:17: 58:33 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:58:23: 58:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:58:17: 58:33 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:58:23: 58:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:13: 61:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:13: 61:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:13: 61:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:13: 61:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:13: 61:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:27: 61:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:27: 61:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:41: 61:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:41: 61:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: &'{erased} u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:41: 61:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:42: 61:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/tag.rs:61:13: 61:67 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/tag.rs:61:43: 61:49 (#0),
            scope: scope[0],
        },
    },
]