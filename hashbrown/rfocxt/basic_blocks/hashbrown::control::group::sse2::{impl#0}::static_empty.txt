[
    BasicBlockData {
        statements: [
            StorageLive(_1),
            StorageLive(_2),
            _2 = const control::group::sse2::Group::static_empty::ALIGNED_TAGS,
            _1 = &(_2.1: [control::tag::Tag; 16]),
            _0 = &(*_1),
            StorageDead(_2),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/control/group/sse2.rs:46:6: 46:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [control::tag::Tag; 16_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:35:43: 35:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/control/group/sse2.rs:45:9: 45:27 (#0),
                },
            ),
        ),
        ty: &'{erased} [control::tag::Tag; 16_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:45:9: 45:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:2517 ~ hashbrown[7d72]::control::group::sse2::{impl#0}::static_empty::ALIGNED_TAGS),
            },
        ),
        ty: control::group::sse2::Group::static_empty::AlignedTags,
        user_ty: None,
        source_info: SourceInfo {
            span: src/control/group/sse2.rs:45:10: 45:22 (#0),
            scope: scope[0],
        },
    },
]