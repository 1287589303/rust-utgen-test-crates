[
    BasicBlockData {
        statements: [
            StorageLive(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2107:20: 2107:38 (#0),
                    scope: scope[0],
                },
                kind: _1 = <raw::RawIterHash<T> as core::default::Default>::default() -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = core::marker::PhantomData::<&T>,
            _0 = table::IterHash::<'_, T> { inner: move _1, marker: move _2 },
            StorageDead(_2),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2110:6: 2110:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/table.rs:2105:5: 2110:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: table::IterHash<'{erased}, T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2105:21: 2105:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: raw::RawIterHash<T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2107:20: 2107:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::marker::PhantomData<&'{erased} T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/table.rs:2108:21: 2108:32 (#0),
            scope: scope[0],
        },
    },
]