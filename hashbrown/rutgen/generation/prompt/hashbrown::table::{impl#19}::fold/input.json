{
  "system_pt": "As a software testing expert, infer the test input conditions or ranges based on the provided information. Follow these guidelines:\n1. Provide test input conditions or ranges in one line in plain text only, without additional explanations or Markdown formatting\n2. Analyze the function under test, context, preconditions, and expected return values or types to determine appropriate test input conditions or ranges\n3. The inferred test input conditions or ranges should comprehensively satisfy all provided preconditions simultaneously.\n4. Ensure the test input conditions or ranges cover boundary cases and edge scenarios\n",
  "static_pt": "The context for the focal function is as follows:\n// src/table.rs\n// crate name is hashbrown\nuse core::{fmt, iter::FusedIterator, marker::PhantomData};\nuse crate::{\n    raw::{\n        Allocator, Bucket, Global, InsertSlot, RawDrain, RawExtractIf, RawIntoIter,\n        RawIter, RawIterHash, RawTable,\n    },\n    TryReserveError,\n};\npub struct Iter<'a, T> {\n    inner: RawIter<T>,\n    marker: PhantomData<&'a T>,\n}\npub struct RawIter<T> {\n    pub(crate) iter: RawIterRange<T>,\n    items: usize,\n}\nimpl<'a, T> Iterator for Iter<'a, T> {\n    type Item = &'a T;\n    fn next(&mut self) -> Option<Self::Item> {\n        match self.inner.next() {\n            Some(bucket) => Some(unsafe { bucket.as_ref() }),\n            None => None,\n        }\n    }\n    fn size_hint(&self) -> (usize, Option<usize>) {}\n    fn fold<B, F>(self, init: B, mut f: F) -> B\n    where\n        Self: Sized,\n        F: FnMut(B, Self::Item) -> B,\n    {\n        self.inner.fold(init, |acc, bucket| unsafe { f(acc, bucket.as_ref()) })\n    }\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n1986 fn fold<B, F>(self, init: B, mut f: F) -> B\n1987 where\n1988     Self: Sized,\n1989     F: FnMut(B, Self::Item) -> B,\n1990 {\n1991     self.inner\n1992         .fold(init, |acc, bucket| unsafe { f(acc, bucket.as_ref()) })\n1993 }\n\nWhen inferring test input conditions or ranges, consider the following preconditions and expected return values or types:\n"
}