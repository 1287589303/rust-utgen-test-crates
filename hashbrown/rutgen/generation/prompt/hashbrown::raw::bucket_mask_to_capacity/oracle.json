{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// src/raw/mod.rs\n// crate name is hashbrown\nuse crate::alloc::alloc::{handle_alloc_error, Layout};\nuse crate::control::{BitMaskIter, Group, Tag, TagSliceExt};\nuse crate::scopeguard::{guard, ScopeGuard};\nuse crate::util::{invalid_mut, likely, unlikely};\nuse crate::TryReserveError;\nuse core::array;\nuse core::iter::FusedIterator;\nuse core::marker::PhantomData;\nuse core::mem;\nuse core::ptr::NonNull;\nuse core::slice;\nuse core::{hint, ptr};\n#[cfg(test)]\npub(crate) use self::alloc::AllocError;\npub(crate) use self::alloc::{do_alloc, Allocator, Global};\n#[inline]\nfn bucket_mask_to_capacity(bucket_mask: usize) -> usize {\n    if bucket_mask < 8 { bucket_mask } else { ((bucket_mask + 1) / 8) * 7 }\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Returns the maximum effective capacity for the given bucket mask, taking\n/// the maximum load factor into account.\n130 fn bucket_mask_to_capacity(bucket_mask: usize) -> usize {\n131     if bucket_mask < 8 {\n132         // For tables with 1/2/4/8 buckets, we always reserve one empty slot.\n133         // Keep in mind that the bucket mask is one less than the bucket count.\n134         bucket_mask\n135     } else {\n136         // For larger tables we reserve 12.5% of the slots as empty.\n137         ((bucket_mask + 1) / 8) * 7\n138     }\n139 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}