[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: 0,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(raw_table_inner.buckets(), 0 + 1);",
          "    let raw_table_inner = RawTableInner { bucket_mask: 5, ctrl: NonNull::new_unchecked(std::ptr::null_mut()), growth_left: 0, items: 0 };",
          "    assert_eq!(raw_table_inner.buckets(), 5 + 1);",
          "    let raw_table_inner = RawTableInner { bucket_mask: usize::MAX, ctrl: NonNull::new_unchecked(std::ptr::null_mut()), growth_left: 0, items: 0 };",
          "    assert_eq!(raw_table_inner.buckets(), usize::MAX + 1);"
        ],
        "code": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: 0,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "    assert_eq!(raw_table_inner.buckets(), 0 + 1);",
          "    let raw_table_inner = RawTableInner { bucket_mask: 5, ctrl: NonNull::new_unchecked(std::ptr::null_mut()), growth_left: 0, items: 0 };",
          "    assert_eq!(raw_table_inner.buckets(), 5 + 1);",
          "    let raw_table_inner = RawTableInner { bucket_mask: usize::MAX, ctrl: NonNull::new_unchecked(std::ptr::null_mut()), growth_left: 0, items: 0 };",
          "    assert_eq!(raw_table_inner.buckets(), usize::MAX + 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: 1,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(raw_table_inner.buckets(), 2);",
          "    raw_table_inner.bucket_mask = 0;",
          "    assert_eq!(raw_table_inner.buckets(), 1);",
          "    raw_table_inner.bucket_mask = 7;",
          "    assert_eq!(raw_table_inner.buckets(), 8);",
          "    raw_table_inner.bucket_mask = usize::MAX;",
          "    assert_eq!(raw_table_inner.buckets(), usize::MAX + 1);"
        ],
        "code": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: 1,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "    assert_eq!(raw_table_inner.buckets(), 2);",
          "    raw_table_inner.bucket_mask = 0;",
          "    assert_eq!(raw_table_inner.buckets(), 1);",
          "    raw_table_inner.bucket_mask = 7;",
          "    assert_eq!(raw_table_inner.buckets(), 8);",
          "    raw_table_inner.bucket_mask = usize::MAX;",
          "    assert_eq!(raw_table_inner.buckets(), usize::MAX + 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: usize::MAX,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(raw_table_inner.buckets(), usize::MAX + 1);"
        ],
        "code": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: usize::MAX,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "    assert_eq!(raw_table_inner.buckets(), usize::MAX + 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: 123456,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(raw_table_inner.buckets(), 123456 + 1);"
        ],
        "code": [
          "{",
          "    let raw_table_inner = RawTableInner {",
          "        bucket_mask: 123456,",
          "        ctrl: NonNull::new_unchecked(std::ptr::null_mut()),",
          "        growth_left: 0,",
          "        items: 0,",
          "    };",
          "    let _ = raw_table_inner.buckets();",
          "    assert_eq!(raw_table_inner.buckets(), 123456 + 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]