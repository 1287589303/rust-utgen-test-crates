[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut libraries = crate::HashMap::new();",
          "    libraries.insert(\"Bodleian Library\".to_string(), 1602);",
          "    libraries.insert(\"Athenæum\".to_string(), 1807);",
          "    libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);",
          "    libraries.insert(\"Library of Congress\".to_string(), 1800);",
          "",
          "    let got = libraries.get_many_key_value_mut([",
          "        \"Bodleian Library\",",
          "        \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ]);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(got, [Some((&\"Bodleian Library\".to_string(), &mut 1602)), Some((&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691)),]);",
          "    ",
          "    let got = libraries.get_many_key_value_mut([",
          "    \"Bodleian Library\",",
          "    \"Gewandhaus\",",
          "    ]);",
          "    assert_eq!(got, [Some((&\"Bodleian Library\".to_string(), &mut 1602)), None]);",
          "    ",
          "    let result = std::panic::catch_unwind(|| {",
          "    libraries.get_many_key_value_mut([",
          "    \"Bodleian Library\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ]);",
          "    });",
          "    assert!(result.is_err());"
        ],
        "code": [
          "{",
          "    let mut libraries = crate::HashMap::new();",
          "    libraries.insert(\"Bodleian Library\".to_string(), 1602);",
          "    libraries.insert(\"Athenæum\".to_string(), 1807);",
          "    libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);",
          "    libraries.insert(\"Library of Congress\".to_string(), 1800);",
          "",
          "    let got = libraries.get_many_key_value_mut([",
          "        \"Bodleian Library\",",
          "        \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ]);",
          "    assert_eq!(got, [Some((&\"Bodleian Library\".to_string(), &mut 1602)), Some((&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691)),]);",
          "    ",
          "    let got = libraries.get_many_key_value_mut([",
          "    \"Bodleian Library\",",
          "    \"Gewandhaus\",",
          "    ]);",
          "    assert_eq!(got, [Some((&\"Bodleian Library\".to_string(), &mut 1602)), None]);",
          "    ",
          "    let result = std::panic::catch_unwind(|| {",
          "    libraries.get_many_key_value_mut([",
          "    \"Bodleian Library\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ]);",
          "    });",
          "    assert!(result.is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut libraries = crate::HashMap::new();",
          "    libraries.insert(\"Bodleian Library\".to_string(), 1602);",
          "",
          "    let got = libraries.get_many_key_value_mut([",
          "        \"Bodleian Library\",",
          "        \"Non-existent Library\",",
          "    ]);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(got, [Some((&\"Bodleian Library\".to_string(), &mut 1602)), None]);"
        ],
        "code": [
          "{",
          "    let mut libraries = crate::HashMap::new();",
          "    libraries.insert(\"Bodleian Library\".to_string(), 1602);",
          "",
          "    let got = libraries.get_many_key_value_mut([",
          "        \"Bodleian Library\",",
          "        \"Non-existent Library\",",
          "    ]);",
          "    assert_eq!(got, [Some((&\"Bodleian Library\".to_string(), &mut 1602)), None]);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let mut libraries = crate::HashMap::new();",
          "    libraries.insert(\"Bodleian Library\".to_string(), 1602);",
          "    libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);",
          "",
          "    let got = libraries.get_many_key_value_mut([",
          "        \"Bodleian Library\",",
          "        \"Herzogin-Anna-Amalia-Bibliothek\",",
          "        \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ]);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(libraries.get_many_key_value_mut([\"Bodleian Library\", \"Herzogin-Anna-Amalia-Bibliothek\"]),",
          "    [Some((&\"Bodleian Library\".to_string(), &mut 1602)), Some((&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691))]);",
          "    assert_eq!(libraries.get_many_key_value_mut([\"Bodleian Library\", \"Gewandhaus\"]),",
          "    [Some((&\"Bodleian Library\".to_string(), &mut 1602)), None]);",
          "    assert!(std::panic::catch_unwind(|| {",
          "    libraries.get_many_key_value_mut([",
          "    \"Bodleian Library\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ])",
          "    }).is_err());"
        ],
        "code": [
          "{",
          "    let mut libraries = crate::HashMap::new();",
          "    libraries.insert(\"Bodleian Library\".to_string(), 1602);",
          "    libraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);",
          "",
          "    let got = libraries.get_many_key_value_mut([",
          "        \"Bodleian Library\",",
          "        \"Herzogin-Anna-Amalia-Bibliothek\",",
          "        \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ]);",
          "    assert_eq!(libraries.get_many_key_value_mut([\"Bodleian Library\", \"Herzogin-Anna-Amalia-Bibliothek\"]),",
          "    [Some((&\"Bodleian Library\".to_string(), &mut 1602)), Some((&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691))]);",
          "    assert_eq!(libraries.get_many_key_value_mut([\"Bodleian Library\", \"Gewandhaus\"]),",
          "    [Some((&\"Bodleian Library\".to_string(), &mut 1602)), None]);",
          "    assert!(std::panic::catch_unwind(|| {",
          "    libraries.get_many_key_value_mut([",
          "    \"Bodleian Library\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    \"Herzogin-Anna-Amalia-Bibliothek\",",
          "    ])",
          "    }).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]