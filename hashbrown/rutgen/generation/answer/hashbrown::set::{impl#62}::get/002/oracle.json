[
  {
    "uses": [
      "use hashbrown::HashSet;"
    ],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    use hashbrown::HashSet;",
          "",
          "    let mut set: HashSet<&str> = HashSet::new();",
          "    set.insert(\"poneyland\");",
          "",
          "    let entry = set.entry(\"poneyland\");",
          "    let value = entry.get();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(value, &\"poneyland\");",
          "    assert!(matches!(entry, Entry::Occupied(_)));"
        ],
        "code": [
          "{",
          "    use hashbrown::HashSet;",
          "",
          "    let mut set: HashSet<&str> = HashSet::new();",
          "    set.insert(\"poneyland\");",
          "",
          "    let entry = set.entry(\"poneyland\");",
          "    let value = entry.get();",
          "    assert_eq!(value, &\"poneyland\");",
          "    assert!(matches!(entry, Entry::Occupied(_)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    use hashbrown::HashSet;",
          "",
          "    let mut set: HashSet<&str> = HashSet::new();",
          "    ",
          "    let entry = set.entry(\"horseland\");",
          "    let value = entry.get();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(value, &\"horseland\");",
          "    assert!(matches!(entry, Entry::Vacant(_)));"
        ],
        "code": [
          "{",
          "    use hashbrown::HashSet;",
          "",
          "    let mut set: HashSet<&str> = HashSet::new();",
          "    ",
          "    let entry = set.entry(\"horseland\");",
          "    let value = entry.get();",
          "    assert_eq!(value, &\"horseland\");",
          "    assert!(matches!(entry, Entry::Vacant(_)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]