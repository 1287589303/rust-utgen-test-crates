[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let iter: Iter<()> = Default::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(iter.iter, Default::default());"
        ],
        "code": [
          "{",
          "    let iter: Iter<()> = Default::default();",
          "    assert_eq!(iter.iter, Default::default());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let iter: Iter<u32> = Default::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(iter.iter, Default::default());",
          "    assert!(std::mem::size_of::<Iter<u32>>() > 0);",
          "    assert!(std::mem::is_zeroed(&iter));"
        ],
        "code": [
          "{",
          "    let iter: Iter<u32> = Default::default();",
          "    assert_eq!(iter.iter, Default::default());",
          "    assert!(std::mem::size_of::<Iter<u32>>() > 0);",
          "    assert!(std::mem::is_zeroed(&iter));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let iter: Iter<String> = Default::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(iter.iter, Default::default());"
        ],
        "code": [
          "{",
          "    let iter: Iter<String> = Default::default();",
          "    assert_eq!(iter.iter, Default::default());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]