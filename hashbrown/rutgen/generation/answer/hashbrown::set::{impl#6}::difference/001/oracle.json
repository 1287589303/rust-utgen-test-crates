[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [4, 5, 6].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "}"
        ],
        "oracle": [
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [4, 5, 6].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());"
        ],
        "code": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [4, 5, 6].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [4, 5, 6].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [2, 3, 4].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "}"
        ],
        "oracle": [
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [2, 3, 4].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.iter, a.iter());",
          "    assert_eq!(diff.other, &b);"
        ],
        "code": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [2, 3, 4].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [2, 3, 4].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.iter, a.iter());",
          "    assert_eq!(diff.other, &b);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "}"
        ],
        "oracle": [
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());"
        ],
        "code": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: HashSet<_> = [].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "}"
        ],
        "oracle": [
          "    let a: HashSet<_> = [].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());"
        ],
        "code": [
          "{",
          "    let a: HashSet<_> = [].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    let a: HashSet<_> = [].iter().cloned().collect();",
          "    let b: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter.len(), 3);",
          "    assert!(diff.iter.contains(&1));",
          "    assert!(diff.iter.contains(&2));",
          "    assert!(diff.iter.contains(&3));",
          "    assert!(!diff.iter.contains(&4));"
        ],
        "code": [
          "{",
          "    let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();",
          "    let b: HashSet<_> = [].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter.len(), 3);",
          "    assert!(diff.iter.contains(&1));",
          "    assert!(diff.iter.contains(&2));",
          "    assert!(diff.iter.contains(&3));",
          "    assert!(!diff.iter.contains(&4));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: HashSet<_> = [].iter().cloned().collect();",
          "    let b: HashSet<_> = [].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "}"
        ],
        "oracle": [
          "    let a: HashSet<i32> = [].iter().cloned().collect();",
          "    let b: HashSet<i32> = [].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());"
        ],
        "code": [
          "{",
          "    let a: HashSet<_> = [].iter().cloned().collect();",
          "    let b: HashSet<_> = [].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    let a: HashSet<i32> = [].iter().cloned().collect();",
          "    let b: HashSet<i32> = [].iter().cloned().collect();",
          "    let diff = a.difference(&b);",
          "    assert_eq!(diff.other, &b);",
          "    assert_eq!(diff.iter, a.iter());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]