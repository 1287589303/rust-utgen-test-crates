[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0000_0000); // 0",
          "    let mut formatter = fmt::Formatter::default();",
          "    let _ = tag.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.buffer(), \"full(0)\");",
          "    assert!(tag.is_special() == false);",
          "    assert!(tag.is_full() == false);",
          "    assert_eq!(tag.0, 0b0000_0000);",
          "    assert!(tag.special_is_empty() == false);"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0000_0000); // 0",
          "    let mut formatter = fmt::Formatter::default();",
          "    let _ = tag.fmt(&mut formatter);",
          "    assert_eq!(formatter.buffer(), \"full(0)\");",
          "    assert!(tag.is_special() == false);",
          "    assert!(tag.is_full() == false);",
          "    assert_eq!(tag.0, 0b0000_0000);",
          "    assert!(tag.special_is_empty() == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0111_1111); // 127",
          "    let mut formatter = fmt::Formatter::default();",
          "    let _ = tag.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.buffer(), \"full(127)\");",
          "    assert!(tag.is_special() == false);",
          "    assert!(tag.is_full() == false);",
          "    assert_eq!(tag.0, 0b0111_1111);",
          "    assert!(!tag.special_is_empty());"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0111_1111); // 127",
          "    let mut formatter = fmt::Formatter::default();",
          "    let _ = tag.fmt(&mut formatter);",
          "    assert_eq!(formatter.buffer(), \"full(127)\");",
          "    assert!(tag.is_special() == false);",
          "    assert!(tag.is_full() == false);",
          "    assert_eq!(tag.0, 0b0111_1111);",
          "    assert!(!tag.special_is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0111_1110); // 126",
          "    let mut formatter = fmt::Formatter::default();",
          "    let _ = tag.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.buffer(), r#\"full(126)\"#);"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0111_1110); // 126",
          "    let mut formatter = fmt::Formatter::default();",
          "    let _ = tag.fmt(&mut formatter);",
          "    assert_eq!(formatter.buffer(), r#\"full(126)\"#);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]