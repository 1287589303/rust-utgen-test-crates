[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0111_1111); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0111_1111); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0000_0000); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);",
          "    let tag = Tag(0b0000_0000);",
          "    assert_eq!(tag.0, 0b0000_0000);",
          "    assert!(tag.0 & 0x80 == 0);"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0000_0000); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);",
          "    let tag = Tag(0b0000_0000);",
          "    assert_eq!(tag.0, 0b0000_0000);",
          "    assert!(tag.0 & 0x80 == 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0111_1110); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0111_1110); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0111_1111); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0111_1111); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let tag = Tag(0b0000_0001); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);"
        ],
        "code": [
          "{",
          "    let tag = Tag(0b0000_0001); // Highest bit not set, is_special should be false",
          "    let _ = tag.special_is_empty();",
          "    assert_eq!(tag.is_special(), false);",
          "    assert_eq!(tag.special_is_empty(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]