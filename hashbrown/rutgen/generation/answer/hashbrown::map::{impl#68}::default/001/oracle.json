[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let _: ValuesMut<i32, String> = ValuesMut::default();",
          "}"
        ],
        "oracle": [
          "    let expected_value: ValuesMut<i32, String> = ValuesMut { inner: Default::default() };",
          "    assert_eq!(default(), expected_value);",
          "    let default_values: ValuesMut<i32, String> = ValuesMut::default();",
          "    assert!(default_values.inner.is_empty());",
          "    assert!(matches!(default_values.inner, RawIter::Default));"
        ],
        "code": [
          "{",
          "    let _: ValuesMut<i32, String> = ValuesMut::default();",
          "    let expected_value: ValuesMut<i32, String> = ValuesMut { inner: Default::default() };",
          "    assert_eq!(default(), expected_value);",
          "    let default_values: ValuesMut<i32, String> = ValuesMut::default();",
          "    assert!(default_values.inner.is_empty());",
          "    assert!(matches!(default_values.inner, RawIter::Default));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let _: ValuesMut<(), ()> = ValuesMut::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(ValuesMut::<(), ()>::default(), ValuesMut { inner: Default::default() });"
        ],
        "code": [
          "{",
          "    let _: ValuesMut<(), ()> = ValuesMut::default();",
          "    assert_eq!(ValuesMut::<(), ()>::default(), ValuesMut { inner: Default::default() });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]