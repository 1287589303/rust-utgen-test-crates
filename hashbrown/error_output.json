{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-utils-0.8.21/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/crossbeam-utils-876b3ab42f13e18e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.170","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.170/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.170/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/libc-2480f8b345c68cc9/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.170","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_const_extern_fn"],"env":[],"out_dir":"/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/libc-384c7caf153dd45a/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/crossbeam-utils-9db73e04703dfb39/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/getrandom-4537a21348276e8e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.23","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zerocopy-0.8.23/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zerocopy-0.8.23/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/zerocopy-e2dcbf5d140aef67/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.23","linked_libs":[],"linked_paths":[],"cfgs":["zerocopy_aarch64_simd_1_59_0","zerocopy_core_error_1_81_0","zerocopy_diagnostic_on_unimplemented_1_78_0","zerocopy_generic_bounds_in_const_fn_1_61_0","zerocopy_panic_in_const_and_vec_try_reserve_1_57_0","zerocopy_target_has_atomics_1_60_0"],"env":[],"out_dir":"/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/zerocopy-022e340a2c34a89a/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/getrandom-a92d17dcd104f758/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_utils","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-utils-0.8.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcrossbeam_utils-fc91994af250f6b1.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcrossbeam_utils-fc91994af250f6b1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.170","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.170/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.170/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/liblibc-78e719d219e56f98.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/liblibc-78e719d219e56f98.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cfg-if-1.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cfg-if-1.0.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcfg_if-57bf25c23e31efdb.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcfg_if-57bf25c23e31efdb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.219/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.219/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/serde-3a1c1b6abf4f2a00/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rayon-core-1.12.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rayon-core-1.12.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/rayon-core-5c4347135a2d222f/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#doc-comment@0.3.3","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/doc-comment-144d53e0d5246bb5/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.21","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/allocator-api2-0.2.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"allocator_api2","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/allocator-api2-0.2.21/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/liballocator_api2-ea888f47493b772e.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/liballocator_api2-ea888f47493b772e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#either@1.15.0","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/either-1.15.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"either","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/either-1.15.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libeither-9002f41bbd7e6bf4.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libeither-9002f41bbd7e6bf4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/fnv-1.0.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fnv","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/fnv-1.0.7/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libfnv-574dedeaa4c89e1d.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libfnv-574dedeaa4c89e1d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/equivalent-1.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"equivalent","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/equivalent-1.0.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libequivalent-bf738b088bb070ea.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libequivalent-bf738b088bb070ea.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/liblazy_static-7af2f34f8b124b26.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/liblazy_static-7af2f34f8b124b26.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.4","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/foldhash-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"foldhash","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/foldhash-0.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libfoldhash-a690f5a6613af253.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libfoldhash-a690f5a6613af253.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libgetrandom-ff3a70d4d7f98bc4.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libgetrandom-ff3a70d4d7f98bc4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_epoch","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcrossbeam_epoch-e4dae6b27a9c3fda.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcrossbeam_epoch-e4dae6b27a9c3fda.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.23","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zerocopy-0.8.23/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerocopy","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zerocopy-0.8.23/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libzerocopy-85026333d1a1561f.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libzerocopy-85026333d1a1561f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/rayon-core-71512b056f3de1f1/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/serde-06a75ab96ceea28d/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#doc-comment@0.3.3","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/build/doc-comment-880da425dc2b43aa/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.17.0","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bumpalo-3.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bumpalo","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bumpalo-3.17.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["allocator-api2","default"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libbumpalo-44e39dabf9a3271e.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libbumpalo-44e39dabf9a3271e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.9.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.9.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["os_rng","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librand_core-c85e947e1719e143.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librand_core-c85e947e1719e143.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ppv_lite86","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ppv-lite86-0.2.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libppv_lite86-7289bbc4c3cc06dd.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libppv_lite86-7289bbc4c3cc06dd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.6","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-deque-0.8.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_deque","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-deque-0.8.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcrossbeam_deque-454e570476b9d215.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libcrossbeam_deque-454e570476b9d215.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.219/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.219/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libserde-89fb024451e0eba7.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libserde-89fb024451e0eba7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#doc-comment@0.3.3","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"doc_comment","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/doc-comment-0.3.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libdoc_comment-59471493c3e61b5e.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libdoc_comment-59471493c3e61b5e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.9.0","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_chacha-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_chacha-0.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librand_chacha-6290e3ba04a0fbd3.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librand_chacha-6290e3ba04a0fbd3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rayon-core-1.12.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon_core","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rayon-core-1.12.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librayon_core-6be1a6f658914dcd.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librayon_core-6be1a6f658914dcd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_test@1.0.177","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_test-1.0.177/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_test","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_test-1.0.177/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libserde_test-cecd648882e48de3.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/libserde_test-cecd648882e48de3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rayon-1.10.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rayon-1.10.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librayon-4242ed74597101c9.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librayon-4242ed74597101c9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.9.0","manifest_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/abezbm/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","os_rng","small_rng","std","std_rng","thread_rng"],"filenames":["/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librand-353b58b3ca393991.rlib","/home/abezbm/rust-utgen-test-crates/hashbrown/target/debug/deps/librand-353b58b3ca393991.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///home/abezbm/rust-utgen-test-crates/hashbrown#0.15.2","manifest_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0412]: cannot find type `String` in this scope\n    --> src/map.rs:6532:30\n     |\n6532 |     let _iter: IntoIter<u32, String, TestAllocator> = Default::default();\n     |                              ^^^^^^ not found in this scope\n     |\nhelp: consider importing one of these structs\n     |\n6515 +     use std::string::String;\n     |\n6515 +     use alloc::string::String;\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider importing one of these structs","rendered":null,"spans":[{"byte_end":203737,"byte_start":203737,"column_end":5,"column_start":5,"expansion":null,"file_name":"src/map.rs","is_primary":true,"label":null,"line_end":6515,"line_start":6515,"suggested_replacement":"use std::string::String;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":5,"highlight_start":5,"text":"    use super::*;"}]},{"byte_end":203737,"byte_start":203737,"column_end":5,"column_start":5,"expansion":null,"file_name":"src/map.rs","is_primary":true,"label":null,"line_end":6515,"line_start":6515,"suggested_replacement":"use alloc::string::String;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":5,"highlight_start":5,"text":"    use super::*;"}]}]}],"code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","message":"cannot find type `String` in this scope","spans":[{"byte_end":204081,"byte_start":204075,"column_end":36,"column_start":30,"expansion":null,"file_name":"src/map.rs","is_primary":true,"label":"not found in this scope","line_end":6532,"line_start":6532,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":30,"text":"    let _iter: IntoIter<u32, String, TestAllocator> = Default::default();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/abezbm/rust-utgen-test-crates/hashbrown#0.15.2","manifest_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0200]: the trait `allocator_api2::alloc::Allocator` requires an `unsafe impl` declaration\n    --> src/map.rs:6525:3\n     |\n6525 |   impl Allocator for TestAllocator {  \n     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: the trait `allocator_api2::alloc::Allocator` enforces invariants that the compiler can't check. Review the trait documentation and make sure this implementation upholds those invariants before adding the `unsafe` keyword\nhelp: add `unsafe` to this trait implementation\n     |\n6525 |   unsafe impl Allocator for TestAllocator {  \n     |   ++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the trait `allocator_api2::alloc::Allocator` enforces invariants that the compiler can't check. Review the trait documentation and make sure this implementation upholds those invariants before adding the `unsafe` keyword","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"add `unsafe` to this trait implementation","rendered":null,"spans":[{"byte_end":203843,"byte_start":203843,"column_end":3,"column_start":3,"expansion":null,"file_name":"src/map.rs","is_primary":true,"label":null,"line_end":6525,"line_start":6525,"suggested_replacement":"unsafe ","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":3,"highlight_start":3,"text":"  impl Allocator for TestAllocator {  "}]}]}],"code":{"code":"E0200","explanation":"An unsafe trait was implemented without an unsafe implementation.\n\nErroneous code example:\n\n```compile_fail,E0200\nstruct Foo;\n\nunsafe trait Bar { }\n\nimpl Bar for Foo { } // error!\n```\n\nUnsafe traits must have unsafe implementations. This error occurs when an\nimplementation for an unsafe trait isn't marked as unsafe. This may be resolved\nby marking the unsafe implementation as unsafe.\n\n```\nstruct Foo;\n\nunsafe trait Bar { }\n\nunsafe impl Bar for Foo { } // ok!\n```\n"},"level":"error","message":"the trait `allocator_api2::alloc::Allocator` requires an `unsafe impl` declaration","spans":[{"byte_end":203875,"byte_start":203843,"column_end":35,"column_start":3,"expansion":null,"file_name":"src/map.rs","is_primary":true,"label":null,"line_end":6525,"line_start":6525,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":3,"text":"  impl Allocator for TestAllocator {  "}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/abezbm/rust-utgen-test-crates/hashbrown#0.15.2","manifest_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0133]: call to unsafe function `NonNull::<T>::new_unchecked` is unsafe and requires unsafe function or block\n    --> src/map.rs:6527:14\n     |\n6527 |           Ok(NonNull::new_unchecked(std::ptr::null_mut()))  \n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n     |\n     = note: consult the function's documentation for information on how to avoid undefined behavior\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"consult the function's documentation for information on how to avoid undefined behavior","rendered":null,"spans":[]}],"code":{"code":"E0133","explanation":"Unsafe code was used outside of an unsafe block.\n\nErroneous code example:\n\n```compile_fail,E0133\nunsafe fn f() { return; } // This is the unsafe code\n\nfn main() {\n    f(); // error: call to unsafe function requires unsafe function or block\n}\n```\n\nUsing unsafe functionality is potentially dangerous and disallowed by safety\nchecks. Examples:\n\n* Dereferencing raw pointers\n* Calling functions via FFI\n* Calling functions marked unsafe\n\nThese safety checks can be relaxed for a section of the code by wrapping the\nunsafe instructions with an `unsafe` block. For instance:\n\n```\nunsafe fn f() { return; }\n\nfn main() {\n    unsafe { f(); } // ok!\n}\n```\n\nSee the [unsafe section][unsafe-section] of the Book for more details.\n\n#### Unsafe code in functions\n\nUnsafe code is currently accepted in unsafe functions, but that is being phased\nout in favor of requiring unsafe blocks here too.\n\n```\nunsafe fn f() { return; }\n\nunsafe fn g() {\n    f(); // Is accepted, but no longer recommended\n    unsafe { f(); } // Recommended way to write this\n}\n```\n\nLinting against this is controlled via the `unsafe_op_in_unsafe_fn` lint, which\nis `allow` by default but will be upgraded to `warn` in a future edition.\n\n[unsafe-section]: https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html\n"},"level":"error","message":"call to unsafe function `NonNull::<T>::new_unchecked` is unsafe and requires unsafe function or block","spans":[{"byte_end":204022,"byte_start":203978,"column_end":58,"column_start":14,"expansion":null,"file_name":"src/map.rs","is_primary":true,"label":"call to unsafe function","line_end":6527,"line_start":6527,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":14,"text":"          Ok(NonNull::new_unchecked(std::ptr::null_mut()))  "}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/abezbm/rust-utgen-test-crates/hashbrown#0.15.2","manifest_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error: aborting due to 3 previous errors\n\n","$message_type":"diagnostic","children":[],"code":null,"level":"error","message":"aborting due to 3 previous errors","spans":[]}}
{"reason":"compiler-message","package_id":"path+file:///home/abezbm/rust-utgen-test-crates/hashbrown#0.15.2","manifest_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"Some errors have detailed explanations: E0133, E0200, E0412.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"Some errors have detailed explanations: E0133, E0200, E0412.","spans":[]}}
{"reason":"compiler-message","package_id":"path+file:///home/abezbm/rust-utgen-test-crates/hashbrown#0.15.2","manifest_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/home/abezbm/rust-utgen-test-crates/hashbrown/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"For more information about an error, try `rustc --explain E0133`.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"For more information about an error, try `rustc --explain E0133`.","spans":[]}}
{"reason":"build-finished","success":false}
