bb0
  0: StorageLive(_3)
    SourceInfo(src/set.rs:372:9-372:37)
  1: StorageLive(_4)
    SourceInfo(src/set.rs:372:9-372:17)
  2: _4 = &mut ((*_1).0: map::HashMap<T, (), S, A>)
    SourceInfo(src/set.rs:372:9-372:17)
  3: StorageLive(_5)
    SourceInfo(src/set.rs:372:25-372:36)
  4: StorageLive(_6)
    SourceInfo(src/set.rs:372:25-372:36)
  5: _6 = &mut _2
    SourceInfo(src/set.rs:372:25-372:36)
  6: _5 = {closure@src/set.rs:372:25: 372:31} { f: move _6 }
    SourceInfo(src/set.rs:372:25-372:36)
  7: StorageDead(_6)
    SourceInfo(src/set.rs:372:30-372:31)
  Terminator {
      source_info: SourceInfo(src/set.rs:372:9-372:37)
      kind: _3 = map::HashMap::<T, (), S, A>::retain::<{closure@src/set.rs:372:25: 372:31}>(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/set.rs:372:36-372:37)
  1: StorageDead(_4)
    SourceInfo(src/set.rs:372:36-372:37)
  2: StorageDead(_3)
    SourceInfo(src/set.rs:372:37-372:38)
  3: _0 = const ()
    SourceInfo(src/set.rs:371:5-373:6)
  Terminator {
      source_info: SourceInfo(src/set.rs:373:5-373:6)
      kind: drop(_2) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  Terminator {
      source_info: SourceInfo(src/set.rs:373:6-373:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/set.rs:373:5-373:6)
      kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/set.rs:368:5-373:6)
      kind: resume
  }
  preds [bb1, bb3]
  succs []

