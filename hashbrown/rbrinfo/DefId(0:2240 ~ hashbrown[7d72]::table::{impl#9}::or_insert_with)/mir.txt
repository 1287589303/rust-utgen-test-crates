bb0
  0: PlaceMention(_1)
    SourceInfo(src/table.rs:1434:15-1434:19)
  1: _3 = discriminant(_1)
    SourceInfo(src/table.rs:1434:15-1434:19)
  Terminator {
      source_info: SourceInfo(src/table.rs:1434:9-1434:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/table.rs:1434:15-1434:19)
  Terminator {
      source_info: SourceInfo(src/table.rs:1434:15-1434:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/table.rs:1435:13-1435:35)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_5)
    SourceInfo(src/table.rs:1436:27-1436:32)
  1: _5 = move ((_1 as Vacant).0: table::VacantEntry<'_, T, A>)
    SourceInfo(src/table.rs:1436:27-1436:32)
  2: StorageLive(_6)
    SourceInfo(src/table.rs:1436:37-1436:42)
  3: _6 = move _5
    SourceInfo(src/table.rs:1436:37-1436:42)
  4: StorageLive(_7)
    SourceInfo(src/table.rs:1436:50-1436:59)
  5: StorageLive(_8)
    SourceInfo(src/table.rs:1436:50-1436:57)
  6: _8 = move _2
    SourceInfo(src/table.rs:1436:50-1436:57)
  7: StorageLive(_9)
    SourceInfo(src/table.rs:1436:50-1436:59)
  8: _9 = ()
    SourceInfo(src/table.rs:1436:50-1436:59)
  Terminator {
      source_info: SourceInfo(src/table.rs:1436:50-1436:59)
      kind: _7 = <impl FnOnce() -> T as core::ops::FnOnce<()>>::call_once(move _8, move _9) -> [return: bb5, unwind: bb10]
  }
  preds [bb0, bb2]
  succs [bb5, bb10]

bb4
  0: StorageLive(_4)
    SourceInfo(src/table.rs:1435:29-1435:34)
  1: _4 = move ((_1 as Occupied).0: table::OccupiedEntry<'_, T, A>)
    SourceInfo(src/table.rs:1435:29-1435:34)
  2: _0 = move _4
    SourceInfo(src/table.rs:1435:39-1435:44)
  3: StorageDead(_4)
    SourceInfo(src/table.rs:1435:43-1435:44)
  Terminator {
      source_info: SourceInfo(src/table.rs:1435:43-1435:44)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb5
  0: StorageDead(_9)
    SourceInfo(src/table.rs:1436:58-1436:59)
  1: StorageDead(_8)
    SourceInfo(src/table.rs:1436:58-1436:59)
  Terminator {
      source_info: SourceInfo(src/table.rs:1436:37-1436:60)
      kind: _0 = table::VacantEntry::<'_, T, A>::insert(move _6, move _7) -> [return: bb6, unwind: bb9]
  }
  preds [bb3]
  succs [bb6, bb9]

bb6
  0: StorageDead(_7)
    SourceInfo(src/table.rs:1436:59-1436:60)
  1: StorageDead(_6)
    SourceInfo(src/table.rs:1436:59-1436:60)
  2: StorageDead(_5)
    SourceInfo(src/table.rs:1436:59-1436:60)
  Terminator {
      source_info: SourceInfo(src/table.rs:1436:59-1436:60)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/table.rs:1438:5-1438:6)
      kind: drop(_2) -> [return: bb8, unwind: bb12]
  }
  preds [bb4, bb6]
  succs [bb8, bb12]

bb8
  Terminator {
      source_info: SourceInfo(src/table.rs:1438:6-1438:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/table.rs:1436:59-1436:60)
      kind: drop(_7) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb11]

bb10
  Terminator {
      source_info: SourceInfo(src/table.rs:1436:58-1436:59)
      kind: drop(_8) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/table.rs:1438:5-1438:6)
      kind: drop(_2) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb9, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/table.rs:1433:5-1438:6)
      kind: resume
  }
  preds [bb7, bb11]
  succs []

