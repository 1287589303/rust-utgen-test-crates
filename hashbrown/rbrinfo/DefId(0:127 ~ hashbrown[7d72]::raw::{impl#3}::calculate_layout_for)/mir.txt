bb0
  0: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _4 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _4) -> [0: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:165:23-165:48)
  2: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:165:23-165:30)
  3: _7 = _2
    SourceInfo(src/raw/mod.rs:165:23-165:30)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:165:23-165:48)
      kind: _6 = core::num::<impl usize>::is_power_of_two(move _7) -> [return: bb2, unwind: bb40]
  }
  preds [bb0]
  succs [bb2, bb40]

bb2
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:165:23-165:48)
      kind: switchInt(move _6) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:165:47-165:48)
  1: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:165:47-165:48)
  1: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _8 = core::panicking::panic(const "assertion failed: buckets.is_power_of_two()") -> bb40
  }
  preds [bb2]
  succs [bb40]

bb5
  0: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb0]
  succs [bb6]

bb6
  0: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: PlaceMention(_1)
    SourceInfo(src/raw/mod.rs:167:48-167:52)
  3: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:167:27-167:31)
  4: _9 = (_1.0: usize)
    SourceInfo(src/raw/mod.rs:167:27-167:31)
  5: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:167:33-167:43)
  6: _10 = (_1.1: usize)
    SourceInfo(src/raw/mod.rs:167:33-167:43)
  7: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:169:13-169:24)
  8: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  9: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  10: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:170:13-170:67)
  11: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  12: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  13: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:170:13-170:38)
  14: StorageLive(_18)
    SourceInfo(src/raw/mod.rs:170:13-170:17)
  15: _18 = _9
    SourceInfo(src/raw/mod.rs:170:13-170:17)
  16: StorageLive(_19)
    SourceInfo(src/raw/mod.rs:170:30-170:37)
  17: _19 = _2
    SourceInfo(src/raw/mod.rs:170:30-170:37)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:38)
      kind: _17 = core::num::<impl usize>::checked_mul(move _18, move _19) -> [return: bb7, unwind: bb40]
  }
  preds [bb3, bb5]
  succs [bb7, bb40]

bb7
  0: StorageDead(_19)
    SourceInfo(src/raw/mod.rs:170:37-170:38)
  1: StorageDead(_18)
    SourceInfo(src/raw/mod.rs:170:37-170:38)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:39)
      kind: _16 = <core::option::Option<usize> as core::ops::Try>::branch(move _17) -> [return: bb8, unwind: bb40]
  }
  preds [bb6]
  succs [bb8, bb40]

bb8
  0: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  1: PlaceMention(_16)
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  2: _20 = discriminant(_16)
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:39)
      kind: switchInt(move _20) -> [0: bb11, 1: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:39)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:38-170:39)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_24)
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  1: _24 = ((_16 as Continue).0: usize)
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  2: _15 = _24
    SourceInfo(src/raw/mod.rs:170:13-170:39)
  3: StorageDead(_24)
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  4: StorageLive(_25)
    SourceInfo(src/raw/mod.rs:170:52-170:66)
  5: StorageLive(_26)
    SourceInfo(src/raw/mod.rs:170:52-170:62)
  6: _26 = _10
    SourceInfo(src/raw/mod.rs:170:52-170:62)
  7: _27 = SubWithOverflow(_26, const 1_usize)
    SourceInfo(src/raw/mod.rs:170:52-170:66)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:52-170:66)
      kind: assert(!move (_27.1: bool), "attempt to compute `{} - {}`, which would overflow", move _26, const 1_usize) -> [success: bb14, unwind: bb40]
  }
  preds [bb8, bb10]
  succs [bb14, bb40]

bb12
  0: StorageLive(_21)
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  1: _21 = ((_16 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  2: StorageLive(_23)
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  3: _23 = _21
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:39)
      kind: _0 = <core::option::Option<(core::alloc::Layout, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _23) -> [return: bb13, unwind: bb40]
  }
  preds [bb10]
  succs [bb13, bb40]

bb13
  0: StorageDead(_23)
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  1: StorageDead(_21)
    SourceInfo(src/raw/mod.rs:170:38-170:39)
  2: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:170:66-170:67)
  3: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb12]
  succs [bb37]

bb14
  0: _25 = move (_27.0: usize)
    SourceInfo(src/raw/mod.rs:170:52-170:66)
  1: StorageDead(_26)
    SourceInfo(src/raw/mod.rs:170:65-170:66)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:67)
      kind: _14 = core::num::<impl usize>::checked_add(move _15, move _25) -> [return: bb15, unwind: bb40]
  }
  preds [bb11]
  succs [bb15, bb40]

bb15
  0: StorageDead(_25)
    SourceInfo(src/raw/mod.rs:170:66-170:67)
  1: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:170:66-170:67)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:68)
      kind: _13 = <core::option::Option<usize> as core::ops::Try>::branch(move _14) -> [return: bb16, unwind: bb40]
  }
  preds [bb14]
  succs [bb16, bb40]

bb16
  0: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  1: PlaceMention(_13)
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  2: _28 = discriminant(_13)
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:68)
      kind: switchInt(move _28) -> [0: bb19, 1: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:68)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:67-170:68)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_32)
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  1: _32 = ((_13 as Continue).0: usize)
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  2: _12 = _32
    SourceInfo(src/raw/mod.rs:170:13-170:68)
  3: StorageDead(_32)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  4: StorageLive(_33)
    SourceInfo(src/raw/mod.rs:170:71-170:88)
  5: StorageLive(_34)
    SourceInfo(src/raw/mod.rs:170:72-170:88)
  6: StorageLive(_35)
    SourceInfo(src/raw/mod.rs:170:73-170:83)
  7: _35 = _10
    SourceInfo(src/raw/mod.rs:170:73-170:83)
  8: _36 = SubWithOverflow(_35, const 1_usize)
    SourceInfo(src/raw/mod.rs:170:72-170:88)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:72-170:88)
      kind: assert(!move (_36.1: bool), "attempt to compute `{} - {}`, which would overflow", move _35, const 1_usize) -> [success: bb22, unwind: bb40]
  }
  preds [bb16, bb18]
  succs [bb22, bb40]

bb20
  0: StorageLive(_29)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  1: _29 = ((_13 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  2: StorageLive(_31)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  3: _31 = _29
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:170:13-170:68)
      kind: _0 = <core::option::Option<(core::alloc::Layout, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _31) -> [return: bb21, unwind: bb40]
  }
  preds [bb18]
  succs [bb21, bb40]

bb21
  0: StorageDead(_31)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  1: StorageDead(_29)
    SourceInfo(src/raw/mod.rs:170:67-170:68)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb37
  }
  preds [bb20]
  succs [bb37]

bb22
  0: _34 = move (_36.0: usize)
    SourceInfo(src/raw/mod.rs:170:72-170:88)
  1: StorageDead(_35)
    SourceInfo(src/raw/mod.rs:170:87-170:88)
  2: _33 = Not(move _34)
    SourceInfo(src/raw/mod.rs:170:71-170:88)
  3: StorageDead(_34)
    SourceInfo(src/raw/mod.rs:170:87-170:88)
  4: _11 = BitAnd(move _12, move _33)
    SourceInfo(src/raw/mod.rs:170:13-170:88)
  5: StorageDead(_33)
    SourceInfo(src/raw/mod.rs:170:87-170:88)
  6: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:170:87-170:88)
  7: FakeRead(ForLet(None), _11)
    SourceInfo(src/raw/mod.rs:169:13-169:24)
  8: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:170:88-170:89)
  9: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:170:88-170:89)
  10: StorageLive(_37)
    SourceInfo(src/raw/mod.rs:171:13-171:16)
  11: StorageLive(_38)
    SourceInfo(src/raw/mod.rs:171:19-171:67)
  12: StorageLive(_39)
    SourceInfo(src/raw/mod.rs:171:19-171:66)
  13: StorageLive(_40)
    SourceInfo(src/raw/mod.rs:171:19-171:30)
  14: _40 = _11
    SourceInfo(src/raw/mod.rs:171:19-171:30)
  15: StorageLive(_41)
    SourceInfo(src/raw/mod.rs:171:43-171:65)
  16: StorageLive(_42)
    SourceInfo(src/raw/mod.rs:171:43-171:50)
  17: _42 = _2
    SourceInfo(src/raw/mod.rs:171:43-171:50)
  18: _43 = AddWithOverflow(_42, const control::group::sse2::Group::WIDTH)
    SourceInfo(src/raw/mod.rs:171:43-171:65)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:171:43-171:65)
      kind: assert(!move (_43.1: bool), "attempt to compute `{} + {}`, which would overflow", move _42, const control::group::sse2::Group::WIDTH) -> [success: bb23, unwind: bb40]
  }
  preds [bb19]
  succs [bb23, bb40]

bb23
  0: _41 = move (_43.0: usize)
    SourceInfo(src/raw/mod.rs:171:43-171:65)
  1: StorageDead(_42)
    SourceInfo(src/raw/mod.rs:171:64-171:65)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:171:19-171:66)
      kind: _39 = core::num::<impl usize>::checked_add(move _40, move _41) -> [return: bb24, unwind: bb40]
  }
  preds [bb22]
  succs [bb24, bb40]

bb24
  0: StorageDead(_41)
    SourceInfo(src/raw/mod.rs:171:65-171:66)
  1: StorageDead(_40)
    SourceInfo(src/raw/mod.rs:171:65-171:66)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:171:19-171:67)
      kind: _38 = <core::option::Option<usize> as core::ops::Try>::branch(move _39) -> [return: bb25, unwind: bb40]
  }
  preds [bb23]
  succs [bb25, bb40]

bb25
  0: StorageDead(_39)
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  1: PlaceMention(_38)
    SourceInfo(src/raw/mod.rs:171:19-171:67)
  2: _44 = discriminant(_38)
    SourceInfo(src/raw/mod.rs:171:19-171:67)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:171:19-171:67)
      kind: switchInt(move _44) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _38)
    SourceInfo(src/raw/mod.rs:171:19-171:67)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:171:19-171:67)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:171:66-171:67)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_48)
    SourceInfo(src/raw/mod.rs:171:19-171:67)
  1: _48 = ((_38 as Continue).0: usize)
    SourceInfo(src/raw/mod.rs:171:19-171:67)
  2: _37 = _48
    SourceInfo(src/raw/mod.rs:171:19-171:67)
  3: StorageDead(_48)
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  4: FakeRead(ForLet(None), _37)
    SourceInfo(src/raw/mod.rs:171:13-171:16)
  5: StorageDead(_38)
    SourceInfo(src/raw/mod.rs:171:67-171:68)
  6: StorageLive(_49)
    SourceInfo(src/raw/mod.rs:175:9-177:10)
  7: StorageLive(_50)
    SourceInfo(src/raw/mod.rs:175:12-175:56)
  8: StorageLive(_51)
    SourceInfo(src/raw/mod.rs:175:12-175:15)
  9: _51 = _37
    SourceInfo(src/raw/mod.rs:175:12-175:15)
  10: StorageLive(_52)
    SourceInfo(src/raw/mod.rs:175:18-175:56)
  11: StorageLive(_53)
    SourceInfo(src/raw/mod.rs:175:18-175:37)
  12: _53 = const core::num::<impl isize>::MAX as usize (IntToInt)
    SourceInfo(src/raw/mod.rs:175:18-175:37)
  13: StorageLive(_54)
    SourceInfo(src/raw/mod.rs:175:40-175:56)
  14: StorageLive(_55)
    SourceInfo(src/raw/mod.rs:175:41-175:51)
  15: _55 = _10
    SourceInfo(src/raw/mod.rs:175:41-175:51)
  16: _56 = SubWithOverflow(_55, const 1_usize)
    SourceInfo(src/raw/mod.rs:175:40-175:56)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:175:40-175:56)
      kind: assert(!move (_56.1: bool), "attempt to compute `{} - {}`, which would overflow", move _55, const 1_usize) -> [success: bb31, unwind: bb40]
  }
  preds [bb25, bb27]
  succs [bb31, bb40]

bb29
  0: StorageLive(_45)
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  1: _45 = ((_38 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  2: StorageLive(_47)
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  3: _47 = _45
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:171:19-171:67)
      kind: _0 = <core::option::Option<(core::alloc::Layout, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _47) -> [return: bb30, unwind: bb40]
  }
  preds [bb27]
  succs [bb30, bb40]

bb30
  0: StorageDead(_47)
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  1: StorageDead(_45)
    SourceInfo(src/raw/mod.rs:171:66-171:67)
  2: StorageDead(_38)
    SourceInfo(src/raw/mod.rs:171:67-171:68)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb29]
  succs [bb36]

bb31
  0: _54 = move (_56.0: usize)
    SourceInfo(src/raw/mod.rs:175:40-175:56)
  1: StorageDead(_55)
    SourceInfo(src/raw/mod.rs:175:55-175:56)
  2: _57 = SubWithOverflow(_53, _54)
    SourceInfo(src/raw/mod.rs:175:18-175:56)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:175:18-175:56)
      kind: assert(!move (_57.1: bool), "attempt to compute `{} - {}`, which would overflow", move _53, move _54) -> [success: bb32, unwind: bb40]
  }
  preds [bb28]
  succs [bb32, bb40]

bb32
  0: _52 = move (_57.0: usize)
    SourceInfo(src/raw/mod.rs:175:18-175:56)
  1: StorageDead(_54)
    SourceInfo(src/raw/mod.rs:175:55-175:56)
  2: StorageDead(_53)
    SourceInfo(src/raw/mod.rs:175:55-175:56)
  3: _50 = Gt(move _51, move _52)
    SourceInfo(src/raw/mod.rs:175:12-175:56)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:175:12-175:56)
      kind: switchInt(move _50) -> [0: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34]

bb33
  0: StorageDead(_52)
    SourceInfo(src/raw/mod.rs:175:55-175:56)
  1: StorageDead(_51)
    SourceInfo(src/raw/mod.rs:175:55-175:56)
  2: _0 = core::option::Option::<(core::alloc::Layout, usize)>::None
    SourceInfo(src/raw/mod.rs:176:20-176:24)
  3: StorageDead(_50)
    SourceInfo(src/raw/mod.rs:177:9-177:10)
  4: StorageDead(_49)
    SourceInfo(src/raw/mod.rs:177:9-177:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb32]
  succs [bb36]

bb34
  0: StorageDead(_52)
    SourceInfo(src/raw/mod.rs:175:55-175:56)
  1: StorageDead(_51)
    SourceInfo(src/raw/mod.rs:175:55-175:56)
  2: _49 = const ()
    SourceInfo(src/raw/mod.rs:177:10-177:10)
  3: StorageDead(_50)
    SourceInfo(src/raw/mod.rs:177:9-177:10)
  4: StorageDead(_49)
    SourceInfo(src/raw/mod.rs:177:9-177:10)
  5: StorageLive(_59)
    SourceInfo(src/raw/mod.rs:179:14-182:10)
  6: StorageLive(_60)
    SourceInfo(src/raw/mod.rs:180:13-180:74)
  7: StorageLive(_61)
    SourceInfo(src/raw/mod.rs:180:56-180:59)
  8: _61 = _37
    SourceInfo(src/raw/mod.rs:180:56-180:59)
  9: StorageLive(_62)
    SourceInfo(src/raw/mod.rs:180:61-180:71)
  10: _62 = _10
    SourceInfo(src/raw/mod.rs:180:61-180:71)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:180:22-180:72)
      kind: _60 = core::alloc::Layout::from_size_align_unchecked(move _61, move _62) -> [return: bb35, unwind: bb40]
  }
  preds [bb32]
  succs [bb35, bb40]

bb35
  0: StorageDead(_62)
    SourceInfo(src/raw/mod.rs:180:71-180:72)
  1: StorageDead(_61)
    SourceInfo(src/raw/mod.rs:180:71-180:72)
  2: StorageLive(_63)
    SourceInfo(src/raw/mod.rs:181:13-181:24)
  3: _63 = _11
    SourceInfo(src/raw/mod.rs:181:13-181:24)
  4: _59 = (move _60, move _63)
    SourceInfo(src/raw/mod.rs:179:14-182:10)
  5: StorageDead(_63)
    SourceInfo(src/raw/mod.rs:182:9-182:10)
  6: StorageDead(_60)
    SourceInfo(src/raw/mod.rs:182:9-182:10)
  7: _0 = core::option::Option::<(core::alloc::Layout, usize)>::Some(move _59)
    SourceInfo(src/raw/mod.rs:179:9-182:11)
  8: StorageDead(_59)
    SourceInfo(src/raw/mod.rs:182:10-182:11)
  9: StorageDead(_37)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  10: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  11: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  12: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:183:6-183:6)
      kind: goto -> bb39
  }
  preds [bb34]
  succs [bb39]

bb36
  0: StorageDead(_37)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb30, bb33]
  succs [bb38]

bb37
  0: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:170:87-170:88)
  1: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:170:88-170:89)
  2: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:170:88-170:89)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb13, bb21]
  succs [bb38]

bb38
  0: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  1: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  2: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:183:5-183:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:183:6-183:6)
      kind: goto -> bb39
  }
  preds [bb36, bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:183:6-183:6)
      kind: return
  }
  preds [bb35, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:164:5-183:6)
      kind: resume
  }
  preds [bb1, bb4, bb6, bb7, bb11, bb12, bb14, bb15, bb19, bb20, bb22, bb23, bb24, bb28, bb29, bb31, bb34]
  succs []

