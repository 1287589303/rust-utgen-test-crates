bb0
  0: PlaceMention((*_1))
    SourceInfo(src/table.rs:1312:15-1312:20)
  1: _3 = discriminant((*_1))
    SourceInfo(src/table.rs:1312:15-1312:20)
  Terminator {
      source_info: SourceInfo(src/table.rs:1312:9-1312:20)
      kind: switchInt(move _3) -> [0: bb3, 1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(src/table.rs:1312:15-1312:20)
  Terminator {
      source_info: SourceInfo(src/table.rs:1312:15-1312:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/table.rs:1313:13-1313:33)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_14)
    SourceInfo(src/table.rs:1314:29-1314:34)
  1: _14 = &(((*_1) as Occupied).0: table::OccupiedEntry<'_, T, A>)
    SourceInfo(src/table.rs:1314:29-1314:34)
  2: StorageLive(_15)
    SourceInfo(src/table.rs:1314:39-1314:70)
  3: StorageLive(_16)
    SourceInfo(src/table.rs:1314:39-1314:70)
  4: StorageLive(_17)
    SourceInfo(src/table.rs:1314:39-1314:61)
  5: StorageLive(_18)
    SourceInfo(src/table.rs:1314:39-1314:61)
  6: StorageLive(_19)
    SourceInfo(src/table.rs:1314:39-1314:40)
  7: _19 = &mut (*_2)
    SourceInfo(src/table.rs:1314:39-1314:40)
  8: StorageLive(_20)
    SourceInfo(src/table.rs:1314:53-1314:60)
  9: StorageLive(_21)
    SourceInfo(src/table.rs:1314:53-1314:60)
  10: _21 = const "Entry"
    SourceInfo(src/table.rs:1314:53-1314:60)
  11: _20 = &(*_21)
    SourceInfo(src/table.rs:1314:53-1314:60)
  Terminator {
      source_info: SourceInfo(src/table.rs:1314:39-1314:61)
      kind: _18 = core::fmt::Formatter::<'_>::debug_tuple(move _19, move _20) -> [return: bb8, unwind: bb12]
  }
  preds [bb0, bb2]
  succs [bb8, bb12]

bb4
  0: StorageLive(_4)
    SourceInfo(src/table.rs:1313:27-1313:32)
  1: _4 = &(((*_1) as Vacant).0: table::VacantEntry<'_, T, A>)
    SourceInfo(src/table.rs:1313:27-1313:32)
  2: StorageLive(_5)
    SourceInfo(src/table.rs:1313:37-1313:68)
  3: StorageLive(_6)
    SourceInfo(src/table.rs:1313:37-1313:68)
  4: StorageLive(_7)
    SourceInfo(src/table.rs:1313:37-1313:59)
  5: StorageLive(_8)
    SourceInfo(src/table.rs:1313:37-1313:59)
  6: StorageLive(_9)
    SourceInfo(src/table.rs:1313:37-1313:38)
  7: _9 = &mut (*_2)
    SourceInfo(src/table.rs:1313:37-1313:38)
  8: StorageLive(_10)
    SourceInfo(src/table.rs:1313:51-1313:58)
  9: StorageLive(_11)
    SourceInfo(src/table.rs:1313:51-1313:58)
  10: _11 = const "Entry"
    SourceInfo(src/table.rs:1313:51-1313:58)
  11: _10 = &(*_11)
    SourceInfo(src/table.rs:1313:51-1313:58)
  Terminator {
      source_info: SourceInfo(src/table.rs:1313:37-1313:59)
      kind: _8 = core::fmt::Formatter::<'_>::debug_tuple(move _9, move _10) -> [return: bb5, unwind: bb12]
  }
  preds [bb2]
  succs [bb5, bb12]

bb5
  0: _7 = &mut _8
    SourceInfo(src/table.rs:1313:37-1313:59)
  1: StorageDead(_10)
    SourceInfo(src/table.rs:1313:58-1313:59)
  2: StorageDead(_9)
    SourceInfo(src/table.rs:1313:58-1313:59)
  3: StorageLive(_12)
    SourceInfo(src/table.rs:1313:66-1313:67)
  4: StorageLive(_13)
    SourceInfo(src/table.rs:1313:66-1313:67)
  5: _13 = &(*_4)
    SourceInfo(src/table.rs:1313:66-1313:67)
  6: _12 = move _13 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/table.rs:1313:66-1313:67)
  7: StorageDead(_13)
    SourceInfo(src/table.rs:1313:66-1313:67)
  Terminator {
      source_info: SourceInfo(src/table.rs:1313:37-1313:68)
      kind: _6 = core::fmt::DebugTuple::<'_, '_>::field(move _7, move _12) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: _5 = &mut (*_6)
    SourceInfo(src/table.rs:1313:37-1313:68)
  1: StorageDead(_12)
    SourceInfo(src/table.rs:1313:67-1313:68)
  2: StorageDead(_7)
    SourceInfo(src/table.rs:1313:67-1313:68)
  Terminator {
      source_info: SourceInfo(src/table.rs:1313:37-1313:77)
      kind: _0 = core::fmt::DebugTuple::<'_, '_>::finish(move _5) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_5)
    SourceInfo(src/table.rs:1313:76-1313:77)
  1: StorageDead(_11)
    SourceInfo(src/table.rs:1313:76-1313:77)
  2: StorageDead(_8)
    SourceInfo(src/table.rs:1313:76-1313:77)
  3: StorageDead(_6)
    SourceInfo(src/table.rs:1313:76-1313:77)
  4: StorageDead(_4)
    SourceInfo(src/table.rs:1313:76-1313:77)
  Terminator {
      source_info: SourceInfo(src/table.rs:1313:76-1313:77)
      kind: goto -> bb11
  }
  preds [bb6]
  succs [bb11]

bb8
  0: _17 = &mut _18
    SourceInfo(src/table.rs:1314:39-1314:61)
  1: StorageDead(_20)
    SourceInfo(src/table.rs:1314:60-1314:61)
  2: StorageDead(_19)
    SourceInfo(src/table.rs:1314:60-1314:61)
  3: StorageLive(_22)
    SourceInfo(src/table.rs:1314:68-1314:69)
  4: StorageLive(_23)
    SourceInfo(src/table.rs:1314:68-1314:69)
  5: _23 = &(*_14)
    SourceInfo(src/table.rs:1314:68-1314:69)
  6: _22 = move _23 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/table.rs:1314:68-1314:69)
  7: StorageDead(_23)
    SourceInfo(src/table.rs:1314:68-1314:69)
  Terminator {
      source_info: SourceInfo(src/table.rs:1314:39-1314:70)
      kind: _16 = core::fmt::DebugTuple::<'_, '_>::field(move _17, move _22) -> [return: bb9, unwind: bb12]
  }
  preds [bb3]
  succs [bb9, bb12]

bb9
  0: _15 = &mut (*_16)
    SourceInfo(src/table.rs:1314:39-1314:70)
  1: StorageDead(_22)
    SourceInfo(src/table.rs:1314:69-1314:70)
  2: StorageDead(_17)
    SourceInfo(src/table.rs:1314:69-1314:70)
  Terminator {
      source_info: SourceInfo(src/table.rs:1314:39-1314:79)
      kind: _0 = core::fmt::DebugTuple::<'_, '_>::finish(move _15) -> [return: bb10, unwind: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageDead(_15)
    SourceInfo(src/table.rs:1314:78-1314:79)
  1: StorageDead(_21)
    SourceInfo(src/table.rs:1314:78-1314:79)
  2: StorageDead(_18)
    SourceInfo(src/table.rs:1314:78-1314:79)
  3: StorageDead(_16)
    SourceInfo(src/table.rs:1314:78-1314:79)
  4: StorageDead(_14)
    SourceInfo(src/table.rs:1314:78-1314:79)
  Terminator {
      source_info: SourceInfo(src/table.rs:1314:78-1314:79)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/table.rs:1316:6-1316:6)
      kind: return
  }
  preds [bb7, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/table.rs:1311:5-1316:6)
      kind: resume
  }
  preds [bb3, bb4, bb5, bb6, bb8, bb9]
  succs []

