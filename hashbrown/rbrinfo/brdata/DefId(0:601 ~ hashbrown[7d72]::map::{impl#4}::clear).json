{
  "name": "hashbrown::map::{impl#4}::clear",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:1009:5:1011:6",
  "doc": "/// Clears the map, removing all key-value pairs. Keeps the allocated memory\n/// for reuse.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashMap;\n///\n/// let mut a = HashMap::new();\n/// a.insert(1, \"a\");\n/// let capacity_before_clear = a.capacity();\n///\n/// a.clear();\n///\n/// // Map is empty.\n/// assert!(a.is_empty());\n/// // But map capacity is equal to old one.\n/// assert_eq!(a.capacity(), capacity_before_clear);\n/// ```\n",
  "code": [
    "pub fn clear(&mut self) {",
    "    self.table.clear();",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}