{
  "name": "hashbrown::set::{impl#6}::take",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:1201:5:1210:6",
  "doc": "/// Removes and returns the value in the set, if any, that is equal to the given one.\n///\n/// The value may be any borrowed form of the set's value type, but\n/// [`Hash`] and [`Eq`] on the borrowed form *must* match those for\n/// the value type.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashSet;\n///\n/// let mut set: HashSet<_> = [1, 2, 3].into_iter().collect();\n/// assert_eq!(set.take(&2), Some(2));\n/// assert_eq!(set.take(&2), None);\n/// ```\n///\n/// [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n/// [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n",
  "code": [
    "pub fn take<Q>(&mut self, value: &Q) -> Option<T>",
    "where",
    "    Q: Hash + Equivalent<T> + ?Sized,",
    "{",
    "    // Avoid `Option::map` because it bloats LLVM IR.",
    "    match self.map.remove_entry(value) {",
    "        Some((k, _)) => Some(k),",
    "        None => None,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.map.remove_entry(value) matches Some((k, _))",
          "norm": null,
          "value": "true",
          "line": 1206,
          "bound": null
        },
        {
          "cond": "self.map.remove_entry(value) matches Some((k, _))",
          "norm": null,
          "value": "true",
          "line": 1206,
          "bound": null
        }
      ],
      "ret": "Some(k)",
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.map.remove_entry(value) matches None",
          "norm": null,
          "value": "true",
          "line": 1206,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}