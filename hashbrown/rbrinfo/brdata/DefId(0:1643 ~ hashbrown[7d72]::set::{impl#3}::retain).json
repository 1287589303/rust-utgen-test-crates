{
  "name": "hashbrown::set::{impl#3}::retain",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:368:5:373:6",
  "doc": "/// Retains only the elements specified by the predicate.\n///\n/// In other words, remove all elements `e` such that `f(&e)` returns `false`.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashSet;\n///\n/// let xs = [1,2,3,4,5,6];\n/// let mut set: HashSet<i32> = xs.into_iter().collect();\n/// set.retain(|&k| k % 2 == 0);\n/// assert_eq!(set.len(), 3);\n/// ```\n",
  "code": [
    "pub fn retain<F>(&mut self, mut f: F)",
    "where",
    "    F: FnMut(&T) -> bool,",
    "{",
    "    self.map.retain(|k, _| f(k));",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}