{
  "name": "hashbrown::map::{impl#5}::get_inner_mut",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": false,
  "loc": "src/map.rs:1457:5:1467:6",
  "doc": "",
  "code": [
    "fn get_inner_mut<Q>(&mut self, k: &Q) -> Option<&mut (K, V)>",
    "where",
    "    Q: Hash + Equivalent<K> + ?Sized,",
    "{",
    "    if self.table.is_empty() {",
    "        None",
    "    } else {",
    "        let hash = make_hash::<Q, S>(&self.hash_builder, k);",
    "        self.table.get_mut(hash, equivalent_key(k))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.table.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1461,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.table.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1461,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}