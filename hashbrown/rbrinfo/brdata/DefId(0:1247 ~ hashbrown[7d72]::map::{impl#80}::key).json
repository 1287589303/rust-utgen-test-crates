{
  "name": "hashbrown::map::{impl#80}::key",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:4029:5:4031:6",
  "doc": "/// Gets a reference to the key that would be used when inserting a value\n/// through the `VacantEntry`.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashMap;\n///\n/// let mut map: HashMap<&str, u32> = HashMap::new();\n/// assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");\n/// ```\n",
  "code": [
    "pub fn key(&self) -> &K {",
    "    &self.key",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "&self.key",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}