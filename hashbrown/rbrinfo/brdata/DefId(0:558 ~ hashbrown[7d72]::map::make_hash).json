{
  "name": "hashbrown::map::make_hash",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:240:1:249:2",
  "doc": "",
  "code": [
    "pub(crate) fn make_hash<Q, S>(hash_builder: &S, val: &Q) -> u64",
    "where",
    "    Q: Hash + ?Sized,",
    "    S: BuildHasher,",
    "{",
    "    use core::hash::Hasher;",
    "    let mut state = hash_builder.build_hasher();",
    "    val.hash(&mut state);",
    "    state.finish()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}