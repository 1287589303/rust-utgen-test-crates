{
  "name": "hashbrown::raw::{impl#8}::replace_bucket_with",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": true,
  "loc": "src/raw/mod.rs:1084:5:1102:6",
  "doc": "/// Temporary removes a bucket, applying the given function to the removed\n/// element and optionally put back the returned value in the same bucket.\n///\n/// Returns `true` if the bucket still contains an element\n///\n/// This does not check if the given bucket is actually occupied.\n",
  "code": [
    "pub unsafe fn replace_bucket_with<F>(&mut self, bucket: Bucket<T>, f: F) -> bool",
    "where",
    "    F: FnOnce(T) -> Option<T>,",
    "{",
    "    let index = self.bucket_index(&bucket);",
    "    let old_ctrl = *self.table.ctrl(index);",
    "    debug_assert!(self.is_bucket_full(index));",
    "    let old_growth_left = self.table.growth_left;",
    "    let item = self.remove(bucket).0;",
    "    if let Some(new_item) = f(item) {",
    "        self.table.growth_left = old_growth_left;",
    "        self.table.set_ctrl(index, old_ctrl);",
    "        self.table.items += 1;",
    "        self.bucket(index).write(new_item);",
    "        true",
    "    } else {",
    "        false",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_bucket_full(index)",
          "norm": null,
          "value": "true",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "let Some(new_item) = f(item)",
          "norm": null,
          "value": "true",
          "line": 1093,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        19,
        21,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_bucket_full(index)",
          "norm": null,
          "value": "true",
          "line": 1090,
          "bound": null
        },
        {
          "cond": "let Some(new_item) = f(item)",
          "norm": null,
          "value": "true",
          "line": 1093,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.is_bucket_full(index)",
          "norm": null,
          "value": "false",
          "line": 1090,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        34,
        35
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}