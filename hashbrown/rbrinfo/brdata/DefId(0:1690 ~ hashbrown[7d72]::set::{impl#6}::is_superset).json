{
  "name": "hashbrown::set::{impl#6}::is_superset",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:1070:5:1072:6",
  "doc": "/// Returns `true` if the set is a superset of another,\n/// i.e., `self` contains at least all the values in `other`.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashSet;\n///\n/// let sub: HashSet<_> = [1, 2].into_iter().collect();\n/// let mut set = HashSet::new();\n///\n/// assert_eq!(set.is_superset(&sub), false);\n///\n/// set.insert(0);\n/// set.insert(1);\n/// assert_eq!(set.is_superset(&sub), false);\n///\n/// set.insert(2);\n/// assert_eq!(set.is_superset(&sub), true);\n/// ```\n",
  "code": [
    "pub fn is_superset(&self, other: &Self) -> bool {",
    "    other.is_subset(self)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}