{
  "name": "hashbrown::set::{impl#3}::iter",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:290:5:294:6",
  "doc": "/// An iterator visiting all elements in arbitrary order.\n/// The iterator element type is `&'a T`.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashSet;\n/// let mut set = HashSet::new();\n/// set.insert(\"a\");\n/// set.insert(\"b\");\n///\n/// // Will print in an arbitrary order.\n/// for x in set.iter() {\n///     println!(\"{}\", x);\n/// }\n/// ```\n",
  "code": [
    "pub fn iter(&self) -> Iter<'_, T> {",
    "    Iter {",
    "        iter: self.map.keys(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Iter {\n            iter: self.map.keys(),\n        }",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}