{
  "name": "hashbrown::set::{impl#3}::drain",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:348:5:352:6",
  "doc": "/// Clears the set, returning all elements in an iterator.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashSet;\n///\n/// let mut set: HashSet<_> = [1, 2, 3].into_iter().collect();\n/// assert!(!set.is_empty());\n///\n/// // print 1, 2, 3 in an arbitrary order\n/// for i in set.drain() {\n///     println!(\"{}\", i);\n/// }\n///\n/// assert!(set.is_empty());\n/// ```\n",
  "code": [
    "pub fn drain(&mut self) -> Drain<'_, T, A> {",
    "    Drain {",
    "        iter: self.map.drain(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Drain {\n            iter: self.map.drain(),\n        }",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}