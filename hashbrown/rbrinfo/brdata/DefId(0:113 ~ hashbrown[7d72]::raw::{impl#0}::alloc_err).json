{
  "name": "hashbrown::raw::{impl#0}::alloc_err",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": false,
  "loc": "src/raw/mod.rs:43:5:48:6",
  "doc": "/// Error to return on allocation error.\n",
  "code": [
    "fn alloc_err(self, layout: Layout) -> TryReserveError {",
    "    match self {",
    "        Fallibility::Fallible => TryReserveError::AllocError { layout },",
    "        Fallibility::Infallible => handle_alloc_error(layout),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Fallibility::Infallible",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Fallibility::Fallible",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": null
        },
        {
          "cond": "self matches Fallibility::Fallible",
          "norm": null,
          "value": "true",
          "line": 44,
          "bound": null
        }
      ],
      "ret": "TryReserveError::AllocError { layout }",
      "path": [
        0,
        2,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}