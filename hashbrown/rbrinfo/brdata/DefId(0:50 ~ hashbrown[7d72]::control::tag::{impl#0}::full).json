{
  "name": "hashbrown::control::tag::{impl#0}::full",
  "mod_info": {
    "name": "control::tag",
    "loc": "src/control/mod.rs:3:1:3:9"
  },
  "visible": true,
  "loc": "src/control/tag.rs:36:5:50:6",
  "doc": "/// Creates a control tag representing a full bucket with the given hash.\n",
  "code": [
    "pub(crate) const fn full(hash: u64) -> Tag {",
    "    // Constant for function that grabs the top 7 bits of the hash.",
    "    const MIN_HASH_LEN: usize = if mem::size_of::<usize>() < mem::size_of::<u64>() {",
    "        mem::size_of::<usize>()",
    "    } else {",
    "        mem::size_of::<u64>()",
    "    };",
    "",
    "    // Grab the top 7 bits of the hash. While the hash is normally a full 64-bit",
    "    // value, some hash functions (such as FxHash) produce a usize result",
    "    // instead, which means that the top 32 bits are 0 on 32-bit platforms.",
    "    // So we use MIN_HASH_LEN constant to handle this.",
    "    let top7 = hash >> (MIN_HASH_LEN * 8 - 7);",
    "    Tag((top7 & 0x7f) as u8) // truncation",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Tag((top7 & 0x7f) as u8)",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}