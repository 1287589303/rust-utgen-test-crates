{
  "name": "hashbrown::table::{impl#0}::new",
  "mod_info": {
    "name": "table",
    "loc": "src/lib.rs:85:1:85:11"
  },
  "visible": true,
  "loc": "src/table.rs:68:5:72:6",
  "doc": "/// Creates an empty `HashTable`.\n///\n/// The hash table is initially created with a capacity of 0, so it will not allocate until it\n/// is first inserted into.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashTable;\n/// let mut table: HashTable<&str> = HashTable::new();\n/// assert_eq!(table.len(), 0);\n/// assert_eq!(table.capacity(), 0);\n/// ```\n",
  "code": [
    "pub const fn new() -> Self {",
    "    Self {",
    "        raw: RawTable::new(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Self {\n            raw: RawTable::new(),\n        }",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}