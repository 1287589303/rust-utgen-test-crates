{
  "name": "hashbrown::raw::{impl#8}::clear",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": true,
  "loc": "src/raw/mod.rs:815:5:828:6",
  "doc": "/// Removes all elements from the table without freeing the backing memory.\n",
  "code": [
    "pub fn clear(&mut self) {",
    "    if self.is_empty() {",
    "        // Special case empty table to avoid surprising O(capacity) time.",
    "        return;",
    "    }",
    "    // Ensure that the table is reset even if one of the drops panic",
    "    let mut self_ = guard(self, |self_| self_.clear_no_drop());",
    "    unsafe {",
    "        // SAFETY: ScopeGuard sets to zero the `items` field of the table",
    "        // even in case of panic during the dropping of the elements so",
    "        // that there will be no double drop of the elements.",
    "        self_.table.drop_elements::<T>();",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "true",
          "line": 816,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_empty()",
          "norm": null,
          "value": "false",
          "line": 816,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}