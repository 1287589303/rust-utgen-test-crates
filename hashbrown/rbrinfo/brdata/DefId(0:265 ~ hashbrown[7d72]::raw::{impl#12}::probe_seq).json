{
  "name": "hashbrown::raw::{impl#12}::probe_seq",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": false,
  "loc": "src/raw/mod.rs:2303:5:2310:6",
  "doc": "/// Returns an iterator-like object for a probe sequence on the table.\n///\n/// This iterator never terminates, but is guaranteed to visit each bucket\n/// group exactly once. The loop using `probe_seq` must terminate upon\n/// reaching a group containing an empty bucket.\n",
  "code": [
    "fn probe_seq(&self, hash: u64) -> ProbeSeq {",
    "    ProbeSeq {",
    "        // This is the same as `hash as usize % self.buckets()` because the number",
    "        // of buckets is a power of two, and `self.bucket_mask = self.buckets() - 1`.",
    "        pos: h1(hash) & self.bucket_mask,",
    "        stride: 0,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "ProbeSeq {\n            // This is the same as `hash as usize % self.buckets()` because the number\n            // of buckets is a power of two, and `self.bucket_mask = self.buckets() - 1`.\n            pos: h1(hash) & self.bucket_mask,\n            stride: 0,\n        }",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}