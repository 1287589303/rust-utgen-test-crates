{
  "name": "hashbrown::raw::{impl#8}::into_iter_from",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": true,
  "loc": "src/raw/mod.rs:1346:5:1355:6",
  "doc": "/// Returns an iterator which consumes all elements from the table.\n///\n/// Iteration starts at the provided iterator's current location.\n///\n/// It is up to the caller to ensure that the iterator is valid for this\n/// `RawTable` and covers all items that remain in the table.\n",
  "code": [
    "pub unsafe fn into_iter_from(self, iter: RawIter<T>) -> RawIntoIter<T, A> {",
    "    debug_assert_eq!(iter.len(), self.len());",
    "",
    "    let allocation = self.into_allocation();",
    "    RawIntoIter {",
    "        iter,",
    "        allocation,",
    "        marker: PhantomData,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        }
      ],
      "ret": "RawIntoIter {\n            iter,\n            allocation,\n            marker: PhantomData,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        8,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}