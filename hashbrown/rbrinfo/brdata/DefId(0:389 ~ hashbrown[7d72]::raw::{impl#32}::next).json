{
  "name": "hashbrown::raw::{impl#32}::next",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": true,
  "loc": "src/raw/mod.rs:3790:5:3807:6",
  "doc": "/// Advances the iterator and returns the next value. It is up to\n/// the caller to ensure that the `RawTable` outlives the `FullBucketsIndices`,\n/// because we cannot make the `next` method unsafe.\n",
  "code": [
    "fn next(&mut self) -> Option<usize> {",
    "    // Return if we already yielded all items.",
    "    if self.items == 0 {",
    "        return None;",
    "    }",
    "",
    "    let nxt = unsafe {",
    "        // SAFETY:",
    "        // 1. We check number of items to yield using `items` field.",
    "        // 2. The caller ensures that the table is alive and has not moved.",
    "        self.next_impl()",
    "    };",
    "",
    "    debug_assert!(nxt.is_some());",
    "    self.items -= 1;",
    "",
    "    nxt",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.items == 0",
          "norm": "0 == self.items",
          "value": "false",
          "line": 3792,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.items == 0",
          "norm": "0 == self.items",
          "value": "true",
          "line": 3792,
          "bound": null
        },
        {
          "cond": "nxt.is_some()",
          "norm": null,
          "value": "true",
          "line": 3803,
          "bound": null
        }
      ],
      "ret": "nxt",
      "path": [
        0,
        2,
        3,
        4,
        5,
        6,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.items == 0",
          "norm": "0 == self.items",
          "value": "true",
          "line": 3792,
          "bound": null
        },
        {
          "cond": "nxt.is_some()",
          "norm": null,
          "value": "false",
          "line": 3803,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        3,
        4,
        5,
        7,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}