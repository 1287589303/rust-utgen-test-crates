{
  "name": "hashbrown::set::{impl#6}::difference",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:745:5:750:6",
  "doc": "/// Visits the values representing the difference,\n/// i.e., the values that are in `self` but not in `other`.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashSet;\n/// let a: HashSet<_> = [1, 2, 3].into_iter().collect();\n/// let b: HashSet<_> = [4, 2, 3, 4].into_iter().collect();\n///\n/// // Can be seen as `a - b`.\n/// for x in a.difference(&b) {\n///     println!(\"{}\", x); // Print 1\n/// }\n///\n/// let diff: HashSet<_> = a.difference(&b).collect();\n/// assert_eq!(diff, [1].iter().collect());\n///\n/// // Note that difference is not symmetric,\n/// // and `b - a` means something else:\n/// let diff: HashSet<_> = b.difference(&a).collect();\n/// assert_eq!(diff, [4].iter().collect());\n/// ```\n",
  "code": [
    "pub fn difference<'a>(&'a self, other: &'a Self) -> Difference<'a, T, S, A> {",
    "    Difference {",
    "        iter: self.iter(),",
    "        other,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Difference {\n            iter: self.iter(),\n            other,\n        }",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}