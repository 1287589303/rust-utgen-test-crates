{
  "name": "hashbrown::set::{impl#63}::get",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:2446:5:2448:6",
  "doc": "/// Gets a reference to the value in the entry.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::hash_set::{Entry, HashSet};\n///\n/// let mut set: HashSet<&str> = HashSet::new();\n/// set.entry(\"poneyland\").or_insert();\n///\n/// match set.entry(\"poneyland\") {\n///     Entry::Vacant(_) => panic!(),\n///     Entry::Occupied(entry) => assert_eq!(entry.get(), &\"poneyland\"),\n/// }\n/// ```\n",
  "code": [
    "pub fn get(&self) -> &T {",
    "    self.inner.key()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.inner.key()",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}