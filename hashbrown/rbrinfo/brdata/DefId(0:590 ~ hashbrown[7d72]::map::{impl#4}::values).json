{
  "name": "hashbrown::map::{impl#4}::values",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:682:5:684:6",
  "doc": "/// An iterator visiting all values in arbitrary order.\n/// The iterator element type is `&'a V`.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashMap;\n///\n/// let mut map = HashMap::new();\n/// map.insert(\"a\", 1);\n/// map.insert(\"b\", 2);\n/// map.insert(\"c\", 3);\n/// assert_eq!(map.len(), 3);\n/// let mut vec: Vec<i32> = Vec::new();\n///\n/// for val in map.values() {\n///     println!(\"{}\", val);\n///     vec.push(*val);\n/// }\n///\n/// // The `Values` iterator produces values in arbitrary order, so the\n/// // values must be sorted to test them against a sorted array.\n/// vec.sort_unstable();\n/// assert_eq!(vec, [1, 2, 3]);\n///\n/// assert_eq!(map.len(), 3);\n/// ```\n",
  "code": [
    "pub fn values(&self) -> Values<'_, K, V> {",
    "    Values { inner: self.iter() }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Values { inner: self.iter() }",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}