{
  "name": "hashbrown::raw_entry::{impl#5}::search",
  "mod_info": {
    "name": "raw_entry",
    "loc": "src/lib.rs:80:1:80:15"
  },
  "visible": false,
  "loc": "src/raw_entry.rs:670:5:678:6",
  "doc": "",
  "code": [
    "fn search<F>(self, hash: u64, mut is_match: F) -> Option<(&'a K, &'a V)>",
    "where",
    "    F: FnMut(&K) -> bool,",
    "{",
    "    match self.map.table.get(hash, |(k, _)| is_match(k)) {",
    "        Some((key, value)) => Some((key, value)),",
    "        None => None,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.map.table.get(hash, |(k, _)| is_match(k)) matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 674,
          "bound": null
        },
        {
          "cond": "self.map.table.get(hash, |(k, _)| is_match(k)) matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 674,
          "bound": null
        }
      ],
      "ret": "Some((key, value))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.map.table.get(hash, |(k, _)| is_match(k)) matches None",
          "norm": null,
          "value": "true",
          "line": 674,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}