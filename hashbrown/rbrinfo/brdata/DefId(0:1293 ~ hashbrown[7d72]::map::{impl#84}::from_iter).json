{
  "name": "hashbrown::map::{impl#84}::from_iter",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:4425:5:4433:6",
  "doc": "",
  "code": [
    "fn from_iter<T: IntoIterator<Item = (K, V)>>(iter: T) -> Self {",
    "    let iter = iter.into_iter();",
    "    let mut map =",
    "        Self::with_capacity_and_hasher_in(iter.size_hint().0, S::default(), A::default());",
    "    iter.for_each(|(k, v)| {",
    "        map.insert(k, v);",
    "    });",
    "    map",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "map",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}