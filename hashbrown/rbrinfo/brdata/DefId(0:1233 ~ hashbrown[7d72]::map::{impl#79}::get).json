{
  "name": "hashbrown::map::{impl#79}::get",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:3819:5:3821:6",
  "doc": "/// Gets a reference to the value in the entry.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashMap;\n/// use hashbrown::hash_map::Entry;\n///\n/// let mut map: HashMap<&str, u32> = HashMap::new();\n/// map.entry(\"poneyland\").or_insert(12);\n///\n/// match map.entry(\"poneyland\") {\n///     Entry::Vacant(_) => panic!(),\n///     Entry::Occupied(entry) => assert_eq!(entry.get(), &12),\n/// }\n/// ```\n",
  "code": [
    "pub fn get(&self) -> &V {",
    "    unsafe { &self.elem.as_ref().1 }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "&self.elem.as_ref().1",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}