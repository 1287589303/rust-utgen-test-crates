{
  "name": "hashbrown::map::{impl#5}::get_many_mut_inner",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": false,
  "loc": "src/map.rs:1731:5:1738:6",
  "doc": "",
  "code": [
    "fn get_many_mut_inner<Q, const N: usize>(&mut self, ks: [&Q; N]) -> [Option<&'_ mut (K, V)>; N]",
    "where",
    "    Q: Hash + Equivalent<K> + ?Sized,",
    "{",
    "    let hashes = self.build_hashes_inner(ks);",
    "    self.table",
    "        .get_many_mut(hashes, |i, (k, _)| ks[i].equivalent(k))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}