{
  "name": "hashbrown::raw_entry::{impl#8}::insert_entry",
  "mod_info": {
    "name": "raw_entry",
    "loc": "src/lib.rs:80:1:80:15"
  },
  "visible": false,
  "loc": "src/raw_entry.rs:1430:5:1446:6",
  "doc": "",
  "code": [
    "fn insert_entry(self, key: K, value: V) -> RawOccupiedEntryMut<'a, K, V, S, A>",
    "where",
    "    K: Hash,",
    "    S: BuildHasher,",
    "{",
    "    let hash = make_hash::<K, S>(self.hash_builder, &key);",
    "    let elem = self.table.insert(",
    "        hash,",
    "        (key, value),",
    "        make_hasher::<_, V, S>(self.hash_builder),",
    "    );",
    "    RawOccupiedEntryMut {",
    "        elem,",
    "        table: self.table,",
    "        hash_builder: self.hash_builder,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "RawOccupiedEntryMut {\n            elem,\n            table: self.table,\n            hash_builder: self.hash_builder,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}