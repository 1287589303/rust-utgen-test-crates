{
  "name": "hashbrown::set::{impl#48}::fold",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:2042:5:2054:6",
  "doc": "",
  "code": [
    "fn fold<B, F>(self, init: B, mut f: F) -> B",
    "where",
    "    Self: Sized,",
    "    F: FnMut(B, Self::Item) -> B,",
    "{",
    "    self.iter.fold(init, |acc, elt| {",
    "        if self.other.contains(elt) {",
    "            acc",
    "        } else {",
    "            f(acc, elt)",
    "        }",
    "    })",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}