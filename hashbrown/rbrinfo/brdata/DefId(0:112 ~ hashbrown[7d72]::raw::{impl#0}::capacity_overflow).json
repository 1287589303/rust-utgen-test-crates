{
  "name": "hashbrown::raw::{impl#0}::capacity_overflow",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": false,
  "loc": "src/raw/mod.rs:34:5:39:6",
  "doc": "/// Error to return on capacity overflow.\n",
  "code": [
    "fn capacity_overflow(self) -> TryReserveError {",
    "    match self {",
    "        Fallibility::Fallible => TryReserveError::CapacityOverflow,",
    "        Fallibility::Infallible => panic!(\"Hash table capacity overflow\"),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Fallibility::Infallible",
          "norm": null,
          "value": "true",
          "line": 35,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Fallibility::Fallible",
          "norm": null,
          "value": "true",
          "line": 35,
          "bound": null
        },
        {
          "cond": "self matches Fallibility::Fallible",
          "norm": null,
          "value": "true",
          "line": 35,
          "bound": null
        }
      ],
      "ret": "TryReserveError::CapacityOverflow",
      "path": [
        0,
        2,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}