{
  "name": "hashbrown::raw::{impl#12}::free_buckets",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": false,
  "loc": "src/raw/mod.rs:2945:5:2953:6",
  "doc": "/// Deallocates the table without dropping any entries.\n///\n/// # Note\n///\n/// This function must be called only after [`drop_elements`](RawTableInner::drop_elements),\n/// else it can lead to leaking of memory. Also calling this function automatically\n/// makes invalid (dangling) all instances of buckets ([`Bucket`]) and makes invalid\n/// (dangling) the `ctrl` field of the table.\n///\n/// # Safety\n///\n/// If any of the following conditions are violated, the result is [`Undefined Behavior`]:\n///\n/// * The [`RawTableInner`] has already been allocated;\n///\n/// * The `alloc` must be the same [`Allocator`] as the `Allocator` that was used\n///   to allocate this table.\n///\n/// * The `table_layout` must be the same [`TableLayout`] as the `TableLayout` that was used\n///   to allocate this table.\n///\n/// See also [`GlobalAlloc::dealloc`] or [`Allocator::deallocate`] for more  information.\n///\n/// [`Undefined Behavior`]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n/// [`GlobalAlloc::dealloc`]: https://doc.rust-lang.org/alloc/alloc/trait.GlobalAlloc.html#tymethod.dealloc\n/// [`Allocator::deallocate`]: https://doc.rust-lang.org/alloc/alloc/trait.Allocator.html#tymethod.deallocate\n",
  "code": [
    "unsafe fn free_buckets<A>(&mut self, alloc: &A, table_layout: TableLayout)",
    "where",
    "    A: Allocator,",
    "{",
    "    // SAFETY: The caller must uphold the safety contract for `free_buckets`",
    "    // method.",
    "    let (ptr, layout) = self.allocation_info(table_layout);",
    "    alloc.deallocate(ptr, layout);",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}