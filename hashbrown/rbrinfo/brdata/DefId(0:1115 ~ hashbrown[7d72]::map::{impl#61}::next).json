{
  "name": "hashbrown::map::{impl#61}::next",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:3317:5:3323:6",
  "doc": "",
  "code": [
    "fn next(&mut self) -> Option<&'a K> {",
    "    // Avoid `Option::map` because it bloats LLVM IR.",
    "    match self.inner.next() {",
    "        Some((k, _)) => Some(k),",
    "        None => None,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.inner.next() matches Some((k, _))",
          "norm": null,
          "value": "true",
          "line": 3319,
          "bound": null
        },
        {
          "cond": "self.inner.next() matches Some((k, _))",
          "norm": null,
          "value": "true",
          "line": 3319,
          "bound": null
        }
      ],
      "ret": "Some(k)",
      "path": [
        0,
        1,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.inner.next() matches None",
          "norm": null,
          "value": "true",
          "line": 3319,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}