{
  "name": "hashbrown::raw::{impl#8}::allocation_size",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": true,
  "loc": "src/raw/mod.rs:699:5:703:6",
  "doc": "/// Returns the total amount of memory allocated internally by the hash\n/// table, in bytes.\n///\n/// The returned number is informational only. It is intended to be\n/// primarily used for memory profiling.\n",
  "code": [
    "pub fn allocation_size(&self) -> usize {",
    "    // SAFETY: We use the same `table_layout` that was used to allocate",
    "    // this table.",
    "    unsafe { self.table.allocation_size_or_zero(Self::TABLE_LAYOUT) }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}