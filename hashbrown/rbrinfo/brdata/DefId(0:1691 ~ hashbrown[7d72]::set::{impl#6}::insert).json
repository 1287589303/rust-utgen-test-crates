{
  "name": "hashbrown::set::{impl#6}::insert",
  "mod_info": {
    "name": "set",
    "loc": "src/lib.rs:84:1:84:9"
  },
  "visible": true,
  "loc": "src/set.rs:1092:5:1094:6",
  "doc": "/// Adds a value to the set.\n///\n/// If the set did not have this value present, `true` is returned.\n///\n/// If the set did have this value present, `false` is returned.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::HashSet;\n///\n/// let mut set = HashSet::new();\n///\n/// assert_eq!(set.insert(2), true);\n/// assert_eq!(set.insert(2), false);\n/// assert_eq!(set.len(), 1);\n/// ```\n",
  "code": [
    "pub fn insert(&mut self, value: T) -> bool {",
    "    self.map.insert(value, ()).is_none()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}