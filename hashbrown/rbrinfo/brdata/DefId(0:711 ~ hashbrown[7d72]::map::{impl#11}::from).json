{
  "name": "hashbrown::map::{impl#11}::from",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:78:1:78:9"
  },
  "visible": true,
  "loc": "src/map.rs:2122:5:2124:6",
  "doc": "/// # Examples\n///\n/// ```\n/// use hashbrown::HashMap;\n///\n/// let map1 = HashMap::from([(1, 2), (3, 4)]);\n/// let map2: HashMap<_, _> = [(1, 2), (3, 4)].into();\n/// assert_eq!(map1, map2);\n/// ```\n",
  "code": [
    "fn from(arr: [(K, V); N]) -> Self {",
    "    arr.into_iter().collect()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}