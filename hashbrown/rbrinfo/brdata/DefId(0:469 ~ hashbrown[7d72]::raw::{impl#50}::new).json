{
  "name": "hashbrown::raw::{impl#50}::new",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": false,
  "loc": "src/raw/mod.rs:4019:5:4024:6",
  "doc": "",
  "code": [
    "unsafe fn new<A: Allocator>(table: &RawTable<T, A>, hash: u64) -> Self {",
    "    RawIterHash {",
    "        inner: RawIterHashInner::new(&table.table, hash),",
    "        _marker: PhantomData,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "RawIterHash {\n            inner: RawIterHashInner::new(&table.table, hash),\n            _marker: PhantomData,\n        }",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}