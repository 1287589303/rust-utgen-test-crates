{
  "name": "hashbrown::raw::{impl#8}::get_many_mut",
  "mod_info": {
    "name": "raw",
    "loc": "src/lib.rs:74:1:74:9"
  },
  "visible": true,
  "loc": "src/raw/mod.rs:1208:5:1226:6",
  "doc": "/// Attempts to get mutable references to `N` entries in the table at once.\n///\n/// Returns an array of length `N` with the results of each query.\n///\n/// At most one mutable reference will be returned to any entry. `None` will be returned if any\n/// of the hashes are duplicates. `None` will be returned if the hash is not found.\n///\n/// The `eq` argument should be a closure such that `eq(i, k)` returns true if `k` is equal to\n/// the `i`th key to be looked up.\n",
  "code": [
    "pub fn get_many_mut<const N: usize>(",
    "    &mut self,",
    "    hashes: [u64; N],",
    "    eq: impl FnMut(usize, &T) -> bool,",
    ") -> [Option<&'_ mut T>; N] {",
    "    unsafe {",
    "        let ptrs = self.get_many_mut_pointers(hashes, eq);",
    "",
    "        for (i, cur) in ptrs.iter().enumerate() {",
    "            if cur.is_some() && ptrs[..i].contains(cur) {",
    "                panic!(\"duplicate keys found\");",
    "            }",
    "        }",
    "        // All bucket are distinct from all previous buckets so we're clear to return the result",
    "        // of the lookup.",
    "",
    "        ptrs.map(|ptr| ptr.map(|mut ptr| ptr.as_mut()))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 2,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(i, cur) in ptrs.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "cur.is_some()",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ptrs[..i].contains(cur)",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        14,
        15,
        16,
        17,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(i, cur) in ptrs.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "cur.is_some()",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ptrs[..i].contains(cur)",
          "norm": null,
          "value": "false",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "(i, cur) in ptrs.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1216,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        14,
        15,
        18,
        20,
        5,
        6,
        7,
        9,
        11,
        21,
        22
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(i, cur) in ptrs.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "cur.is_some()",
          "norm": null,
          "value": "false",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "(i, cur) in ptrs.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1216,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        19,
        20,
        5,
        6,
        7,
        9,
        11,
        21,
        22
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(i, cur) in ptrs.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1216,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}