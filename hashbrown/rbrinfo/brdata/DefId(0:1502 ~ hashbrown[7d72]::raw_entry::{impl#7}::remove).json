{
  "name": "hashbrown::raw_entry::{impl#7}::remove",
  "mod_info": {
    "name": "raw_entry",
    "loc": "src/lib.rs:80:1:80:15"
  },
  "visible": true,
  "loc": "src/raw_entry.rs:1222:5:1224:6",
  "doc": "/// Takes the value out of the entry, and returns it.\n///\n/// # Examples\n///\n/// ```\n/// use hashbrown::hash_map::{HashMap, RawEntryMut};\n///\n/// let mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n///\n/// match map.raw_entry_mut().from_key(&\"a\") {\n///     RawEntryMut::Vacant(_) => panic!(),\n///     RawEntryMut::Occupied(o) => assert_eq!(o.remove(), 100),\n/// }\n/// assert_eq!(map.get(&\"a\"), None);\n/// ```\n",
  "code": [
    "pub fn remove(self) -> V {",
    "    self.remove_entry().1",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.remove_entry().1",
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}