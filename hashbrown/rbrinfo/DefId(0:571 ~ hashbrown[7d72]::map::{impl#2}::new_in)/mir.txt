bb0
  0: StorageLive(_2)
    SourceInfo(src/map.rs:367:30-367:59)
  Terminator {
      source_info: SourceInfo(src/map.rs:367:30-367:59)
      kind: _2 = <foldhash::fast::RandomState as core::default::Default>::default() -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageLive(_3)
    SourceInfo(src/map.rs:367:61-367:66)
  1: _3 = move _1
    SourceInfo(src/map.rs:367:61-367:66)
  Terminator {
      source_info: SourceInfo(src/map.rs:367:9-367:67)
      kind: _0 = map::HashMap::<K, V, foldhash::fast::RandomState, A>::with_hasher_in(move _2, move _3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(src/map.rs:367:66-367:67)
  1: StorageDead(_2)
    SourceInfo(src/map.rs:367:66-367:67)
  Terminator {
      source_info: SourceInfo(src/map.rs:368:5-368:6)
      kind: drop(_1) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:368:6-368:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/map.rs:367:66-367:67)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:368:5-368:6)
      kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb0, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:366:5-368:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

