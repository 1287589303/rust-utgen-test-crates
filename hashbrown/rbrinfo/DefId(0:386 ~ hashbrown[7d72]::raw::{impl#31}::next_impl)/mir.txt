bb0
  0: StorageLive(_2)
    SourceInfo(src/raw/mod.rs:3744:9-3779:10)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3744:9-3779:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3744:9-3779:10)
      kind: falseUnwind -> [real: bb2, unwind: bb17]
  }
  preds [bb0, bb16]
  succs [bb2, bb17]

bb2
  0: StorageLive(_4)
    SourceInfo(src/raw/mod.rs:3745:13-3749:14)
  1: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:3745:34-3745:59)
  2: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:3745:34-3745:52)
  3: _6 = &mut ((*_1).0: control::bitmask::BitMaskIter)
    SourceInfo(src/raw/mod.rs:3745:34-3745:52)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3745:34-3745:59)
      kind: _5 = <control::bitmask::BitMaskIter as core::iter::Iterator>::next(move _6) -> [return: bb3, unwind: bb17]
  }
  preds [bb1]
  succs [bb3, bb17]

bb3
  0: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:3745:58-3745:59)
  1: PlaceMention(_5)
    SourceInfo(src/raw/mod.rs:3745:34-3745:59)
  2: _7 = discriminant(_5)
    SourceInfo(src/raw/mod.rs:3745:34-3745:59)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3745:20-3745:31)
      kind: switchInt(move _7) -> [1: bb4, otherwise: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3745:20-3745:31)
      kind: falseEdge -> [real: bb5, imaginary: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:3745:25-3745:30)
  1: _8 = ((_5 as Some).0: usize)
    SourceInfo(src/raw/mod.rs:3745:25-3745:30)
  2: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:3748:29-3748:59)
  3: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:3748:29-3748:51)
  4: _11 = ((*_1).1: usize)
    SourceInfo(src/raw/mod.rs:3748:29-3748:51)
  5: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:3748:54-3748:59)
  6: _12 = _8
    SourceInfo(src/raw/mod.rs:3748:54-3748:59)
  7: _13 = AddWithOverflow(_11, _12)
    SourceInfo(src/raw/mod.rs:3748:29-3748:59)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3748:29-3748:59)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", move _11, move _12) -> [success: bb6, unwind: bb17]
  }
  preds [bb4]
  succs [bb6, bb17]

bb6
  0: _10 = move (_13.0: usize)
    SourceInfo(src/raw/mod.rs:3748:29-3748:59)
  1: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:3748:58-3748:59)
  2: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:3748:58-3748:59)
  3: _0 = core::option::Option::<usize>::Some(move _10)
    SourceInfo(src/raw/mod.rs:3748:24-3748:60)
  4: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:3748:59-3748:60)
  5: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:3749:13-3749:14)
  6: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:3749:13-3749:14)
  7: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:3749:13-3749:14)
  8: StorageDead(_2)
    SourceInfo(src/raw/mod.rs:3779:9-3779:10)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3780:6-3780:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  0: _4 = const ()
    SourceInfo(src/raw/mod.rs:3749:14-3749:14)
  1: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:3749:13-3749:14)
  2: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:3749:13-3749:14)
  3: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:3772:25-3772:85)
  4: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:3772:48-3772:84)
  5: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:3772:48-3772:66)
  6: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:3772:48-3772:57)
  7: _17 = ((*_1).2: core::ptr::NonNull<u8>)
    SourceInfo(src/raw/mod.rs:3772:48-3772:57)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3772:48-3772:66)
      kind: _16 = core::ptr::NonNull::<u8>::as_ptr(move _17) -> [return: bb8, unwind: bb17]
  }
  preds [bb3, bb4]
  succs [bb8, bb17]

bb8
  0: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:3772:65-3772:66)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3772:48-3772:84)
      kind: _15 = core::ptr::mut_ptr::<impl *mut u8>::add(move _16, const control::group::sse2::Group::WIDTH) -> [return: bb9, unwind: bb17]
  }
  preds [bb7]
  succs [bb9, bb17]

bb9
  0: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:3772:83-3772:84)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3772:25-3772:85)
      kind: _14 = core::ptr::NonNull::<u8>::new_unchecked(move _15) -> [return: bb10, unwind: bb17]
  }
  preds [bb8]
  succs [bb10, bb17]

bb10
  0: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:3772:84-3772:85)
  1: ((*_1).2: core::ptr::NonNull<u8>) = move _14
    SourceInfo(src/raw/mod.rs:3772:13-3772:85)
  2: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:3772:84-3772:85)
  3: StorageLive(_18)
    SourceInfo(src/raw/mod.rs:3775:34-3777:29)
  4: StorageLive(_19)
    SourceInfo(src/raw/mod.rs:3775:34-3776:30)
  5: StorageLive(_20)
    SourceInfo(src/raw/mod.rs:3775:34-3775:80)
  6: StorageLive(_21)
    SourceInfo(src/raw/mod.rs:3775:34-3775:80)
  7: StorageLive(_22)
    SourceInfo(src/raw/mod.rs:3775:54-3775:79)
  8: StorageLive(_23)
    SourceInfo(src/raw/mod.rs:3775:54-3775:79)
  9: StorageLive(_24)
    SourceInfo(src/raw/mod.rs:3775:54-3775:72)
  10: StorageLive(_25)
    SourceInfo(src/raw/mod.rs:3775:54-3775:63)
  11: _25 = ((*_1).2: core::ptr::NonNull<u8>)
    SourceInfo(src/raw/mod.rs:3775:54-3775:63)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3775:54-3775:72)
      kind: _24 = core::ptr::NonNull::<u8>::as_ptr(move _25) -> [return: bb11, unwind: bb17]
  }
  preds [bb9]
  succs [bb11, bb17]

bb11
  0: StorageDead(_25)
    SourceInfo(src/raw/mod.rs:3775:71-3775:72)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3775:54-3775:79)
      kind: _23 = core::ptr::mut_ptr::<impl *mut u8>::cast::<control::tag::Tag>(move _24) -> [return: bb12, unwind: bb17]
  }
  preds [bb10]
  succs [bb12, bb17]

bb12
  0: _22 = move _23 as *const control::tag::Tag (PointerCoercion(MutToConstPointer))
    SourceInfo(src/raw/mod.rs:3775:54-3775:79)
  1: StorageDead(_24)
    SourceInfo(src/raw/mod.rs:3775:78-3775:79)
  2: StorageDead(_23)
    SourceInfo(src/raw/mod.rs:3775:78-3775:79)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3775:34-3775:80)
      kind: _21 = control::group::sse2::Group::load_aligned(move _22) -> [return: bb13, unwind: bb17]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: _20 = &_21
    SourceInfo(src/raw/mod.rs:3775:34-3775:80)
  1: StorageDead(_22)
    SourceInfo(src/raw/mod.rs:3775:79-3775:80)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3775:34-3776:30)
      kind: _19 = control::group::sse2::Group::match_full(move _20) -> [return: bb14, unwind: bb17]
  }
  preds [bb12]
  succs [bb14, bb17]

bb14
  0: StorageDead(_20)
    SourceInfo(src/raw/mod.rs:3776:29-3776:30)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3775:34-3777:29)
      kind: _18 = <control::bitmask::BitMask as core::iter::IntoIterator>::into_iter(move _19) -> [return: bb15, unwind: bb17]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: StorageDead(_19)
    SourceInfo(src/raw/mod.rs:3777:28-3777:29)
  1: ((*_1).0: control::bitmask::BitMaskIter) = move _18
    SourceInfo(src/raw/mod.rs:3775:13-3777:29)
  2: StorageDead(_18)
    SourceInfo(src/raw/mod.rs:3777:28-3777:29)
  3: StorageDead(_21)
    SourceInfo(src/raw/mod.rs:3777:29-3777:30)
  4: _26 = AddWithOverflow(((*_1).1: usize), const control::group::sse2::Group::WIDTH)
    SourceInfo(src/raw/mod.rs:3778:13-3778:51)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3778:13-3778:51)
      kind: assert(!move (_26.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).1: usize), const control::group::sse2::Group::WIDTH) -> [success: bb16, unwind: bb17]
  }
  preds [bb14]
  succs [bb16, bb17]

bb16
  0: ((*_1).1: usize) = move (_26.0: usize)
    SourceInfo(src/raw/mod.rs:3778:13-3778:51)
  1: _3 = const ()
    SourceInfo(src/raw/mod.rs:3744:14-3779:10)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3744:9-3779:10)
      kind: goto -> bb1
  }
  preds [bb15]
  succs [bb1]

bb17
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3743:5-3780:6)
      kind: resume
  }
  preds [bb1, bb2, bb5, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15]
  succs []

