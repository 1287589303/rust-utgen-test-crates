bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:3990:17-3990:30)
  1: _3 = core::option::Option::<K>::None
    SourceInfo(src/map.rs:3990:33-3990:37)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/map.rs:3990:17-3990:30)
  3: StorageLive(_4)
    SourceInfo(src/map.rs:3992:13-4001:19)
  4: StorageLive(_5)
    SourceInfo(src/map.rs:3992:13-3993:23)
  5: _5 = &mut ((*(_1.2: &mut map::HashMap<K, V, S, A>)).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:3992:13-3993:23)
  6: StorageLive(_6)
    SourceInfo(src/map.rs:3994:38-3994:55)
  7: StorageLive(_7)
    SourceInfo(src/map.rs:3994:38-3994:47)
  8: _7 = &(_1.1: raw::Bucket<(K, V)>)
    SourceInfo(src/map.rs:3994:38-3994:47)
  Terminator {
      source_info: SourceInfo(src/map.rs:3994:38-3994:55)
      kind: _6 = <raw::Bucket<(K, V)> as core::clone::Clone>::clone(move _7) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_7)
    SourceInfo(src/map.rs:3994:54-3994:55)
  1: StorageLive(_8)
    SourceInfo(src/map.rs:3994:57-4001:18)
  2: StorageLive(_9)
    SourceInfo(src/map.rs:3994:57-4001:18)
  3: _9 = &mut _3
    SourceInfo(src/map.rs:3994:57-4001:18)
  4: _8 = {closure@src/map.rs:3994:57: 3994:71} { f: move _2, spare_key: move _9 }
    SourceInfo(src/map.rs:3994:57-4001:18)
  5: StorageDead(_9)
    SourceInfo(src/map.rs:3994:70-3994:71)
  Terminator {
      source_info: SourceInfo(src/map.rs:3992:13-4001:19)
      kind: _4 = raw::RawTable::<(K, V), A>::replace_bucket_with::<{closure@src/map.rs:3994:57: 3994:71}>(move _5, move _6, move _8) -> [return: bb2, unwind: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: StorageDead(_8)
    SourceInfo(src/map.rs:4001:18-4001:19)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:4001:18-4001:19)
  2: StorageDead(_5)
    SourceInfo(src/map.rs:4001:18-4001:19)
  3: StorageDead(_4)
    SourceInfo(src/map.rs:4001:19-4001:20)
  4: PlaceMention(_3)
    SourceInfo(src/map.rs:4003:32-4003:41)
  5: _10 = discriminant(_3)
    SourceInfo(src/map.rs:4003:32-4003:41)
  Terminator {
      source_info: SourceInfo(src/map.rs:4003:20-4003:29)
      kind: switchInt(move _10) -> [1: bb3, otherwise: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:4003:20-4003:29)
      kind: falseEdge -> [real: bb4, imaginary: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageLive(_11)
    SourceInfo(src/map.rs:4003:25-4003:28)
  1: _11 = move ((_3 as Some).0: K)
    SourceInfo(src/map.rs:4003:25-4003:28)
  2: StorageLive(_12)
    SourceInfo(src/map.rs:4004:31-4008:18)
  3: StorageLive(_13)
    SourceInfo(src/map.rs:4005:27-4005:36)
  4: _13 = (_1.0: u64)
    SourceInfo(src/map.rs:4005:27-4005:36)
  5: StorageLive(_14)
    SourceInfo(src/map.rs:4006:21-4006:24)
  6: _14 = move _11
    SourceInfo(src/map.rs:4006:21-4006:24)
  7: StorageLive(_15)
    SourceInfo(src/map.rs:4007:28-4007:38)
  8: _15 = &mut (*(_1.2: &mut map::HashMap<K, V, S, A>))
    SourceInfo(src/map.rs:4007:28-4007:38)
  9: _12 = map::VacantEntry::<'_, K, V, S, A> { hash: move _13, key: move _14, table: move _15 }
    SourceInfo(src/map.rs:4004:31-4008:18)
  10: StorageDead(_15)
    SourceInfo(src/map.rs:4008:17-4008:18)
  Terminator {
      source_info: SourceInfo(src/map.rs:4008:17-4008:18)
      kind: drop(_14) -> [return: bb5, unwind: bb12]
  }
  preds [bb3]
  succs [bb5, bb12]

bb5
  0: StorageDead(_14)
    SourceInfo(src/map.rs:4008:17-4008:18)
  1: StorageDead(_13)
    SourceInfo(src/map.rs:4008:17-4008:18)
  2: _0 = map::Entry::<'_, K, V, S, A>::Vacant(move _12)
    SourceInfo(src/map.rs:4004:17-4008:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4008:18-4008:19)
      kind: drop(_12) -> [return: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  0: StorageDead(_12)
    SourceInfo(src/map.rs:4008:18-4008:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4009:13-4009:14)
      kind: drop(_11) -> [return: bb8, unwind: bb15]
  }
  preds [bb5]
  succs [bb8, bb15]

bb7
  0: StorageLive(_16)
    SourceInfo(src/map.rs:4010:33-4010:37)
  1: _16 = move _1
    SourceInfo(src/map.rs:4010:33-4010:37)
  2: _0 = map::Entry::<'_, K, V, S, A>::Occupied(move _16)
    SourceInfo(src/map.rs:4010:17-4010:38)
  3: StorageDead(_16)
    SourceInfo(src/map.rs:4010:37-4010:38)
  Terminator {
      source_info: SourceInfo(src/map.rs:4003:13-4011:14)
      kind: goto -> bb9
  }
  preds [bb2, bb3]
  succs [bb9]

bb8
  0: StorageDead(_11)
    SourceInfo(src/map.rs:4009:13-4009:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:4003:13-4011:14)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:4012:9-4012:10)
      kind: drop(_3) -> [return: bb10, unwind: bb16]
  }
  preds [bb7, bb8]
  succs [bb10, bb16]

bb10
  0: StorageDead(_3)
    SourceInfo(src/map.rs:4012:9-4012:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:4013:5-4013:6)
      kind: drop(_2) -> [return: bb11, unwind: bb17]
  }
  preds [bb9]
  succs [bb11, bb17]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:4013:6-4013:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/map.rs:4008:18-4008:19)
      kind: drop(_12) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/map.rs:4009:13-4009:14)
      kind: drop(_11) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb5, bb12]
  succs [bb15]

bb14
  Terminator {
      source_info: SourceInfo(src/map.rs:4001:18-4001:19)
      kind: drop(_8) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map.rs:4012:9-4012:10)
      kind: drop(_3) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb0, bb6, bb13, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/map.rs:4013:5-4013:6)
      kind: drop(_2) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb9, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/map.rs:3985:5-4013:6)
      kind: resume
  }
  preds [bb10, bb16]
  succs []

