bb0
  0: PlaceMention(_1)
    SourceInfo(src/map.rs:4137:15-4137:19)
  1: _3 = discriminant(_1)
    SourceInfo(src/map.rs:4137:15-4137:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4137:9-4137:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map.rs:4137:15-4137:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4137:15-4137:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map.rs:4138:13-4138:42)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_8)
    SourceInfo(src/map.rs:4142:30-4142:35)
  1: _8 = move ((_1 as Vacant).0: map::VacantEntryRef<'_, '_, K, Q, V, S, A>)
    SourceInfo(src/map.rs:4142:30-4142:35)
  2: StorageLive(_9)
    SourceInfo(src/map.rs:4142:40-4142:45)
  3: _9 = move _8
    SourceInfo(src/map.rs:4142:40-4142:45)
  4: StorageLive(_10)
    SourceInfo(src/map.rs:4142:59-4142:64)
  5: _10 = move _2
    SourceInfo(src/map.rs:4142:59-4142:64)
  Terminator {
      source_info: SourceInfo(src/map.rs:4142:40-4142:65)
      kind: _0 = map::VacantEntryRef::<'_, '_, K, Q, V, S, A>::insert_entry(move _9, move _10) -> [return: bb7, unwind: bb10]
  }
  preds [bb0, bb2]
  succs [bb7, bb10]

bb4
  0: StorageLive(_4)
    SourceInfo(src/map.rs:4138:32-4138:41)
  1: _4 = move ((_1 as Occupied).0: map::OccupiedEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:4138:32-4138:41)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:4139:17-4139:36)
  3: StorageLive(_6)
    SourceInfo(src/map.rs:4139:17-4139:22)
  4: _6 = &mut _4
    SourceInfo(src/map.rs:4139:17-4139:22)
  5: StorageLive(_7)
    SourceInfo(src/map.rs:4139:30-4139:35)
  6: _7 = move _2
    SourceInfo(src/map.rs:4139:30-4139:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:4139:17-4139:36)
      kind: _5 = map::OccupiedEntry::<'_, K, V, S, A>::insert(move _6, move _7) -> [return: bb5, unwind: bb11]
  }
  preds [bb2]
  succs [bb5, bb11]

bb5
  0: StorageDead(_7)
    SourceInfo(src/map.rs:4139:35-4139:36)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:4139:35-4139:36)
  Terminator {
      source_info: SourceInfo(src/map.rs:4139:36-4139:37)
      kind: drop(_5) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_5)
    SourceInfo(src/map.rs:4139:36-4139:37)
  1: _0 = move _4
    SourceInfo(src/map.rs:4140:17-4140:22)
  2: StorageDead(_4)
    SourceInfo(src/map.rs:4141:13-4141:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:4141:13-4141:14)
      kind: goto -> bb8
  }
  preds [bb5]
  succs [bb8]

bb7
  0: StorageDead(_10)
    SourceInfo(src/map.rs:4142:64-4142:65)
  1: StorageDead(_9)
    SourceInfo(src/map.rs:4142:64-4142:65)
  2: StorageDead(_8)
    SourceInfo(src/map.rs:4142:64-4142:65)
  Terminator {
      source_info: SourceInfo(src/map.rs:4142:64-4142:65)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:4144:5-4144:6)
      kind: drop(_2) -> [return: bb9, unwind: bb13]
  }
  preds [bb6, bb7]
  succs [bb9, bb13]

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:4144:6-4144:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:4142:64-4142:65)
      kind: drop(_10) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb12]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:4139:35-4139:36)
      kind: drop(_7) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map.rs:4144:5-4144:6)
      kind: drop(_2) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb5, bb10, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/map.rs:4132:5-4144:6)
      kind: resume
  }
  preds [bb8, bb12]
  succs []

