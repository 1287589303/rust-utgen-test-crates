bb0
  0: StorageLive(_2)
    SourceInfo(src/map.rs:459:13-459:25)
  1: _2 = move _1
    SourceInfo(src/map.rs:459:13-459:25)
  2: StorageLive(_3)
    SourceInfo(src/map.rs:460:20-460:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:460:20-460:35)
      kind: _3 = raw::RawTable::<(K, V)>::new() -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _0 = map::HashMap::<K, V, S> { hash_builder: move _2, table: move _3 }
    SourceInfo(src/map.rs:458:9-461:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:461:9-461:10)
      kind: drop(_3) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_3)
    SourceInfo(src/map.rs:461:9-461:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:461:9-461:10)
      kind: drop(_2) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_2)
    SourceInfo(src/map.rs:461:9-461:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:462:5-462:6)
      kind: drop(_1) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(src/map.rs:462:6-462:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:461:9-461:10)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:462:5-462:6)
      kind: drop(_1) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2, bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/map.rs:457:5-462:6)
      kind: resume
  }
  preds [bb3, bb6]
  succs []

