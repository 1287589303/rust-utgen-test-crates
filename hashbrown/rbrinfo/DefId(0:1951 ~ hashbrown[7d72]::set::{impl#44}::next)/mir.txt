bb0
  0: StorageLive(_2)
    SourceInfo(src/set.rs:1958:9-1963:10)
  Terminator {
      source_info: SourceInfo(src/set.rs:1958:9-1963:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(src/set.rs:1958:9-1963:10)
      kind: falseUnwind -> [real: bb2, unwind: bb14]
  }
  preds [bb0, bb12]
  succs [bb2, bb14]

bb2
  0: StorageLive(_4)
    SourceInfo(src/set.rs:1959:17-1959:20)
  1: StorageLive(_5)
    SourceInfo(src/set.rs:1959:23-1959:40)
  2: StorageLive(_6)
    SourceInfo(src/set.rs:1959:23-1959:39)
  3: StorageLive(_7)
    SourceInfo(src/set.rs:1959:23-1959:32)
  4: _7 = &mut ((*_1).0: set::Iter<'_, T>)
    SourceInfo(src/set.rs:1959:23-1959:32)
  Terminator {
      source_info: SourceInfo(src/set.rs:1959:23-1959:39)
      kind: _6 = <set::Iter<'_, T> as core::iter::Iterator>::next(move _7) -> [return: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: StorageDead(_7)
    SourceInfo(src/set.rs:1959:38-1959:39)
  Terminator {
      source_info: SourceInfo(src/set.rs:1959:23-1959:40)
      kind: _5 = <core::option::Option<&T> as core::ops::Try>::branch(move _6) -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: StorageDead(_6)
    SourceInfo(src/set.rs:1959:39-1959:40)
  1: PlaceMention(_5)
    SourceInfo(src/set.rs:1959:23-1959:40)
  2: _8 = discriminant(_5)
    SourceInfo(src/set.rs:1959:23-1959:40)
  Terminator {
      source_info: SourceInfo(src/set.rs:1959:23-1959:40)
      kind: switchInt(move _8) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(src/set.rs:1959:23-1959:40)
  Terminator {
      source_info: SourceInfo(src/set.rs:1959:23-1959:40)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/set.rs:1959:39-1959:40)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_12)
    SourceInfo(src/set.rs:1959:23-1959:40)
  1: _12 = ((_5 as Continue).0: &T)
    SourceInfo(src/set.rs:1959:23-1959:40)
  2: _4 = _12
    SourceInfo(src/set.rs:1959:23-1959:40)
  3: StorageDead(_12)
    SourceInfo(src/set.rs:1959:39-1959:40)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(src/set.rs:1959:17-1959:20)
  5: StorageDead(_5)
    SourceInfo(src/set.rs:1959:40-1959:41)
  6: StorageLive(_13)
    SourceInfo(src/set.rs:1960:16-1960:40)
  7: StorageLive(_14)
    SourceInfo(src/set.rs:1960:16-1960:26)
  8: _14 = &(*((*_1).1: &set::HashSet<T, S, A>))
    SourceInfo(src/set.rs:1960:16-1960:26)
  9: StorageLive(_15)
    SourceInfo(src/set.rs:1960:36-1960:39)
  10: _15 = &(*_4)
    SourceInfo(src/set.rs:1960:36-1960:39)
  Terminator {
      source_info: SourceInfo(src/set.rs:1960:16-1960:40)
      kind: _13 = set::HashSet::<T, S, A>::contains::<T>(move _14, move _15) -> [return: bb10, unwind: bb14]
  }
  preds [bb4, bb6]
  succs [bb10, bb14]

bb8
  0: StorageLive(_9)
    SourceInfo(src/set.rs:1959:39-1959:40)
  1: _9 = ((_5 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/set.rs:1959:39-1959:40)
  2: StorageLive(_11)
    SourceInfo(src/set.rs:1959:39-1959:40)
  3: _11 = _9
    SourceInfo(src/set.rs:1959:39-1959:40)
  Terminator {
      source_info: SourceInfo(src/set.rs:1959:23-1959:40)
      kind: _0 = <core::option::Option<&T> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _11) -> [return: bb9, unwind: bb14]
  }
  preds [bb6]
  succs [bb9, bb14]

bb9
  0: StorageDead(_11)
    SourceInfo(src/set.rs:1959:39-1959:40)
  1: StorageDead(_9)
    SourceInfo(src/set.rs:1959:39-1959:40)
  2: StorageDead(_5)
    SourceInfo(src/set.rs:1959:40-1959:41)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  Terminator {
      source_info: SourceInfo(src/set.rs:1960:16-1960:40)
      kind: switchInt(move _13) -> [0: bb12, otherwise: bb11]
  }
  preds [bb7]
  succs [bb11, bb12]

bb11
  0: StorageDead(_15)
    SourceInfo(src/set.rs:1960:39-1960:40)
  1: StorageDead(_14)
    SourceInfo(src/set.rs:1960:39-1960:40)
  2: StorageLive(_17)
    SourceInfo(src/set.rs:1961:29-1961:32)
  3: _17 = &(*_4)
    SourceInfo(src/set.rs:1961:29-1961:32)
  4: _0 = core::option::Option::<&T>::Some(move _17)
    SourceInfo(src/set.rs:1961:24-1961:33)
  5: StorageDead(_17)
    SourceInfo(src/set.rs:1961:32-1961:33)
  6: StorageDead(_13)
    SourceInfo(src/set.rs:1962:13-1962:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb12
  0: StorageDead(_15)
    SourceInfo(src/set.rs:1960:39-1960:40)
  1: StorageDead(_14)
    SourceInfo(src/set.rs:1960:39-1960:40)
  2: _3 = const ()
    SourceInfo(src/set.rs:1962:14-1962:14)
  3: StorageDead(_13)
    SourceInfo(src/set.rs:1962:13-1962:14)
  4: StorageDead(_4)
    SourceInfo(src/set.rs:1963:9-1963:10)
  Terminator {
      source_info: SourceInfo(src/set.rs:1958:9-1963:10)
      kind: goto -> bb1
  }
  preds [bb10]
  succs [bb1]

bb13
  0: StorageDead(_4)
    SourceInfo(src/set.rs:1963:9-1963:10)
  1: StorageDead(_2)
    SourceInfo(src/set.rs:1963:9-1963:10)
  Terminator {
      source_info: SourceInfo(src/set.rs:1964:6-1964:6)
      kind: return
  }
  preds [bb9, bb11]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/set.rs:1957:5-1964:6)
      kind: resume
  }
  preds [bb1, bb2, bb3, bb7, bb8]
  succs []

