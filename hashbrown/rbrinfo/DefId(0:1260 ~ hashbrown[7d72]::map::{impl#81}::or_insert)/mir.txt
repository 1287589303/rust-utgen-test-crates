bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:4170:9-4173:10)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:4170:9-4173:10)
  2: PlaceMention(_1)
    SourceInfo(src/map.rs:4170:15-4170:19)
  3: _5 = discriminant(_1)
    SourceInfo(src/map.rs:4170:15-4170:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4170:9-4170:19)
      kind: switchInt(move _5) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map.rs:4170:15-4170:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4170:15-4170:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map.rs:4171:13-4171:38)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_9)
    SourceInfo(src/map.rs:4172:30-4172:35)
  1: _9 = move ((_1 as Vacant).0: map::VacantEntryRef<'_, '_, K, Q, V, S, A>)
    SourceInfo(src/map.rs:4172:30-4172:35)
  2: StorageLive(_10)
    SourceInfo(src/map.rs:4172:40-4172:61)
  3: StorageLive(_11)
    SourceInfo(src/map.rs:4172:40-4172:45)
  4: _11 = move _9
    SourceInfo(src/map.rs:4172:40-4172:45)
  5: StorageLive(_12)
    SourceInfo(src/map.rs:4172:53-4172:60)
  6: _12 = move _2
    SourceInfo(src/map.rs:4172:53-4172:60)
  Terminator {
      source_info: SourceInfo(src/map.rs:4172:40-4172:61)
      kind: _10 = map::VacantEntryRef::<'_, '_, K, Q, V, S, A>::insert(move _11, move _12) -> [return: bb6, unwind: bb9]
  }
  preds [bb0, bb2]
  succs [bb6, bb9]

bb4
  0: StorageLive(_6)
    SourceInfo(src/map.rs:4171:32-4171:37)
  1: _6 = move ((_1 as Occupied).0: map::OccupiedEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:4171:32-4171:37)
  2: StorageLive(_7)
    SourceInfo(src/map.rs:4171:42-4171:58)
  3: StorageLive(_8)
    SourceInfo(src/map.rs:4171:42-4171:47)
  4: _8 = move _6
    SourceInfo(src/map.rs:4171:42-4171:47)
  Terminator {
      source_info: SourceInfo(src/map.rs:4171:42-4171:58)
      kind: _7 = map::OccupiedEntry::<'_, K, V, S, A>::into_mut(move _8) -> [return: bb5, unwind: bb10]
  }
  preds [bb2]
  succs [bb5, bb10]

bb5
  0: _4 = &mut (*_7)
    SourceInfo(src/map.rs:4171:42-4171:58)
  1: StorageDead(_8)
    SourceInfo(src/map.rs:4171:57-4171:58)
  2: StorageDead(_7)
    SourceInfo(src/map.rs:4171:57-4171:58)
  3: StorageDead(_6)
    SourceInfo(src/map.rs:4171:57-4171:58)
  Terminator {
      source_info: SourceInfo(src/map.rs:4171:57-4171:58)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: _4 = &mut (*_10)
    SourceInfo(src/map.rs:4172:40-4172:61)
  1: StorageDead(_12)
    SourceInfo(src/map.rs:4172:60-4172:61)
  2: StorageDead(_11)
    SourceInfo(src/map.rs:4172:60-4172:61)
  3: StorageDead(_10)
    SourceInfo(src/map.rs:4172:60-4172:61)
  4: StorageDead(_9)
    SourceInfo(src/map.rs:4172:60-4172:61)
  Terminator {
      source_info: SourceInfo(src/map.rs:4172:60-4172:61)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  0: _3 = &mut (*_4)
    SourceInfo(src/map.rs:4170:9-4173:10)
  1: _0 = &mut (*_3)
    SourceInfo(src/map.rs:4170:9-4173:10)
  2: StorageDead(_4)
    SourceInfo(src/map.rs:4174:5-4174:6)
  3: StorageDead(_3)
    SourceInfo(src/map.rs:4174:5-4174:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:4174:5-4174:6)
      kind: drop(_2) -> [return: bb8, unwind: bb11]
  }
  preds [bb5, bb6]
  succs [bb8, bb11]

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:4174:6-4174:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:4172:60-4172:61)
      kind: drop(_12) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:4174:5-4174:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb4, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:4165:5-4174:6)
      kind: resume
  }
  preds [bb7, bb10]
  succs []

