bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:4405:13-4405:17)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:4405:20-4405:36)
  2: _4 = &mut ((*(_1.2: &mut map::HashMap<K, V, S, A>)).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:4405:20-4405:36)
  3: StorageLive(_5)
    SourceInfo(src/map.rs:4406:13-4406:22)
  4: _5 = (_1.0: u64)
    SourceInfo(src/map.rs:4406:13-4406:22)
  5: StorageLive(_6)
    SourceInfo(src/map.rs:4407:13-4407:37)
  6: StorageLive(_7)
    SourceInfo(src/map.rs:4407:14-4407:29)
  7: StorageLive(_8)
    SourceInfo(src/map.rs:4407:14-4407:22)
  8: _8 = &(*(_1.1: &Q))
    SourceInfo(src/map.rs:4407:14-4407:22)
  Terminator {
      source_info: SourceInfo(src/map.rs:4407:14-4407:29)
      kind: _7 = <&Q as core::convert::Into<K>>::into(move _8) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_8)
    SourceInfo(src/map.rs:4407:28-4407:29)
  1: StorageLive(_9)
    SourceInfo(src/map.rs:4407:31-4407:36)
  2: _9 = move _2
    SourceInfo(src/map.rs:4407:31-4407:36)
  3: _6 = (move _7, move _9)
    SourceInfo(src/map.rs:4407:13-4407:37)
  Terminator {
      source_info: SourceInfo(src/map.rs:4407:36-4407:37)
      kind: drop(_9) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_9)
    SourceInfo(src/map.rs:4407:36-4407:37)
  Terminator {
      source_info: SourceInfo(src/map.rs:4407:36-4407:37)
      kind: drop(_7) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_7)
    SourceInfo(src/map.rs:4407:36-4407:37)
  1: StorageLive(_10)
    SourceInfo(src/map.rs:4408:13-4408:61)
  2: StorageLive(_11)
    SourceInfo(src/map.rs:4408:36-4408:60)
  3: StorageLive(_12)
    SourceInfo(src/map.rs:4408:36-4408:60)
  4: _12 = &((*(_1.2: &mut map::HashMap<K, V, S, A>)).0: S)
    SourceInfo(src/map.rs:4408:36-4408:60)
  5: _11 = &(*_12)
    SourceInfo(src/map.rs:4408:36-4408:60)
  Terminator {
      source_info: SourceInfo(src/map.rs:4408:13-4408:61)
      kind: _10 = map::make_hasher::<K, V, S>(move _11) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_11)
    SourceInfo(src/map.rs:4408:60-4408:61)
  Terminator {
      source_info: SourceInfo(src/map.rs:4405:20-4409:10)
      kind: _3 = raw::RawTable::<(K, V), A>::insert::<impl for<'a> Fn(&'a (K, V)) -> u64 + '_>(move _4, move _5, move _6, move _10) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_10)
    SourceInfo(src/map.rs:4409:9-4409:10)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:4409:9-4409:10)
  2: StorageDead(_5)
    SourceInfo(src/map.rs:4409:9-4409:10)
  3: StorageDead(_4)
    SourceInfo(src/map.rs:4409:9-4409:10)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(src/map.rs:4405:13-4405:17)
  5: StorageDead(_12)
    SourceInfo(src/map.rs:4409:10-4409:11)
  6: StorageLive(_13)
    SourceInfo(src/map.rs:4411:19-4411:28)
  7: _13 = (_1.0: u64)
    SourceInfo(src/map.rs:4411:19-4411:28)
  8: StorageLive(_14)
    SourceInfo(src/map.rs:4412:13-4412:17)
  9: _14 = move _3
    SourceInfo(src/map.rs:4412:13-4412:17)
  10: StorageLive(_15)
    SourceInfo(src/map.rs:4413:20-4413:30)
  11: _15 = &mut (*(_1.2: &mut map::HashMap<K, V, S, A>))
    SourceInfo(src/map.rs:4413:20-4413:30)
  12: _0 = map::OccupiedEntry::<'_, K, V, S, A> { hash: move _13, elem: move _14, table: move _15 }
    SourceInfo(src/map.rs:4410:9-4414:10)
  13: StorageDead(_15)
    SourceInfo(src/map.rs:4414:9-4414:10)
  14: StorageDead(_14)
    SourceInfo(src/map.rs:4414:9-4414:10)
  15: StorageDead(_13)
    SourceInfo(src/map.rs:4414:9-4414:10)
  16: StorageDead(_3)
    SourceInfo(src/map.rs:4415:5-4415:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:4415:5-4415:6)
      kind: drop(_2) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:4415:6-4415:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/map.rs:4409:9-4409:10)
      kind: drop(_10) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb9]

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:4407:36-4407:37)
      kind: drop(_7) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:4409:9-4409:10)
      kind: drop(_6) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb7, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:4415:5-4415:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb0, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:4400:5-4415:6)
      kind: resume
  }
  preds [bb5, bb10]
  succs []

