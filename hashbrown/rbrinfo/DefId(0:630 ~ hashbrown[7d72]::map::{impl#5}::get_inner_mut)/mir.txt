bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:1461:12-1461:33)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:1461:12-1461:22)
  2: _4 = &((*_1).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:1461:12-1461:22)
  Terminator {
      source_info: SourceInfo(src/map.rs:1461:12-1461:33)
      kind: _3 = raw::RawTable::<(K, V), A>::is_empty(move _4) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  Terminator {
      source_info: SourceInfo(src/map.rs:1461:12-1461:33)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/map.rs:1461:32-1461:33)
  1: _0 = core::option::Option::<&mut (K, V)>::None
    SourceInfo(src/map.rs:1462:13-1462:17)
  Terminator {
      source_info: SourceInfo(src/map.rs:1461:9-1466:10)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_4)
    SourceInfo(src/map.rs:1461:32-1461:33)
  1: StorageLive(_5)
    SourceInfo(src/map.rs:1464:17-1464:21)
  2: StorageLive(_6)
    SourceInfo(src/map.rs:1464:42-1464:60)
  3: StorageLive(_7)
    SourceInfo(src/map.rs:1464:42-1464:60)
  4: _7 = &((*_1).0: S)
    SourceInfo(src/map.rs:1464:42-1464:60)
  5: _6 = &(*_7)
    SourceInfo(src/map.rs:1464:42-1464:60)
  6: StorageLive(_8)
    SourceInfo(src/map.rs:1464:62-1464:63)
  7: _8 = &(*_2)
    SourceInfo(src/map.rs:1464:62-1464:63)
  Terminator {
      source_info: SourceInfo(src/map.rs:1464:24-1464:64)
      kind: _5 = map::make_hash::<Q, S>(move _6, move _8) -> [return: bb4, unwind: bb9]
  }
  preds [bb1]
  succs [bb4, bb9]

bb4
  0: StorageDead(_8)
    SourceInfo(src/map.rs:1464:63-1464:64)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:1464:63-1464:64)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(src/map.rs:1464:17-1464:21)
  3: StorageDead(_7)
    SourceInfo(src/map.rs:1464:64-1464:65)
  4: StorageLive(_9)
    SourceInfo(src/map.rs:1465:13-1465:23)
  5: _9 = &mut ((*_1).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:1465:13-1465:23)
  6: StorageLive(_10)
    SourceInfo(src/map.rs:1465:32-1465:36)
  7: _10 = _5
    SourceInfo(src/map.rs:1465:32-1465:36)
  8: StorageLive(_11)
    SourceInfo(src/map.rs:1465:38-1465:55)
  9: StorageLive(_12)
    SourceInfo(src/map.rs:1465:53-1465:54)
  10: _12 = &(*_2)
    SourceInfo(src/map.rs:1465:53-1465:54)
  Terminator {
      source_info: SourceInfo(src/map.rs:1465:38-1465:55)
      kind: _11 = map::equivalent_key::<Q, K, V>(move _12) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  0: StorageDead(_12)
    SourceInfo(src/map.rs:1465:54-1465:55)
  Terminator {
      source_info: SourceInfo(src/map.rs:1465:13-1465:56)
      kind: _0 = raw::RawTable::<(K, V), A>::get_mut::<impl for<'a> Fn(&'a (K, V)) -> bool + '_>(move _9, move _10, move _11) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_11)
    SourceInfo(src/map.rs:1465:55-1465:56)
  1: StorageDead(_10)
    SourceInfo(src/map.rs:1465:55-1465:56)
  2: StorageDead(_9)
    SourceInfo(src/map.rs:1465:55-1465:56)
  3: StorageDead(_5)
    SourceInfo(src/map.rs:1466:9-1466:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:1461:9-1466:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_3)
    SourceInfo(src/map.rs:1466:9-1466:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:1467:6-1467:6)
      kind: return
  }
  preds [bb2, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:1465:55-1465:56)
      kind: drop(_11) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:1457:5-1467:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb8]
  succs []

