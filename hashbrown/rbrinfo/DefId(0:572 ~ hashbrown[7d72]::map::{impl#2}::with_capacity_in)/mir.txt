bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:416:43-416:51)
  1: _3 = _1
    SourceInfo(src/map.rs:416:43-416:51)
  2: StorageLive(_4)
    SourceInfo(src/map.rs:416:53-416:82)
  Terminator {
      source_info: SourceInfo(src/map.rs:416:53-416:82)
      kind: _4 = <foldhash::fast::RandomState as core::default::Default>::default() -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageLive(_5)
    SourceInfo(src/map.rs:416:84-416:89)
  1: _5 = move _2
    SourceInfo(src/map.rs:416:84-416:89)
  Terminator {
      source_info: SourceInfo(src/map.rs:416:9-416:90)
      kind: _0 = map::HashMap::<K, V, foldhash::fast::RandomState, A>::with_capacity_and_hasher_in(move _3, move _4, move _5) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(src/map.rs:416:89-416:90)
  1: StorageDead(_4)
    SourceInfo(src/map.rs:416:89-416:90)
  2: StorageDead(_3)
    SourceInfo(src/map.rs:416:89-416:90)
  Terminator {
      source_info: SourceInfo(src/map.rs:417:5-417:6)
      kind: drop(_2) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:417:6-417:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/map.rs:416:89-416:90)
      kind: drop(_5) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:417:5-417:6)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb0, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:415:5-417:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

