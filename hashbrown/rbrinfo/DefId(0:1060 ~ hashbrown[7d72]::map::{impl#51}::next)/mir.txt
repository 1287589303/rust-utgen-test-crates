bb0
  0: StorageLive(_2)
    SourceInfo(src/map.rs:3221:15-3221:32)
  1: StorageLive(_3)
    SourceInfo(src/map.rs:3221:15-3221:25)
  2: _3 = &mut ((*_1).0: raw::RawIter<(K, V)>)
    SourceInfo(src/map.rs:3221:15-3221:25)
  Terminator {
      source_info: SourceInfo(src/map.rs:3221:15-3221:32)
      kind: _2 = <raw::RawIter<(K, V)> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map.rs:3221:31-3221:32)
  1: PlaceMention(_2)
    SourceInfo(src/map.rs:3221:15-3221:32)
  2: _4 = discriminant(_2)
    SourceInfo(src/map.rs:3221:15-3221:32)
  Terminator {
      source_info: SourceInfo(src/map.rs:3221:9-3221:32)
      kind: switchInt(move _4) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(src/map.rs:3221:15-3221:32)
  Terminator {
      source_info: SourceInfo(src/map.rs:3221:15-3221:32)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:3222:13-3222:20)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: _0 = core::option::Option::<(&K, &mut V)>::None
    SourceInfo(src/map.rs:3226:21-3226:25)
  Terminator {
      source_info: SourceInfo(src/map.rs:3226:21-3226:25)
      kind: goto -> bb7
  }
  preds [bb1, bb3]
  succs [bb7]

bb5
  0: StorageLive(_5)
    SourceInfo(src/map.rs:3222:18-3222:19)
  1: _5 = move ((_2 as Some).0: raw::Bucket<(K, V)>)
    SourceInfo(src/map.rs:3222:18-3222:19)
  2: StorageLive(_6)
    SourceInfo(src/map.rs:3223:21-3223:22)
  3: StorageLive(_7)
    SourceInfo(src/map.rs:3223:25-3223:26)
  4: _7 = &_5
    SourceInfo(src/map.rs:3223:25-3223:26)
  Terminator {
      source_info: SourceInfo(src/map.rs:3223:25-3223:35)
      kind: _6 = raw::Bucket::<(K, V)>::as_mut::<'_>(move _7) -> [return: bb6, unwind: bb8]
  }
  preds [bb3]
  succs [bb6, bb8]

bb6
  0: StorageDead(_7)
    SourceInfo(src/map.rs:3223:34-3223:35)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(src/map.rs:3223:21-3223:22)
  2: StorageLive(_8)
    SourceInfo(src/map.rs:3224:22-3224:38)
  3: StorageLive(_9)
    SourceInfo(src/map.rs:3224:23-3224:27)
  4: StorageLive(_10)
    SourceInfo(src/map.rs:3224:23-3224:27)
  5: _10 = &((*_6).0: K)
    SourceInfo(src/map.rs:3224:23-3224:27)
  6: _9 = &(*_10)
    SourceInfo(src/map.rs:3224:23-3224:27)
  7: StorageLive(_11)
    SourceInfo(src/map.rs:3224:29-3224:37)
  8: StorageLive(_12)
    SourceInfo(src/map.rs:3224:29-3224:37)
  9: _12 = &mut ((*_6).1: V)
    SourceInfo(src/map.rs:3224:29-3224:37)
  10: _11 = &mut (*_12)
    SourceInfo(src/map.rs:3224:29-3224:37)
  11: _8 = (move _9, move _11)
    SourceInfo(src/map.rs:3224:22-3224:38)
  12: StorageDead(_11)
    SourceInfo(src/map.rs:3224:37-3224:38)
  13: StorageDead(_9)
    SourceInfo(src/map.rs:3224:37-3224:38)
  14: _0 = core::option::Option::<(&K, &mut V)>::Some(move _8)
    SourceInfo(src/map.rs:3224:17-3224:39)
  15: StorageDead(_8)
    SourceInfo(src/map.rs:3224:38-3224:39)
  16: StorageDead(_6)
    SourceInfo(src/map.rs:3225:13-3225:14)
  17: StorageDead(_12)
    SourceInfo(src/map.rs:3225:13-3225:14)
  18: StorageDead(_10)
    SourceInfo(src/map.rs:3225:13-3225:14)
  19: StorageDead(_5)
    SourceInfo(src/map.rs:3225:13-3225:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:3225:13-3225:14)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_2)
    SourceInfo(src/map.rs:3228:5-3228:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:3228:6-3228:6)
      kind: return
  }
  preds [bb4, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:3219:5-3228:6)
      kind: resume
  }
  preds [bb0, bb5]
  succs []

