bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:923:25-923:42)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:923:25-923:42)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:923:25-923:35)
  3: _5 = &((*_1).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:923:25-923:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:923:25-923:42)
      kind: _4 = raw::RawTable::<(K, V), A>::iter(move _5) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map.rs:923:41-923:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:923:25-923:42)
      kind: _3 = <raw::RawIter<(K, V)> as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb2, unwind: bb17]
  }
  preds [bb0]
  succs [bb2, bb17]

bb2
  0: StorageDead(_4)
    SourceInfo(src/map.rs:923:41-923:42)
  1: PlaceMention(_3)
    SourceInfo(src/map.rs:923:25-923:42)
  2: StorageLive(_6)
    SourceInfo(src/map.rs:923:25-923:42)
  3: _6 = move _3
    SourceInfo(src/map.rs:923:25-923:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:923:13-928:14)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:923:13-928:14)
      kind: falseUnwind -> [real: bb4, unwind: bb17]
  }
  preds [bb2, bb15]
  succs [bb4, bb17]

bb4
  0: StorageLive(_8)
    SourceInfo(src/map.rs:923:25-923:42)
  1: StorageLive(_9)
    SourceInfo(src/map.rs:923:25-923:42)
  2: StorageLive(_10)
    SourceInfo(src/map.rs:923:25-923:42)
  3: StorageLive(_11)
    SourceInfo(src/map.rs:923:25-923:42)
  4: _11 = &mut _6
    SourceInfo(src/map.rs:923:25-923:42)
  5: _10 = &mut (*_11)
    SourceInfo(src/map.rs:923:25-923:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:923:25-923:42)
      kind: _9 = <raw::RawIter<(K, V)> as core::iter::Iterator>::next(move _10) -> [return: bb5, unwind: bb17]
  }
  preds [bb3]
  succs [bb5, bb17]

bb5
  0: StorageDead(_10)
    SourceInfo(src/map.rs:923:41-923:42)
  1: PlaceMention(_9)
    SourceInfo(src/map.rs:923:25-923:42)
  2: _12 = discriminant(_9)
    SourceInfo(src/map.rs:923:25-923:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:923:25-923:42)
      kind: switchInt(move _12) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(src/map.rs:923:25-923:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:923:25-923:42)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/map.rs:923:13-928:14)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_14)
    SourceInfo(src/map.rs:923:17-923:21)
  1: _14 = move ((_9 as Some).0: raw::Bucket<(K, V)>)
    SourceInfo(src/map.rs:923:17-923:21)
  2: StorageLive(_17)
    SourceInfo(src/map.rs:924:53-924:66)
  3: StorageLive(_18)
    SourceInfo(src/map.rs:924:53-924:57)
  4: _18 = &_14
    SourceInfo(src/map.rs:924:53-924:57)
  Terminator {
      source_info: SourceInfo(src/map.rs:924:53-924:66)
      kind: _17 = raw::Bucket::<(K, V)>::as_mut::<'_>(move _18) -> [return: bb10, unwind: bb17]
  }
  preds [bb5, bb7]
  succs [bb10, bb17]

bb9
  0: _0 = const ()
    SourceInfo(src/map.rs:923:13-928:14)
  1: StorageDead(_11)
    SourceInfo(src/map.rs:928:13-928:14)
  2: StorageDead(_9)
    SourceInfo(src/map.rs:928:13-928:14)
  3: StorageDead(_8)
    SourceInfo(src/map.rs:928:13-928:14)
  4: StorageDead(_6)
    SourceInfo(src/map.rs:928:13-928:14)
  5: StorageDead(_3)
    SourceInfo(src/map.rs:928:13-928:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:930:5-930:6)
      kind: drop(_2) -> [return: bb16, unwind: bb18]
  }
  preds [bb7]
  succs [bb16, bb18]

bb10
  0: StorageDead(_18)
    SourceInfo(src/map.rs:924:65-924:66)
  1: PlaceMention(_17)
    SourceInfo(src/map.rs:924:53-924:66)
  2: StorageLive(_15)
    SourceInfo(src/map.rs:924:27-924:34)
  3: _15 = &((*_17).0: K)
    SourceInfo(src/map.rs:924:27-924:34)
  4: StorageLive(_16)
    SourceInfo(src/map.rs:924:36-924:49)
  5: _16 = &mut ((*_17).1: V)
    SourceInfo(src/map.rs:924:36-924:49)
  6: StorageDead(_17)
    SourceInfo(src/map.rs:924:66-924:67)
  7: StorageLive(_19)
    SourceInfo(src/map.rs:925:21-925:34)
  8: StorageLive(_20)
    SourceInfo(src/map.rs:925:21-925:22)
  9: _20 = &mut _2
    SourceInfo(src/map.rs:925:21-925:22)
  10: StorageLive(_21)
    SourceInfo(src/map.rs:925:21-925:34)
  11: StorageLive(_22)
    SourceInfo(src/map.rs:925:23-925:26)
  12: _22 = &(*_15)
    SourceInfo(src/map.rs:925:23-925:26)
  13: StorageLive(_23)
    SourceInfo(src/map.rs:925:28-925:33)
  14: _23 = &mut (*_16)
    SourceInfo(src/map.rs:925:28-925:33)
  15: _21 = (move _22, move _23)
    SourceInfo(src/map.rs:925:21-925:34)
  Terminator {
      source_info: SourceInfo(src/map.rs:925:21-925:34)
      kind: _19 = <F as core::ops::FnMut<(&K, &mut V)>>::call_mut(move _20, move _21) -> [return: bb11, unwind: bb17]
  }
  preds [bb8]
  succs [bb11, bb17]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:925:21-925:34)
      kind: switchInt(move _19) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_23)
    SourceInfo(src/map.rs:925:33-925:34)
  1: StorageDead(_22)
    SourceInfo(src/map.rs:925:33-925:34)
  2: StorageDead(_21)
    SourceInfo(src/map.rs:925:33-925:34)
  3: StorageDead(_20)
    SourceInfo(src/map.rs:925:33-925:34)
  4: _8 = const ()
    SourceInfo(src/map.rs:927:18-927:18)
  Terminator {
      source_info: SourceInfo(src/map.rs:925:17-927:18)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb13
  0: StorageDead(_23)
    SourceInfo(src/map.rs:925:33-925:34)
  1: StorageDead(_22)
    SourceInfo(src/map.rs:925:33-925:34)
  2: StorageDead(_21)
    SourceInfo(src/map.rs:925:33-925:34)
  3: StorageDead(_20)
    SourceInfo(src/map.rs:925:33-925:34)
  4: StorageLive(_24)
    SourceInfo(src/map.rs:926:21-926:43)
  5: StorageLive(_25)
    SourceInfo(src/map.rs:926:21-926:31)
  6: _25 = &mut ((*_1).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:926:21-926:31)
  7: StorageLive(_26)
    SourceInfo(src/map.rs:926:38-926:42)
  8: _26 = move _14
    SourceInfo(src/map.rs:926:38-926:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:926:21-926:43)
      kind: _24 = raw::RawTable::<(K, V), A>::erase(move _25, move _26) -> [return: bb14, unwind: bb17]
  }
  preds [bb11]
  succs [bb14, bb17]

bb14
  0: StorageDead(_26)
    SourceInfo(src/map.rs:926:42-926:43)
  1: StorageDead(_25)
    SourceInfo(src/map.rs:926:42-926:43)
  2: StorageDead(_24)
    SourceInfo(src/map.rs:926:43-926:44)
  3: _8 = const ()
    SourceInfo(src/map.rs:925:35-927:18)
  Terminator {
      source_info: SourceInfo(src/map.rs:925:17-927:18)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  0: StorageDead(_19)
    SourceInfo(src/map.rs:927:17-927:18)
  1: StorageDead(_16)
    SourceInfo(src/map.rs:928:13-928:14)
  2: StorageDead(_15)
    SourceInfo(src/map.rs:928:13-928:14)
  3: StorageDead(_14)
    SourceInfo(src/map.rs:928:13-928:14)
  4: StorageDead(_11)
    SourceInfo(src/map.rs:928:13-928:14)
  5: StorageDead(_9)
    SourceInfo(src/map.rs:928:13-928:14)
  6: StorageDead(_8)
    SourceInfo(src/map.rs:928:13-928:14)
  7: _7 = const ()
    SourceInfo(src/map.rs:923:13-928:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:923:13-928:14)
      kind: goto -> bb3
  }
  preds [bb12, bb14]
  succs [bb3]

bb16
  Terminator {
      source_info: SourceInfo(src/map.rs:930:6-930:6)
      kind: return
  }
  preds [bb9]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(src/map.rs:930:5-930:6)
      kind: drop(_2) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb4, bb8, bb10, bb13]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/map.rs:917:5-930:6)
      kind: resume
  }
  preds [bb9, bb17]
  succs []

