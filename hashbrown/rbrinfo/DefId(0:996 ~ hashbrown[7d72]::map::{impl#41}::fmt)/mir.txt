bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:3039:9-3042:45)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:3039:9-3042:45)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:3039:9-3041:50)
  3: StorageLive(_6)
    SourceInfo(src/map.rs:3039:9-3041:50)
  4: StorageLive(_7)
    SourceInfo(src/map.rs:3039:9-3040:44)
  5: StorageLive(_8)
    SourceInfo(src/map.rs:3039:9-3040:44)
  6: StorageLive(_9)
    SourceInfo(src/map.rs:3039:9-3039:40)
  7: StorageLive(_10)
    SourceInfo(src/map.rs:3039:9-3039:40)
  8: StorageLive(_11)
    SourceInfo(src/map.rs:3039:9-3039:10)
  9: _11 = &mut (*_2)
    SourceInfo(src/map.rs:3039:9-3039:10)
  10: StorageLive(_12)
    SourceInfo(src/map.rs:3039:24-3039:39)
  11: StorageLive(_13)
    SourceInfo(src/map.rs:3039:24-3039:39)
  12: _13 = const "OccupiedError"
    SourceInfo(src/map.rs:3039:24-3039:39)
  13: _12 = &(*_13)
    SourceInfo(src/map.rs:3039:24-3039:39)
  Terminator {
      source_info: SourceInfo(src/map.rs:3039:9-3039:40)
      kind: _10 = core::fmt::Formatter::<'_>::debug_struct(move _11, move _12) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: _9 = &mut _10
    SourceInfo(src/map.rs:3039:9-3039:40)
  1: StorageDead(_12)
    SourceInfo(src/map.rs:3039:39-3039:40)
  2: StorageDead(_11)
    SourceInfo(src/map.rs:3039:39-3039:40)
  3: StorageLive(_14)
    SourceInfo(src/map.rs:3040:20-3040:25)
  4: StorageLive(_15)
    SourceInfo(src/map.rs:3040:20-3040:25)
  5: _15 = const "key"
    SourceInfo(src/map.rs:3040:20-3040:25)
  6: _14 = &(*_15)
    SourceInfo(src/map.rs:3040:20-3040:25)
  7: StorageLive(_16)
    SourceInfo(src/map.rs:3040:27-3040:43)
  8: StorageLive(_17)
    SourceInfo(src/map.rs:3040:27-3040:43)
  9: StorageLive(_18)
    SourceInfo(src/map.rs:3040:27-3040:43)
  10: StorageLive(_19)
    SourceInfo(src/map.rs:3040:27-3040:37)
  11: _19 = &((*_1).0: map::OccupiedEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:3040:27-3040:37)
  Terminator {
      source_info: SourceInfo(src/map.rs:3040:27-3040:43)
      kind: _18 = map::OccupiedEntry::<'_, K, V, S, A>::key(move _19) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: _17 = &(*_18)
    SourceInfo(src/map.rs:3040:27-3040:43)
  1: _16 = move _17 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/map.rs:3040:27-3040:43)
  2: StorageDead(_19)
    SourceInfo(src/map.rs:3040:42-3040:43)
  3: StorageDead(_17)
    SourceInfo(src/map.rs:3040:42-3040:43)
  Terminator {
      source_info: SourceInfo(src/map.rs:3039:9-3040:44)
      kind: _8 = core::fmt::DebugStruct::<'_, '_>::field(move _9, move _14, move _16) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _7 = &mut (*_8)
    SourceInfo(src/map.rs:3039:9-3040:44)
  1: StorageDead(_16)
    SourceInfo(src/map.rs:3040:43-3040:44)
  2: StorageDead(_14)
    SourceInfo(src/map.rs:3040:43-3040:44)
  3: StorageDead(_9)
    SourceInfo(src/map.rs:3040:43-3040:44)
  4: StorageLive(_20)
    SourceInfo(src/map.rs:3041:20-3041:31)
  5: StorageLive(_21)
    SourceInfo(src/map.rs:3041:20-3041:31)
  6: _21 = const "old_value"
    SourceInfo(src/map.rs:3041:20-3041:31)
  7: _20 = &(*_21)
    SourceInfo(src/map.rs:3041:20-3041:31)
  8: StorageLive(_22)
    SourceInfo(src/map.rs:3041:33-3041:49)
  9: StorageLive(_23)
    SourceInfo(src/map.rs:3041:33-3041:49)
  10: StorageLive(_24)
    SourceInfo(src/map.rs:3041:33-3041:49)
  11: StorageLive(_25)
    SourceInfo(src/map.rs:3041:33-3041:43)
  12: _25 = &((*_1).0: map::OccupiedEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:3041:33-3041:43)
  Terminator {
      source_info: SourceInfo(src/map.rs:3041:33-3041:49)
      kind: _24 = map::OccupiedEntry::<'_, K, V, S, A>::get(move _25) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: _23 = &(*_24)
    SourceInfo(src/map.rs:3041:33-3041:49)
  1: _22 = move _23 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/map.rs:3041:33-3041:49)
  2: StorageDead(_25)
    SourceInfo(src/map.rs:3041:48-3041:49)
  3: StorageDead(_23)
    SourceInfo(src/map.rs:3041:48-3041:49)
  Terminator {
      source_info: SourceInfo(src/map.rs:3039:9-3041:50)
      kind: _6 = core::fmt::DebugStruct::<'_, '_>::field(move _7, move _20, move _22) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: _5 = &mut (*_6)
    SourceInfo(src/map.rs:3039:9-3041:50)
  1: StorageDead(_22)
    SourceInfo(src/map.rs:3041:49-3041:50)
  2: StorageDead(_20)
    SourceInfo(src/map.rs:3041:49-3041:50)
  3: StorageDead(_7)
    SourceInfo(src/map.rs:3041:49-3041:50)
  4: StorageLive(_26)
    SourceInfo(src/map.rs:3042:20-3042:31)
  5: StorageLive(_27)
    SourceInfo(src/map.rs:3042:20-3042:31)
  6: _27 = const "new_value"
    SourceInfo(src/map.rs:3042:20-3042:31)
  7: _26 = &(*_27)
    SourceInfo(src/map.rs:3042:20-3042:31)
  8: StorageLive(_28)
    SourceInfo(src/map.rs:3042:33-3042:44)
  9: StorageLive(_29)
    SourceInfo(src/map.rs:3042:33-3042:44)
  10: StorageLive(_30)
    SourceInfo(src/map.rs:3042:33-3042:44)
  11: _30 = &((*_1).1: V)
    SourceInfo(src/map.rs:3042:33-3042:44)
  12: _29 = &(*_30)
    SourceInfo(src/map.rs:3042:33-3042:44)
  13: _28 = move _29 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/map.rs:3042:33-3042:44)
  14: StorageDead(_29)
    SourceInfo(src/map.rs:3042:43-3042:44)
  Terminator {
      source_info: SourceInfo(src/map.rs:3039:9-3042:45)
      kind: _4 = core::fmt::DebugStruct::<'_, '_>::field(move _5, move _26, move _28) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: _3 = &mut (*_4)
    SourceInfo(src/map.rs:3039:9-3042:45)
  1: StorageDead(_28)
    SourceInfo(src/map.rs:3042:44-3042:45)
  2: StorageDead(_26)
    SourceInfo(src/map.rs:3042:44-3042:45)
  3: StorageDead(_5)
    SourceInfo(src/map.rs:3042:44-3042:45)
  Terminator {
      source_info: SourceInfo(src/map.rs:3039:9-3043:22)
      kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _3) -> [return: bb7, unwind: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_3)
    SourceInfo(src/map.rs:3043:21-3043:22)
  1: StorageDead(_30)
    SourceInfo(src/map.rs:3044:5-3044:6)
  2: StorageDead(_27)
    SourceInfo(src/map.rs:3044:5-3044:6)
  3: StorageDead(_24)
    SourceInfo(src/map.rs:3044:5-3044:6)
  4: StorageDead(_21)
    SourceInfo(src/map.rs:3044:5-3044:6)
  5: StorageDead(_18)
    SourceInfo(src/map.rs:3044:5-3044:6)
  6: StorageDead(_15)
    SourceInfo(src/map.rs:3044:5-3044:6)
  7: StorageDead(_13)
    SourceInfo(src/map.rs:3044:5-3044:6)
  8: StorageDead(_10)
    SourceInfo(src/map.rs:3044:5-3044:6)
  9: StorageDead(_8)
    SourceInfo(src/map.rs:3044:5-3044:6)
  10: StorageDead(_6)
    SourceInfo(src/map.rs:3044:5-3044:6)
  11: StorageDead(_4)
    SourceInfo(src/map.rs:3044:5-3044:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:3044:6-3044:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:3038:5-3044:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6]
  succs []

