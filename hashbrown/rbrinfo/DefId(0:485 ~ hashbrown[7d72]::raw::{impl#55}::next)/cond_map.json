{
  "src/raw/mod.rs:4104:39:4104:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.bucket_mask + 1",
          "lhs": "self.bucket_mask",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "src/raw/mod.rs:4096:20:4096:66": [
    {
      "Bool": {
        "Other": "likely(self.group.match_empty().any_bit_set())"
      }
    }
  ],
  "src/raw/mod.rs:4104:31:4104:74": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "index < self.bucket_mask + 1 + Group::WIDTH",
          "lhs": "index",
          "rhs": "self.bucket_mask + 1 + Group::WIDTH",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/raw/mod.rs:4093:33:4093:78": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.probe_seq.pos + bit) & self.bucket_mask",
          "lhs": "(self.probe_seq.pos + bit)",
          "rhs": "self.bucket_mask",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/raw/mod.rs:4104:39:4104:74": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.bucket_mask + 1 + Group::WIDTH",
          "lhs": "self.bucket_mask + 1",
          "rhs": "Group::WIDTH",
          "cmp_with_int": false
        }
      }
    }
  ],
  "src/raw/mod.rs:4092:20:4092:55": [
    {
      "Bool": {
        "Other": "let Some(bit) = self.bitmask.next()"
      }
    }
  ],
  "src/raw/mod.rs:4093:33:4093:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.probe_seq.pos + bit)",
          "lhs": "self.probe_seq.pos",
          "rhs": "bit",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ]
}