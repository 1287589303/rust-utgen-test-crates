bb0
  0: PlaceMention(_1)
    SourceInfo(src/map.rs:3644:15-3644:19)
  1: _3 = discriminant(_1)
    SourceInfo(src/map.rs:3644:15-3644:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:3644:9-3644:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map.rs:3644:15-3644:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:3644:15-3644:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map.rs:3645:13-3645:39)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_12)
    SourceInfo(src/map.rs:3649:27-3649:32)
  1: _12 = move ((_1 as Vacant).0: map::VacantEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:3649:27-3649:32)
  2: StorageLive(_13)
    SourceInfo(src/map.rs:3649:51-3649:56)
  3: _13 = move _12
    SourceInfo(src/map.rs:3649:51-3649:56)
  4: _0 = map::Entry::<'_, K, V, S, A>::Vacant(move _13)
    SourceInfo(src/map.rs:3649:37-3649:57)
  Terminator {
      source_info: SourceInfo(src/map.rs:3649:56-3649:57)
      kind: drop(_13) -> [return: bb7, unwind: bb12]
  }
  preds [bb0, bb2]
  succs [bb7, bb12]

bb4
  0: StorageLive(_4)
    SourceInfo(src/map.rs:3645:29-3645:38)
  1: _4 = move ((_1 as Occupied).0: map::OccupiedEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:3645:29-3645:38)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:3646:17-3646:35)
  3: StorageLive(_6)
    SourceInfo(src/map.rs:3646:17-3646:18)
  4: _6 = move _2
    SourceInfo(src/map.rs:3646:17-3646:18)
  5: StorageLive(_7)
    SourceInfo(src/map.rs:3646:17-3646:35)
  6: StorageLive(_8)
    SourceInfo(src/map.rs:3646:19-3646:34)
  7: StorageLive(_9)
    SourceInfo(src/map.rs:3646:19-3646:34)
  8: StorageLive(_10)
    SourceInfo(src/map.rs:3646:19-3646:24)
  9: _10 = &mut _4
    SourceInfo(src/map.rs:3646:19-3646:24)
  Terminator {
      source_info: SourceInfo(src/map.rs:3646:19-3646:34)
      kind: _9 = map::OccupiedEntry::<'_, K, V, S, A>::get_mut(move _10) -> [return: bb5, unwind: bb13]
  }
  preds [bb2]
  succs [bb5, bb13]

bb5
  0: _8 = &mut (*_9)
    SourceInfo(src/map.rs:3646:19-3646:34)
  1: StorageDead(_10)
    SourceInfo(src/map.rs:3646:33-3646:34)
  2: _7 = (move _8,)
    SourceInfo(src/map.rs:3646:17-3646:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:3646:17-3646:35)
      kind: _5 = <F as core::ops::FnOnce<(&mut V,)>>::call_once(move _6, move _7) -> [return: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  0: StorageDead(_8)
    SourceInfo(src/map.rs:3646:34-3646:35)
  1: StorageDead(_7)
    SourceInfo(src/map.rs:3646:34-3646:35)
  2: StorageDead(_6)
    SourceInfo(src/map.rs:3646:34-3646:35)
  3: StorageDead(_9)
    SourceInfo(src/map.rs:3646:35-3646:36)
  4: StorageDead(_5)
    SourceInfo(src/map.rs:3646:35-3646:36)
  5: StorageLive(_11)
    SourceInfo(src/map.rs:3647:33-3647:38)
  6: _11 = move _4
    SourceInfo(src/map.rs:3647:33-3647:38)
  7: _0 = map::Entry::<'_, K, V, S, A>::Occupied(move _11)
    SourceInfo(src/map.rs:3647:17-3647:39)
  8: StorageDead(_11)
    SourceInfo(src/map.rs:3647:38-3647:39)
  9: StorageDead(_4)
    SourceInfo(src/map.rs:3648:13-3648:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:3648:13-3648:14)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: StorageDead(_13)
    SourceInfo(src/map.rs:3649:56-3649:57)
  Terminator {
      source_info: SourceInfo(src/map.rs:3649:56-3649:57)
      kind: drop(_12) -> [return: bb8, unwind: bb14]
  }
  preds [bb3]
  succs [bb8, bb14]

bb8
  0: StorageDead(_12)
    SourceInfo(src/map.rs:3649:56-3649:57)
  Terminator {
      source_info: SourceInfo(src/map.rs:3649:56-3649:57)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:3651:5-3651:6)
      kind: drop(_2) -> [return: bb10, unwind: bb15]
  }
  preds [bb6, bb8]
  succs [bb10, bb15]

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:3651:5-3651:6)
      kind: drop(_1) -> [return: bb11, unwind: bb16]
  }
  preds [bb9]
  succs [bb11, bb16]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:3651:6-3651:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/map.rs:3649:56-3649:57)
      kind: drop(_12) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb14]

bb13
  Terminator {
      source_info: SourceInfo(src/map.rs:3646:34-3646:35)
      kind: drop(_6) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb4, bb5]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map.rs:3651:5-3651:6)
      kind: drop(_2) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb7, bb12, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map.rs:3651:5-3651:6)
      kind: drop(_1) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb9, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/map.rs:3640:5-3651:6)
      kind: resume
  }
  preds [bb10, bb15]
  succs []

