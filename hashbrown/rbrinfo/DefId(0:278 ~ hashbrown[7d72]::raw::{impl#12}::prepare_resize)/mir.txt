bb0
  0: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _7 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _7) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:2549:23-2549:45)
  2: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:2549:23-2549:33)
  3: _10 = ((*_1).3: usize)
    SourceInfo(src/raw/mod.rs:2549:23-2549:33)
  4: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:2549:37-2549:45)
  5: _11 = _4
    SourceInfo(src/raw/mod.rs:2549:37-2549:45)
  6: _9 = Le(move _10, move _11)
    SourceInfo(src/raw/mod.rs:2549:23-2549:45)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2549:23-2549:45)
      kind: switchInt(move _9) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:2549:44-2549:45)
  1: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:2549:44-2549:45)
  2: _8 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  3: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: _6 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb3
  0: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:2549:44-2549:45)
  1: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:2549:44-2549:45)
  2: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _12 = core::panicking::panic(const "assertion failed: self.items <= capacity") -> bb16
  }
  preds [bb1]
  succs [bb16]

bb4
  0: _6 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb5
  }
  preds [bb0]
  succs [bb5]

bb5
  0: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:2552:13-2552:22)
  3: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:2553:13-2553:95)
  4: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:2553:13-2553:94)
  5: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:2553:51-2553:56)
  6: _16 = &(*_2)
    SourceInfo(src/raw/mod.rs:2553:51-2553:56)
  7: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:2553:58-2553:70)
  8: _17 = _3
    SourceInfo(src/raw/mod.rs:2553:58-2553:70)
  9: StorageLive(_18)
    SourceInfo(src/raw/mod.rs:2553:72-2553:80)
  10: _18 = _4
    SourceInfo(src/raw/mod.rs:2553:72-2553:80)
  11: StorageLive(_19)
    SourceInfo(src/raw/mod.rs:2553:82-2553:93)
  12: _19 = _5
    SourceInfo(src/raw/mod.rs:2553:82-2553:93)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2553:13-2553:94)
      kind: _15 = raw::RawTableInner::fallible_with_capacity::<A>(move _16, move _17, move _18, move _19) -> [return: bb6, unwind: bb16]
  }
  preds [bb2, bb4]
  succs [bb6, bb16]

bb6
  0: StorageDead(_19)
    SourceInfo(src/raw/mod.rs:2553:93-2553:94)
  1: StorageDead(_18)
    SourceInfo(src/raw/mod.rs:2553:93-2553:94)
  2: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:2553:93-2553:94)
  3: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:2553:93-2553:94)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2553:13-2553:95)
      kind: _14 = <core::result::Result<raw::RawTableInner, TryReserveError> as core::ops::Try>::branch(move _15) -> [return: bb7, unwind: bb16]
  }
  preds [bb5]
  succs [bb7, bb16]

bb7
  0: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  1: PlaceMention(_14)
    SourceInfo(src/raw/mod.rs:2553:13-2553:95)
  2: _20 = discriminant(_14)
    SourceInfo(src/raw/mod.rs:2553:13-2553:95)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2553:13-2553:95)
      kind: switchInt(move _20) -> [0: bb10, 1: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(src/raw/mod.rs:2553:13-2553:95)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2553:13-2553:95)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2553:94-2553:95)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_24)
    SourceInfo(src/raw/mod.rs:2553:13-2553:95)
  1: _24 = move ((_14 as Continue).0: raw::RawTableInner)
    SourceInfo(src/raw/mod.rs:2553:13-2553:95)
  2: _13 = move _24
    SourceInfo(src/raw/mod.rs:2553:13-2553:95)
  3: StorageDead(_24)
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  4: FakeRead(ForLet(None), _13)
    SourceInfo(src/raw/mod.rs:2552:13-2552:22)
  5: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:2553:95-2553:96)
  6: StorageLive(_25)
    SourceInfo(src/raw/mod.rs:2561:12-2569:11)
  7: StorageLive(_26)
    SourceInfo(src/raw/mod.rs:2561:18-2561:27)
  8: _26 = move _13
    SourceInfo(src/raw/mod.rs:2561:18-2561:27)
  9: StorageLive(_27)
    SourceInfo(src/raw/mod.rs:2561:29-2569:10)
  10: _27 = {closure@src/raw/mod.rs:2561:29: 2561:41} { alloc: _2, table_layout: _3 }
    SourceInfo(src/raw/mod.rs:2561:29-2569:10)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2561:12-2569:11)
      kind: _25 = scopeguard::guard::<raw::RawTableInner, {closure@src/raw/mod.rs:2561:29: 2561:41}>(move _26, move _27) -> [return: bb13, unwind: bb16]
  }
  preds [bb7, bb9]
  succs [bb13, bb16]

bb11
  0: StorageLive(_21)
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  1: _21 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, TryReserveError>)
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  2: StorageLive(_23)
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  3: _23 = move _21
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2553:13-2553:95)
      kind: _0 = <core::result::Result<scopeguard::ScopeGuard<raw::RawTableInner, {closure@src/raw/mod.rs:2561:29: 2561:41}>, TryReserveError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, TryReserveError>>>::from_residual(move _23) -> [return: bb12, unwind: bb16]
  }
  preds [bb9]
  succs [bb12, bb16]

bb12
  0: StorageDead(_23)
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  1: StorageDead(_21)
    SourceInfo(src/raw/mod.rs:2553:94-2553:95)
  2: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:2553:95-2553:96)
  3: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:2570:5-2570:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2570:6-2570:6)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb13
  0: StorageDead(_27)
    SourceInfo(src/raw/mod.rs:2569:10-2569:11)
  1: StorageDead(_26)
    SourceInfo(src/raw/mod.rs:2569:10-2569:11)
  2: _0 = core::result::Result::<scopeguard::ScopeGuard<raw::RawTableInner, {closure@src/raw/mod.rs:2561:29: 2561:41}>, TryReserveError>::Ok(move _25)
    SourceInfo(src/raw/mod.rs:2561:9-2569:12)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2569:11-2569:12)
      kind: drop(_25) -> [return: bb14, unwind: bb16]
  }
  preds [bb10]
  succs [bb14, bb16]

bb14
  0: StorageDead(_25)
    SourceInfo(src/raw/mod.rs:2569:11-2569:12)
  1: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:2570:5-2570:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2570:6-2570:6)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2570:6-2570:6)
      kind: return
  }
  preds [bb12, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2539:5-2570:6)
      kind: resume
  }
  preds [bb3, bb5, bb6, bb10, bb11, bb13]
  succs []

