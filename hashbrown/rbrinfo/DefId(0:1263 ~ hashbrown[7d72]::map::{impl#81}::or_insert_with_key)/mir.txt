bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:4231:9-4237:10)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:4231:9-4237:10)
  2: PlaceMention(_1)
    SourceInfo(src/map.rs:4231:15-4231:19)
  3: _5 = discriminant(_1)
    SourceInfo(src/map.rs:4231:15-4231:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4231:9-4231:19)
      kind: switchInt(move _5) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map.rs:4231:15-4231:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4231:15-4231:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map.rs:4232:13-4232:38)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_9)
    SourceInfo(src/map.rs:4233:30-4233:35)
  1: _9 = move ((_1 as Vacant).0: map::VacantEntryRef<'_, '_, K, Q, V, S, A>)
    SourceInfo(src/map.rs:4233:30-4233:35)
  2: StorageLive(_10)
    SourceInfo(src/map.rs:4234:21-4234:26)
  3: StorageLive(_11)
    SourceInfo(src/map.rs:4234:29-4234:36)
  4: _11 = move _2
    SourceInfo(src/map.rs:4234:29-4234:36)
  5: StorageLive(_12)
    SourceInfo(src/map.rs:4234:29-4234:47)
  6: StorageLive(_13)
    SourceInfo(src/map.rs:4234:37-4234:46)
  7: _13 = &(*(_9.1: &Q))
    SourceInfo(src/map.rs:4234:37-4234:46)
  8: _12 = (move _13,)
    SourceInfo(src/map.rs:4234:29-4234:47)
  Terminator {
      source_info: SourceInfo(src/map.rs:4234:29-4234:47)
      kind: _10 = <F as core::ops::FnOnce<(&Q,)>>::call_once(move _11, move _12) -> [return: bb6, unwind: bb13]
  }
  preds [bb0, bb2]
  succs [bb6, bb13]

bb4
  0: StorageLive(_6)
    SourceInfo(src/map.rs:4232:32-4232:37)
  1: _6 = move ((_1 as Occupied).0: map::OccupiedEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:4232:32-4232:37)
  2: StorageLive(_7)
    SourceInfo(src/map.rs:4232:42-4232:58)
  3: StorageLive(_8)
    SourceInfo(src/map.rs:4232:42-4232:47)
  4: _8 = move _6
    SourceInfo(src/map.rs:4232:42-4232:47)
  Terminator {
      source_info: SourceInfo(src/map.rs:4232:42-4232:58)
      kind: _7 = map::OccupiedEntry::<'_, K, V, S, A>::into_mut(move _8) -> [return: bb5, unwind: bb14]
  }
  preds [bb2]
  succs [bb5, bb14]

bb5
  0: _4 = &mut (*_7)
    SourceInfo(src/map.rs:4232:42-4232:58)
  1: StorageDead(_8)
    SourceInfo(src/map.rs:4232:57-4232:58)
  2: StorageDead(_7)
    SourceInfo(src/map.rs:4232:57-4232:58)
  3: StorageDead(_6)
    SourceInfo(src/map.rs:4232:57-4232:58)
  Terminator {
      source_info: SourceInfo(src/map.rs:4232:57-4232:58)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb6
  0: StorageDead(_13)
    SourceInfo(src/map.rs:4234:46-4234:47)
  1: StorageDead(_12)
    SourceInfo(src/map.rs:4234:46-4234:47)
  2: StorageDead(_11)
    SourceInfo(src/map.rs:4234:46-4234:47)
  3: FakeRead(ForLet(None), _10)
    SourceInfo(src/map.rs:4234:21-4234:26)
  4: StorageLive(_14)
    SourceInfo(src/map.rs:4235:17-4235:36)
  5: StorageLive(_15)
    SourceInfo(src/map.rs:4235:17-4235:22)
  6: _15 = move _9
    SourceInfo(src/map.rs:4235:17-4235:22)
  7: StorageLive(_16)
    SourceInfo(src/map.rs:4235:30-4235:35)
  8: _16 = move _10
    SourceInfo(src/map.rs:4235:30-4235:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:4235:17-4235:36)
      kind: _14 = map::VacantEntryRef::<'_, '_, K, Q, V, S, A>::insert(move _15, move _16) -> [return: bb7, unwind: bb11]
  }
  preds [bb3]
  succs [bb7, bb11]

bb7
  0: _4 = &mut (*_14)
    SourceInfo(src/map.rs:4235:17-4235:36)
  1: StorageDead(_16)
    SourceInfo(src/map.rs:4235:35-4235:36)
  2: StorageDead(_15)
    SourceInfo(src/map.rs:4235:35-4235:36)
  Terminator {
      source_info: SourceInfo(src/map.rs:4236:13-4236:14)
      kind: drop(_10) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: StorageDead(_10)
    SourceInfo(src/map.rs:4236:13-4236:14)
  1: StorageDead(_14)
    SourceInfo(src/map.rs:4236:13-4236:14)
  2: StorageDead(_9)
    SourceInfo(src/map.rs:4236:13-4236:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:4236:13-4236:14)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: _3 = &mut (*_4)
    SourceInfo(src/map.rs:4231:9-4237:10)
  1: _0 = &mut (*_3)
    SourceInfo(src/map.rs:4231:9-4237:10)
  2: StorageDead(_4)
    SourceInfo(src/map.rs:4238:5-4238:6)
  3: StorageDead(_3)
    SourceInfo(src/map.rs:4238:5-4238:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:4238:5-4238:6)
      kind: drop(_2) -> [return: bb10, unwind: bb15]
  }
  preds [bb5, bb8]
  succs [bb10, bb15]

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:4238:6-4238:6)
      kind: return
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:4235:35-4235:36)
      kind: drop(_16) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map.rs:4236:13-4236:14)
      kind: drop(_10) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb14]

bb13
  Terminator {
      source_info: SourceInfo(src/map.rs:4234:46-4234:47)
      kind: drop(_11) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map.rs:4238:5-4238:6)
      kind: drop(_2) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb4, bb7, bb12, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/map.rs:4226:5-4238:6)
      kind: resume
  }
  preds [bb9, bb14]
  succs []

