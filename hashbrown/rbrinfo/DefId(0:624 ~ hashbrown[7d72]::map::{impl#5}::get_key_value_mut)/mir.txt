bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:1388:15-1388:36)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:1388:15-1388:19)
  2: _4 = &mut (*_1)
    SourceInfo(src/map.rs:1388:15-1388:19)
  3: StorageLive(_5)
    SourceInfo(src/map.rs:1388:34-1388:35)
  4: _5 = &(*_2)
    SourceInfo(src/map.rs:1388:34-1388:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:1388:15-1388:36)
      kind: _3 = map::HashMap::<K, V, S, A>::get_inner_mut::<Q>(move _4, move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_5)
    SourceInfo(src/map.rs:1388:35-1388:36)
  1: StorageDead(_4)
    SourceInfo(src/map.rs:1388:35-1388:36)
  2: PlaceMention(_3)
    SourceInfo(src/map.rs:1388:15-1388:36)
  3: _6 = discriminant(_3)
    SourceInfo(src/map.rs:1388:15-1388:36)
  Terminator {
      source_info: SourceInfo(src/map.rs:1388:9-1388:36)
      kind: switchInt(move _6) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/map.rs:1388:15-1388:36)
  Terminator {
      source_info: SourceInfo(src/map.rs:1388:15-1388:36)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:1389:13-1389:48)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: _0 = core::option::Option::<(&K, &mut V)>::None
    SourceInfo(src/map.rs:1390:21-1390:25)
  Terminator {
      source_info: SourceInfo(src/map.rs:1390:21-1390:25)
      kind: goto -> bb6
  }
  preds [bb1, bb3]
  succs [bb6]

bb5
  0: StorageLive(_7)
    SourceInfo(src/map.rs:1389:24-1389:31)
  1: _7 = &((*((_3 as Some).0: &mut (K, V))).0: K)
    SourceInfo(src/map.rs:1389:24-1389:31)
  2: StorageLive(_8)
    SourceInfo(src/map.rs:1389:33-1389:46)
  3: _8 = &mut ((*((_3 as Some).0: &mut (K, V))).1: V)
    SourceInfo(src/map.rs:1389:33-1389:46)
  4: StorageLive(_9)
    SourceInfo(src/map.rs:1389:57-1389:69)
  5: StorageLive(_10)
    SourceInfo(src/map.rs:1389:58-1389:61)
  6: _10 = &(*_7)
    SourceInfo(src/map.rs:1389:58-1389:61)
  7: StorageLive(_11)
    SourceInfo(src/map.rs:1389:63-1389:68)
  8: _11 = &mut (*_8)
    SourceInfo(src/map.rs:1389:63-1389:68)
  9: _9 = (move _10, move _11)
    SourceInfo(src/map.rs:1389:57-1389:69)
  10: StorageDead(_11)
    SourceInfo(src/map.rs:1389:68-1389:69)
  11: StorageDead(_10)
    SourceInfo(src/map.rs:1389:68-1389:69)
  12: _0 = core::option::Option::<(&K, &mut V)>::Some(move _9)
    SourceInfo(src/map.rs:1389:52-1389:70)
  13: StorageDead(_9)
    SourceInfo(src/map.rs:1389:69-1389:70)
  14: StorageDead(_8)
    SourceInfo(src/map.rs:1389:69-1389:70)
  15: StorageDead(_7)
    SourceInfo(src/map.rs:1389:69-1389:70)
  Terminator {
      source_info: SourceInfo(src/map.rs:1389:69-1389:70)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_3)
    SourceInfo(src/map.rs:1392:5-1392:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:1392:6-1392:6)
      kind: return
  }
  preds [bb4, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/map.rs:1383:5-1392:6)
      kind: resume
  }
  preds [bb0]
  succs []

