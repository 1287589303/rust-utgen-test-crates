bb0
  0: StorageLive(_3)
    SourceInfo(src/raw/mod.rs:358:12-358:28)
  1: _3 = const <T as raw::SizedTypeProperties>::IS_ZERO_SIZED
    SourceInfo(src/raw/mod.rs:358:12-358:28)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:358:12-358:28)
      kind: switchInt(move _3) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageLive(_4)
    SourceInfo(src/raw/mod.rs:360:13-360:39)
  1: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:360:13-360:30)
  2: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:360:13-360:21)
  3: _6 = ((*_1).0: core::ptr::NonNull<T>)
    SourceInfo(src/raw/mod.rs:360:13-360:21)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:360:13-360:30)
      kind: _5 = core::ptr::NonNull::<T>::as_ptr(move _6) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:360:29-360:30)
  1: _4 = move _5 as usize (PointerExposeProvenance)
    SourceInfo(src/raw/mod.rs:360:13-360:39)
  2: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:360:38-360:39)
  3: _7 = SubWithOverflow(_4, const 1_usize)
    SourceInfo(src/raw/mod.rs:360:13-360:43)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:360:13-360:43)
      kind: assert(!move (_7.1: bool), "attempt to compute `{} - {}`, which would overflow", move _4, const 1_usize) -> [success: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: _0 = move (_7.0: usize)
    SourceInfo(src/raw/mod.rs:360:13-360:43)
  1: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:360:42-360:43)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:358:9-363:10)
      kind: goto -> bb8
  }
  preds [bb2]
  succs [bb8]

bb4
  0: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:362:25-362:38)
  1: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:362:25-362:38)
  2: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:362:25-362:29)
  3: _10 = _2
    SourceInfo(src/raw/mod.rs:362:25-362:29)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:362:25-362:38)
      kind: _9 = core::ptr::NonNull::<T>::as_ptr(move _10) -> [return: bb5, unwind: bb9]
  }
  preds [bb0]
  succs [bb5, bb9]

bb5
  0: _8 = move _9 as *const T (PointerCoercion(MutToConstPointer))
    SourceInfo(src/raw/mod.rs:362:25-362:38)
  1: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:362:37-362:38)
  2: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:362:37-362:38)
  3: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:362:40-362:57)
  4: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:362:40-362:57)
  5: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:362:40-362:48)
  6: _13 = ((*_1).0: core::ptr::NonNull<T>)
    SourceInfo(src/raw/mod.rs:362:40-362:48)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:362:40-362:57)
      kind: _12 = core::ptr::NonNull::<T>::as_ptr(move _13) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: _11 = move _12 as *const T (PointerCoercion(MutToConstPointer))
    SourceInfo(src/raw/mod.rs:362:40-362:57)
  1: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:362:56-362:57)
  2: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:362:56-362:57)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:362:13-362:58)
      kind: _0 = raw::offset_from::<T>(move _8, move _11) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:362:57-362:58)
  1: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:362:57-362:58)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:358:9-363:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: StorageDead(_3)
    SourceInfo(src/raw/mod.rs:363:9-363:10)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:364:6-364:6)
      kind: return
  }
  preds [bb3, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:336:5-364:6)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb5, bb6]
  succs []

