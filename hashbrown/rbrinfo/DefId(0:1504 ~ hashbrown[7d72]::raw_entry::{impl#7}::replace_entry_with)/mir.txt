bb0
  0: StorageLive(_3)
    SourceInfo(src/raw_entry.rs:1285:17-1285:31)
  1: StorageLive(_4)
    SourceInfo(src/raw_entry.rs:1285:34-1286:23)
  2: _4 = &mut (*(_1.1: &mut raw::RawTable<(K, V), A>))
    SourceInfo(src/raw_entry.rs:1285:34-1286:23)
  3: StorageLive(_5)
    SourceInfo(src/raw_entry.rs:1287:38-1287:55)
  4: StorageLive(_6)
    SourceInfo(src/raw_entry.rs:1287:38-1287:47)
  5: _6 = &(_1.0: raw::Bucket<(K, V)>)
    SourceInfo(src/raw_entry.rs:1287:38-1287:47)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1287:38-1287:55)
      kind: _5 = <raw::Bucket<(K, V)> as core::clone::Clone>::clone(move _6) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_6)
    SourceInfo(src/raw_entry.rs:1287:54-1287:55)
  1: StorageLive(_7)
    SourceInfo(src/raw_entry.rs:1287:57-1289:18)
  2: _7 = {closure@src/raw_entry.rs:1287:57: 1287:71} { f: move _2 }
    SourceInfo(src/raw_entry.rs:1287:57-1289:18)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1285:34-1289:19)
      kind: _3 = raw::RawTable::<(K, V), A>::replace_bucket_with::<{closure@src/raw_entry.rs:1287:57: 1287:71}>(move _4, move _5, move _7) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_7)
    SourceInfo(src/raw_entry.rs:1289:18-1289:19)
  1: StorageDead(_5)
    SourceInfo(src/raw_entry.rs:1289:18-1289:19)
  2: StorageDead(_4)
    SourceInfo(src/raw_entry.rs:1289:18-1289:19)
  3: FakeRead(ForLet(None), _3)
    SourceInfo(src/raw_entry.rs:1285:17-1285:31)
  4: StorageLive(_8)
    SourceInfo(src/raw_entry.rs:1291:16-1291:30)
  5: _8 = _3
    SourceInfo(src/raw_entry.rs:1291:16-1291:30)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1291:16-1291:30)
      kind: switchInt(move _8) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageLive(_9)
    SourceInfo(src/raw_entry.rs:1292:39-1292:43)
  1: _9 = move _1
    SourceInfo(src/raw_entry.rs:1292:39-1292:43)
  2: _0 = raw_entry::RawEntryMut::<'_, K, V, S, A>::Occupied(move _9)
    SourceInfo(src/raw_entry.rs:1292:17-1292:44)
  3: StorageDead(_9)
    SourceInfo(src/raw_entry.rs:1292:43-1292:44)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1291:13-1298:14)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: StorageLive(_10)
    SourceInfo(src/raw_entry.rs:1294:37-1297:18)
  1: StorageLive(_11)
    SourceInfo(src/raw_entry.rs:1295:28-1295:38)
  2: _11 = &mut (*(_1.1: &mut raw::RawTable<(K, V), A>))
    SourceInfo(src/raw_entry.rs:1295:28-1295:38)
  3: StorageLive(_12)
    SourceInfo(src/raw_entry.rs:1296:35-1296:52)
  4: _12 = &(*(_1.2: &S))
    SourceInfo(src/raw_entry.rs:1296:35-1296:52)
  5: _10 = raw_entry::RawVacantEntryMut::<'_, K, V, S, A> { table: move _11, hash_builder: move _12 }
    SourceInfo(src/raw_entry.rs:1294:37-1297:18)
  6: StorageDead(_12)
    SourceInfo(src/raw_entry.rs:1297:17-1297:18)
  7: StorageDead(_11)
    SourceInfo(src/raw_entry.rs:1297:17-1297:18)
  8: _0 = raw_entry::RawEntryMut::<'_, K, V, S, A>::Vacant(move _10)
    SourceInfo(src/raw_entry.rs:1294:17-1297:19)
  9: StorageDead(_10)
    SourceInfo(src/raw_entry.rs:1297:18-1297:19)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1291:13-1298:14)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  0: StorageDead(_8)
    SourceInfo(src/raw_entry.rs:1298:13-1298:14)
  1: StorageDead(_3)
    SourceInfo(src/raw_entry.rs:1299:9-1299:10)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1300:5-1300:6)
      kind: drop(_2) -> [return: bb6, unwind: bb9]
  }
  preds [bb3, bb4]
  succs [bb6, bb9]

bb6
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1300:6-1300:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1289:18-1289:19)
      kind: drop(_7) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1300:5-1300:6)
      kind: drop(_2) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb0, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1280:5-1300:6)
      kind: resume
  }
  preds [bb5, bb8]
  succs []

