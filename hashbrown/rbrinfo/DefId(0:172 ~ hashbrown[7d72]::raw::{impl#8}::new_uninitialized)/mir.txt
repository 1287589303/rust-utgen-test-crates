bb0
  0: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _5 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:627:23-627:48)
  2: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:627:23-627:30)
  3: _8 = _2
    SourceInfo(src/raw/mod.rs:627:23-627:30)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:627:23-627:48)
      kind: _7 = core::num::<impl usize>::is_power_of_two(move _8) -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:627:23-627:48)
      kind: switchInt(move _7) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:627:47-627:48)
  1: _6 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _4 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:627:47-627:48)
  1: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _9 = core::panicking::panic(const "assertion failed: buckets.is_power_of_two()") -> bb18
  }
  preds [bb2]
  succs [bb18]

bb5
  0: _4 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb0]
  succs [bb6]

bb6
  0: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:629:12-638:10)
  3: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  4: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  5: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:630:20-635:14)
  6: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:631:17-631:23)
  7: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:631:17-631:23)
  8: _15 = &_1
    SourceInfo(src/raw/mod.rs:631:17-631:23)
  9: _14 = &(*_15)
    SourceInfo(src/raw/mod.rs:631:17-631:23)
  10: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:633:17-633:24)
  11: _16 = _2
    SourceInfo(src/raw/mod.rs:633:17-633:24)
  12: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:634:17-634:28)
  13: _17 = _3
    SourceInfo(src/raw/mod.rs:634:17-634:28)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:630:20-635:14)
      kind: _13 = raw::RawTableInner::new_uninitialized::<A>(move _14, const raw::RawTable::<T, A>::TABLE_LAYOUT, move _16, move _17) -> [return: bb7, unwind: bb18]
  }
  preds [bb3, bb5]
  succs [bb7, bb18]

bb7
  0: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:635:13-635:14)
  1: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:635:13-635:14)
  2: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:635:13-635:14)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:630:20-635:15)
      kind: _12 = <core::result::Result<raw::RawTableInner, TryReserveError> as core::ops::Try>::branch(move _13) -> [return: bb8, unwind: bb18]
  }
  preds [bb6]
  succs [bb8, bb18]

bb8
  0: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  1: PlaceMention(_12)
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  2: _18 = discriminant(_12)
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:630:20-635:15)
      kind: switchInt(move _18) -> [0: bb11, 1: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:630:20-635:15)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:635:14-635:15)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_22)
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  1: _22 = move ((_12 as Continue).0: raw::RawTableInner)
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  2: _11 = move _22
    SourceInfo(src/raw/mod.rs:630:20-635:15)
  3: StorageDead(_22)
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  4: StorageLive(_23)
    SourceInfo(src/raw/mod.rs:636:13-636:18)
  5: _23 = move _1
    SourceInfo(src/raw/mod.rs:636:13-636:18)
  6: StorageLive(_24)
    SourceInfo(src/raw/mod.rs:637:21-637:32)
  7: _24 = core::marker::PhantomData::<T>
    SourceInfo(src/raw/mod.rs:637:21-637:32)
  8: _10 = raw::RawTable::<T, A> { table: move _11, alloc: move _23, marker: move _24 }
    SourceInfo(src/raw/mod.rs:629:12-638:10)
  9: StorageDead(_24)
    SourceInfo(src/raw/mod.rs:638:9-638:10)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:638:9-638:10)
      kind: drop(_23) -> [return: bb14, unwind: bb17]
  }
  preds [bb8, bb10]
  succs [bb14, bb17]

bb12
  0: StorageLive(_19)
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  1: _19 = move ((_12 as Break).0: core::result::Result<core::convert::Infallible, TryReserveError>)
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  2: StorageLive(_21)
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  3: _21 = move _19
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:630:20-635:15)
      kind: _0 = <core::result::Result<raw::RawTable<T, A>, TryReserveError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, TryReserveError>>>::from_residual(move _21) -> [return: bb13, unwind: bb18]
  }
  preds [bb10]
  succs [bb13, bb18]

bb13
  0: StorageDead(_21)
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  1: StorageDead(_19)
    SourceInfo(src/raw/mod.rs:635:14-635:15)
  2: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:638:9-638:10)
  3: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:638:10-638:11)
  4: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:639:5-639:6)
  5: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:639:5-639:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:639:5-639:6)
      kind: drop(_1) -> [return: bb16, unwind: bb19]
  }
  preds [bb12]
  succs [bb16, bb19]

bb14
  0: StorageDead(_23)
    SourceInfo(src/raw/mod.rs:638:9-638:10)
  1: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:638:9-638:10)
  2: _0 = core::result::Result::<raw::RawTable<T, A>, TryReserveError>::Ok(move _10)
    SourceInfo(src/raw/mod.rs:629:9-638:11)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:638:10-638:11)
      kind: drop(_10) -> [return: bb15, unwind: bb18]
  }
  preds [bb11]
  succs [bb15, bb18]

bb15
  0: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:638:10-638:11)
  1: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:639:5-639:6)
  2: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:639:5-639:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:639:5-639:6)
      kind: drop(_1) -> [return: bb16, unwind: bb19]
  }
  preds [bb14]
  succs [bb16, bb19]

bb16
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:639:6-639:6)
      kind: return
  }
  preds [bb13, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:638:10-638:11)
      kind: drop(_10) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:639:5-639:6)
      kind: drop(_1) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb1, bb4, bb6, bb7, bb12, bb14, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:622:5-639:6)
      kind: resume
  }
  preds [bb13, bb15, bb18]
  succs []

