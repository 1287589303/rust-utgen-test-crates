bb0
  0: StorageLive(_4)
    SourceInfo(src/map.rs:1812:9-1812:19)
  1: _4 = &mut ((*_1).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:1812:9-1812:19)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:1813:13-1813:17)
  3: _5 = _2
    SourceInfo(src/map.rs:1813:13-1813:17)
  4: StorageLive(_6)
    SourceInfo(src/map.rs:1814:13-1814:32)
  5: StorageLive(_7)
    SourceInfo(src/map.rs:1814:28-1814:31)
  6: _7 = &(*_3)
    SourceInfo(src/map.rs:1814:28-1814:31)
  Terminator {
      source_info: SourceInfo(src/map.rs:1814:13-1814:32)
      kind: _6 = map::equivalent_key::<Q, K, V>(move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_7)
    SourceInfo(src/map.rs:1814:31-1814:32)
  1: StorageLive(_8)
    SourceInfo(src/map.rs:1815:13-1815:44)
  2: StorageLive(_9)
    SourceInfo(src/map.rs:1815:25-1815:43)
  3: StorageLive(_10)
    SourceInfo(src/map.rs:1815:25-1815:43)
  4: _10 = &((*_1).0: S)
    SourceInfo(src/map.rs:1815:25-1815:43)
  5: _9 = &(*_10)
    SourceInfo(src/map.rs:1815:25-1815:43)
  Terminator {
      source_info: SourceInfo(src/map.rs:1815:13-1815:44)
      kind: _8 = map::make_hasher::<K, V, S>(move _9) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_9)
    SourceInfo(src/map.rs:1815:43-1815:44)
  Terminator {
      source_info: SourceInfo(src/map.rs:1812:9-1816:10)
      kind: _0 = raw::RawTable::<(K, V), A>::find_or_find_insert_slot::<impl for<'a> Fn(&'a (K, V)) -> bool + '_, impl for<'a> Fn(&'a (K, V)) -> u64 + '_>(move _4, move _5, move _6, move _8) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(src/map.rs:1816:9-1816:10)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:1816:9-1816:10)
  2: StorageDead(_5)
    SourceInfo(src/map.rs:1816:9-1816:10)
  3: StorageDead(_4)
    SourceInfo(src/map.rs:1816:9-1816:10)
  4: StorageDead(_10)
    SourceInfo(src/map.rs:1817:5-1817:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:1817:6-1817:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/map.rs:1816:9-1816:10)
      kind: drop(_8) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:1816:9-1816:10)
      kind: drop(_6) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:1804:5-1817:6)
      kind: resume
  }
  preds [bb0, bb5]
  succs []

