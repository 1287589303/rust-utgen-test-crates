bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:1418:9-1418:26)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:1418:9-1418:26)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:1418:9-1418:13)
  3: _5 = &(*_1)
    SourceInfo(src/map.rs:1418:9-1418:13)
  4: StorageLive(_6)
    SourceInfo(src/map.rs:1418:24-1418:25)
  5: _6 = &(*_2)
    SourceInfo(src/map.rs:1418:24-1418:25)
  Terminator {
      source_info: SourceInfo(src/map.rs:1418:9-1418:26)
      kind: _4 = map::HashMap::<K, V, S, A>::get_inner::<Q>(move _5, move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = &_4
    SourceInfo(src/map.rs:1418:9-1418:26)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:1418:25-1418:26)
  2: StorageDead(_5)
    SourceInfo(src/map.rs:1418:25-1418:26)
  Terminator {
      source_info: SourceInfo(src/map.rs:1418:9-1418:36)
      kind: _0 = core::option::Option::<&(K, V)>::is_some(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/map.rs:1418:35-1418:36)
  1: StorageDead(_4)
    SourceInfo(src/map.rs:1419:5-1419:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:1419:6-1419:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:1414:5-1419:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

