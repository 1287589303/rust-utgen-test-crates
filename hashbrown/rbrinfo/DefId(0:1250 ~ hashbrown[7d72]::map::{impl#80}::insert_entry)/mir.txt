bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:4105:13-4105:17)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:4105:20-4105:36)
  2: _4 = &mut ((*(_1.2: &mut map::HashMap<K, V, S, A>)).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:4105:20-4105:36)
  3: StorageLive(_5)
    SourceInfo(src/map.rs:4106:13-4106:22)
  4: _5 = (_1.0: u64)
    SourceInfo(src/map.rs:4106:13-4106:22)
  5: StorageLive(_6)
    SourceInfo(src/map.rs:4107:13-4107:30)
  6: StorageLive(_7)
    SourceInfo(src/map.rs:4107:14-4107:22)
  7: _7 = move (_1.1: K)
    SourceInfo(src/map.rs:4107:14-4107:22)
  8: StorageLive(_8)
    SourceInfo(src/map.rs:4107:24-4107:29)
  9: _8 = move _2
    SourceInfo(src/map.rs:4107:24-4107:29)
  10: _6 = (move _7, move _8)
    SourceInfo(src/map.rs:4107:13-4107:30)
  Terminator {
      source_info: SourceInfo(src/map.rs:4107:29-4107:30)
      kind: drop(_8) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_8)
    SourceInfo(src/map.rs:4107:29-4107:30)
  Terminator {
      source_info: SourceInfo(src/map.rs:4107:29-4107:30)
      kind: drop(_7) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_7)
    SourceInfo(src/map.rs:4107:29-4107:30)
  1: StorageLive(_9)
    SourceInfo(src/map.rs:4108:13-4108:61)
  2: StorageLive(_10)
    SourceInfo(src/map.rs:4108:36-4108:60)
  3: StorageLive(_11)
    SourceInfo(src/map.rs:4108:36-4108:60)
  4: _11 = &((*(_1.2: &mut map::HashMap<K, V, S, A>)).0: S)
    SourceInfo(src/map.rs:4108:36-4108:60)
  5: _10 = &(*_11)
    SourceInfo(src/map.rs:4108:36-4108:60)
  Terminator {
      source_info: SourceInfo(src/map.rs:4108:13-4108:61)
      kind: _9 = map::make_hasher::<K, V, S>(move _10) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_10)
    SourceInfo(src/map.rs:4108:60-4108:61)
  Terminator {
      source_info: SourceInfo(src/map.rs:4105:20-4109:10)
      kind: _3 = raw::RawTable::<(K, V), A>::insert::<impl for<'a> Fn(&'a (K, V)) -> u64 + '_>(move _4, move _5, move _6, move _9) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_9)
    SourceInfo(src/map.rs:4109:9-4109:10)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:4109:9-4109:10)
  2: StorageDead(_5)
    SourceInfo(src/map.rs:4109:9-4109:10)
  3: StorageDead(_4)
    SourceInfo(src/map.rs:4109:9-4109:10)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(src/map.rs:4105:13-4105:17)
  5: StorageDead(_11)
    SourceInfo(src/map.rs:4109:10-4109:11)
  6: StorageLive(_12)
    SourceInfo(src/map.rs:4111:19-4111:28)
  7: _12 = (_1.0: u64)
    SourceInfo(src/map.rs:4111:19-4111:28)
  8: StorageLive(_13)
    SourceInfo(src/map.rs:4112:13-4112:17)
  9: _13 = move _3
    SourceInfo(src/map.rs:4112:13-4112:17)
  10: StorageLive(_14)
    SourceInfo(src/map.rs:4113:20-4113:30)
  11: _14 = &mut (*(_1.2: &mut map::HashMap<K, V, S, A>))
    SourceInfo(src/map.rs:4113:20-4113:30)
  12: _0 = map::OccupiedEntry::<'_, K, V, S, A> { hash: move _12, elem: move _13, table: move _14 }
    SourceInfo(src/map.rs:4110:9-4114:10)
  13: StorageDead(_14)
    SourceInfo(src/map.rs:4114:9-4114:10)
  14: StorageDead(_13)
    SourceInfo(src/map.rs:4114:9-4114:10)
  15: StorageDead(_12)
    SourceInfo(src/map.rs:4114:9-4114:10)
  16: StorageDead(_3)
    SourceInfo(src/map.rs:4115:5-4115:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:4115:5-4115:6)
      kind: drop(_2) -> [return: bb5, unwind: bb11]
  }
  preds [bb3]
  succs [bb5, bb11]

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:4115:5-4115:6)
      kind: drop(_1) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:4115:6-4115:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/map.rs:4109:9-4109:10)
      kind: drop(_9) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb9]

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:4107:29-4107:30)
      kind: drop(_7) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:4109:9-4109:10)
      kind: drop(_6) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb7, bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:4115:5-4115:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:4115:5-4115:6)
      kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb4, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/map.rs:4100:5-4115:6)
      kind: resume
  }
  preds [bb5, bb11]
  succs []

