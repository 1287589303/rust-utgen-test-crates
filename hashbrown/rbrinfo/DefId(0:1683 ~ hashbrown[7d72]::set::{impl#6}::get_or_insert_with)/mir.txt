bb0
  0: StorageLive(_4)
    SourceInfo(src/set.rs:954:13-954:17)
  1: StorageLive(_5)
    SourceInfo(src/set.rs:954:30-954:52)
  2: StorageLive(_6)
    SourceInfo(src/set.rs:954:30-954:52)
  3: _6 = &(((*_1).0: map::HashMap<T, (), S, A>).0: S)
    SourceInfo(src/set.rs:954:30-954:52)
  4: _5 = &(*_6)
    SourceInfo(src/set.rs:954:30-954:52)
  5: StorageLive(_7)
    SourceInfo(src/set.rs:954:54-954:59)
  6: _7 = &(*_2)
    SourceInfo(src/set.rs:954:54-954:59)
  Terminator {
      source_info: SourceInfo(src/set.rs:954:20-954:60)
      kind: _4 = map::make_hash::<Q, S>(move _5, move _7) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: StorageDead(_7)
    SourceInfo(src/set.rs:954:59-954:60)
  1: StorageDead(_5)
    SourceInfo(src/set.rs:954:59-954:60)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/set.rs:954:13-954:17)
  3: StorageDead(_6)
    SourceInfo(src/set.rs:954:60-954:61)
  4: StorageLive(_8)
    SourceInfo(src/set.rs:955:13-955:19)
  5: StorageLive(_9)
    SourceInfo(src/set.rs:955:28-955:74)
  6: StorageLive(_10)
    SourceInfo(src/set.rs:955:28-955:36)
  7: _10 = &mut ((*_1).0: map::HashMap<T, (), S, A>)
    SourceInfo(src/set.rs:955:28-955:36)
  8: StorageLive(_11)
    SourceInfo(src/set.rs:955:62-955:66)
  9: _11 = _4
    SourceInfo(src/set.rs:955:62-955:66)
  10: StorageLive(_12)
    SourceInfo(src/set.rs:955:68-955:73)
  11: _12 = &(*_2)
    SourceInfo(src/set.rs:955:68-955:73)
  Terminator {
      source_info: SourceInfo(src/set.rs:955:28-955:74)
      kind: _9 = map::HashMap::<T, (), S, A>::find_or_find_insert_slot::<Q>(move _10, move _11, move _12) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_12)
    SourceInfo(src/set.rs:955:73-955:74)
  1: StorageDead(_11)
    SourceInfo(src/set.rs:955:73-955:74)
  2: StorageDead(_10)
    SourceInfo(src/set.rs:955:73-955:74)
  3: PlaceMention(_9)
    SourceInfo(src/set.rs:955:28-955:74)
  4: _13 = discriminant(_9)
    SourceInfo(src/set.rs:955:28-955:74)
  Terminator {
      source_info: SourceInfo(src/set.rs:955:22-955:74)
      kind: switchInt(move _13) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(src/set.rs:955:28-955:74)
  Terminator {
      source_info: SourceInfo(src/set.rs:955:28-955:74)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/set.rs:956:13-956:23)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(src/set.rs:957:17-957:21)
  1: _15 = move ((_9 as Err).0: raw::InsertSlot)
    SourceInfo(src/set.rs:957:17-957:21)
  2: StorageLive(_16)
    SourceInfo(src/set.rs:958:21-958:24)
  3: StorageLive(_17)
    SourceInfo(src/set.rs:958:27-958:28)
  4: _17 = move _3
    SourceInfo(src/set.rs:958:27-958:28)
  5: StorageLive(_18)
    SourceInfo(src/set.rs:958:27-958:35)
  6: StorageLive(_19)
    SourceInfo(src/set.rs:958:29-958:34)
  7: _19 = &(*_2)
    SourceInfo(src/set.rs:958:29-958:34)
  8: _18 = (move _19,)
    SourceInfo(src/set.rs:958:27-958:35)
  Terminator {
      source_info: SourceInfo(src/set.rs:958:27-958:35)
      kind: _16 = <F as core::ops::FnOnce<(&Q,)>>::call_once(move _17, move _18) -> [return: bb7, unwind: bb20]
  }
  preds [bb2, bb4]
  succs [bb7, bb20]

bb6
  0: StorageLive(_14)
    SourceInfo(src/set.rs:956:16-956:22)
  1: _14 = move ((_9 as Ok).0: raw::Bucket<(T, ())>)
    SourceInfo(src/set.rs:956:16-956:22)
  2: _8 = move _14
    SourceInfo(src/set.rs:956:27-956:33)
  3: StorageDead(_14)
    SourceInfo(src/set.rs:956:32-956:33)
  Terminator {
      source_info: SourceInfo(src/set.rs:956:32-956:33)
      kind: goto -> bb15
  }
  preds [bb4]
  succs [bb15]

bb7
  0: StorageDead(_19)
    SourceInfo(src/set.rs:958:34-958:35)
  1: StorageDead(_18)
    SourceInfo(src/set.rs:958:34-958:35)
  2: StorageDead(_17)
    SourceInfo(src/set.rs:958:34-958:35)
  3: FakeRead(ForLet(None), _16)
    SourceInfo(src/set.rs:958:21-958:24)
  4: StorageLive(_20)
    SourceInfo(src/set.rs:959:17-959:79)
  5: StorageLive(_21)
    SourceInfo(src/set.rs:959:25-959:47)
  6: StorageLive(_22)
    SourceInfo(src/set.rs:959:25-959:30)
  7: _22 = &(*_2)
    SourceInfo(src/set.rs:959:25-959:30)
  8: StorageLive(_23)
    SourceInfo(src/set.rs:959:42-959:46)
  9: StorageLive(_24)
    SourceInfo(src/set.rs:959:42-959:46)
  10: _24 = &_16
    SourceInfo(src/set.rs:959:42-959:46)
  11: _23 = &(*_24)
    SourceInfo(src/set.rs:959:42-959:46)
  Terminator {
      source_info: SourceInfo(src/set.rs:959:25-959:47)
      kind: _21 = <Q as equivalent::Equivalent<T>>::equivalent(move _22, move _23) -> [return: bb8, unwind: bb19]
  }
  preds [bb5]
  succs [bb8, bb19]

bb8
  Terminator {
      source_info: SourceInfo(src/set.rs:959:25-959:47)
      kind: switchInt(move _21) -> [0: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: StorageDead(_23)
    SourceInfo(src/set.rs:959:46-959:47)
  1: StorageDead(_22)
    SourceInfo(src/set.rs:959:46-959:47)
  2: StorageDead(_24)
    SourceInfo(src/set.rs:959:78-959:79)
  3: _20 = const ()
    SourceInfo(src/set.rs:959:79-959:79)
  4: StorageDead(_21)
    SourceInfo(src/set.rs:959:78-959:79)
  5: StorageDead(_20)
    SourceInfo(src/set.rs:959:78-959:79)
  6: StorageLive(_31)
    SourceInfo(src/set.rs:960:26-960:40)
  7: _31 = &mut (((*_1).0: map::HashMap<T, (), S, A>).1: raw::RawTable<(T, ()), A>)
    SourceInfo(src/set.rs:960:26-960:40)
  8: StorageLive(_32)
    SourceInfo(src/set.rs:960:56-960:60)
  9: _32 = _4
    SourceInfo(src/set.rs:960:56-960:60)
  10: StorageLive(_33)
    SourceInfo(src/set.rs:960:62-960:66)
  11: _33 = move _15
    SourceInfo(src/set.rs:960:62-960:66)
  12: StorageLive(_34)
    SourceInfo(src/set.rs:960:68-960:77)
  13: StorageLive(_35)
    SourceInfo(src/set.rs:960:69-960:72)
  14: _35 = move _16
    SourceInfo(src/set.rs:960:69-960:72)
  15: StorageLive(_36)
    SourceInfo(src/set.rs:960:74-960:76)
  16: _36 = ()
    SourceInfo(src/set.rs:960:74-960:76)
  17: _34 = (move _35, move _36)
    SourceInfo(src/set.rs:960:68-960:77)
  18: StorageDead(_36)
    SourceInfo(src/set.rs:960:76-960:77)
  Terminator {
      source_info: SourceInfo(src/set.rs:960:76-960:77)
      kind: drop(_35) -> [return: bb12, unwind: bb18]
  }
  preds [bb8]
  succs [bb12, bb18]

bb10
  0: StorageDead(_23)
    SourceInfo(src/set.rs:959:46-959:47)
  1: StorageDead(_22)
    SourceInfo(src/set.rs:959:46-959:47)
  2: StorageDead(_24)
    SourceInfo(src/set.rs:959:78-959:79)
  3: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  4: StorageLive(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  5: StorageLive(_28)
    SourceInfo(src/set.rs:959:49-959:78)
  6: StorageLive(_29)
    SourceInfo(src/set.rs:959:49-959:78)
  7: StorageLive(_30)
    SourceInfo(src/set.rs:959:49-959:78)
  8: _30 = [const "new value is not equivalent"]
    SourceInfo(src/set.rs:959:49-959:78)
  9: _29 = &_30
    SourceInfo(src/set.rs:959:49-959:78)
  10: _28 = &(*_29)
    SourceInfo(src/set.rs:959:49-959:78)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _27 = core::fmt::Arguments::<'_>::new_const::<1>(move _28) -> [return: bb11, unwind: bb19]
  }
  preds [bb8]
  succs [bb11, bb19]

bb11
  0: StorageDead(_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _26 = core::panicking::panic_fmt(move _27) -> bb19
  }
  preds [bb10]
  succs [bb19]

bb12
  0: StorageDead(_35)
    SourceInfo(src/set.rs:960:76-960:77)
  Terminator {
      source_info: SourceInfo(src/set.rs:960:26-960:78)
      kind: _8 = raw::RawTable::<(T, ()), A>::insert_in_slot(move _31, move _32, move _33, move _34) -> [return: bb13, unwind: bb18]
  }
  preds [bb9]
  succs [bb13, bb18]

bb13
  0: StorageDead(_34)
    SourceInfo(src/set.rs:960:77-960:78)
  1: StorageDead(_33)
    SourceInfo(src/set.rs:960:77-960:78)
  2: StorageDead(_32)
    SourceInfo(src/set.rs:960:77-960:78)
  3: StorageDead(_31)
    SourceInfo(src/set.rs:960:77-960:78)
  Terminator {
      source_info: SourceInfo(src/set.rs:961:13-961:14)
      kind: drop(_16) -> [return: bb14, unwind: bb21]
  }
  preds [bb12]
  succs [bb14, bb21]

bb14
  0: StorageDead(_16)
    SourceInfo(src/set.rs:961:13-961:14)
  1: StorageDead(_15)
    SourceInfo(src/set.rs:961:13-961:14)
  Terminator {
      source_info: SourceInfo(src/set.rs:961:13-961:14)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  0: FakeRead(ForLet(None), _8)
    SourceInfo(src/set.rs:955:13-955:19)
  1: StorageDead(_9)
    SourceInfo(src/set.rs:962:10-962:11)
  2: StorageLive(_37)
    SourceInfo(src/set.rs:963:18-963:36)
  3: StorageLive(_38)
    SourceInfo(src/set.rs:963:19-963:34)
  4: StorageLive(_39)
    SourceInfo(src/set.rs:963:19-963:25)
  5: _39 = &_8
    SourceInfo(src/set.rs:963:19-963:25)
  Terminator {
      source_info: SourceInfo(src/set.rs:963:19-963:34)
      kind: _38 = raw::Bucket::<(T, ())>::as_ref::<'_>(move _39) -> [return: bb16, unwind: bb21]
  }
  preds [bb6, bb14]
  succs [bb16, bb21]

bb16
  0: StorageDead(_39)
    SourceInfo(src/set.rs:963:33-963:34)
  1: _37 = &((*_38).0: T)
    SourceInfo(src/set.rs:963:18-963:36)
  2: _0 = &(*_37)
    SourceInfo(src/set.rs:963:18-963:36)
  3: StorageDead(_8)
    SourceInfo(src/set.rs:964:5-964:6)
  4: StorageDead(_4)
    SourceInfo(src/set.rs:964:5-964:6)
  5: StorageDead(_38)
    SourceInfo(src/set.rs:964:5-964:6)
  6: StorageDead(_37)
    SourceInfo(src/set.rs:964:5-964:6)
  Terminator {
      source_info: SourceInfo(src/set.rs:964:5-964:6)
      kind: drop(_3) -> [return: bb17, unwind: bb22]
  }
  preds [bb15]
  succs [bb17, bb22]

bb17
  Terminator {
      source_info: SourceInfo(src/set.rs:964:6-964:6)
      kind: return
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(src/set.rs:960:77-960:78)
      kind: drop(_34) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb9, bb12]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/set.rs:961:13-961:14)
      kind: drop(_16) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb7, bb10, bb11, bb18]
  succs [bb21]

bb20
  Terminator {
      source_info: SourceInfo(src/set.rs:958:34-958:35)
      kind: drop(_17) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/set.rs:964:5-964:6)
      kind: drop(_3) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb13, bb15, bb19, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(src/set.rs:949:5-964:6)
      kind: resume
  }
  preds [bb16, bb21]
  succs []

