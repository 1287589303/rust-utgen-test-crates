bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:1230:13-1230:17)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:1230:38-1230:56)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:1230:38-1230:56)
  3: _5 = &((*_1).0: S)
    SourceInfo(src/map.rs:1230:38-1230:56)
  4: _4 = &(*_5)
    SourceInfo(src/map.rs:1230:38-1230:56)
  5: StorageLive(_6)
    SourceInfo(src/map.rs:1230:58-1230:62)
  6: StorageLive(_7)
    SourceInfo(src/map.rs:1230:58-1230:62)
  7: _7 = &_2
    SourceInfo(src/map.rs:1230:58-1230:62)
  8: _6 = &(*_7)
    SourceInfo(src/map.rs:1230:58-1230:62)
  Terminator {
      source_info: SourceInfo(src/map.rs:1230:20-1230:63)
      kind: _3 = map::make_hash::<K, S>(move _4, move _6) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: StorageDead(_6)
    SourceInfo(src/map.rs:1230:62-1230:63)
  1: StorageDead(_4)
    SourceInfo(src/map.rs:1230:62-1230:63)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/map.rs:1230:13-1230:17)
  3: StorageDead(_7)
    SourceInfo(src/map.rs:1230:63-1230:64)
  4: StorageDead(_5)
    SourceInfo(src/map.rs:1230:63-1230:64)
  5: StorageLive(_8)
    SourceInfo(src/map.rs:1231:29-1231:72)
  6: StorageLive(_9)
    SourceInfo(src/map.rs:1231:29-1231:39)
  7: _9 = &((*_1).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/map.rs:1231:29-1231:39)
  8: StorageLive(_10)
    SourceInfo(src/map.rs:1231:45-1231:49)
  9: _10 = _3
    SourceInfo(src/map.rs:1231:45-1231:49)
  10: StorageLive(_11)
    SourceInfo(src/map.rs:1231:51-1231:71)
  11: StorageLive(_12)
    SourceInfo(src/map.rs:1231:66-1231:70)
  12: StorageLive(_13)
    SourceInfo(src/map.rs:1231:66-1231:70)
  13: _13 = &_2
    SourceInfo(src/map.rs:1231:66-1231:70)
  14: _12 = &(*_13)
    SourceInfo(src/map.rs:1231:66-1231:70)
  Terminator {
      source_info: SourceInfo(src/map.rs:1231:51-1231:71)
      kind: _11 = map::equivalent_key::<K, K, V>(move _12) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  0: StorageDead(_12)
    SourceInfo(src/map.rs:1231:70-1231:71)
  Terminator {
      source_info: SourceInfo(src/map.rs:1231:29-1231:72)
      kind: _8 = raw::RawTable::<(K, V), A>::find::<impl for<'a> Fn(&'a (K, V)) -> bool + '_>(move _9, move _10, move _11) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_11)
    SourceInfo(src/map.rs:1231:71-1231:72)
  1: StorageDead(_10)
    SourceInfo(src/map.rs:1231:71-1231:72)
  2: StorageDead(_9)
    SourceInfo(src/map.rs:1231:71-1231:72)
  3: PlaceMention(_8)
    SourceInfo(src/map.rs:1231:29-1231:72)
  4: _14 = discriminant(_8)
    SourceInfo(src/map.rs:1231:29-1231:72)
  Terminator {
      source_info: SourceInfo(src/map.rs:1231:16-1231:26)
      kind: switchInt(move _14) -> [1: bb4, otherwise: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(src/map.rs:1231:16-1231:26)
      kind: falseEdge -> [real: bb5, imaginary: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(src/map.rs:1231:21-1231:25)
  1: _15 = move ((_8 as Some).0: raw::Bucket<(K, V)>)
    SourceInfo(src/map.rs:1231:21-1231:25)
  2: StorageLive(_16)
    SourceInfo(src/map.rs:1232:29-1236:14)
  3: StorageLive(_17)
    SourceInfo(src/map.rs:1233:17-1233:21)
  4: _17 = _3
    SourceInfo(src/map.rs:1233:17-1233:21)
  5: StorageLive(_18)
    SourceInfo(src/map.rs:1234:17-1234:21)
  6: _18 = move _15
    SourceInfo(src/map.rs:1234:17-1234:21)
  7: StorageLive(_19)
    SourceInfo(src/map.rs:1235:24-1235:28)
  8: _19 = &mut (*_1)
    SourceInfo(src/map.rs:1235:24-1235:28)
  9: _16 = map::OccupiedEntry::<'_, K, V, S, A> { hash: move _17, elem: move _18, table: move _19 }
    SourceInfo(src/map.rs:1232:29-1236:14)
  10: StorageDead(_19)
    SourceInfo(src/map.rs:1236:13-1236:14)
  11: StorageDead(_18)
    SourceInfo(src/map.rs:1236:13-1236:14)
  12: StorageDead(_17)
    SourceInfo(src/map.rs:1236:13-1236:14)
  13: _0 = map::Entry::<'_, K, V, S, A>::Occupied(move _16)
    SourceInfo(src/map.rs:1232:13-1236:15)
  14: StorageDead(_16)
    SourceInfo(src/map.rs:1236:14-1236:15)
  15: StorageDead(_15)
    SourceInfo(src/map.rs:1237:9-1237:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:1231:9-1243:10)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb6
  0: StorageLive(_20)
    SourceInfo(src/map.rs:1238:27-1242:14)
  1: StorageLive(_21)
    SourceInfo(src/map.rs:1239:17-1239:21)
  2: _21 = _3
    SourceInfo(src/map.rs:1239:17-1239:21)
  3: StorageLive(_22)
    SourceInfo(src/map.rs:1240:17-1240:20)
  4: _22 = move _2
    SourceInfo(src/map.rs:1240:17-1240:20)
  5: StorageLive(_23)
    SourceInfo(src/map.rs:1241:24-1241:28)
  6: _23 = &mut (*_1)
    SourceInfo(src/map.rs:1241:24-1241:28)
  7: _20 = map::VacantEntry::<'_, K, V, S, A> { hash: move _21, key: move _22, table: move _23 }
    SourceInfo(src/map.rs:1238:27-1242:14)
  8: StorageDead(_23)
    SourceInfo(src/map.rs:1242:13-1242:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:1242:13-1242:14)
      kind: drop(_22) -> [return: bb7, unwind: bb11]
  }
  preds [bb3, bb4]
  succs [bb7, bb11]

bb7
  0: StorageDead(_22)
    SourceInfo(src/map.rs:1242:13-1242:14)
  1: StorageDead(_21)
    SourceInfo(src/map.rs:1242:13-1242:14)
  2: _0 = map::Entry::<'_, K, V, S, A>::Vacant(move _20)
    SourceInfo(src/map.rs:1238:13-1242:15)
  Terminator {
      source_info: SourceInfo(src/map.rs:1242:14-1242:15)
      kind: drop(_20) -> [return: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_20)
    SourceInfo(src/map.rs:1242:14-1242:15)
  Terminator {
      source_info: SourceInfo(src/map.rs:1231:9-1243:10)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_3)
    SourceInfo(src/map.rs:1244:5-1244:6)
  1: StorageDead(_13)
    SourceInfo(src/map.rs:1244:5-1244:6)
  2: StorageDead(_8)
    SourceInfo(src/map.rs:1244:5-1244:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:1244:5-1244:6)
      kind: drop(_2) -> [return: bb10, unwind: bb14]
  }
  preds [bb5, bb8]
  succs [bb10, bb14]

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:1244:6-1244:6)
      kind: return
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:1242:14-1242:15)
      kind: drop(_20) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb13]

bb12
  Terminator {
      source_info: SourceInfo(src/map.rs:1231:71-1231:72)
      kind: drop(_11) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/map.rs:1244:5-1244:6)
      kind: drop(_2) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb7, bb11, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/map.rs:1229:5-1244:6)
      kind: resume
  }
  preds [bb9, bb13]
  succs []

