bb0
  0: StorageLive(_4)
    SourceInfo(src/raw/mod.rs:2446:13-2446:19)
  1: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:2446:22-2446:77)
  2: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:2446:23-2446:57)
  3: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:2446:24-2446:29)
  4: _7 = _2
    SourceInfo(src/raw/mod.rs:2446:24-2446:29)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2446:23-2446:57)
      kind: _6 = core::num::<impl usize>::wrapping_sub(move _7, const control::group::sse2::Group::WIDTH) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:2446:56-2446:57)
  1: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:2446:60-2446:76)
  2: _8 = ((*_1).0: usize)
    SourceInfo(src/raw/mod.rs:2446:60-2446:76)
  3: _5 = BitAnd(move _6, move _8)
    SourceInfo(src/raw/mod.rs:2446:22-2446:77)
  4: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:2446:76-2446:77)
  5: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:2446:76-2446:77)
  6: _9 = AddWithOverflow(_5, const control::group::sse2::Group::WIDTH)
    SourceInfo(src/raw/mod.rs:2446:22-2446:92)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2446:22-2446:92)
      kind: assert(!move (_9.1: bool), "attempt to compute `{} + {}`, which would overflow", move _5, const control::group::sse2::Group::WIDTH) -> [success: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _4 = move (_9.0: usize)
    SourceInfo(src/raw/mod.rs:2446:22-2446:92)
  1: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:2446:91-2446:92)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/raw/mod.rs:2446:13-2446:19)
  3: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:2449:29-2449:33)
  4: _10 = _3
    SourceInfo(src/raw/mod.rs:2449:29-2449:33)
  5: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:2449:10-2449:26)
  6: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:2449:10-2449:14)
  7: _12 = &(*_1)
    SourceInfo(src/raw/mod.rs:2449:10-2449:14)
  8: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:2449:20-2449:25)
  9: _13 = _2
    SourceInfo(src/raw/mod.rs:2449:20-2449:25)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2449:10-2449:26)
      kind: _11 = raw::RawTableInner::ctrl(move _12, move _13) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:2449:25-2449:26)
  1: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:2449:25-2449:26)
  2: (*_11) = move _10
    SourceInfo(src/raw/mod.rs:2449:9-2449:33)
  3: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:2449:32-2449:33)
  4: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:2449:33-2449:34)
  5: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:2450:30-2450:34)
  6: _14 = _3
    SourceInfo(src/raw/mod.rs:2450:30-2450:34)
  7: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:2450:10-2450:27)
  8: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:2450:10-2450:14)
  9: _16 = &(*_1)
    SourceInfo(src/raw/mod.rs:2450:10-2450:14)
  10: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:2450:20-2450:26)
  11: _17 = _4
    SourceInfo(src/raw/mod.rs:2450:20-2450:26)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2450:10-2450:27)
      kind: _15 = raw::RawTableInner::ctrl(move _16, move _17) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:2450:26-2450:27)
  1: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:2450:26-2450:27)
  2: (*_15) = move _14
    SourceInfo(src/raw/mod.rs:2450:9-2450:34)
  3: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:2450:33-2450:34)
  4: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:2450:34-2450:35)
  5: _0 = const ()
    SourceInfo(src/raw/mod.rs:2421:60-2451:6)
  6: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:2451:5-2451:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2451:6-2451:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2421:5-2451:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

