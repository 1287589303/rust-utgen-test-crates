bb0
  0: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:2314:29-2314:69)
  1: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:2314:41-2314:68)
  2: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:2314:41-2314:49)
  3: _7 = _3
    SourceInfo(src/raw/mod.rs:2314:41-2314:49)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2314:41-2314:68)
      kind: _6 = control::tag::Tag::special_is_empty(move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:2314:67-2314:68)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2314:29-2314:69)
      kind: _5 = <usize as core::convert::From<bool>>::from(move _6) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:2314:68-2314:69)
  1: _8 = SubWithOverflow(((*_1).2: usize), _5)
    SourceInfo(src/raw/mod.rs:2314:9-2314:69)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2314:9-2314:69)
      kind: assert(!move (_8.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_1).2: usize), move _5) -> [success: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: ((*_1).2: usize) = move (_8.0: usize)
    SourceInfo(src/raw/mod.rs:2314:9-2314:69)
  1: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:2314:68-2314:69)
  2: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:2315:9-2315:40)
  3: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:2315:9-2315:13)
  4: _10 = &mut (*_1)
    SourceInfo(src/raw/mod.rs:2315:9-2315:13)
  5: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:2315:28-2315:33)
  6: _11 = _2
    SourceInfo(src/raw/mod.rs:2315:28-2315:33)
  7: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:2315:35-2315:39)
  8: _12 = _4
    SourceInfo(src/raw/mod.rs:2315:35-2315:39)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2315:9-2315:40)
      kind: _9 = raw::RawTableInner::set_ctrl_hash(move _10, move _11, move _12) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:2315:39-2315:40)
  1: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:2315:39-2315:40)
  2: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:2315:39-2315:40)
  3: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:2315:40-2315:41)
  4: _13 = AddWithOverflow(((*_1).3: usize), const 1_usize)
    SourceInfo(src/raw/mod.rs:2316:9-2316:24)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2316:9-2316:24)
      kind: assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).3: usize), const 1_usize) -> [success: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: ((*_1).3: usize) = move (_13.0: usize)
    SourceInfo(src/raw/mod.rs:2316:9-2316:24)
  1: _0 = const ()
    SourceInfo(src/raw/mod.rs:2313:88-2317:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2317:6-2317:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2313:5-2317:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

