bb0
  0: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:2609:13-2609:22)
  1: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:2609:31-2609:65)
  2: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:2609:31-2609:41)
  3: _10 = ((*_1).3: usize)
    SourceInfo(src/raw/mod.rs:2609:31-2609:41)
  4: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:2609:54-2609:64)
  5: _11 = _3
    SourceInfo(src/raw/mod.rs:2609:54-2609:64)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2609:31-2609:65)
      kind: _9 = core::num::<impl usize>::checked_add(move _10, move _11) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:2609:64-2609:65)
  1: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:2609:64-2609:65)
  2: PlaceMention(_9)
    SourceInfo(src/raw/mod.rs:2609:31-2609:65)
  3: _12 = discriminant(_9)
    SourceInfo(src/raw/mod.rs:2609:31-2609:65)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2609:25-2609:65)
      kind: switchInt(move _12) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(src/raw/mod.rs:2609:31-2609:65)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2609:31-2609:65)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2610:13-2610:28)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:2611:32-2611:63)
  1: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:2611:32-2611:43)
  2: _16 = _5
    SourceInfo(src/raw/mod.rs:2611:32-2611:43)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2611:32-2611:63)
      kind: _15 = raw::Fallibility::capacity_overflow(move _16) -> [return: bb6, unwind: bb17]
  }
  preds [bb1, bb3]
  succs [bb6, bb17]

bb5
  0: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:2610:18-2610:27)
  1: _13 = ((_9 as Some).0: usize)
    SourceInfo(src/raw/mod.rs:2610:18-2610:27)
  2: _8 = _13
    SourceInfo(src/raw/mod.rs:2610:32-2610:41)
  3: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:2610:40-2610:41)
  4: FakeRead(ForLet(None), _8)
    SourceInfo(src/raw/mod.rs:2609:13-2609:22)
  5: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:2612:10-2612:11)
  6: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:2613:13-2613:26)
  7: StorageLive(_18)
    SourceInfo(src/raw/mod.rs:2613:53-2613:69)
  8: _18 = ((*_1).0: usize)
    SourceInfo(src/raw/mod.rs:2613:53-2613:69)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2613:29-2613:70)
      kind: _17 = raw::bucket_mask_to_capacity(move _18) -> [return: bb7, unwind: bb17]
  }
  preds [bb3]
  succs [bb7, bb17]

bb6
  0: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:2611:62-2611:63)
  1: _0 = core::result::Result::<(), TryReserveError>::Err(move _15)
    SourceInfo(src/raw/mod.rs:2611:28-2611:64)
  2: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:2611:63-2611:64)
  3: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:2612:10-2612:11)
  4: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:2647:5-2647:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2647:6-2647:6)
      kind: goto -> bb16
  }
  preds [bb4]
  succs [bb16]

bb7
  0: StorageDead(_18)
    SourceInfo(src/raw/mod.rs:2613:69-2613:70)
  1: FakeRead(ForLet(None), _17)
    SourceInfo(src/raw/mod.rs:2613:13-2613:26)
  2: StorageLive(_19)
    SourceInfo(src/raw/mod.rs:2614:12-2614:42)
  3: StorageLive(_20)
    SourceInfo(src/raw/mod.rs:2614:12-2614:21)
  4: _20 = _8
    SourceInfo(src/raw/mod.rs:2614:12-2614:21)
  5: StorageLive(_21)
    SourceInfo(src/raw/mod.rs:2614:25-2614:42)
  6: StorageLive(_22)
    SourceInfo(src/raw/mod.rs:2614:25-2614:38)
  7: _22 = _17
    SourceInfo(src/raw/mod.rs:2614:25-2614:38)
  8: _23 = Eq(const 2_usize, const 0_usize)
    SourceInfo(src/raw/mod.rs:2614:25-2614:42)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2614:25-2614:42)
      kind: assert(!move _23, "attempt to divide `{}` by zero", _22) -> [success: bb8, unwind: bb17]
  }
  preds [bb5]
  succs [bb8, bb17]

bb8
  0: _21 = Div(move _22, const 2_usize)
    SourceInfo(src/raw/mod.rs:2614:25-2614:42)
  1: StorageDead(_22)
    SourceInfo(src/raw/mod.rs:2614:41-2614:42)
  2: _19 = Le(move _20, move _21)
    SourceInfo(src/raw/mod.rs:2614:12-2614:42)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2614:12-2614:42)
      kind: switchInt(move _19) -> [0: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: StorageDead(_21)
    SourceInfo(src/raw/mod.rs:2614:41-2614:42)
  1: StorageDead(_20)
    SourceInfo(src/raw/mod.rs:2614:41-2614:42)
  2: StorageLive(_24)
    SourceInfo(src/raw/mod.rs:2627:13-2627:60)
  3: StorageLive(_25)
    SourceInfo(src/raw/mod.rs:2627:13-2627:17)
  4: _25 = &mut (*_1)
    SourceInfo(src/raw/mod.rs:2627:13-2627:17)
  5: StorageLive(_26)
    SourceInfo(src/raw/mod.rs:2627:34-2627:40)
  6: StorageLive(_27)
    SourceInfo(src/raw/mod.rs:2627:34-2627:40)
  7: _27 = &(*_4)
    SourceInfo(src/raw/mod.rs:2627:34-2627:40)
  8: _26 = move _27 as &dyn for<'a> core::ops::Fn(&'a mut raw::RawTableInner, usize) -> u64 (PointerCoercion(Unsize))
    SourceInfo(src/raw/mod.rs:2627:34-2627:40)
  9: StorageDead(_27)
    SourceInfo(src/raw/mod.rs:2627:39-2627:40)
  10: StorageLive(_28)
    SourceInfo(src/raw/mod.rs:2627:42-2627:53)
  11: _28 = (_6.0: usize)
    SourceInfo(src/raw/mod.rs:2627:42-2627:53)
  12: StorageLive(_29)
    SourceInfo(src/raw/mod.rs:2627:55-2627:59)
  13: _29 = _7
    SourceInfo(src/raw/mod.rs:2627:55-2627:59)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2627:13-2627:60)
      kind: _24 = raw::RawTableInner::rehash_in_place(move _25, move _26, move _28, move _29) -> [return: bb10, unwind: bb17]
  }
  preds [bb8]
  succs [bb10, bb17]

bb10
  0: StorageDead(_29)
    SourceInfo(src/raw/mod.rs:2627:59-2627:60)
  1: StorageDead(_28)
    SourceInfo(src/raw/mod.rs:2627:59-2627:60)
  2: StorageDead(_26)
    SourceInfo(src/raw/mod.rs:2627:59-2627:60)
  3: StorageDead(_25)
    SourceInfo(src/raw/mod.rs:2627:59-2627:60)
  4: StorageDead(_24)
    SourceInfo(src/raw/mod.rs:2627:60-2627:61)
  5: StorageLive(_30)
    SourceInfo(src/raw/mod.rs:2628:16-2628:18)
  6: _30 = ()
    SourceInfo(src/raw/mod.rs:2628:16-2628:18)
  7: _0 = core::result::Result::<(), TryReserveError>::Ok(move _30)
    SourceInfo(src/raw/mod.rs:2628:13-2628:19)
  8: StorageDead(_30)
    SourceInfo(src/raw/mod.rs:2628:18-2628:19)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2614:9-2646:10)
      kind: goto -> bb15
  }
  preds [bb9]
  succs [bb15]

bb11
  0: StorageDead(_21)
    SourceInfo(src/raw/mod.rs:2614:41-2614:42)
  1: StorageDead(_20)
    SourceInfo(src/raw/mod.rs:2614:41-2614:42)
  2: StorageLive(_31)
    SourceInfo(src/raw/mod.rs:2639:13-2639:17)
  3: _31 = &mut (*_1)
    SourceInfo(src/raw/mod.rs:2639:13-2639:17)
  4: StorageLive(_32)
    SourceInfo(src/raw/mod.rs:2640:17-2640:22)
  5: _32 = &(*_2)
    SourceInfo(src/raw/mod.rs:2640:17-2640:22)
  6: StorageLive(_33)
    SourceInfo(src/raw/mod.rs:2641:17-2641:57)
  7: StorageLive(_34)
    SourceInfo(src/raw/mod.rs:2641:28-2641:37)
  8: _34 = _8
    SourceInfo(src/raw/mod.rs:2641:28-2641:37)
  9: StorageLive(_35)
    SourceInfo(src/raw/mod.rs:2641:39-2641:56)
  10: StorageLive(_36)
    SourceInfo(src/raw/mod.rs:2641:39-2641:52)
  11: _36 = _17
    SourceInfo(src/raw/mod.rs:2641:39-2641:52)
  12: _37 = AddWithOverflow(_36, const 1_usize)
    SourceInfo(src/raw/mod.rs:2641:39-2641:56)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2641:39-2641:56)
      kind: assert(!move (_37.1: bool), "attempt to compute `{} + {}`, which would overflow", move _36, const 1_usize) -> [success: bb12, unwind: bb17]
  }
  preds [bb8]
  succs [bb12, bb17]

bb12
  0: _35 = move (_37.0: usize)
    SourceInfo(src/raw/mod.rs:2641:39-2641:56)
  1: StorageDead(_36)
    SourceInfo(src/raw/mod.rs:2641:55-2641:56)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2641:17-2641:57)
      kind: _33 = <usize as core::cmp::Ord>::max(move _34, move _35) -> [return: bb13, unwind: bb17]
  }
  preds [bb11]
  succs [bb13, bb17]

bb13
  0: StorageDead(_35)
    SourceInfo(src/raw/mod.rs:2641:56-2641:57)
  1: StorageDead(_34)
    SourceInfo(src/raw/mod.rs:2641:56-2641:57)
  2: StorageLive(_38)
    SourceInfo(src/raw/mod.rs:2642:17-2642:23)
  3: StorageLive(_39)
    SourceInfo(src/raw/mod.rs:2642:17-2642:23)
  4: _39 = &(*_4)
    SourceInfo(src/raw/mod.rs:2642:17-2642:23)
  5: _38 = move _39 as &dyn for<'a> core::ops::Fn(&'a mut raw::RawTableInner, usize) -> u64 (PointerCoercion(Unsize))
    SourceInfo(src/raw/mod.rs:2642:17-2642:23)
  6: StorageDead(_39)
    SourceInfo(src/raw/mod.rs:2642:22-2642:23)
  7: StorageLive(_40)
    SourceInfo(src/raw/mod.rs:2643:17-2643:28)
  8: _40 = _5
    SourceInfo(src/raw/mod.rs:2643:17-2643:28)
  9: StorageLive(_41)
    SourceInfo(src/raw/mod.rs:2644:17-2644:23)
  10: _41 = _6
    SourceInfo(src/raw/mod.rs:2644:17-2644:23)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2639:13-2645:14)
      kind: _0 = raw::RawTableInner::resize_inner::<A>(move _31, move _32, move _33, move _38, move _40, move _41) -> [return: bb14, unwind: bb17]
  }
  preds [bb12]
  succs [bb14, bb17]

bb14
  0: StorageDead(_41)
    SourceInfo(src/raw/mod.rs:2645:13-2645:14)
  1: StorageDead(_40)
    SourceInfo(src/raw/mod.rs:2645:13-2645:14)
  2: StorageDead(_38)
    SourceInfo(src/raw/mod.rs:2645:13-2645:14)
  3: StorageDead(_33)
    SourceInfo(src/raw/mod.rs:2645:13-2645:14)
  4: StorageDead(_32)
    SourceInfo(src/raw/mod.rs:2645:13-2645:14)
  5: StorageDead(_31)
    SourceInfo(src/raw/mod.rs:2645:13-2645:14)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2614:9-2646:10)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  0: StorageDead(_19)
    SourceInfo(src/raw/mod.rs:2646:9-2646:10)
  1: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:2647:5-2647:6)
  2: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:2647:5-2647:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2647:6-2647:6)
      kind: goto -> bb16
  }
  preds [bb10, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2647:6-2647:6)
      kind: return
  }
  preds [bb6, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2596:5-2647:6)
      kind: resume
  }
  preds [bb0, bb4, bb5, bb7, bb9, bb11, bb12, bb13]
  succs []

