bb0
  0: StorageLive(_5)
    SourceInfo(src/set.rs:800:33-804:10)
  1: StorageLive(_6)
    SourceInfo(src/set.rs:800:36-800:61)
  2: StorageLive(_7)
    SourceInfo(src/set.rs:800:36-800:46)
  3: StorageLive(_8)
    SourceInfo(src/set.rs:800:36-800:40)
  4: _8 = &(*_1)
    SourceInfo(src/set.rs:800:36-800:40)
  Terminator {
      source_info: SourceInfo(src/set.rs:800:36-800:46)
      kind: _7 = set::HashSet::<T, S, A>::len(move _8) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_8)
    SourceInfo(src/set.rs:800:45-800:46)
  1: StorageLive(_9)
    SourceInfo(src/set.rs:800:50-800:61)
  2: StorageLive(_10)
    SourceInfo(src/set.rs:800:50-800:55)
  3: _10 = &(*_2)
    SourceInfo(src/set.rs:800:50-800:55)
  Terminator {
      source_info: SourceInfo(src/set.rs:800:50-800:61)
      kind: _9 = set::HashSet::<T, S, A>::len(move _10) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_10)
    SourceInfo(src/set.rs:800:60-800:61)
  1: _6 = Le(move _7, move _9)
    SourceInfo(src/set.rs:800:36-800:61)
  Terminator {
      source_info: SourceInfo(src/set.rs:800:36-800:61)
      kind: switchInt(move _6) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(src/set.rs:800:60-800:61)
  1: StorageDead(_7)
    SourceInfo(src/set.rs:800:60-800:61)
  2: StorageLive(_11)
    SourceInfo(src/set.rs:801:14-801:18)
  3: _11 = _1
    SourceInfo(src/set.rs:801:14-801:18)
  4: StorageLive(_12)
    SourceInfo(src/set.rs:801:20-801:25)
  5: _12 = _2
    SourceInfo(src/set.rs:801:20-801:25)
  6: _5 = (move _11, move _12)
    SourceInfo(src/set.rs:801:13-801:26)
  7: StorageDead(_12)
    SourceInfo(src/set.rs:801:25-801:26)
  8: StorageDead(_11)
    SourceInfo(src/set.rs:801:25-801:26)
  Terminator {
      source_info: SourceInfo(src/set.rs:800:33-804:10)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: StorageDead(_9)
    SourceInfo(src/set.rs:800:60-800:61)
  1: StorageDead(_7)
    SourceInfo(src/set.rs:800:60-800:61)
  2: StorageLive(_13)
    SourceInfo(src/set.rs:803:14-803:19)
  3: _13 = _2
    SourceInfo(src/set.rs:803:14-803:19)
  4: StorageLive(_14)
    SourceInfo(src/set.rs:803:21-803:25)
  5: _14 = _1
    SourceInfo(src/set.rs:803:21-803:25)
  6: _5 = (move _13, move _14)
    SourceInfo(src/set.rs:803:13-803:26)
  7: StorageDead(_14)
    SourceInfo(src/set.rs:803:25-803:26)
  8: StorageDead(_13)
    SourceInfo(src/set.rs:803:25-803:26)
  Terminator {
      source_info: SourceInfo(src/set.rs:800:33-804:10)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  0: StorageDead(_6)
    SourceInfo(src/set.rs:804:9-804:10)
  1: PlaceMention(_5)
    SourceInfo(src/set.rs:800:33-804:10)
  2: StorageLive(_3)
    SourceInfo(src/set.rs:800:14-800:21)
  3: _3 = (_5.0: &set::HashSet<T, S, A>)
    SourceInfo(src/set.rs:800:14-800:21)
  4: StorageLive(_4)
    SourceInfo(src/set.rs:800:23-800:29)
  5: _4 = (_5.1: &set::HashSet<T, S, A>)
    SourceInfo(src/set.rs:800:23-800:29)
  6: StorageDead(_5)
    SourceInfo(src/set.rs:804:10-804:11)
  7: StorageLive(_15)
    SourceInfo(src/set.rs:806:19-806:33)
  8: StorageLive(_16)
    SourceInfo(src/set.rs:806:19-806:26)
  9: _16 = &(*_3)
    SourceInfo(src/set.rs:806:19-806:26)
  Terminator {
      source_info: SourceInfo(src/set.rs:806:19-806:33)
      kind: _15 = set::HashSet::<T, S, A>::iter(move _16) -> [return: bb6, unwind: bb7]
  }
  preds [bb3, bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_16)
    SourceInfo(src/set.rs:806:32-806:33)
  1: StorageLive(_17)
    SourceInfo(src/set.rs:807:20-807:26)
  2: _17 = &(*_4)
    SourceInfo(src/set.rs:807:20-807:26)
  3: _0 = set::Intersection::<'_, T, S, A> { iter: move _15, other: move _17 }
    SourceInfo(src/set.rs:805:9-808:10)
  4: StorageDead(_17)
    SourceInfo(src/set.rs:808:9-808:10)
  5: StorageDead(_15)
    SourceInfo(src/set.rs:808:9-808:10)
  6: StorageDead(_4)
    SourceInfo(src/set.rs:809:5-809:6)
  7: StorageDead(_3)
    SourceInfo(src/set.rs:809:5-809:6)
  Terminator {
      source_info: SourceInfo(src/set.rs:809:6-809:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/set.rs:799:5-809:6)
      kind: resume
  }
  preds [bb0, bb1, bb5]
  succs []

