bb0
  0: StorageLive(_2)
    SourceInfo(src/map.rs:320:40-320:48)
  1: _2 = _1
    SourceInfo(src/map.rs:320:40-320:48)
  2: StorageLive(_3)
    SourceInfo(src/map.rs:320:50-320:79)
  Terminator {
      source_info: SourceInfo(src/map.rs:320:50-320:79)
      kind: _3 = <foldhash::fast::RandomState as core::default::Default>::default() -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  Terminator {
      source_info: SourceInfo(src/map.rs:320:9-320:80)
      kind: _0 = map::HashMap::<K, V>::with_capacity_and_hasher(move _2, move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/map.rs:320:79-320:80)
  1: StorageDead(_2)
    SourceInfo(src/map.rs:320:79-320:80)
  Terminator {
      source_info: SourceInfo(src/map.rs:321:6-321:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:319:5-321:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

