bb0
  0: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:2321:13-2321:26)
  1: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:2321:29-2321:49)
  2: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:2321:29-2321:33)
  3: _7 = &(*_1)
    SourceInfo(src/raw/mod.rs:2321:29-2321:33)
  4: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:2321:44-2321:48)
  5: _8 = _4
    SourceInfo(src/raw/mod.rs:2321:44-2321:48)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2321:29-2321:49)
      kind: _6 = raw::RawTableInner::probe_seq(move _7, move _8) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:2321:48-2321:49)
  1: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:2321:48-2321:49)
  2: _5 = (_6.0: usize)
    SourceInfo(src/raw/mod.rs:2321:29-2321:53)
  3: FakeRead(ForLet(None), _5)
    SourceInfo(src/raw/mod.rs:2321:13-2321:26)
  4: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:2321:53-2321:54)
  5: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:2322:13-2322:24)
  6: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:2323:13-2323:93)
  7: _10 = &_5
    SourceInfo(src/raw/mod.rs:2323:13-2323:93)
  8: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:2323:13-2323:93)
  9: _11 = &(*_1)
    SourceInfo(src/raw/mod.rs:2323:13-2323:93)
  10: _9 = {closure@src/raw/mod.rs:2323:13: 2323:25} { probe_seq_pos: move _10, self: move _11 }
    SourceInfo(src/raw/mod.rs:2323:13-2323:93)
  11: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:2323:24-2323:25)
  12: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:2323:24-2323:25)
  13: FakeRead(ForLet(None), _9)
    SourceInfo(src/raw/mod.rs:2322:13-2322:24)
  14: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:2324:9-2324:23)
  15: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:2324:9-2324:20)
  16: _13 = &_9
    SourceInfo(src/raw/mod.rs:2324:9-2324:20)
  17: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:2324:9-2324:23)
  18: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:2324:21-2324:22)
  19: _15 = _2
    SourceInfo(src/raw/mod.rs:2324:21-2324:22)
  20: _14 = (move _15,)
    SourceInfo(src/raw/mod.rs:2324:9-2324:23)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2324:9-2324:23)
      kind: _12 = <{closure@src/raw/mod.rs:2323:13: 2323:25} as core::ops::Fn<(usize,)>>::call(move _13, move _14) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:2324:22-2324:23)
  1: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:2324:22-2324:23)
  2: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:2324:22-2324:23)
  3: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:2324:27-2324:45)
  4: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:2324:27-2324:38)
  5: _17 = &_9
    SourceInfo(src/raw/mod.rs:2324:27-2324:38)
  6: StorageLive(_18)
    SourceInfo(src/raw/mod.rs:2324:27-2324:45)
  7: StorageLive(_19)
    SourceInfo(src/raw/mod.rs:2324:39-2324:44)
  8: _19 = _3
    SourceInfo(src/raw/mod.rs:2324:39-2324:44)
  9: _18 = (move _19,)
    SourceInfo(src/raw/mod.rs:2324:27-2324:45)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2324:27-2324:45)
      kind: _16 = <{closure@src/raw/mod.rs:2323:13: 2323:25} as core::ops::Fn<(usize,)>>::call(move _17, move _18) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_19)
    SourceInfo(src/raw/mod.rs:2324:44-2324:45)
  1: StorageDead(_18)
    SourceInfo(src/raw/mod.rs:2324:44-2324:45)
  2: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:2324:44-2324:45)
  3: _0 = Eq(move _12, move _16)
    SourceInfo(src/raw/mod.rs:2324:9-2324:45)
  4: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:2324:44-2324:45)
  5: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:2324:44-2324:45)
  6: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:2325:5-2325:6)
  7: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:2325:5-2325:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2325:6-2325:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:2320:5-2325:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

