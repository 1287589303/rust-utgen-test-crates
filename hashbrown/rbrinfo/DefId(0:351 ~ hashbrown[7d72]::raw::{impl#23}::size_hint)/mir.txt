bb0
  0: StorageLive(_2)
    SourceInfo(src/raw/mod.rs:3602:13-3602:30)
  1: StorageLive(_3)
    SourceInfo(src/raw/mod.rs:3602:36-3602:61)
  2: StorageLive(_4)
    SourceInfo(src/raw/mod.rs:3602:36-3602:44)
  3: _4 = ((*_1).3: *const u8)
    SourceInfo(src/raw/mod.rs:3602:36-3602:44)
  4: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:3602:47-3602:61)
  5: _5 = ((*_1).2: *const u8)
    SourceInfo(src/raw/mod.rs:3602:47-3602:61)
  6: _3 = Gt(move _4, move _5)
    SourceInfo(src/raw/mod.rs:3602:36-3602:61)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3602:36-3602:61)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:3602:60-3602:61)
  1: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:3602:60-3602:61)
  2: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:3603:34-3603:42)
  3: _6 = ((*_1).3: *const u8)
    SourceInfo(src/raw/mod.rs:3603:34-3603:42)
  4: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:3603:44-3603:58)
  5: _7 = ((*_1).2: *const u8)
    SourceInfo(src/raw/mod.rs:3603:44-3603:58)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3603:22-3603:59)
      kind: _2 = raw::offset_from::<u8>(move _6, move _7) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:3603:58-3603:59)
  1: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:3603:58-3603:59)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3602:33-3606:10)
      kind: goto -> bb4
  }
  preds [bb1]
  succs [bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:3602:60-3602:61)
  1: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:3602:60-3602:61)
  2: _2 = const 0_usize
    SourceInfo(src/raw/mod.rs:3605:13-3605:14)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3602:33-3606:10)
      kind: goto -> bb4
  }
  preds [bb0]
  succs [bb4]

bb4
  0: StorageDead(_3)
    SourceInfo(src/raw/mod.rs:3606:9-3606:10)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/raw/mod.rs:3602:13-3602:30)
  2: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:3609:13-3609:51)
  3: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:3609:18-3609:50)
  4: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:3609:33-3609:50)
  5: _10 = _2
    SourceInfo(src/raw/mod.rs:3609:33-3609:50)
  6: _11 = AddWithOverflow(const control::group::sse2::Group::WIDTH, _10)
    SourceInfo(src/raw/mod.rs:3609:18-3609:50)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3609:18-3609:50)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", const control::group::sse2::Group::WIDTH, move _10) -> [success: bb5, unwind: bb6]
  }
  preds [bb2, bb3]
  succs [bb5, bb6]

bb5
  0: _9 = move (_11.0: usize)
    SourceInfo(src/raw/mod.rs:3609:18-3609:50)
  1: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:3609:49-3609:50)
  2: _8 = core::option::Option::<usize>::Some(move _9)
    SourceInfo(src/raw/mod.rs:3609:13-3609:51)
  3: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:3609:50-3609:51)
  4: _0 = (const 0_usize, move _8)
    SourceInfo(src/raw/mod.rs:3609:9-3609:52)
  5: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:3609:51-3609:52)
  6: StorageDead(_2)
    SourceInfo(src/raw/mod.rs:3610:5-3610:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3610:6-3610:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3600:5-3610:6)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

