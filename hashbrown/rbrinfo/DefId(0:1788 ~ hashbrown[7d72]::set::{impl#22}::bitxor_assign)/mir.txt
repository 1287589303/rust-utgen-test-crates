bb0
  0: StorageLive(_3)
    SourceInfo(src/set.rs:1587:21-1587:24)
  1: StorageLive(_4)
    SourceInfo(src/set.rs:1587:21-1587:24)
  2: _4 = _2
    SourceInfo(src/set.rs:1587:21-1587:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:21-1587:24)
      kind: _3 = <&set::HashSet<T, S, A> as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb1, unwind: bb22]
  }
  preds []
  succs [bb1, bb22]

bb1
  0: StorageDead(_4)
    SourceInfo(src/set.rs:1587:23-1587:24)
  1: PlaceMention(_3)
    SourceInfo(src/set.rs:1587:21-1587:24)
  2: StorageLive(_5)
    SourceInfo(src/set.rs:1587:21-1587:24)
  3: _5 = move _3
    SourceInfo(src/set.rs:1587:21-1587:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:9-1599:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:9-1599:10)
      kind: falseUnwind -> [real: bb3, unwind: bb22]
  }
  preds [bb1, bb20]
  succs [bb3, bb22]

bb3
  0: StorageLive(_7)
    SourceInfo(src/set.rs:1587:21-1587:24)
  1: StorageLive(_8)
    SourceInfo(src/set.rs:1587:21-1587:24)
  2: StorageLive(_9)
    SourceInfo(src/set.rs:1587:21-1587:24)
  3: StorageLive(_10)
    SourceInfo(src/set.rs:1587:21-1587:24)
  4: _10 = &mut _5
    SourceInfo(src/set.rs:1587:21-1587:24)
  5: _9 = &mut (*_10)
    SourceInfo(src/set.rs:1587:21-1587:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:21-1587:24)
      kind: _8 = <set::Iter<'_, T> as core::iter::Iterator>::next(move _9) -> [return: bb4, unwind: bb22]
  }
  preds [bb2]
  succs [bb4, bb22]

bb4
  0: StorageDead(_9)
    SourceInfo(src/set.rs:1587:23-1587:24)
  1: PlaceMention(_8)
    SourceInfo(src/set.rs:1587:21-1587:24)
  2: _11 = discriminant(_8)
    SourceInfo(src/set.rs:1587:21-1587:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:21-1587:24)
      kind: switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(src/set.rs:1587:21-1587:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:21-1587:24)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:9-1599:10)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_13)
    SourceInfo(src/set.rs:1587:13-1587:17)
  1: _13 = ((_8 as Some).0: &T)
    SourceInfo(src/set.rs:1587:13-1587:17)
  2: StorageLive(_14)
    SourceInfo(src/set.rs:1588:17-1588:21)
  3: StorageLive(_15)
    SourceInfo(src/set.rs:1588:34-1588:56)
  4: StorageLive(_16)
    SourceInfo(src/set.rs:1588:34-1588:56)
  5: _16 = &(((*_1).0: map::HashMap<T, (), S, A>).0: S)
    SourceInfo(src/set.rs:1588:34-1588:56)
  6: _15 = &(*_16)
    SourceInfo(src/set.rs:1588:34-1588:56)
  7: StorageLive(_17)
    SourceInfo(src/set.rs:1588:58-1588:62)
  8: _17 = &(*_13)
    SourceInfo(src/set.rs:1588:58-1588:62)
  Terminator {
      source_info: SourceInfo(src/set.rs:1588:24-1588:63)
      kind: _14 = map::make_hash::<T, S>(move _15, move _17) -> [return: bb9, unwind: bb22]
  }
  preds [bb4, bb6]
  succs [bb9, bb22]

bb8
  0: _0 = const ()
    SourceInfo(src/set.rs:1587:9-1599:10)
  1: StorageDead(_10)
    SourceInfo(src/set.rs:1599:9-1599:10)
  2: StorageDead(_8)
    SourceInfo(src/set.rs:1599:9-1599:10)
  3: StorageDead(_7)
    SourceInfo(src/set.rs:1599:9-1599:10)
  4: StorageDead(_5)
    SourceInfo(src/set.rs:1599:9-1599:10)
  5: StorageDead(_3)
    SourceInfo(src/set.rs:1599:9-1599:10)
  Terminator {
      source_info: SourceInfo(src/set.rs:1600:6-1600:6)
      kind: return
  }
  preds [bb6]
  succs []

bb9
  0: StorageDead(_17)
    SourceInfo(src/set.rs:1588:62-1588:63)
  1: StorageDead(_15)
    SourceInfo(src/set.rs:1588:62-1588:63)
  2: FakeRead(ForLet(None), _14)
    SourceInfo(src/set.rs:1588:17-1588:21)
  3: StorageDead(_16)
    SourceInfo(src/set.rs:1588:63-1588:64)
  4: StorageLive(_18)
    SourceInfo(src/set.rs:1589:19-1589:64)
  5: StorageLive(_19)
    SourceInfo(src/set.rs:1589:19-1589:27)
  6: _19 = &mut ((*_1).0: map::HashMap<T, (), S, A>)
    SourceInfo(src/set.rs:1589:19-1589:27)
  7: StorageLive(_20)
    SourceInfo(src/set.rs:1589:53-1589:57)
  8: _20 = _14
    SourceInfo(src/set.rs:1589:53-1589:57)
  9: StorageLive(_21)
    SourceInfo(src/set.rs:1589:59-1589:63)
  10: _21 = &(*_13)
    SourceInfo(src/set.rs:1589:59-1589:63)
  Terminator {
      source_info: SourceInfo(src/set.rs:1589:19-1589:64)
      kind: _18 = map::HashMap::<T, (), S, A>::find_or_find_insert_slot::<T>(move _19, move _20, move _21) -> [return: bb10, unwind: bb22]
  }
  preds [bb7]
  succs [bb10, bb22]

bb10
  0: StorageDead(_21)
    SourceInfo(src/set.rs:1589:63-1589:64)
  1: StorageDead(_20)
    SourceInfo(src/set.rs:1589:63-1589:64)
  2: StorageDead(_19)
    SourceInfo(src/set.rs:1589:63-1589:64)
  3: PlaceMention(_18)
    SourceInfo(src/set.rs:1589:19-1589:64)
  4: _22 = discriminant(_18)
    SourceInfo(src/set.rs:1589:19-1589:64)
  Terminator {
      source_info: SourceInfo(src/set.rs:1589:13-1589:64)
      kind: switchInt(move _22) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(src/set.rs:1589:19-1589:64)
  Terminator {
      source_info: SourceInfo(src/set.rs:1589:19-1589:64)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/set.rs:1590:17-1590:27)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_27)
    SourceInfo(src/set.rs:1593:21-1593:25)
  1: _27 = move ((_18 as Err).0: raw::InsertSlot)
    SourceInfo(src/set.rs:1593:21-1593:25)
  2: StorageLive(_28)
    SourceInfo(src/set.rs:1594:21-1596:72)
  3: StorageLive(_29)
    SourceInfo(src/set.rs:1594:21-1595:31)
  4: _29 = &mut (((*_1).0: map::HashMap<T, (), S, A>).1: raw::RawTable<(T, ()), A>)
    SourceInfo(src/set.rs:1594:21-1595:31)
  5: StorageLive(_30)
    SourceInfo(src/set.rs:1596:41-1596:45)
  6: _30 = _14
    SourceInfo(src/set.rs:1596:41-1596:45)
  7: StorageLive(_31)
    SourceInfo(src/set.rs:1596:47-1596:51)
  8: _31 = move _27
    SourceInfo(src/set.rs:1596:47-1596:51)
  9: StorageLive(_32)
    SourceInfo(src/set.rs:1596:53-1596:71)
  10: StorageLive(_33)
    SourceInfo(src/set.rs:1596:54-1596:66)
  11: StorageLive(_34)
    SourceInfo(src/set.rs:1596:54-1596:58)
  12: _34 = &(*_13)
    SourceInfo(src/set.rs:1596:54-1596:58)
  Terminator {
      source_info: SourceInfo(src/set.rs:1596:54-1596:66)
      kind: _33 = <T as core::clone::Clone>::clone(move _34) -> [return: bb17, unwind: bb22]
  }
  preds [bb10, bb12]
  succs [bb17, bb22]

bb14
  0: StorageLive(_23)
    SourceInfo(src/set.rs:1590:20-1590:26)
  1: _23 = move ((_18 as Ok).0: raw::Bucket<(T, ())>)
    SourceInfo(src/set.rs:1590:20-1590:26)
  2: StorageLive(_24)
    SourceInfo(src/set.rs:1591:21-1591:50)
  3: StorageLive(_25)
    SourceInfo(src/set.rs:1591:21-1591:35)
  4: _25 = &mut (((*_1).0: map::HashMap<T, (), S, A>).1: raw::RawTable<(T, ()), A>)
    SourceInfo(src/set.rs:1591:21-1591:35)
  5: StorageLive(_26)
    SourceInfo(src/set.rs:1591:43-1591:49)
  6: _26 = move _23
    SourceInfo(src/set.rs:1591:43-1591:49)
  Terminator {
      source_info: SourceInfo(src/set.rs:1591:21-1591:50)
      kind: _24 = raw::RawTable::<(T, ()), A>::remove(move _25, move _26) -> [return: bb15, unwind: bb22]
  }
  preds [bb12]
  succs [bb15, bb22]

bb15
  0: StorageDead(_26)
    SourceInfo(src/set.rs:1591:49-1591:50)
  1: StorageDead(_25)
    SourceInfo(src/set.rs:1591:49-1591:50)
  Terminator {
      source_info: SourceInfo(src/set.rs:1591:50-1591:51)
      kind: drop(_24) -> [return: bb16, unwind: bb22]
  }
  preds [bb14]
  succs [bb16, bb22]

bb16
  0: StorageDead(_24)
    SourceInfo(src/set.rs:1591:50-1591:51)
  1: _7 = const ()
    SourceInfo(src/set.rs:1590:31-1592:18)
  2: StorageDead(_23)
    SourceInfo(src/set.rs:1592:17-1592:18)
  Terminator {
      source_info: SourceInfo(src/set.rs:1592:17-1592:18)
      kind: goto -> bb20
  }
  preds [bb15]
  succs [bb20]

bb17
  0: StorageDead(_34)
    SourceInfo(src/set.rs:1596:65-1596:66)
  1: StorageLive(_35)
    SourceInfo(src/set.rs:1596:68-1596:70)
  2: _35 = ()
    SourceInfo(src/set.rs:1596:68-1596:70)
  3: _32 = (move _33, move _35)
    SourceInfo(src/set.rs:1596:53-1596:71)
  4: StorageDead(_35)
    SourceInfo(src/set.rs:1596:70-1596:71)
  Terminator {
      source_info: SourceInfo(src/set.rs:1596:70-1596:71)
      kind: drop(_33) -> [return: bb18, unwind: bb21]
  }
  preds [bb13]
  succs [bb18, bb21]

bb18
  0: StorageDead(_33)
    SourceInfo(src/set.rs:1596:70-1596:71)
  Terminator {
      source_info: SourceInfo(src/set.rs:1594:21-1596:72)
      kind: _28 = raw::RawTable::<(T, ()), A>::insert_in_slot(move _29, move _30, move _31, move _32) -> [return: bb19, unwind: bb21]
  }
  preds [bb17]
  succs [bb19, bb21]

bb19
  0: StorageDead(_32)
    SourceInfo(src/set.rs:1596:71-1596:72)
  1: StorageDead(_31)
    SourceInfo(src/set.rs:1596:71-1596:72)
  2: StorageDead(_30)
    SourceInfo(src/set.rs:1596:71-1596:72)
  3: StorageDead(_29)
    SourceInfo(src/set.rs:1596:71-1596:72)
  4: StorageDead(_28)
    SourceInfo(src/set.rs:1596:72-1596:73)
  5: _7 = const ()
    SourceInfo(src/set.rs:1593:30-1597:18)
  6: StorageDead(_27)
    SourceInfo(src/set.rs:1597:17-1597:18)
  Terminator {
      source_info: SourceInfo(src/set.rs:1597:17-1597:18)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  0: StorageDead(_14)
    SourceInfo(src/set.rs:1599:9-1599:10)
  1: StorageDead(_18)
    SourceInfo(src/set.rs:1599:9-1599:10)
  2: StorageDead(_13)
    SourceInfo(src/set.rs:1599:9-1599:10)
  3: StorageDead(_10)
    SourceInfo(src/set.rs:1599:9-1599:10)
  4: StorageDead(_8)
    SourceInfo(src/set.rs:1599:9-1599:10)
  5: StorageDead(_7)
    SourceInfo(src/set.rs:1599:9-1599:10)
  6: _6 = const ()
    SourceInfo(src/set.rs:1587:9-1599:10)
  Terminator {
      source_info: SourceInfo(src/set.rs:1587:9-1599:10)
      kind: goto -> bb2
  }
  preds [bb16, bb19]
  succs [bb2]

bb21
  Terminator {
      source_info: SourceInfo(src/set.rs:1596:71-1596:72)
      kind: drop(_32) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb17, bb18]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(src/set.rs:1586:5-1600:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb7, bb9, bb13, bb14, bb15, bb21]
  succs []

