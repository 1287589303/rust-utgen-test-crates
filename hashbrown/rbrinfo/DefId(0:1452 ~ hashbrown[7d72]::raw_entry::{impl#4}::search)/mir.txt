bb0
  0: StorageLive(_4)
    SourceInfo(src/raw_entry.rs:603:15-603:62)
  1: StorageLive(_5)
    SourceInfo(src/raw_entry.rs:603:15-603:29)
  2: _5 = &((*(_1.0: &mut map::HashMap<K, V, S, A>)).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/raw_entry.rs:603:15-603:29)
  3: StorageLive(_6)
    SourceInfo(src/raw_entry.rs:603:35-603:39)
  4: _6 = _2
    SourceInfo(src/raw_entry.rs:603:35-603:39)
  5: StorageLive(_7)
    SourceInfo(src/raw_entry.rs:603:41-603:61)
  6: StorageLive(_8)
    SourceInfo(src/raw_entry.rs:603:41-603:61)
  7: _8 = &mut _3
    SourceInfo(src/raw_entry.rs:603:41-603:61)
  8: _7 = {closure@src/raw_entry.rs:603:41: 603:49} { is_match: move _8 }
    SourceInfo(src/raw_entry.rs:603:41-603:61)
  9: StorageDead(_8)
    SourceInfo(src/raw_entry.rs:603:48-603:49)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:603:15-603:62)
      kind: _4 = raw::RawTable::<(K, V), A>::find::<{closure@src/raw_entry.rs:603:41: 603:49}>(move _5, move _6, move _7) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_7)
    SourceInfo(src/raw_entry.rs:603:61-603:62)
  1: StorageDead(_6)
    SourceInfo(src/raw_entry.rs:603:61-603:62)
  2: StorageDead(_5)
    SourceInfo(src/raw_entry.rs:603:61-603:62)
  3: PlaceMention(_4)
    SourceInfo(src/raw_entry.rs:603:15-603:62)
  4: _9 = discriminant(_4)
    SourceInfo(src/raw_entry.rs:603:15-603:62)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:603:9-603:62)
      kind: switchInt(move _9) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/raw_entry.rs:603:15-603:62)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:603:15-603:62)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:604:13-604:23)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_17)
    SourceInfo(src/raw_entry.rs:609:41-612:14)
  1: StorageLive(_18)
    SourceInfo(src/raw_entry.rs:610:24-610:43)
  2: StorageLive(_19)
    SourceInfo(src/raw_entry.rs:610:24-610:43)
  3: _19 = &mut ((*(_1.0: &mut map::HashMap<K, V, S, A>)).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/raw_entry.rs:610:24-610:43)
  4: _18 = &mut (*_19)
    SourceInfo(src/raw_entry.rs:610:24-610:43)
  5: StorageLive(_20)
    SourceInfo(src/raw_entry.rs:611:31-611:53)
  6: StorageLive(_21)
    SourceInfo(src/raw_entry.rs:611:31-611:53)
  7: _21 = &((*(_1.0: &mut map::HashMap<K, V, S, A>)).0: S)
    SourceInfo(src/raw_entry.rs:611:31-611:53)
  8: _20 = &(*_21)
    SourceInfo(src/raw_entry.rs:611:31-611:53)
  9: _17 = raw_entry::RawVacantEntryMut::<'_, K, V, S, A> { table: move _18, hash_builder: move _20 }
    SourceInfo(src/raw_entry.rs:609:41-612:14)
  10: StorageDead(_20)
    SourceInfo(src/raw_entry.rs:612:13-612:14)
  11: StorageDead(_18)
    SourceInfo(src/raw_entry.rs:612:13-612:14)
  12: _0 = raw_entry::RawEntryMut::<'_, K, V, S, A>::Vacant(move _17)
    SourceInfo(src/raw_entry.rs:609:21-612:15)
  13: StorageDead(_17)
    SourceInfo(src/raw_entry.rs:612:14-612:15)
  14: StorageDead(_21)
    SourceInfo(src/raw_entry.rs:612:14-612:15)
  15: StorageDead(_19)
    SourceInfo(src/raw_entry.rs:612:14-612:15)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:612:14-612:15)
      kind: goto -> bb6
  }
  preds [bb1, bb3]
  succs [bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(src/raw_entry.rs:604:18-604:22)
  1: _10 = move ((_4 as Some).0: raw::Bucket<(K, V)>)
    SourceInfo(src/raw_entry.rs:604:18-604:22)
  2: StorageLive(_11)
    SourceInfo(src/raw_entry.rs:604:49-608:14)
  3: StorageLive(_12)
    SourceInfo(src/raw_entry.rs:605:17-605:21)
  4: _12 = move _10
    SourceInfo(src/raw_entry.rs:605:17-605:21)
  5: StorageLive(_13)
    SourceInfo(src/raw_entry.rs:606:24-606:43)
  6: StorageLive(_14)
    SourceInfo(src/raw_entry.rs:606:24-606:43)
  7: _14 = &mut ((*(_1.0: &mut map::HashMap<K, V, S, A>)).1: raw::RawTable<(K, V), A>)
    SourceInfo(src/raw_entry.rs:606:24-606:43)
  8: _13 = &mut (*_14)
    SourceInfo(src/raw_entry.rs:606:24-606:43)
  9: StorageLive(_15)
    SourceInfo(src/raw_entry.rs:607:31-607:53)
  10: StorageLive(_16)
    SourceInfo(src/raw_entry.rs:607:31-607:53)
  11: _16 = &((*(_1.0: &mut map::HashMap<K, V, S, A>)).0: S)
    SourceInfo(src/raw_entry.rs:607:31-607:53)
  12: _15 = &(*_16)
    SourceInfo(src/raw_entry.rs:607:31-607:53)
  13: _11 = raw_entry::RawOccupiedEntryMut::<'_, K, V, S, A> { elem: move _12, table: move _13, hash_builder: move _15 }
    SourceInfo(src/raw_entry.rs:604:49-608:14)
  14: StorageDead(_15)
    SourceInfo(src/raw_entry.rs:608:13-608:14)
  15: StorageDead(_13)
    SourceInfo(src/raw_entry.rs:608:13-608:14)
  16: StorageDead(_12)
    SourceInfo(src/raw_entry.rs:608:13-608:14)
  17: _0 = raw_entry::RawEntryMut::<'_, K, V, S, A>::Occupied(move _11)
    SourceInfo(src/raw_entry.rs:604:27-608:15)
  18: StorageDead(_11)
    SourceInfo(src/raw_entry.rs:608:14-608:15)
  19: StorageDead(_16)
    SourceInfo(src/raw_entry.rs:608:14-608:15)
  20: StorageDead(_14)
    SourceInfo(src/raw_entry.rs:608:14-608:15)
  21: StorageDead(_10)
    SourceInfo(src/raw_entry.rs:608:14-608:15)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:608:14-608:15)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb6
  0: StorageDead(_4)
    SourceInfo(src/raw_entry.rs:614:5-614:6)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:614:5-614:6)
      kind: drop(_3) -> [return: bb7, unwind: bb9]
  }
  preds [bb4, bb5]
  succs [bb7, bb9]

bb7
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:614:6-614:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:614:5-614:6)
      kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:599:5-614:6)
      kind: resume
  }
  preds [bb6, bb8]
  succs []

