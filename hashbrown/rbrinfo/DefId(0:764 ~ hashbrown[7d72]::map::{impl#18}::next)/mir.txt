bb0
  0: StorageLive(_2)
    SourceInfo(src/map.rs:2317:9-2317:26)
  1: StorageLive(_3)
    SourceInfo(src/map.rs:2317:9-2317:19)
  2: _3 = &mut ((*_1).0: map::IntoIter<K, V, A>)
    SourceInfo(src/map.rs:2317:9-2317:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:2317:9-2317:26)
      kind: _2 = <map::IntoIter<K, V, A> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(src/map.rs:2317:25-2317:26)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:2317:31-2317:41)
  2: _4 = {closure@src/map.rs:2317:31: 2317:39}
    SourceInfo(src/map.rs:2317:31-2317:41)
  Terminator {
      source_info: SourceInfo(src/map.rs:2317:9-2317:42)
      kind: _0 = core::option::Option::<(K, V)>::map::<K, {closure@src/map.rs:2317:31: 2317:39}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/map.rs:2317:41-2317:42)
  1: StorageDead(_2)
    SourceInfo(src/map.rs:2317:41-2317:42)
  Terminator {
      source_info: SourceInfo(src/map.rs:2318:6-2318:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:2317:41-2317:42)
      kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/map.rs:2316:5-2318:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

