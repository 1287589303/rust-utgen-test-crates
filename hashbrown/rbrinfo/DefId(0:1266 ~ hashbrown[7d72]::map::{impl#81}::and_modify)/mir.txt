bb0
  0: PlaceMention(_1)
    SourceInfo(src/map.rs:4290:15-4290:19)
  1: _3 = discriminant(_1)
    SourceInfo(src/map.rs:4290:15-4290:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4290:9-4290:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/map.rs:4290:15-4290:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:4290:15-4290:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/map.rs:4291:13-4291:42)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_12)
    SourceInfo(src/map.rs:4295:30-4295:35)
  1: _12 = move ((_1 as Vacant).0: map::VacantEntryRef<'_, '_, K, Q, V, S, A>)
    SourceInfo(src/map.rs:4295:30-4295:35)
  2: StorageLive(_13)
    SourceInfo(src/map.rs:4295:57-4295:62)
  3: _13 = move _12
    SourceInfo(src/map.rs:4295:57-4295:62)
  4: _0 = map::EntryRef::<'_, '_, K, Q, V, S, A>::Vacant(move _13)
    SourceInfo(src/map.rs:4295:40-4295:63)
  5: StorageDead(_13)
    SourceInfo(src/map.rs:4295:62-4295:63)
  6: StorageDead(_12)
    SourceInfo(src/map.rs:4295:62-4295:63)
  Terminator {
      source_info: SourceInfo(src/map.rs:4295:62-4295:63)
      kind: goto -> bb7
  }
  preds [bb0, bb2]
  succs [bb7]

bb4
  0: StorageLive(_4)
    SourceInfo(src/map.rs:4291:32-4291:41)
  1: _4 = move ((_1 as Occupied).0: map::OccupiedEntry<'_, K, V, S, A>)
    SourceInfo(src/map.rs:4291:32-4291:41)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:4292:17-4292:35)
  3: StorageLive(_6)
    SourceInfo(src/map.rs:4292:17-4292:18)
  4: _6 = move _2
    SourceInfo(src/map.rs:4292:17-4292:18)
  5: StorageLive(_7)
    SourceInfo(src/map.rs:4292:17-4292:35)
  6: StorageLive(_8)
    SourceInfo(src/map.rs:4292:19-4292:34)
  7: StorageLive(_9)
    SourceInfo(src/map.rs:4292:19-4292:34)
  8: StorageLive(_10)
    SourceInfo(src/map.rs:4292:19-4292:24)
  9: _10 = &mut _4
    SourceInfo(src/map.rs:4292:19-4292:24)
  Terminator {
      source_info: SourceInfo(src/map.rs:4292:19-4292:34)
      kind: _9 = map::OccupiedEntry::<'_, K, V, S, A>::get_mut(move _10) -> [return: bb5, unwind: bb9]
  }
  preds [bb2]
  succs [bb5, bb9]

bb5
  0: _8 = &mut (*_9)
    SourceInfo(src/map.rs:4292:19-4292:34)
  1: StorageDead(_10)
    SourceInfo(src/map.rs:4292:33-4292:34)
  2: _7 = (move _8,)
    SourceInfo(src/map.rs:4292:17-4292:35)
  Terminator {
      source_info: SourceInfo(src/map.rs:4292:17-4292:35)
      kind: _5 = <F as core::ops::FnOnce<(&mut V,)>>::call_once(move _6, move _7) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_8)
    SourceInfo(src/map.rs:4292:34-4292:35)
  1: StorageDead(_7)
    SourceInfo(src/map.rs:4292:34-4292:35)
  2: StorageDead(_6)
    SourceInfo(src/map.rs:4292:34-4292:35)
  3: StorageDead(_9)
    SourceInfo(src/map.rs:4292:35-4292:36)
  4: StorageDead(_5)
    SourceInfo(src/map.rs:4292:35-4292:36)
  5: StorageLive(_11)
    SourceInfo(src/map.rs:4293:36-4293:41)
  6: _11 = move _4
    SourceInfo(src/map.rs:4293:36-4293:41)
  7: _0 = map::EntryRef::<'_, '_, K, Q, V, S, A>::Occupied(move _11)
    SourceInfo(src/map.rs:4293:17-4293:42)
  8: StorageDead(_11)
    SourceInfo(src/map.rs:4293:41-4293:42)
  9: StorageDead(_4)
    SourceInfo(src/map.rs:4294:13-4294:14)
  Terminator {
      source_info: SourceInfo(src/map.rs:4294:13-4294:14)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/map.rs:4297:5-4297:6)
      kind: drop(_2) -> [return: bb8, unwind: bb11]
  }
  preds [bb3, bb6]
  succs [bb8, bb11]

bb8
  Terminator {
      source_info: SourceInfo(src/map.rs:4297:6-4297:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/map.rs:4292:34-4292:35)
      kind: drop(_6) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb4, bb5]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/map.rs:4297:5-4297:6)
      kind: drop(_2) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/map.rs:4286:5-4297:6)
      kind: resume
  }
  preds [bb7, bb10]
  succs []

