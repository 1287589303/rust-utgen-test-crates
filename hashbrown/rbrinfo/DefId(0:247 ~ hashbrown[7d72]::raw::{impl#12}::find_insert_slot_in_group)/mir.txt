bb0
  0: StorageLive(_4)
    SourceInfo(src/raw/mod.rs:1603:13-1603:16)
  1: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:1603:19-1603:49)
  2: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:1603:19-1603:24)
  3: _6 = (*_2)
    SourceInfo(src/raw/mod.rs:1603:19-1603:24)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1603:19-1603:49)
      kind: _5 = control::group::sse2::Group::match_empty_or_deleted(move _6) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:1603:48-1603:49)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1603:19-1603:66)
      kind: _4 = control::bitmask::BitMask::lowest_set_bit(move _5) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:1603:65-1603:66)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(src/raw/mod.rs:1603:13-1603:16)
  2: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:1605:12-1605:33)
  3: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:1605:19-1605:32)
  4: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:1605:19-1605:22)
  5: _9 = &_4
    SourceInfo(src/raw/mod.rs:1605:19-1605:22)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1605:19-1605:32)
      kind: _8 = core::option::Option::<usize>::is_some(move _9) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:1605:31-1605:32)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1605:12-1605:33)
      kind: _7 = core::convert::identity::<bool>(move _8) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1605:12-1605:33)
      kind: switchInt(move _7) -> [0: bb8, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:1605:32-1605:33)
  1: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:1608:18-1608:67)
  2: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:1608:18-1608:48)
  3: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:1608:19-1608:32)
  4: _12 = ((*_3).0: usize)
    SourceInfo(src/raw/mod.rs:1608:19-1608:32)
  5: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:1608:35-1608:47)
  6: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:1608:35-1608:38)
  7: _14 = _4
    SourceInfo(src/raw/mod.rs:1608:35-1608:38)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1608:35-1608:47)
      kind: _13 = core::option::Option::<usize>::unwrap(move _14) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:1608:46-1608:47)
  1: _15 = AddWithOverflow(_12, _13)
    SourceInfo(src/raw/mod.rs:1608:18-1608:48)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1608:18-1608:48)
      kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _12, move _13) -> [success: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: _11 = move (_15.0: usize)
    SourceInfo(src/raw/mod.rs:1608:18-1608:48)
  1: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:1608:47-1608:48)
  2: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:1608:47-1608:48)
  3: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:1608:51-1608:67)
  4: _16 = ((*_1).0: usize)
    SourceInfo(src/raw/mod.rs:1608:51-1608:67)
  5: _10 = BitAnd(move _11, move _16)
    SourceInfo(src/raw/mod.rs:1608:18-1608:67)
  6: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:1608:66-1608:67)
  7: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:1608:66-1608:67)
  8: _0 = core::option::Option::<usize>::Some(move _10)
    SourceInfo(src/raw/mod.rs:1608:13-1608:68)
  9: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:1608:67-1608:68)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1605:9-1611:10)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:1605:32-1605:33)
  1: _0 = core::option::Option::<usize>::None
    SourceInfo(src/raw/mod.rs:1610:13-1610:17)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1605:9-1611:10)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb9
  0: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:1611:9-1611:10)
  1: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:1612:5-1612:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1612:6-1612:6)
      kind: return
  }
  preds [bb7, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:1602:5-1612:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6]
  succs []

