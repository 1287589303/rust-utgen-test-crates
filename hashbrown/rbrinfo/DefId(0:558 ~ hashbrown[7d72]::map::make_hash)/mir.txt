bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:246:9-246:18)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:246:21-246:33)
  2: _4 = &(*_1)
    SourceInfo(src/map.rs:246:21-246:33)
  Terminator {
      source_info: SourceInfo(src/map.rs:246:21-246:48)
      kind: _3 = <S as core::hash::BuildHasher>::build_hasher(move _4) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_4)
    SourceInfo(src/map.rs:246:47-246:48)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/map.rs:246:9-246:18)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:247:5-247:25)
  3: StorageLive(_6)
    SourceInfo(src/map.rs:247:5-247:8)
  4: _6 = &(*_2)
    SourceInfo(src/map.rs:247:5-247:8)
  5: StorageLive(_7)
    SourceInfo(src/map.rs:247:14-247:24)
  6: StorageLive(_8)
    SourceInfo(src/map.rs:247:14-247:24)
  7: _8 = &mut _3
    SourceInfo(src/map.rs:247:14-247:24)
  8: _7 = &mut (*_8)
    SourceInfo(src/map.rs:247:14-247:24)
  Terminator {
      source_info: SourceInfo(src/map.rs:247:5-247:25)
      kind: _5 = <Q as core::hash::Hash>::hash::<<S as core::hash::BuildHasher>::Hasher>(move _6, move _7) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_7)
    SourceInfo(src/map.rs:247:24-247:25)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:247:24-247:25)
  2: StorageDead(_8)
    SourceInfo(src/map.rs:247:25-247:26)
  3: StorageDead(_5)
    SourceInfo(src/map.rs:247:25-247:26)
  4: StorageLive(_9)
    SourceInfo(src/map.rs:248:5-248:10)
  5: _9 = &_3
    SourceInfo(src/map.rs:248:5-248:10)
  Terminator {
      source_info: SourceInfo(src/map.rs:248:5-248:19)
      kind: _0 = <<S as core::hash::BuildHasher>::Hasher as core::hash::Hasher>::finish(move _9) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(src/map.rs:248:18-248:19)
  Terminator {
      source_info: SourceInfo(src/map.rs:249:1-249:2)
      kind: drop(_3) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_3)
    SourceInfo(src/map.rs:249:1-249:2)
  Terminator {
      source_info: SourceInfo(src/map.rs:249:2-249:2)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/map.rs:249:1-249:2)
      kind: drop(_3) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/map.rs:240:1-249:2)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

