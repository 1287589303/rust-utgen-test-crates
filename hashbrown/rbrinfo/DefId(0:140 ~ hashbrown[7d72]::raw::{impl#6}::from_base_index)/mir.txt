bb0
  0: StorageLive(_3)
    SourceInfo(src/raw/mod.rs:284:13-284:16)
  1: StorageLive(_4)
    SourceInfo(src/raw/mod.rs:284:22-284:38)
  2: _4 = const <T as raw::SizedTypeProperties>::IS_ZERO_SIZED
    SourceInfo(src/raw/mod.rs:284:22-284:38)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:284:22-284:38)
      kind: switchInt(move _4) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:288:25-288:34)
  1: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:288:25-288:30)
  2: _6 = _2
    SourceInfo(src/raw/mod.rs:288:25-288:30)
  3: _7 = AddWithOverflow(_6, const 1_usize)
    SourceInfo(src/raw/mod.rs:288:25-288:34)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:288:25-288:34)
      kind: assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, const 1_usize) -> [success: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: _5 = move (_7.0: usize)
    SourceInfo(src/raw/mod.rs:288:25-288:34)
  1: StorageDead(_6)
    SourceInfo(src/raw/mod.rs:288:33-288:34)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:288:13-288:35)
      kind: _3 = util::invalid_mut::<T>(move _5) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: StorageDead(_5)
    SourceInfo(src/raw/mod.rs:288:34-288:35)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:284:19-291:10)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb4
  0: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:290:13-290:26)
  1: StorageLive(_9)
    SourceInfo(src/raw/mod.rs:290:13-290:17)
  2: _9 = _1
    SourceInfo(src/raw/mod.rs:290:13-290:17)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:290:13-290:26)
      kind: _8 = core::ptr::NonNull::<T>::as_ptr(move _9) -> [return: bb5, unwind: bb9]
  }
  preds [bb0]
  succs [bb5, bb9]

bb5
  0: StorageDead(_9)
    SourceInfo(src/raw/mod.rs:290:25-290:26)
  1: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:290:31-290:36)
  2: _10 = _2
    SourceInfo(src/raw/mod.rs:290:31-290:36)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:290:13-290:37)
      kind: _3 = core::ptr::mut_ptr::<impl *mut T>::sub(move _8, move _10) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:290:36-290:37)
  1: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:290:36-290:37)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:284:19-291:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:291:9-291:10)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/raw/mod.rs:284:13-284:16)
  2: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:293:18-293:45)
  3: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:293:41-293:44)
  4: _12 = _3
    SourceInfo(src/raw/mod.rs:293:41-293:44)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:293:18-293:45)
      kind: _11 = core::ptr::NonNull::<T>::new_unchecked(move _12) -> [return: bb8, unwind: bb9]
  }
  preds [bb3, bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:293:44-293:45)
  1: _0 = raw::Bucket::<T> { ptr: move _11 }
    SourceInfo(src/raw/mod.rs:292:9-294:10)
  2: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:294:9-294:10)
  3: StorageDead(_3)
    SourceInfo(src/raw/mod.rs:295:5-295:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:295:6-295:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:263:5-295:6)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb5, bb7]
  succs []

