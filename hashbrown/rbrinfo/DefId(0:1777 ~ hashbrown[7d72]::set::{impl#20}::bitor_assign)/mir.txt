bb0
  0: StorageLive(_3)
    SourceInfo(src/set.rs:1521:21-1521:24)
  1: StorageLive(_4)
    SourceInfo(src/set.rs:1521:21-1521:24)
  2: _4 = _2
    SourceInfo(src/set.rs:1521:21-1521:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:21-1521:24)
      kind: _3 = <&set::HashSet<T, S, A> as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_4)
    SourceInfo(src/set.rs:1521:23-1521:24)
  1: PlaceMention(_3)
    SourceInfo(src/set.rs:1521:21-1521:24)
  2: StorageLive(_5)
    SourceInfo(src/set.rs:1521:21-1521:24)
  3: _5 = move _3
    SourceInfo(src/set.rs:1521:21-1521:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:9-1525:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:9-1525:10)
      kind: falseUnwind -> [real: bb3, unwind: bb16]
  }
  preds [bb1, bb14]
  succs [bb3, bb16]

bb3
  0: StorageLive(_7)
    SourceInfo(src/set.rs:1521:21-1521:24)
  1: StorageLive(_8)
    SourceInfo(src/set.rs:1521:21-1521:24)
  2: StorageLive(_9)
    SourceInfo(src/set.rs:1521:21-1521:24)
  3: StorageLive(_10)
    SourceInfo(src/set.rs:1521:21-1521:24)
  4: _10 = &mut _5
    SourceInfo(src/set.rs:1521:21-1521:24)
  5: _9 = &mut (*_10)
    SourceInfo(src/set.rs:1521:21-1521:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:21-1521:24)
      kind: _8 = <set::Iter<'_, T> as core::iter::Iterator>::next(move _9) -> [return: bb4, unwind: bb16]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: StorageDead(_9)
    SourceInfo(src/set.rs:1521:23-1521:24)
  1: PlaceMention(_8)
    SourceInfo(src/set.rs:1521:21-1521:24)
  2: _11 = discriminant(_8)
    SourceInfo(src/set.rs:1521:21-1521:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:21-1521:24)
      kind: switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(src/set.rs:1521:21-1521:24)
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:21-1521:24)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:9-1525:10)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_13)
    SourceInfo(src/set.rs:1521:13-1521:17)
  1: _13 = ((_8 as Some).0: &T)
    SourceInfo(src/set.rs:1521:13-1521:17)
  2: StorageLive(_14)
    SourceInfo(src/set.rs:1522:17-1522:36)
  3: StorageLive(_15)
    SourceInfo(src/set.rs:1522:17-1522:21)
  4: _15 = &(*_1)
    SourceInfo(src/set.rs:1522:17-1522:21)
  5: StorageLive(_16)
    SourceInfo(src/set.rs:1522:31-1522:35)
  6: _16 = &(*_13)
    SourceInfo(src/set.rs:1522:31-1522:35)
  Terminator {
      source_info: SourceInfo(src/set.rs:1522:17-1522:36)
      kind: _14 = set::HashSet::<T, S, A>::contains::<T>(move _15, move _16) -> [return: bb9, unwind: bb16]
  }
  preds [bb4, bb6]
  succs [bb9, bb16]

bb8
  0: _0 = const ()
    SourceInfo(src/set.rs:1521:9-1525:10)
  1: StorageDead(_10)
    SourceInfo(src/set.rs:1525:9-1525:10)
  2: StorageDead(_8)
    SourceInfo(src/set.rs:1525:9-1525:10)
  3: StorageDead(_7)
    SourceInfo(src/set.rs:1525:9-1525:10)
  4: StorageDead(_5)
    SourceInfo(src/set.rs:1525:9-1525:10)
  5: StorageDead(_3)
    SourceInfo(src/set.rs:1525:9-1525:10)
  Terminator {
      source_info: SourceInfo(src/set.rs:1526:6-1526:6)
      kind: return
  }
  preds [bb6]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/set.rs:1522:17-1522:36)
      kind: switchInt(move _14) -> [0: bb11, otherwise: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageDead(_16)
    SourceInfo(src/set.rs:1522:35-1522:36)
  1: StorageDead(_15)
    SourceInfo(src/set.rs:1522:35-1522:36)
  2: _7 = const ()
    SourceInfo(src/set.rs:1524:14-1524:14)
  Terminator {
      source_info: SourceInfo(src/set.rs:1522:13-1524:14)
      kind: goto -> bb14
  }
  preds [bb9]
  succs [bb14]

bb11
  0: StorageDead(_16)
    SourceInfo(src/set.rs:1522:35-1522:36)
  1: StorageDead(_15)
    SourceInfo(src/set.rs:1522:35-1522:36)
  2: StorageLive(_17)
    SourceInfo(src/set.rs:1523:17-1523:42)
  3: StorageLive(_18)
    SourceInfo(src/set.rs:1523:17-1523:21)
  4: _18 = &mut (*_1)
    SourceInfo(src/set.rs:1523:17-1523:21)
  5: StorageLive(_19)
    SourceInfo(src/set.rs:1523:29-1523:41)
  6: StorageLive(_20)
    SourceInfo(src/set.rs:1523:29-1523:33)
  7: _20 = &(*_13)
    SourceInfo(src/set.rs:1523:29-1523:33)
  Terminator {
      source_info: SourceInfo(src/set.rs:1523:29-1523:41)
      kind: _19 = <T as core::clone::Clone>::clone(move _20) -> [return: bb12, unwind: bb16]
  }
  preds [bb9]
  succs [bb12, bb16]

bb12
  0: StorageDead(_20)
    SourceInfo(src/set.rs:1523:40-1523:41)
  Terminator {
      source_info: SourceInfo(src/set.rs:1523:17-1523:42)
      kind: _17 = set::HashSet::<T, S, A>::insert(move _18, move _19) -> [return: bb13, unwind: bb15]
  }
  preds [bb11]
  succs [bb13, bb15]

bb13
  0: StorageDead(_19)
    SourceInfo(src/set.rs:1523:41-1523:42)
  1: StorageDead(_18)
    SourceInfo(src/set.rs:1523:41-1523:42)
  2: StorageDead(_17)
    SourceInfo(src/set.rs:1523:42-1523:43)
  3: _7 = const ()
    SourceInfo(src/set.rs:1522:37-1524:14)
  Terminator {
      source_info: SourceInfo(src/set.rs:1522:13-1524:14)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  0: StorageDead(_14)
    SourceInfo(src/set.rs:1524:13-1524:14)
  1: StorageDead(_13)
    SourceInfo(src/set.rs:1525:9-1525:10)
  2: StorageDead(_10)
    SourceInfo(src/set.rs:1525:9-1525:10)
  3: StorageDead(_8)
    SourceInfo(src/set.rs:1525:9-1525:10)
  4: StorageDead(_7)
    SourceInfo(src/set.rs:1525:9-1525:10)
  5: _6 = const ()
    SourceInfo(src/set.rs:1521:9-1525:10)
  Terminator {
      source_info: SourceInfo(src/set.rs:1521:9-1525:10)
      kind: goto -> bb2
  }
  preds [bb10, bb13]
  succs [bb2]

bb15
  Terminator {
      source_info: SourceInfo(src/set.rs:1523:41-1523:42)
      kind: drop(_19) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/set.rs:1520:5-1526:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb7, bb11, bb15]
  succs []

