bb0
  0: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
  1: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  2: _4 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _4) -> [0: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:3065:23-3065:49)
  2: StorageLive(_7)
    SourceInfo(src/raw/mod.rs:3065:23-3065:27)
  3: _7 = &(*_1)
    SourceInfo(src/raw/mod.rs:3065:23-3065:27)
  4: StorageLive(_8)
    SourceInfo(src/raw/mod.rs:3065:43-3065:48)
  5: _8 = _2
    SourceInfo(src/raw/mod.rs:3065:43-3065:48)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3065:23-3065:49)
      kind: _6 = raw::RawTableInner::is_bucket_full(move _7, move _8) -> [return: bb2, unwind: bb23]
  }
  preds [bb0]
  succs [bb2, bb23]

bb2
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3065:23-3065:49)
      kind: switchInt(move _6) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:3065:48-3065:49)
  1: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:3065:48-3065:49)
  2: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  3: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  5: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_8)
    SourceInfo(src/raw/mod.rs:3065:48-3065:49)
  1: StorageDead(_7)
    SourceInfo(src/raw/mod.rs:3065:48-3065:49)
  2: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _9 = core::panicking::panic(const "assertion failed: self.is_bucket_full(index)") -> bb23
  }
  preds [bb2]
  succs [bb23]

bb5
  0: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb6
  }
  preds [bb0]
  succs [bb6]

bb6
  0: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  2: StorageLive(_10)
    SourceInfo(src/raw/mod.rs:3069:13-3069:25)
  3: StorageLive(_11)
    SourceInfo(src/raw/mod.rs:3069:28-3069:60)
  4: StorageLive(_12)
    SourceInfo(src/raw/mod.rs:3069:28-3069:33)
  5: _12 = _2
    SourceInfo(src/raw/mod.rs:3069:28-3069:33)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3069:28-3069:60)
      kind: _11 = core::num::<impl usize>::wrapping_sub(move _12, const control::group::sse2::Group::WIDTH) -> [return: bb7, unwind: bb23]
  }
  preds [bb3, bb5]
  succs [bb7, bb23]

bb7
  0: StorageDead(_12)
    SourceInfo(src/raw/mod.rs:3069:59-3069:60)
  1: StorageLive(_13)
    SourceInfo(src/raw/mod.rs:3069:63-3069:79)
  2: _13 = ((*_1).0: usize)
    SourceInfo(src/raw/mod.rs:3069:63-3069:79)
  3: _10 = BitAnd(move _11, move _13)
    SourceInfo(src/raw/mod.rs:3069:28-3069:79)
  4: StorageDead(_13)
    SourceInfo(src/raw/mod.rs:3069:78-3069:79)
  5: StorageDead(_11)
    SourceInfo(src/raw/mod.rs:3069:78-3069:79)
  6: FakeRead(ForLet(None), _10)
    SourceInfo(src/raw/mod.rs:3069:13-3069:25)
  7: StorageLive(_14)
    SourceInfo(src/raw/mod.rs:3073:13-3073:25)
  8: StorageLive(_15)
    SourceInfo(src/raw/mod.rs:3073:28-3073:64)
  9: StorageLive(_16)
    SourceInfo(src/raw/mod.rs:3073:40-3073:63)
  10: StorageLive(_17)
    SourceInfo(src/raw/mod.rs:3073:40-3073:63)
  11: StorageLive(_18)
    SourceInfo(src/raw/mod.rs:3073:40-3073:44)
  12: _18 = &(*_1)
    SourceInfo(src/raw/mod.rs:3073:40-3073:44)
  13: StorageLive(_19)
    SourceInfo(src/raw/mod.rs:3073:50-3073:62)
  14: _19 = _10
    SourceInfo(src/raw/mod.rs:3073:50-3073:62)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3073:40-3073:63)
      kind: _17 = raw::RawTableInner::ctrl(move _18, move _19) -> [return: bb8, unwind: bb23]
  }
  preds [bb6]
  succs [bb8, bb23]

bb8
  0: _16 = move _17 as *const control::tag::Tag (PointerCoercion(MutToConstPointer))
    SourceInfo(src/raw/mod.rs:3073:40-3073:63)
  1: StorageDead(_19)
    SourceInfo(src/raw/mod.rs:3073:62-3073:63)
  2: StorageDead(_18)
    SourceInfo(src/raw/mod.rs:3073:62-3073:63)
  3: StorageDead(_17)
    SourceInfo(src/raw/mod.rs:3073:62-3073:63)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3073:28-3073:64)
      kind: _15 = control::group::sse2::Group::load(move _16) -> [return: bb9, unwind: bb23]
  }
  preds [bb7]
  succs [bb9, bb23]

bb9
  0: StorageDead(_16)
    SourceInfo(src/raw/mod.rs:3073:63-3073:64)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3073:28-3073:78)
      kind: _14 = control::group::sse2::Group::match_empty(move _15) -> [return: bb10, unwind: bb23]
  }
  preds [bb8]
  succs [bb10, bb23]

bb10
  0: StorageDead(_15)
    SourceInfo(src/raw/mod.rs:3073:77-3073:78)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(src/raw/mod.rs:3073:13-3073:25)
  2: StorageLive(_20)
    SourceInfo(src/raw/mod.rs:3074:13-3074:24)
  3: StorageLive(_21)
    SourceInfo(src/raw/mod.rs:3074:27-3074:56)
  4: StorageLive(_22)
    SourceInfo(src/raw/mod.rs:3074:39-3074:55)
  5: StorageLive(_23)
    SourceInfo(src/raw/mod.rs:3074:39-3074:55)
  6: StorageLive(_24)
    SourceInfo(src/raw/mod.rs:3074:39-3074:43)
  7: _24 = &(*_1)
    SourceInfo(src/raw/mod.rs:3074:39-3074:43)
  8: StorageLive(_25)
    SourceInfo(src/raw/mod.rs:3074:49-3074:54)
  9: _25 = _2
    SourceInfo(src/raw/mod.rs:3074:49-3074:54)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3074:39-3074:55)
      kind: _23 = raw::RawTableInner::ctrl(move _24, move _25) -> [return: bb11, unwind: bb23]
  }
  preds [bb9]
  succs [bb11, bb23]

bb11
  0: _22 = move _23 as *const control::tag::Tag (PointerCoercion(MutToConstPointer))
    SourceInfo(src/raw/mod.rs:3074:39-3074:55)
  1: StorageDead(_25)
    SourceInfo(src/raw/mod.rs:3074:54-3074:55)
  2: StorageDead(_24)
    SourceInfo(src/raw/mod.rs:3074:54-3074:55)
  3: StorageDead(_23)
    SourceInfo(src/raw/mod.rs:3074:54-3074:55)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3074:27-3074:56)
      kind: _21 = control::group::sse2::Group::load(move _22) -> [return: bb12, unwind: bb23]
  }
  preds [bb10]
  succs [bb12, bb23]

bb12
  0: StorageDead(_22)
    SourceInfo(src/raw/mod.rs:3074:55-3074:56)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3074:27-3074:70)
      kind: _20 = control::group::sse2::Group::match_empty(move _21) -> [return: bb13, unwind: bb23]
  }
  preds [bb11]
  succs [bb13, bb23]

bb13
  0: StorageDead(_21)
    SourceInfo(src/raw/mod.rs:3074:69-3074:70)
  1: FakeRead(ForLet(None), _20)
    SourceInfo(src/raw/mod.rs:3074:13-3074:24)
  2: StorageLive(_26)
    SourceInfo(src/raw/mod.rs:3112:13-3112:17)
  3: StorageLive(_27)
    SourceInfo(src/raw/mod.rs:3112:23-3112:98)
  4: StorageLive(_28)
    SourceInfo(src/raw/mod.rs:3112:23-3112:82)
  5: StorageLive(_29)
    SourceInfo(src/raw/mod.rs:3112:23-3112:51)
  6: StorageLive(_30)
    SourceInfo(src/raw/mod.rs:3112:23-3112:35)
  7: _30 = _14
    SourceInfo(src/raw/mod.rs:3112:23-3112:35)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3112:23-3112:51)
      kind: _29 = control::bitmask::BitMask::leading_zeros(move _30) -> [return: bb14, unwind: bb23]
  }
  preds [bb12]
  succs [bb14, bb23]

bb14
  0: StorageDead(_30)
    SourceInfo(src/raw/mod.rs:3112:50-3112:51)
  1: StorageLive(_31)
    SourceInfo(src/raw/mod.rs:3112:54-3112:82)
  2: StorageLive(_32)
    SourceInfo(src/raw/mod.rs:3112:54-3112:65)
  3: _32 = _20
    SourceInfo(src/raw/mod.rs:3112:54-3112:65)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3112:54-3112:82)
      kind: _31 = control::bitmask::BitMask::trailing_zeros(move _32) -> [return: bb15, unwind: bb23]
  }
  preds [bb13]
  succs [bb15, bb23]

bb15
  0: StorageDead(_32)
    SourceInfo(src/raw/mod.rs:3112:81-3112:82)
  1: _33 = AddWithOverflow(_29, _31)
    SourceInfo(src/raw/mod.rs:3112:23-3112:82)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3112:23-3112:82)
      kind: assert(!move (_33.1: bool), "attempt to compute `{} + {}`, which would overflow", move _29, move _31) -> [success: bb16, unwind: bb23]
  }
  preds [bb14]
  succs [bb16, bb23]

bb16
  0: _28 = move (_33.0: usize)
    SourceInfo(src/raw/mod.rs:3112:23-3112:82)
  1: StorageDead(_31)
    SourceInfo(src/raw/mod.rs:3112:81-3112:82)
  2: StorageDead(_29)
    SourceInfo(src/raw/mod.rs:3112:81-3112:82)
  3: _27 = Ge(move _28, const control::group::sse2::Group::WIDTH)
    SourceInfo(src/raw/mod.rs:3112:23-3112:98)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3112:23-3112:98)
      kind: switchInt(move _27) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_28)
    SourceInfo(src/raw/mod.rs:3112:97-3112:98)
  1: _26 = const control::tag::Tag::DELETED
    SourceInfo(src/raw/mod.rs:3113:13-3113:25)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3112:20-3117:10)
      kind: goto -> bb20
  }
  preds [bb16]
  succs [bb20]

bb18
  0: StorageDead(_28)
    SourceInfo(src/raw/mod.rs:3112:97-3112:98)
  1: _34 = AddWithOverflow(((*_1).2: usize), const 1_usize)
    SourceInfo(src/raw/mod.rs:3115:13-3115:34)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3115:13-3115:34)
      kind: assert(!move (_34.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).2: usize), const 1_usize) -> [success: bb19, unwind: bb23]
  }
  preds [bb16]
  succs [bb19, bb23]

bb19
  0: ((*_1).2: usize) = move (_34.0: usize)
    SourceInfo(src/raw/mod.rs:3115:13-3115:34)
  1: _26 = const control::tag::Tag::EMPTY
    SourceInfo(src/raw/mod.rs:3116:13-3116:23)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3112:20-3117:10)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  0: StorageDead(_27)
    SourceInfo(src/raw/mod.rs:3117:9-3117:10)
  1: FakeRead(ForLet(None), _26)
    SourceInfo(src/raw/mod.rs:3112:13-3112:17)
  2: StorageLive(_35)
    SourceInfo(src/raw/mod.rs:3119:9-3119:35)
  3: StorageLive(_36)
    SourceInfo(src/raw/mod.rs:3119:9-3119:13)
  4: _36 = &mut (*_1)
    SourceInfo(src/raw/mod.rs:3119:9-3119:13)
  5: StorageLive(_37)
    SourceInfo(src/raw/mod.rs:3119:23-3119:28)
  6: _37 = _2
    SourceInfo(src/raw/mod.rs:3119:23-3119:28)
  7: StorageLive(_38)
    SourceInfo(src/raw/mod.rs:3119:30-3119:34)
  8: _38 = _26
    SourceInfo(src/raw/mod.rs:3119:30-3119:34)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3119:9-3119:35)
      kind: _35 = raw::RawTableInner::set_ctrl(move _36, move _37, move _38) -> [return: bb21, unwind: bb23]
  }
  preds [bb17, bb19]
  succs [bb21, bb23]

bb21
  0: StorageDead(_38)
    SourceInfo(src/raw/mod.rs:3119:34-3119:35)
  1: StorageDead(_37)
    SourceInfo(src/raw/mod.rs:3119:34-3119:35)
  2: StorageDead(_36)
    SourceInfo(src/raw/mod.rs:3119:34-3119:35)
  3: StorageDead(_35)
    SourceInfo(src/raw/mod.rs:3119:35-3119:36)
  4: _39 = SubWithOverflow(((*_1).3: usize), const 1_usize)
    SourceInfo(src/raw/mod.rs:3120:9-3120:24)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3120:9-3120:24)
      kind: assert(!move (_39.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_1).3: usize), const 1_usize) -> [success: bb22, unwind: bb23]
  }
  preds [bb20]
  succs [bb22, bb23]

bb22
  0: ((*_1).3: usize) = move (_39.0: usize)
    SourceInfo(src/raw/mod.rs:3120:9-3120:24)
  1: _0 = const ()
    SourceInfo(src/raw/mod.rs:3064:46-3121:6)
  2: StorageDead(_26)
    SourceInfo(src/raw/mod.rs:3121:5-3121:6)
  3: StorageDead(_20)
    SourceInfo(src/raw/mod.rs:3121:5-3121:6)
  4: StorageDead(_14)
    SourceInfo(src/raw/mod.rs:3121:5-3121:6)
  5: StorageDead(_10)
    SourceInfo(src/raw/mod.rs:3121:5-3121:6)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3121:6-3121:6)
      kind: return
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:3064:5-3121:6)
      kind: resume
  }
  preds [bb1, bb4, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb18, bb20, bb21]
  succs []

