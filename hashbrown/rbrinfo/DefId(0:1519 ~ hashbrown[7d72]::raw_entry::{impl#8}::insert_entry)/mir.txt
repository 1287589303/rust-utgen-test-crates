bb0
  0: StorageLive(_4)
    SourceInfo(src/raw_entry.rs:1435:13-1435:17)
  1: StorageLive(_5)
    SourceInfo(src/raw_entry.rs:1435:38-1435:55)
  2: _5 = &(*(_1.1: &S))
    SourceInfo(src/raw_entry.rs:1435:38-1435:55)
  3: StorageLive(_6)
    SourceInfo(src/raw_entry.rs:1435:57-1435:61)
  4: StorageLive(_7)
    SourceInfo(src/raw_entry.rs:1435:57-1435:61)
  5: _7 = &_2
    SourceInfo(src/raw_entry.rs:1435:57-1435:61)
  6: _6 = &(*_7)
    SourceInfo(src/raw_entry.rs:1435:57-1435:61)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1435:20-1435:62)
      kind: _4 = map::make_hash::<K, S>(move _5, move _6) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_6)
    SourceInfo(src/raw_entry.rs:1435:61-1435:62)
  1: StorageDead(_5)
    SourceInfo(src/raw_entry.rs:1435:61-1435:62)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/raw_entry.rs:1435:13-1435:17)
  3: StorageDead(_7)
    SourceInfo(src/raw_entry.rs:1435:62-1435:63)
  4: StorageLive(_8)
    SourceInfo(src/raw_entry.rs:1436:13-1436:17)
  5: StorageLive(_9)
    SourceInfo(src/raw_entry.rs:1436:20-1436:30)
  6: _9 = &mut (*(_1.0: &mut raw::RawTable<(K, V), A>))
    SourceInfo(src/raw_entry.rs:1436:20-1436:30)
  7: StorageLive(_10)
    SourceInfo(src/raw_entry.rs:1437:13-1437:17)
  8: _10 = _4
    SourceInfo(src/raw_entry.rs:1437:13-1437:17)
  9: StorageLive(_11)
    SourceInfo(src/raw_entry.rs:1438:13-1438:25)
  10: StorageLive(_12)
    SourceInfo(src/raw_entry.rs:1438:14-1438:17)
  11: _12 = move _2
    SourceInfo(src/raw_entry.rs:1438:14-1438:17)
  12: StorageLive(_13)
    SourceInfo(src/raw_entry.rs:1438:19-1438:24)
  13: _13 = move _3
    SourceInfo(src/raw_entry.rs:1438:19-1438:24)
  14: _11 = (move _12, move _13)
    SourceInfo(src/raw_entry.rs:1438:13-1438:25)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1438:24-1438:25)
      kind: drop(_13) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_13)
    SourceInfo(src/raw_entry.rs:1438:24-1438:25)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1438:24-1438:25)
      kind: drop(_12) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_12)
    SourceInfo(src/raw_entry.rs:1438:24-1438:25)
  1: StorageLive(_14)
    SourceInfo(src/raw_entry.rs:1439:13-1439:54)
  2: StorageLive(_15)
    SourceInfo(src/raw_entry.rs:1439:36-1439:53)
  3: _15 = &(*(_1.1: &S))
    SourceInfo(src/raw_entry.rs:1439:36-1439:53)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1439:13-1439:54)
      kind: _14 = map::make_hasher::<K, V, S>(move _15) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_15)
    SourceInfo(src/raw_entry.rs:1439:53-1439:54)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1436:20-1440:10)
      kind: _8 = raw::RawTable::<(K, V), A>::insert::<impl for<'a> Fn(&'a (K, V)) -> u64 + '_>(move _9, move _10, move _11, move _14) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_14)
    SourceInfo(src/raw_entry.rs:1440:9-1440:10)
  1: StorageDead(_11)
    SourceInfo(src/raw_entry.rs:1440:9-1440:10)
  2: StorageDead(_10)
    SourceInfo(src/raw_entry.rs:1440:9-1440:10)
  3: StorageDead(_9)
    SourceInfo(src/raw_entry.rs:1440:9-1440:10)
  4: FakeRead(ForLet(None), _8)
    SourceInfo(src/raw_entry.rs:1436:13-1436:17)
  5: StorageLive(_16)
    SourceInfo(src/raw_entry.rs:1442:13-1442:17)
  6: _16 = move _8
    SourceInfo(src/raw_entry.rs:1442:13-1442:17)
  7: StorageLive(_17)
    SourceInfo(src/raw_entry.rs:1443:20-1443:30)
  8: _17 = &mut (*(_1.0: &mut raw::RawTable<(K, V), A>))
    SourceInfo(src/raw_entry.rs:1443:20-1443:30)
  9: StorageLive(_18)
    SourceInfo(src/raw_entry.rs:1444:27-1444:44)
  10: _18 = &(*(_1.1: &S))
    SourceInfo(src/raw_entry.rs:1444:27-1444:44)
  11: _0 = raw_entry::RawOccupiedEntryMut::<'_, K, V, S, A> { elem: move _16, table: move _17, hash_builder: move _18 }
    SourceInfo(src/raw_entry.rs:1441:9-1445:10)
  12: StorageDead(_18)
    SourceInfo(src/raw_entry.rs:1445:9-1445:10)
  13: StorageDead(_17)
    SourceInfo(src/raw_entry.rs:1445:9-1445:10)
  14: StorageDead(_16)
    SourceInfo(src/raw_entry.rs:1445:9-1445:10)
  15: StorageDead(_8)
    SourceInfo(src/raw_entry.rs:1446:5-1446:6)
  16: StorageDead(_4)
    SourceInfo(src/raw_entry.rs:1446:5-1446:6)
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1446:5-1446:6)
      kind: drop(_3) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1446:5-1446:6)
      kind: drop(_2) -> [return: bb7, unwind: bb13]
  }
  preds [bb5]
  succs [bb7, bb13]

bb7
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1446:6-1446:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1440:9-1440:10)
      kind: drop(_14) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb10]

bb9
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1438:24-1438:25)
      kind: drop(_12) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1440:9-1440:10)
      kind: drop(_11) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb8, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1446:5-1446:6)
      kind: drop(_3) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb0, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1446:5-1446:6)
      kind: drop(_2) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb5, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/raw_entry.rs:1430:5-1446:6)
      kind: resume
  }
  preds [bb6, bb12]
  succs []

