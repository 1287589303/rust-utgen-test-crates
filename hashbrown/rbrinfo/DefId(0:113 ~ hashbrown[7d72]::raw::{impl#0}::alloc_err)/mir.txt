bb0
  0: PlaceMention(_1)
    SourceInfo(src/raw/mod.rs:44:15-44:19)
  1: _3 = discriminant(_1)
    SourceInfo(src/raw/mod.rs:44:15-44:19)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:44:9-44:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/raw/mod.rs:44:15-44:19)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:44:15-44:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:45:13-45:34)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_5)
    SourceInfo(src/raw/mod.rs:46:40-46:66)
  1: StorageLive(_6)
    SourceInfo(src/raw/mod.rs:46:59-46:65)
  2: _6 = _2
    SourceInfo(src/raw/mod.rs:46:59-46:65)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:46:40-46:66)
      kind: _5 = alloc::alloc::handle_alloc_error(move _6) -> bb5
  }
  preds [bb0, bb2]
  succs [bb5]

bb4
  0: StorageLive(_4)
    SourceInfo(src/raw/mod.rs:45:68-45:74)
  1: _4 = _2
    SourceInfo(src/raw/mod.rs:45:68-45:74)
  2: _0 = TryReserveError::AllocError { layout: move _4 }
    SourceInfo(src/raw/mod.rs:45:38-45:76)
  3: StorageDead(_4)
    SourceInfo(src/raw/mod.rs:45:75-45:76)
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:48:6-48:6)
      kind: return
  }
  preds [bb2]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/raw/mod.rs:43:5-48:6)
      kind: resume
  }
  preds [bb3]
  succs []

