{
  "name": "quote::spanned::{impl#1}::__span",
  "mod_info": {
    "name": "spanned",
    "loc": "src/lib.rs:125:1:125:17"
  },
  "visible": true,
  "loc": "src/spanned.rs:17:5:19:6",
  "fn_tests": [
    {
      "chain_id": 0,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [
            "use proc_macro2::Span;",
            "use proc_macro2::extra::DelimSpan;"
          ],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    use proc_macro2::extra::DelimSpan;",
                "    use proc_macro2::Span;",
                "",
                "    let span1 = Span::call_site();",
                "    let span2 = Span::from_span(1, 2);",
                "    let delim_span = DelimSpan::new(span1, span2);",
                "    ",
                "    assert_eq!(delim_span.__span(), Span::join(span1, span2));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    use proc_macro2::extra::DelimSpan;",
                "    use proc_macro2::Span;",
                "",
                "    let empty_span = Span::call_site();",
                "    let delim_span = DelimSpan::new(empty_span, empty_span);",
                "    ",
                "    assert_eq!(delim_span.__span(), empty_span);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}