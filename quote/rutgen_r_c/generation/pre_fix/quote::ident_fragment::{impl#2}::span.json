{
  "name": "quote::ident_fragment::{impl#2}::span",
  "mod_info": {
    "name": "ident_fragment",
    "loc": "src/lib.rs:111:1:111:20"
  },
  "visible": true,
  "loc": "src/ident_fragment.rs:46:5:48:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Some(self.span())\n"
      ],
      "input_infer": "",
      "answers": [
        {
          "uses": [
            "use proc_macro2::Span;",
            "use proc_macro2::Ident;"
          ],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    use proc_macro2::Ident;",
                "",
                "    let ident = Ident::new(\"test_ident\", Span::call_site());",
                "    assert!(ident.span().is_some());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "    use proc_macro2::{Ident, Span};",
                "",
                "    let ident = Ident::new(\"test_ident\", Span::call_site());",
                "    assert_eq!(ident.span(), Some(Span::call_site()));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}