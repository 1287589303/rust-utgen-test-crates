{
  "name": "quote::ident_fragment::{impl#3}::span",
  "mod_info": {
    "name": "ident_fragment",
    "loc": "src/lib.rs:111:1:111:20"
  },
  "visible": true,
  "loc": "src/ident_fragment.rs:64:5:66:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "   #[derive(Clone)] // Implement ToOwned requires Clone",
                "   struct TestIdentFragment;",
                "   ",
                "   impl IdentFragment for TestIdentFragment {",
                "       fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {",
                "           Ok(())",
                "       }",
                "       ",
                "       fn span(&self) -> Option<Span> {",
                "           Some(Span::call_site())",
                "       }",
                "   }",
                "   ",
                "   let cow: Cow<TestIdentFragment> = Cow::Owned(TestIdentFragment);",
                "}"
              ],
              "can_compile": true,
              "repaired": true
            },
            {
              "attrs": [],
              "prefix": [],
              "oracle": [],
              "code": [
                "{",
                "   #[derive(Clone)]  ",
                "   struct TestIdentFragmentNone;  ",
                " ",
                "   impl IdentFragment for TestIdentFragmentNone {  ",
                "       fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {  ",
                "           Ok(())  ",
                "       }  ",
                "   }  ",
                " ",
                "   let cow: Cow<TestIdentFragmentNone> = Cow::Owned(TestIdentFragmentNone);  ",
                "}"
              ],
              "can_compile": true,
              "repaired": true
            }
          ]
        }
      ]
    }
  ]
}