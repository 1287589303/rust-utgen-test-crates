bb0
  0: StorageLive(_2)
    SourceInfo(src/spanned.rs:29:9-29:17)
  1: StorageLive(_3)
    SourceInfo(src/spanned.rs:29:20-29:38)
  2: StorageLive(_4)
    SourceInfo(src/spanned.rs:29:20-29:26)
  3: _4 = move _1
    SourceInfo(src/spanned.rs:29:20-29:26)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:29:20-29:38)
      kind: _3 = <proc_macro2::TokenStream as std::iter::IntoIterator>::into_iter(move _4) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: StorageDead(_4)
    SourceInfo(src/spanned.rs:29:37-29:38)
  1: StorageLive(_5)
    SourceInfo(src/spanned.rs:29:43-29:57)
  2: _5 = {closure@src/spanned.rs:29:43: 29:47}
    SourceInfo(src/spanned.rs:29:43-29:57)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:29:20-29:58)
      kind: _2 = <proc_macro2::token_stream::IntoIter as std::iter::Iterator>::map::<proc_macro2::Span, {closure@src/spanned.rs:29:43: 29:47}>(move _3, move _5) -> [return: bb2, unwind: bb17]
  }
  preds [bb0]
  succs [bb2, bb17]

bb2
  0: StorageDead(_5)
    SourceInfo(src/spanned.rs:29:57-29:58)
  1: StorageDead(_3)
    SourceInfo(src/spanned.rs:29:57-29:58)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/spanned.rs:29:9-29:17)
  3: StorageLive(_6)
    SourceInfo(src/spanned.rs:31:9-31:14)
  4: StorageLive(_7)
    SourceInfo(src/spanned.rs:31:23-31:34)
  5: StorageLive(_8)
    SourceInfo(src/spanned.rs:31:23-31:27)
  6: _8 = &mut _2
    SourceInfo(src/spanned.rs:31:23-31:27)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:31:23-31:34)
      kind: _7 = <std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@src/spanned.rs:29:43: 29:47}> as std::iter::Iterator>::next(move _8) -> [return: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: StorageDead(_8)
    SourceInfo(src/spanned.rs:31:33-31:34)
  1: PlaceMention(_7)
    SourceInfo(src/spanned.rs:31:23-31:34)
  2: _9 = discriminant(_7)
    SourceInfo(src/spanned.rs:31:23-31:34)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:31:17-31:34)
      kind: switchInt(move _9) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _7)
    SourceInfo(src/spanned.rs:31:23-31:34)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:31:23-31:34)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/spanned.rs:32:9-32:19)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  Terminator {
      source_info: SourceInfo(src/spanned.rs:33:24-33:41)
      kind: _0 = proc_macro2::Span::call_site() -> [return: bb12, unwind: bb16]
  }
  preds [bb3, bb5]
  succs [bb12, bb16]

bb7
  0: StorageLive(_10)
    SourceInfo(src/spanned.rs:32:14-32:18)
  1: _10 = ((_7 as Some).0: proc_macro2::Span)
    SourceInfo(src/spanned.rs:32:14-32:18)
  2: _6 = _10
    SourceInfo(src/spanned.rs:32:23-32:27)
  3: StorageDead(_10)
    SourceInfo(src/spanned.rs:32:26-32:27)
  4: FakeRead(ForLet(None), _6)
    SourceInfo(src/spanned.rs:31:9-31:14)
  5: StorageDead(_7)
    SourceInfo(src/spanned.rs:34:6-34:7)
  6: StorageLive(_12)
    SourceInfo(src/spanned.rs:36:5-37:43)
  7: StorageLive(_13)
    SourceInfo(src/spanned.rs:36:5-36:46)
  8: StorageLive(_14)
    SourceInfo(src/spanned.rs:36:5-36:9)
  9: _14 = move _2
    SourceInfo(src/spanned.rs:36:5-36:9)
  10: StorageLive(_15)
    SourceInfo(src/spanned.rs:36:15-36:19)
  11: _15 = std::option::Option::<proc_macro2::Span>::None
    SourceInfo(src/spanned.rs:36:15-36:19)
  12: StorageLive(_16)
    SourceInfo(src/spanned.rs:36:21-36:45)
  13: _16 = {closure@src/spanned.rs:36:21: 36:34}
    SourceInfo(src/spanned.rs:36:21-36:45)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:36:5-36:46)
      kind: _13 = <std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@src/spanned.rs:29:43: 29:47}> as std::iter::Iterator>::fold::<std::option::Option<proc_macro2::Span>, {closure@src/spanned.rs:36:21: 36:34}>(move _14, move _15, move _16) -> [return: bb8, unwind: bb15]
  }
  preds [bb5]
  succs [bb8, bb15]

bb8
  0: StorageDead(_16)
    SourceInfo(src/spanned.rs:36:45-36:46)
  1: StorageDead(_15)
    SourceInfo(src/spanned.rs:36:45-36:46)
  2: StorageDead(_14)
    SourceInfo(src/spanned.rs:36:45-36:46)
  3: StorageLive(_17)
    SourceInfo(src/spanned.rs:37:19-37:42)
  4: StorageLive(_18)
    SourceInfo(src/spanned.rs:37:19-37:42)
  5: _18 = &_6
    SourceInfo(src/spanned.rs:37:19-37:42)
  6: _17 = {closure@src/spanned.rs:37:19: 37:25} { first: move _18 }
    SourceInfo(src/spanned.rs:37:19-37:42)
  7: StorageDead(_18)
    SourceInfo(src/spanned.rs:37:24-37:25)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:36:5-37:43)
      kind: _12 = std::option::Option::<proc_macro2::Span>::and_then::<proc_macro2::Span, {closure@src/spanned.rs:37:19: 37:25}>(move _13, move _17) -> [return: bb9, unwind: bb16]
  }
  preds [bb7]
  succs [bb9, bb16]

bb9
  0: StorageDead(_17)
    SourceInfo(src/spanned.rs:37:42-37:43)
  1: StorageDead(_13)
    SourceInfo(src/spanned.rs:37:42-37:43)
  2: StorageLive(_19)
    SourceInfo(src/spanned.rs:38:20-38:25)
  3: _19 = _6
    SourceInfo(src/spanned.rs:38:20-38:25)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:36:5-38:26)
      kind: _0 = std::option::Option::<proc_macro2::Span>::unwrap_or(move _12, move _19) -> [return: bb10, unwind: bb16]
  }
  preds [bb8]
  succs [bb10, bb16]

bb10
  0: StorageDead(_19)
    SourceInfo(src/spanned.rs:38:25-38:26)
  1: StorageDead(_12)
    SourceInfo(src/spanned.rs:38:25-38:26)
  2: StorageDead(_6)
    SourceInfo(src/spanned.rs:39:1-39:2)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:39:1-39:2)
      kind: drop(_2) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_2)
    SourceInfo(src/spanned.rs:39:1-39:2)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:39:1-39:2)
      kind: drop(_1) -> [return: bb14, unwind: bb20]
  }
  preds [bb10]
  succs [bb14, bb20]

bb12
  0: StorageDead(_7)
    SourceInfo(src/spanned.rs:34:6-34:7)
  1: StorageDead(_6)
    SourceInfo(src/spanned.rs:39:1-39:2)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:39:1-39:2)
      kind: drop(_2) -> [return: bb13, unwind: bb19]
  }
  preds [bb6]
  succs [bb13, bb19]

bb13
  0: StorageDead(_2)
    SourceInfo(src/spanned.rs:39:1-39:2)
  Terminator {
      source_info: SourceInfo(src/spanned.rs:39:1-39:2)
      kind: drop(_1) -> [return: bb14, unwind: bb20]
  }
  preds [bb12]
  succs [bb14, bb20]

bb14
  Terminator {
      source_info: SourceInfo(src/spanned.rs:39:2-39:2)
      kind: return
  }
  preds [bb11, bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(src/spanned.rs:36:45-36:46)
      kind: drop(_14) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/spanned.rs:39:1-39:2)
      kind: drop(_2) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb2, bb6, bb8, bb9, bb15]
  succs [bb19]

bb17
  Terminator {
      source_info: SourceInfo(src/spanned.rs:29:57-29:58)
      kind: drop(_3) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb19]

bb18
  Terminator {
      source_info: SourceInfo(src/spanned.rs:29:37-29:38)
      kind: drop(_4) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/spanned.rs:39:1-39:2)
      kind: drop(_1) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb10, bb12, bb16, bb17, bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(src/spanned.rs:28:1-39:2)
      kind: resume
  }
  preds [bb11, bb13, bb19]
  succs []

