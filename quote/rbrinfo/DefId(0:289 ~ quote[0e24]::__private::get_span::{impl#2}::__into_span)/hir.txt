Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).1),
            pat: Pat {
                hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).2),
                    self#0,
                    None,
                ),
                span: src/runtime.rs:225:28: 225:33 (#0),
                default_binding_modes: true,
            },
            ty_span: src/runtime.rs:225:28: 225:33 (#0),
            span: src/runtime.rs:225:28: 225:33 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).10),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).3),
                        kind: Call(
                            Expr {
                                hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).4),
                                kind: Path(
                                    Resolved(
                                        None,
                                        Path {
                                            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:9: 119:33 (#12),
                                            res: Def(
                                                Fn,
                                                DefId(2:9581 ~ core[a245]::panicking::panic),
                                            ),
                                            segments: [
                                                PathSegment {
                                                    ident: $crate#12,
                                                    hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).5),
                                                    res: Err,
                                                    args: None,
                                                    infer_args: true,
                                                },
                                                PathSegment {
                                                    ident: panicking#12,
                                                    hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).6),
                                                    res: Def(
                                                        Mod,
                                                        DefId(2:9568 ~ core[a245]::panicking),
                                                    ),
                                                    args: None,
                                                    infer_args: true,
                                                },
                                                PathSegment {
                                                    ident: panic#12,
                                                    hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).7),
                                                    res: Def(
                                                        Fn,
                                                        DefId(2:9581 ~ core[a245]::panicking::panic),
                                                    ),
                                                    args: None,
                                                    infer_args: true,
                                                },
                                            ],
                                        },
                                    ),
                                ),
                                span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:9: 119:33 (#12),
                            },
                            [
                                Expr {
                                    hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).8),
                                    kind: Lit(
                                        Spanned {
                                            node: Str(
                                                "internal error: entered unreachable code",
                                                Cooked,
                                            ),
                                            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:34: 119:76 (#12),
                                        },
                                    ),
                                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:34: 119:76 (#12),
                                },
                            ],
                        ),
                        span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:119:9: 119:77 (#12),
                    },
                ),
                hir_id: HirId(DefId(0:289 ~ quote[0e24]::__private::get_span::{impl#2}::__into_span).9),
                rules: DefaultBlock,
                span: src/runtime.rs:225:40: 227:10 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/runtime.rs:225:40: 227:10 (#0),
    },
}