bb0
  0: StorageLive(_3)
    SourceInfo(src/to_tokens.rs:265:9-265:48)
  1: StorageLive(_4)
    SourceInfo(src/to_tokens.rs:265:9-265:15)
  2: _4 = &mut (*_2)
    SourceInfo(src/to_tokens.rs:265:9-265:15)
  3: StorageLive(_5)
    SourceInfo(src/to_tokens.rs:265:23-265:47)
  4: StorageLive(_6)
    SourceInfo(src/to_tokens.rs:265:34-265:46)
  5: StorageLive(_7)
    SourceInfo(src/to_tokens.rs:265:34-265:38)
  6: _7 = &(*_1)
    SourceInfo(src/to_tokens.rs:265:34-265:38)
  Terminator {
      source_info: SourceInfo(src/to_tokens.rs:265:34-265:46)
      kind: _6 = <proc_macro2::TokenStream as std::clone::Clone>::clone(move _7) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_7)
    SourceInfo(src/to_tokens.rs:265:45-265:46)
  Terminator {
      source_info: SourceInfo(src/to_tokens.rs:265:23-265:47)
      kind: _5 = std::iter::once::<proc_macro2::TokenStream>(move _6) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_6)
    SourceInfo(src/to_tokens.rs:265:46-265:47)
  Terminator {
      source_info: SourceInfo(src/to_tokens.rs:265:9-265:48)
      kind: _3 = <proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend::<std::iter::Once<proc_macro2::TokenStream>>(move _4, move _5) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_5)
    SourceInfo(src/to_tokens.rs:265:47-265:48)
  1: StorageDead(_4)
    SourceInfo(src/to_tokens.rs:265:47-265:48)
  2: StorageDead(_3)
    SourceInfo(src/to_tokens.rs:265:48-265:49)
  3: _0 = const ()
    SourceInfo(src/to_tokens.rs:264:51-266:6)
  Terminator {
      source_info: SourceInfo(src/to_tokens.rs:266:6-266:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/to_tokens.rs:265:47-265:48)
      kind: drop(_5) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb6]

bb5
  Terminator {
      source_info: SourceInfo(src/to_tokens.rs:265:46-265:47)
      kind: drop(_6) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/to_tokens.rs:264:5-266:6)
      kind: resume
  }
  preds [bb0, bb4, bb5]
  succs []

