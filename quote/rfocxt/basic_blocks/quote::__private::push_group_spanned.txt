[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            _6 = _3,
            StorageLive(_7),
            _7 = move _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:261:17: 261:45 (#0),
                    scope: scope[0],
                },
                kind: _5 = proc_macro2::Group::new(move _6, move _7) -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &mut _5,
            StorageLive(_10),
            _10 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:262:5: 262:21 (#0),
                    scope: scope[1],
                },
                kind: _8 = proc_macro2::Group::set_span(move _9, move _10) -> [return: bb2, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_8),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut (*_1),
            StorageLive(_13),
            _13 = move _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:263:5: 263:21 (#0),
                    scope: scope[1],
                },
                kind: _11 = <proc_macro2::TokenStream as ext::TokenStreamExt>::append::<proc_macro2::Group>(move _12, move _13) -> [return: bb3, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            StorageDead(_11),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:264:1: 264:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:264:1: 264:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb5, unwind: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:264:2: 264:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:263:20: 263:21 (#0),
                    scope: scope[1],
                },
                kind: drop(_13) -> [return: bb7, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:264:1: 264:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:261:44: 261:45 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:264:1: 264:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb10, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:255:1: 264:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:260:2: 260:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/runtime.rs:256:13: 256:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/runtime.rs:256:5: 256:11 (#0),
                            ),
                        ),
                        pat_span: src/runtime.rs:256:5: 256:11 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:256:5: 256:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/runtime.rs:257:11: 257:15 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/runtime.rs:257:5: 257:9 (#0),
                            ),
                        ),
                        pat_span: src/runtime.rs:257:5: 257:9 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:257:5: 257:9 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/runtime.rs:258:16: 258:25 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/runtime.rs:258:5: 258:14 (#0),
                            ),
                        ),
                        pat_span: src/runtime.rs:258:5: 258:14 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro2::Delimiter,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:258:5: 258:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/runtime.rs:259:12: 259:23 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/runtime.rs:259:5: 259:10 (#0),
                            ),
                        ),
                        pat_span: src/runtime.rs:259:5: 259:10 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:259:5: 259:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/runtime.rs:261:17: 261:45 (#0),
                            ),
                        ),
                        pat_span: src/runtime.rs:261:9: 261:14 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro2::Group,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:261:9: 261:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Delimiter,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:261:28: 261:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:261:39: 261:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:262:5: 262:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut proc_macro2::Group,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:262:5: 262:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:262:16: 262:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:263:5: 263:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:263:5: 263:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Group,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:263:19: 263:20 (#0),
            scope: scope[0],
        },
    },
]