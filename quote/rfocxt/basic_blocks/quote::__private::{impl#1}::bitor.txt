[
    BasicBlockData {
        statements: [
            _0 = __private::HasIterator,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:36:6: 36:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: __private::HasIterator,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:34:60: 34:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::HasIterator,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:34:14: 34:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/runtime.rs:34:26: 34:55 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/runtime.rs:34:20: 34:24 (#0),
                            ),
                        ),
                        pat_span: src/runtime.rs:34:20: 34:24 (#0),
                    },
                ),
            ),
        ),
        ty: __private::ThereIsNoIteratorInRepetition,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:34:20: 34:24 (#0),
            scope: scope[0],
        },
    },
]