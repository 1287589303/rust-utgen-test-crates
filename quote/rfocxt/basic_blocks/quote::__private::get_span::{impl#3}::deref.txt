[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &((*_1).0: __private::get_span::GetSpanInner<T>),
            _0 = &(*_2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/runtime.rs:236:10: 236:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} __private::get_span::GetSpanInner<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:234:28: 234:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} __private::get_span::GetSpan<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:234:18: 234:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/runtime.rs:235:13: 235:20 (#0),
                },
            ),
        ),
        ty: &'{erased} __private::get_span::GetSpanInner<T/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/runtime.rs:235:13: 235:20 (#0),
            scope: scope[0],
        },
    },
]