CrateContext {
    crate_name: "quote",
    crate_path: "/home/abezbm/rust-utgen-test-crates/quote",
    entry_file_paths: [
        "/home/abezbm/rust-utgen-test-crates/quote/src/lib.rs",
    ],
    main_mod_contexts: [
        RefCell {
            value: ModContext {
             mod_info: Mod(
                ModModInfo {
                    mod_name: "quote",
                    mod_tree: MyPath {
                        name: "quote",
                        next: None,
                    },
                    file_path: "/home/abezbm/rust-utgen-test-crates/quote/src/lib.rs",
                    parent_directory_path: "/home/abezbm/rust-utgen-test-crates/quote/src",
                    mod_file_directory_path: None,
                    visibility: PubT,
                },
            ),
             syntax_context: SyntaxContext {
                consts: [],
                trait_aliases: [],
                uses: [
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(4112..4117),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: ext,
                                                    span: bytes(4119..4122),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: TokenStreamExt,
                                                            span: bytes(4124..4138),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: PubT,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(4148..4153),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: ident_fragment,
                                                    span: bytes(4155..4169),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: IdentFragment,
                                                            span: bytes(4171..4184),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: PubT,
                    },
                    UseItem {
                        item: Some(
                            ItemUse {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                use_token: Use,
                                leading_colon: None,
                                tree: UseTree::Path(
                                    UsePath {
                                        ident: Ident {
                                            sym: crate,
                                            span: bytes(4194..4199),
                                        },
                                        colon2_token: PathSep,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: to_tokens,
                                                    span: bytes(4201..4210),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: ToTokens,
                                                            span: bytes(4212..4220),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                semi_token: Semi,
                            },
                        ),
                        visibility: PubT,
                    },
                ],
                mods: [
                    ModItem {
                        mod_name: "ext",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: ext,
                                    span: bytes(3974..3977),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    ModItem {
                        mod_name: "format",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: format,
                                    span: bytes(3983..3989),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    ModItem {
                        mod_name: "ident_fragment",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: ident_fragment,
                                    span: bytes(3995..4009),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    ModItem {
                        mod_name: "to_tokens",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Inherited,
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: to_tokens,
                                    span: bytes(4015..4024),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: Pri,
                    },
                    ModItem {
                        mod_name: "__private",
                        file_name: Some(
                            "runtime.rs",
                        ),
                        item: Some(
                            ItemMod {
                                attrs: [
                                    Attribute {
                                        pound_token: Pound,
                                        style: AttrStyle::Outer,
                                        bracket_token: Bracket,
                                        meta: Meta::NameValue {
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: path,
                                                            span: bytes(4063..4067),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                            eq_token: Eq,
                                            value: Expr::Lit {
                                                attrs: [],
                                                lit: Lit::Str {
                                                    token: "runtime.rs",
                                                },
                                            },
                                        },
                                    },
                                ],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: __private,
                                    span: bytes(4092..4101),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                    ModItem {
                        mod_name: "spanned",
                        file_name: None,
                        item: Some(
                            ItemMod {
                                attrs: [],
                                vis: Visibility::Public(
                                    Pub,
                                ),
                                unsafety: None,
                                mod_token: Mod,
                                ident: Ident {
                                    sym: spanned,
                                    span: bytes(4265..4272),
                                },
                                content: None,
                                semi: Some(
                                    Semi,
                                ),
                            },
                        ),
                        inside_items: [],
                        visibility: PubT,
                    },
                ],
                statics: [],
                types: [],
                structs: [],
                enums: [],
                unions: [],
                impls: [],
                functions: [],
                traits: [],
                use_trees: [
                    UseTree {
                        use_name: "TokenStreamExt",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "quote",
                            next: Some(
                                MyPath {
                                    name: "ext",
                                    next: Some(
                                        MyPath {
                                            name: "TokenStreamExt",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                    UseTree {
                        use_name: "IdentFragment",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "quote",
                            next: Some(
                                MyPath {
                                    name: "ident_fragment",
                                    next: Some(
                                        MyPath {
                                            name: "IdentFragment",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                    UseTree {
                        use_name: "ToTokens",
                        alias_name: None,
                        use_tree: MyPath {
                            name: "quote",
                            next: Some(
                                MyPath {
                                    name: "to_tokens",
                                    next: Some(
                                        MyPath {
                                            name: "ToTokens",
                                            next: None,
                                        },
                                    ),
                                },
                            ),
                        },
                        visibility: PubT,
                    },
                ],
            },
             sub_mods: [
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "ext",
                            mod_tree: MyPath {
                                name: "quote",
                                next: Some(
                                    MyPath {
                                        name: "ext",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/quote/src/ext.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/quote/src",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(48600..48605),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: ToTokens,
                                                            span: bytes(48607..48615),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(48621..48625),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: iter,
                                                            span: bytes(48627..48631),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(48637..48648),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TokenStream,
                                                                        span: bytes(48651..48662),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TokenTree,
                                                                        span: bytes(48664..48673),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [
                            ModItem {
                                mod_name: "private",
                                file_name: None,
                                item: Some(
                                    ItemMod {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        unsafety: None,
                                        mod_token: Mod,
                                        ident: Ident {
                                            sym: private,
                                            span: bytes(51228..51235),
                                        },
                                        content: Some(
                                            (
                                                Brace,
                                                [],
                                            ),
                                        ),
                                        semi: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(51246..51257),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: TokenStream,
                                                            span: bytes(51259..51270),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Trait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: Sealed,
                                            span: bytes(51287..51293),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        supertraits: [],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Sealed,
                                                                span: bytes(51307..51313),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: TokenStream,
                                                            span: bytes(51318..51329),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ],
                                visibility: Pri,
                            },
                        ],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "TokenStream",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "TokenStream",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "TokenStreamExt",
                                        complete_name: "quote::ext::TokenStreamExt",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "TokenStreamExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: TokenStreamExt,
                                                                span: bytes(50273..50287),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: TokenStream,
                                                            span: bytes(50292..50303),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "append",
                                            complete_name: "<proc_macro2::TokenStream as quote::ext::TokenStreamExt>::append",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStream as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ext",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "TokenStreamExt>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "append",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::append",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append,
                                                        span: bytes(50313..50319),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: U,
                                                                        span: bytes(50320..50321),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: U,
                                                                                                span: bytes(50362..50363),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Into,
                                                                                                        span: bytes(50365..50369),
                                                                                                    },
                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                        colon2_token: None,
                                                                                                        lt_token: Lt,
                                                                                                        args: [
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: TokenTree,
                                                                                                                                    span: bytes(50370..50379),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        gt_token: Gt,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(50328..50332),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: token,
                                                                        span: bytes(50334..50339),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: U,
                                                                                    span: bytes(50341..50342),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(50396..50400),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: extend,
                                                                    span: bytes(50401..50407),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: iter,
                                                                                            span: bytes(50408..50412),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: once,
                                                                                            span: bytes(50414..50418),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: token,
                                                                                                    span: bytes(50419..50424),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: into,
                                                                                    span: bytes(50425..50429),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "append_all",
                                            complete_name: "<proc_macro2::TokenStream as quote::ext::TokenStreamExt>::append_all",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStream as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ext",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "TokenStreamExt>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "append_all",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::append_all",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append_all,
                                                        span: bytes(50449..50459),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: I,
                                                                        span: bytes(50460..50461),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(50501..50502),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: IntoIterator,
                                                                                                        span: bytes(50504..50516),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(50526..50527),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(50529..50533),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(50535..50543),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(50468..50472),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(50474..50478),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: I,
                                                                                    span: bytes(50480..50481),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: token,
                                                                        span: bytes(50563..50568),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                in_token: In,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(50572..50576),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: token,
                                                                                                    span: bytes(50591..50596),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_tokens,
                                                                                    span: bytes(50597..50606),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(50607..50611),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "append_separated",
                                            complete_name: "<proc_macro2::TokenStream as quote::ext::TokenStreamExt>::append_separated",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStream as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ext",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "TokenStreamExt>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "append_separated",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::append_separated",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append_separated,
                                                        span: bytes(50638..50654),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: I,
                                                                        span: bytes(50655..50656),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                            Comma,
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: U,
                                                                        span: bytes(50658..50659),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(50706..50707),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: IntoIterator,
                                                                                                        span: bytes(50709..50721),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(50731..50732),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(50734..50738),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(50740..50748),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: U,
                                                                                                span: bytes(50758..50759),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(50761..50769),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(50666..50670),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(50672..50676),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: I,
                                                                                    span: bytes(50678..50679),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: op,
                                                                        span: bytes(50681..50683),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: U,
                                                                                    span: bytes(50685..50686),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: i,
                                                                                span: bytes(50790..50791),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: token,
                                                                                span: bytes(50793..50798),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                in_token: In,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: iter,
                                                                                            span: bytes(50803..50807),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: into_iter,
                                                                            span: bytes(50808..50817),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: enumerate,
                                                                        span: bytes(50820..50829),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::If {
                                                                                attrs: [],
                                                                                if_token: If,
                                                                                cond: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: i,
                                                                                                        span: bytes(50849..50850),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Gt(
                                                                                        Gt,
                                                                                    ),
                                                                                    right: Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Int {
                                                                                            token: 0,
                                                                                        },
                                                                                    },
                                                                                },
                                                                                then_branch: Block {
                                                                                    brace_token: Brace,
                                                                                    stmts: [
                                                                                        Stmt::Expr(
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: op,
                                                                                                                    span: bytes(50873..50875),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: to_tokens,
                                                                                                    span: bytes(50876..50885),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: self,
                                                                                                                        span: bytes(50886..50890),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            Some(
                                                                                                Semi,
                                                                                            ),
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                                else_branch: None,
                                                                            },
                                                                            None,
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: token,
                                                                                                    span: bytes(50919..50924),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_tokens,
                                                                                    span: bytes(50925..50934),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(50935..50939),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "append_terminated",
                                            complete_name: "<proc_macro2::TokenStream as quote::ext::TokenStreamExt>::append_terminated",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStream as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ext",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "TokenStreamExt>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "append_terminated",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::append_terminated",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append_terminated,
                                                        span: bytes(50966..50983),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: I,
                                                                        span: bytes(50984..50985),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                            Comma,
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: U,
                                                                        span: bytes(50987..50988),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(51037..51038),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: IntoIterator,
                                                                                                        span: bytes(51040..51052),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(51062..51063),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(51065..51069),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(51071..51079),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: U,
                                                                                                span: bytes(51089..51090),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(51092..51100),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(50995..50999),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(51001..51005),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: I,
                                                                                    span: bytes(51007..51008),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: term,
                                                                        span: bytes(51010..51014),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: U,
                                                                                    span: bytes(51016..51017),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::ForLoop {
                                                                attrs: [],
                                                                label: None,
                                                                for_token: For,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: token,
                                                                        span: bytes(51120..51125),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                in_token: In,
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(51129..51133),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                body: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: token,
                                                                                                    span: bytes(51148..51153),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_tokens,
                                                                                    span: bytes(51154..51163),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(51164..51168),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: term,
                                                                                                    span: bytes(51183..51187),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_tokens,
                                                                                    span: bytes(51188..51197),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(51198..51202),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                        ],
                        functions: [],
                        traits: [
                            TraitItem {
                                trait_name: Name {
                                    name: "TokenStreamExt",
                                    complete_name: "quote::ext::TokenStreamExt",
                                    import_name: MyPath {
                                        name: "quote",
                                        next: Some(
                                            MyPath {
                                                name: "ext",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStreamExt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: TokenStreamExt,
                                            span: bytes(48839..48853),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        supertraits: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: private,
                                                                    span: bytes(48855..48862),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Sealed,
                                                                    span: bytes(48864..48870),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "append",
                                            complete_name: "<  as quote::ext::TokenStreamExt>::append",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "TokenStreamExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "append",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "TokenStreamExt::append",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append,
                                                        span: bytes(48995..49001),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: U,
                                                                        span: bytes(49002..49003),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: U,
                                                                                                span: bytes(49044..49045),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Into,
                                                                                                        span: bytes(49047..49051),
                                                                                                    },
                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                        colon2_token: None,
                                                                                                        lt_token: Lt,
                                                                                                        args: [
                                                                                                            GenericArgument::Type(
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: TokenTree,
                                                                                                                                    span: bytes(49052..49061),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        gt_token: Gt,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(49010..49014),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: token,
                                                                        span: bytes(49016..49021),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: U,
                                                                                    span: bytes(49023..49024),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "append_all",
                                            complete_name: "<  as quote::ext::TokenStreamExt>::append_all",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "TokenStreamExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "append_all",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "TokenStreamExt::append_all",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append_all,
                                                        span: bytes(49543..49553),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: I,
                                                                        span: bytes(49554..49555),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(49595..49596),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: IntoIterator,
                                                                                                        span: bytes(49598..49610),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(49620..49621),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(49623..49627),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(49629..49637),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(49562..49566),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(49568..49572),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: I,
                                                                                    span: bytes(49574..49575),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "append_separated",
                                            complete_name: "<  as quote::ext::TokenStreamExt>::append_separated",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "TokenStreamExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "append_separated",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "TokenStreamExt::append_separated",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append_separated,
                                                        span: bytes(49793..49809),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: I,
                                                                        span: bytes(49810..49811),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                            Comma,
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: U,
                                                                        span: bytes(49813..49814),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(49861..49862),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: IntoIterator,
                                                                                                        span: bytes(49864..49876),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(49886..49887),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(49889..49893),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(49895..49903),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: U,
                                                                                                span: bytes(49913..49914),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(49916..49924),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(49821..49825),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(49827..49831),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: I,
                                                                                    span: bytes(49833..49834),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: op,
                                                                        span: bytes(49836..49838),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: U,
                                                                                    span: bytes(49840..49841),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "append_terminated",
                                            complete_name: "<  as quote::ext::TokenStreamExt>::append_terminated",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "TokenStreamExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "append_terminated",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "TokenStreamExt::append_terminated",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: append_terminated,
                                                        span: bytes(50129..50146),
                                                    },
                                                    generics: Generics {
                                                        lt_token: Some(
                                                            Lt,
                                                        ),
                                                        params: [
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: I,
                                                                        span: bytes(50147..50148),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                            Comma,
                                                            GenericParam::Type(
                                                                TypeParam {
                                                                    attrs: [],
                                                                    ident: Ident {
                                                                        sym: U,
                                                                        span: bytes(50150..50151),
                                                                    },
                                                                    colon_token: None,
                                                                    bounds: [],
                                                                    eq_token: None,
                                                                    default: None,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Some(
                                                            Gt,
                                                        ),
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(50200..50201),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: IntoIterator,
                                                                                                        span: bytes(50203..50215),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: I,
                                                                                                span: bytes(50225..50226),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Item,
                                                                                                span: bytes(50228..50232),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(50234..50242),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: U,
                                                                                                span: bytes(50252..50253),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: ToTokens,
                                                                                                        span: bytes(50255..50263),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(50158..50162),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: iter,
                                                                        span: bytes(50164..50168),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: I,
                                                                                    span: bytes(50170..50171),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: term,
                                                                        span: bytes(50173..50177),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: U,
                                                                                    span: bytes(50179..50180),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                ],
                                visibility: PubT,
                                relative_types: [
                                    "Sealed",
                                    "private",
                                ],
                            },
                        ],
                        use_trees: [
                            UseTree {
                                use_name: "ToTokens",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "quote",
                                    next: Some(
                                        MyPath {
                                            name: "to_tokens",
                                            next: Some(
                                                MyPath {
                                                    name: "ToTokens",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "iter",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "iter",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TokenStream",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "TokenStream",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TokenTree",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "TokenTree",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: [
                        RefCell {
                            value: ModContext {
                             mod_info: Mod(
                                ModModInfo {
                                    mod_name: "private",
                                    mod_tree: MyPath {
                                        name: "quote",
                                        next: Some(
                                            MyPath {
                                                name: "ext",
                                                next: Some(
                                                    MyPath {
                                                        name: "private",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    file_path: "",
                                    parent_directory_path: "",
                                    mod_file_directory_path: None,
                                    visibility: PubS,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(51246..51257),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: TokenStream,
                                                                    span: bytes(51259..51270),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [],
                                enums: [],
                                unions: [],
                                impls: [
                                    ImplItem {
                                        impl_num: 0,
                                        struct_name: Name {
                                            name: "TokenStream",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStream",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "Sealed",
                                                complete_name: "quote::ext::private::Sealed",
                                                import_name: MyPath {
                                                    name: "quote",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ext",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "private",
                                                                    next: Some(
                                                                        MyPath {
                                                                            name: "Sealed",
                                                                            next: None,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Sealed,
                                                                        span: bytes(51307..51313),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: TokenStream,
                                                                    span: bytes(51318..51329),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        relative_types: [],
                                    },
                                ],
                                functions: [],
                                traits: [
                                    TraitItem {
                                        trait_name: Name {
                                            name: "Sealed",
                                            complete_name: "quote::ext::private::Sealed",
                                            import_name: MyPath {
                                                name: "quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "private",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "Sealed",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemTrait {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                unsafety: None,
                                                auto_token: None,
                                                restriction: None,
                                                trait_token: Trait,
                                                ident: Ident {
                                                    sym: Sealed,
                                                    span: bytes(51287..51293),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: None,
                                                supertraits: [],
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        visibility: PubT,
                                        relative_types: [],
                                    },
                                ],
                                use_trees: [
                                    UseTree {
                                        use_name: "TokenStream",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "proc_macro2",
                                            next: Some(
                                                MyPath {
                                                    name: "TokenStream",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                ],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                    ]
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "format",
                            mod_tree: MyPath {
                                name: "quote",
                                next: Some(
                                    MyPath {
                                        name: "format",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/quote/src/format.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/quote/src",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [],
                        functions: [],
                        traits: [],
                        use_trees: [],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "ident_fragment",
                            mod_tree: MyPath {
                                name: "quote",
                                next: Some(
                                    MyPath {
                                        name: "ident_fragment",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/quote/src/ident_fragment.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/quote/src",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: alloc,
                                                    span: bytes(56124..56129),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: borrow,
                                                            span: bytes(56131..56137),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: Cow,
                                                                    span: bytes(56139..56142),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(56148..56152),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(56154..56157),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(56163..56174),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Ident,
                                                                        span: bytes(56177..56182),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Span,
                                                                        span: bytes(56184..56188),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "IdentFragment",
                                        complete_name: "quote::ident_fragment::IdentFragment",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "ident_fragment",
                                                    next: Some(
                                                        MyPath {
                                                            name: "IdentFragment",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(56785..56786),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(56788..56801),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(56805..56810),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: IdentFragment,
                                                                span: bytes(56812..56825),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(56831..56832),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "span",
                                            complete_name: "< as quote::ident_fragment::IdentFragment>::span",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ident_fragment",
                                                        next: Some(
                                                            MyPath {
                                                                name: "IdentFragment>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: span,
                                                        span: bytes(56842..56846),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(56848..56852),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(56857..56863),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(56864..56868),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: Some(
                                                                        QSelf {
                                                                            lt_token: Lt,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(56881..56882),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            position: 1,
                                                                            as_token: Some(
                                                                                As,
                                                                            ),
                                                                            gt_token: Gt,
                                                                        },
                                                                    ),
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(56886..56899),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: span,
                                                                                    span: bytes(56902..56906),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(56908..56912),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "< as quote::ident_fragment::IdentFragment>::fmt",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ident_fragment",
                                                        next: Some(
                                                            MyPath {
                                                                name: "IdentFragment>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(56928..56931),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(56933..56937),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(56939..56940),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(56947..56950),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(56952..56961),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(56966..56969),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(56971..56977),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(56988..57001),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(57003..57006),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(57008..57012),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(57014..57015),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "IdentFragment",
                                    "Sized",
                                ],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "IdentFragment",
                                        complete_name: "quote::ident_fragment::IdentFragment",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "ident_fragment",
                                                    next: Some(
                                                        MyPath {
                                                            name: "IdentFragment",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(57031..57032),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(57034..57047),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(57051..57056),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: IdentFragment,
                                                                span: bytes(57058..57071),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(57081..57082),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "span",
                                            complete_name: "< as quote::ident_fragment::IdentFragment>::span",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ident_fragment",
                                                        next: Some(
                                                            MyPath {
                                                                name: "IdentFragment>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: span,
                                                        span: bytes(57092..57096),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(57098..57102),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(57107..57113),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(57114..57118),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: Some(
                                                                        QSelf {
                                                                            lt_token: Lt,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(57131..57132),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            position: 1,
                                                                            as_token: Some(
                                                                                As,
                                                                            ),
                                                                            gt_token: Gt,
                                                                        },
                                                                    ),
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(57136..57149),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: span,
                                                                                    span: bytes(57152..57156),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(57158..57162),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "< as quote::ident_fragment::IdentFragment>::fmt",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ident_fragment",
                                                        next: Some(
                                                            MyPath {
                                                                name: "IdentFragment>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(57178..57181),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(57183..57187),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(57189..57190),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(57197..57200),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(57202..57211),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(57216..57219),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(57221..57227),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(57238..57251),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(57253..57256),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(57258..57262),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(57264..57265),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "IdentFragment",
                                    "Sized",
                                ],
                            },
                            ImplItem {
                                impl_num: 2,
                                struct_name: Name {
                                    name: "Ident",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "Ident",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "IdentFragment",
                                        complete_name: "quote::ident_fragment::IdentFragment",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "ident_fragment",
                                                    next: Some(
                                                        MyPath {
                                                            name: "IdentFragment",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: IdentFragment,
                                                                span: bytes(57281..57294),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ident,
                                                            span: bytes(57299..57304),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "span",
                                            complete_name: "<proc_macro2::Ident as quote::ident_fragment::IdentFragment>::span",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Ident as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ident_fragment",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "IdentFragment>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "span",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: span,
                                                        span: bytes(57314..57318),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(57320..57324),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(57329..57335),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(57336..57340),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Some,
                                                                                    span: bytes(57352..57356),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(57357..57361),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: span,
                                                                            span: bytes(57362..57366),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<proc_macro2::Ident as quote::ident_fragment::IdentFragment>::fmt",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Ident as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ident_fragment",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "IdentFragment>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "fmt",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(57384..57387),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(57389..57393),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(57395..57396),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(57403..57406),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(57408..57417),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(57422..57425),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(57427..57433),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: id,
                                                                    span: bytes(57448..57450),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(57453..57457),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: to_string,
                                                                            span: bytes(57458..57467),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Let {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::TupleStruct {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Some,
                                                                                        span: bytes(57486..57490),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: id,
                                                                                    span: bytes(57491..57493),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    eq_token: Eq,
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: id,
                                                                                            span: bytes(57497..57499),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: strip_prefix,
                                                                            span: bytes(57500..57512),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Str {
                                                                                    token: "r#",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: fmt,
                                                                                                    span: bytes(57533..57536),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Display,
                                                                                                    span: bytes(57538..57545),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: fmt,
                                                                                                    span: bytes(57547..57550),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: id,
                                                                                                        span: bytes(57551..57553),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: f,
                                                                                                        span: bytes(57555..57556),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: Some(
                                                                    (
                                                                        Else,
                                                                        Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: fmt,
                                                                                                                span: bytes(57587..57590),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Display,
                                                                                                                span: bytes(57592..57599),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: fmt,
                                                                                                                span: bytes(57601..57604),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Reference {
                                                                                                    attrs: [],
                                                                                                    and_token: And,
                                                                                                    mutability: None,
                                                                                                    expr: Expr::Index {
                                                                                                        attrs: [],
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: id,
                                                                                                                            span: bytes(57606..57608),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        bracket_token: Bracket,
                                                                                                        index: Expr::Range {
                                                                                                            attrs: [],
                                                                                                            start: None,
                                                                                                            limits: RangeLimits::HalfOpen(
                                                                                                                DotDot,
                                                                                                            ),
                                                                                                            end: None,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Comma,
                                                                                                Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: f,
                                                                                                                    span: bytes(57614..57615),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ),
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 3,
                                struct_name: Name {
                                    name: "Cow",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "alloc",
                                        next: Some(
                                            MyPath {
                                                name: "borrow",
                                                next: Some(
                                                    MyPath {
                                                        name: "Cow",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "IdentFragment",
                                        complete_name: "quote::ident_fragment::IdentFragment",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "ident_fragment",
                                                    next: Some(
                                                        MyPath {
                                                            name: "IdentFragment",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(57641..57642),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: Some(
                                                WhereClause {
                                                    where_token: Where,
                                                    predicates: [
                                                        WherePredicate::Type(
                                                            PredicateType {
                                                                lifetimes: None,
                                                                bounded_ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: T,
                                                                                    span: bytes(57683..57684),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                colon_token: Colon,
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: IdentFragment,
                                                                                            span: bytes(57686..57699),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Plus,
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ToOwned,
                                                                                            span: bytes(57702..57709),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Plus,
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::Maybe(
                                                                                Question,
                                                                            ),
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Sized,
                                                                                            span: bytes(57713..57718),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        Comma,
                                                    ],
                                                },
                                            ),
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: IdentFragment,
                                                                span: bytes(57644..57657),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Cow,
                                                            span: bytes(57662..57665),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(57666..57667),
                                                                        ident: Ident {
                                                                            sym: _,
                                                                            span: bytes(57667..57668),
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(57670..57671),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "span",
                                            complete_name: "<alloc::borrow::Cow as quote::ident_fragment::IdentFragment>::span",
                                            import_name: MyPath {
                                                name: "<alloc",
                                                next: Some(
                                                    MyPath {
                                                        name: "borrow",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Cow as quote",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ident_fragment",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "IdentFragment>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "span",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: span,
                                                        span: bytes(57729..57733),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(57735..57739),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(57744..57750),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(57751..57755),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: T,
                                                                                    span: bytes(57767..57768),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: span,
                                                                                    span: bytes(57770..57774),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(57775..57779),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<alloc::borrow::Cow as quote::ident_fragment::IdentFragment>::fmt",
                                            import_name: MyPath {
                                                name: "<alloc",
                                                next: Some(
                                                    MyPath {
                                                        name: "borrow",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Cow as quote",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ident_fragment",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "IdentFragment>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "fmt",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(57795..57798),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(57800..57804),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(57806..57807),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(57814..57817),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(57819..57828),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(57833..57836),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(57838..57844),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: T,
                                                                                    span: bytes(57855..57856),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(57858..57861),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(57862..57866),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(57868..57869),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [],
                            },
                        ],
                        functions: [],
                        traits: [
                            TraitItem {
                                trait_name: Name {
                                    name: "IdentFragment",
                                    complete_name: "quote::ident_fragment::IdentFragment",
                                    import_name: MyPath {
                                        name: "quote",
                                        next: Some(
                                            MyPath {
                                                name: "ident_fragment",
                                                next: Some(
                                                    MyPath {
                                                        name: "IdentFragment",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: IdentFragment,
                                            span: bytes(56468..56481),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        supertraits: [],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<  as quote::ident_fragment::IdentFragment>::fmt",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ident_fragment",
                                                        next: Some(
                                                            MyPath {
                                                                name: "IdentFragment>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "IdentFragment::fmt",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(56544..56547),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(56549..56553),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(56555..56556),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(56563..56566),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(56568..56577),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(56582..56585),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(56587..56593),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: true,
                                    },
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "span",
                                            complete_name: "<  as quote::ident_fragment::IdentFragment>::span",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "ident_fragment",
                                                        next: Some(
                                                            MyPath {
                                                                name: "IdentFragment>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "IdentFragment::span",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: span,
                                                        span: bytes(56728..56732),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(56734..56738),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(56743..56749),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(56750..56754),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: Some(
                                                    Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: None,
                                                                                    span: bytes(56766..56770),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                semi_token: None,
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                ],
                                visibility: PubT,
                                relative_types: [],
                            },
                        ],
                        use_trees: [
                            UseTree {
                                use_name: "Cow",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "alloc",
                                    next: Some(
                                        MyPath {
                                            name: "borrow",
                                            next: Some(
                                                MyPath {
                                                    name: "Cow",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "fmt",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "fmt",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Ident",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Ident",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Span",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Span",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "to_tokens",
                            mod_tree: MyPath {
                                name: "quote",
                                next: Some(
                                    MyPath {
                                        name: "to_tokens",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/quote/src/to_tokens.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/quote/src",
                            mod_file_directory_path: None,
                            visibility: PubS,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(58433..58438),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: TokenStreamExt,
                                                            span: bytes(58440..58454),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: alloc,
                                                    span: bytes(58460..58465),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: borrow,
                                                            span: bytes(58467..58473),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: Cow,
                                                                    span: bytes(58475..58478),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: alloc,
                                                    span: bytes(58484..58489),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: rc,
                                                            span: bytes(58491..58493),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: Rc,
                                                                    span: bytes(58495..58497),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(58503..58507),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: iter,
                                                            span: bytes(58509..58513),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(58519..58530),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Group,
                                                                        span: bytes(58533..58538),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Ident,
                                                                        span: bytes(58540..58545),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Literal,
                                                                        span: bytes(58547..58554),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Punct,
                                                                        span: bytes(58556..58561),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Span,
                                                                        span: bytes(58563..58567),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TokenStream,
                                                                        span: bytes(58569..58580),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TokenTree,
                                                                        span: bytes(58582..58591),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: std,
                                                    span: bytes(58598..58601),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: ffi,
                                                            span: bytes(58603..58606),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Group(
                                                            UseGroup {
                                                                brace_token: Brace,
                                                                items: [
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: CStr,
                                                                                span: bytes(58609..58613),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: CString,
                                                                                span: bytes(58615..58622),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(60810..60811),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(60814..60819),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(60822..60830),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(60832..60840),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(60846..60847),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(60857..60866),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(60868..60872),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(60874..60880),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(60887..60898),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(60913..60917),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: to_tokens,
                                                                    span: bytes(60919..60928),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(60929..60935),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "Sized",
                                    "ToTokens",
                                ],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(60952..60953),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(60956..60961),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(60964..60972),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(60974..60982),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(60992..60993),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(61003..61012),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(61014..61018),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(61020..61026),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(61033..61044),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(61059..61063),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: to_tokens,
                                                                    span: bytes(61065..61074),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(61075..61081),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "Sized",
                                    "ToTokens",
                                ],
                            },
                            ImplItem {
                                impl_num: 2,
                                struct_name: Name {
                                    name: "Cow",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "alloc",
                                        next: Some(
                                            MyPath {
                                                name: "borrow",
                                                next: Some(
                                                    MyPath {
                                                        name: "Cow",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(61098..61099),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(61099..61100),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(61102..61103),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(61106..61111),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToOwned,
                                                                                    span: bytes(61114..61121),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(61124..61132),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(61134..61142),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Cow,
                                                            span: bytes(61147..61150),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(61151..61152),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(61152..61153),
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(61155..61156),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<alloc::borrow::Cow as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<alloc",
                                                next: Some(
                                                    MyPath {
                                                        name: "borrow",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Cow as quote",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "ToTokens>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "to_tokens",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(61167..61176),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(61178..61182),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(61184..61190),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(61197..61208),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(61223..61227),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: to_tokens,
                                                                    span: bytes(61229..61238),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(61239..61245),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "Sized",
                                    "ToOwned",
                                    "ToTokens",
                                ],
                            },
                            ImplItem {
                                impl_num: 3,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(61262..61263),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(61266..61271),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(61274..61282),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(61284..61292),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Box,
                                                            span: bytes(61297..61300),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(61301..61302),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(61313..61322),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(61324..61328),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(61330..61336),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(61343..61354),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(61369..61373),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: to_tokens,
                                                                    span: bytes(61375..61384),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(61385..61391),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "Sized",
                                    "ToTokens",
                                ],
                            },
                            ImplItem {
                                impl_num: 4,
                                struct_name: Name {
                                    name: "Rc",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "alloc",
                                        next: Some(
                                            MyPath {
                                                name: "rc",
                                                next: Some(
                                                    MyPath {
                                                        name: "Rc",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(61408..61409),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(61412..61417),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(61420..61428),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(61430..61438),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Rc,
                                                            span: bytes(61443..61445),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(61446..61447),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<alloc::rc::Rc as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<alloc",
                                                next: Some(
                                                    MyPath {
                                                        name: "rc",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Rc as quote",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "ToTokens>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "to_tokens",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#4}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(61458..61467),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(61469..61473),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(61475..61481),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(61488..61499),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(61514..61518),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: to_tokens,
                                                                    span: bytes(61520..61529),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(61530..61536),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "Sized",
                                    "ToTokens",
                                ],
                            },
                            ImplItem {
                                impl_num: 5,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(61553..61554),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(61556..61564),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(61566..61574),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Option,
                                                            span: bytes(61579..61585),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(61586..61587),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#5}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(61598..61607),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(61609..61613),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(61615..61621),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(61628..61639),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::If {
                                                                attrs: [],
                                                                if_token: If,
                                                                cond: Expr::Let {
                                                                    attrs: [],
                                                                    let_token: Let,
                                                                    pat: Pat::TupleStruct {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Some,
                                                                                        span: bytes(61658..61662),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: t,
                                                                                    span: bytes(61663..61664),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    eq_token: Eq,
                                                                    expr: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(61668..61672),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                then_branch: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: t,
                                                                                                    span: bytes(61687..61688),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: to_tokens,
                                                                                    span: bytes(61689..61698),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: tokens,
                                                                                                        span: bytes(61699..61705),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            Some(
                                                                                Semi,
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                                else_branch: None,
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "ToTokens",
                                ],
                            },
                            ImplItem {
                                impl_num: 6,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(61732..61740),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: str,
                                                            span: bytes(61745..61748),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#6}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(61758..61767),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(61769..61773),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(61775..61781),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(61788..61799),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(61811..61817),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(61818..61824),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(61825..61832),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: string,
                                                                                            span: bytes(61834..61840),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(61841..61845),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 7,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(61863..61871),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: String,
                                                            span: bytes(61876..61882),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#7}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(61892..61901),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(61903..61907),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(61909..61915),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(61922..61933),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(61945..61949),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: as_str,
                                                                        span: bytes(61950..61956),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: to_tokens,
                                                                    span: bytes(61959..61968),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(61969..61975),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 8,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(61992..62000),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i8,
                                                            span: bytes(62005..62007),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#8}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62017..62026),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62028..62032),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(62034..62040),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(62047..62058),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(62070..62076),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(62077..62083),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(62084..62091),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i8_suffixed,
                                                                                            span: bytes(62093..62104),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(62106..62110),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 9,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(62128..62136),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i16,
                                                            span: bytes(62141..62144),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#9}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62154..62163),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62165..62169),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(62171..62177),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(62184..62195),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(62207..62213),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(62214..62220),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(62221..62228),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i16_suffixed,
                                                                                            span: bytes(62230..62242),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(62244..62248),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 10,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(62266..62274),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(62279..62282),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#10}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62292..62301),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62303..62307),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(62309..62315),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(62322..62333),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(62345..62351),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(62352..62358),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(62359..62366),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i32_suffixed,
                                                                                            span: bytes(62368..62380),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(62382..62386),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 11,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(62404..62412),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i64,
                                                            span: bytes(62417..62420),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#11}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62430..62439),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62441..62445),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(62447..62453),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(62460..62471),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(62483..62489),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(62490..62496),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(62497..62504),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i64_suffixed,
                                                                                            span: bytes(62506..62518),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(62520..62524),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 12,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(62542..62550),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i128,
                                                            span: bytes(62555..62559),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#12}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62569..62578),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62580..62584),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(62586..62592),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(62599..62610),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(62622..62628),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(62629..62635),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(62636..62643),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i128_suffixed,
                                                                                            span: bytes(62645..62658),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(62660..62664),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 13,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(62682..62690),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: isize,
                                                            span: bytes(62695..62700),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#13}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62710..62719),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62721..62725),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(62727..62733),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(62740..62751),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(62763..62769),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(62770..62776),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(62777..62784),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: isize_suffixed,
                                                                                            span: bytes(62786..62800),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(62802..62806),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 14,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(62824..62832),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u8,
                                                            span: bytes(62837..62839),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#14}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62849..62858),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62860..62864),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(62866..62872),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(62879..62890),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(62902..62908),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(62909..62915),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(62916..62923),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u8_suffixed,
                                                                                            span: bytes(62925..62936),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(62938..62942),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 15,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(62960..62968),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u16,
                                                            span: bytes(62973..62976),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#15}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(62986..62995),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(62997..63001),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63003..63009),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63016..63027),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(63039..63045),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(63046..63052),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(63053..63060),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u16_suffixed,
                                                                                            span: bytes(63062..63074),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(63076..63080),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 16,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(63098..63106),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u32,
                                                            span: bytes(63111..63114),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#16}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(63124..63133),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(63135..63139),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63141..63147),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63154..63165),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(63177..63183),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(63184..63190),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(63191..63198),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u32_suffixed,
                                                                                            span: bytes(63200..63212),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(63214..63218),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 17,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(63236..63244),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(63249..63252),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#17}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(63262..63271),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(63273..63277),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63279..63285),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63292..63303),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(63315..63321),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(63322..63328),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(63329..63336),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u64_suffixed,
                                                                                            span: bytes(63338..63350),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(63352..63356),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 18,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(63374..63382),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u128,
                                                            span: bytes(63387..63391),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#18}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(63401..63410),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(63412..63416),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63418..63424),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63431..63442),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(63454..63460),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(63461..63467),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(63468..63475),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u128_suffixed,
                                                                                            span: bytes(63477..63490),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(63492..63496),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 19,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(63514..63522),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: usize,
                                                            span: bytes(63527..63532),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#19}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(63542..63551),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(63553..63557),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63559..63565),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63572..63583),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(63595..63601),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(63602..63608),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(63609..63616),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: usize_suffixed,
                                                                                            span: bytes(63618..63632),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(63634..63638),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 20,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(63656..63664),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f32,
                                                            span: bytes(63669..63672),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#20}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(63682..63691),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(63693..63697),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63699..63705),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63712..63723),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(63735..63741),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(63742..63748),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(63749..63756),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: f32_suffixed,
                                                                                            span: bytes(63758..63770),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(63772..63776),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 21,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(63794..63802),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: f64,
                                                            span: bytes(63807..63810),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#21}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(63820..63829),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(63831..63835),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63837..63843),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63850..63861),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(63873..63879),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(63880..63886),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(63887..63894),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: f64_suffixed,
                                                                                            span: bytes(63896..63908),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(63910..63914),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 22,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(63932..63940),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: char,
                                                            span: bytes(63945..63949),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#22}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(63959..63968),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(63970..63974),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(63976..63982),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(63989..64000),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64012..64018),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(64019..64025),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(64026..64033),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: character,
                                                                                            span: bytes(64035..64044),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(64046..64050),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 23,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(64068..64076),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: bool,
                                                            span: bytes(64081..64085),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "< as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#23}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(64095..64104),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(64106..64110),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(64112..64118),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(64125..64136),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: word,
                                                                    span: bytes(64152..64156),
                                                                },
                                                                subpat: None,
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::If {
                                                                        attrs: [],
                                                                        if_token: If,
                                                                        cond: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(64163..64167),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        then_branch: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::Lit {
                                                                                        attrs: [],
                                                                                        lit: Lit::Str {
                                                                                            token: "true",
                                                                                        },
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                            ],
                                                                        },
                                                                        else_branch: Some(
                                                                            (
                                                                                Else,
                                                                                Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Lit {
                                                                                                    attrs: [],
                                                                                                    lit: Lit::Str {
                                                                                                        token: "false",
                                                                                                    },
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ),
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64205..64211),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(64212..64218),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Ident,
                                                                                            span: bytes(64219..64224),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: new,
                                                                                            span: bytes(64226..64229),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: word,
                                                                                                span: bytes(64230..64234),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: Span,
                                                                                                    span: bytes(64236..64240),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: call_site,
                                                                                                    span: bytes(64242..64251),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 24,
                                struct_name: Name {
                                    name: "CStr",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "std",
                                        next: Some(
                                            MyPath {
                                                name: "ffi",
                                                next: Some(
                                                    MyPath {
                                                        name: "CStr",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(64271..64279),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: CStr,
                                                            span: bytes(64284..64288),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<std::ffi::CStr as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<std",
                                                next: Some(
                                                    MyPath {
                                                        name: "ffi",
                                                        next: Some(
                                                            MyPath {
                                                                name: "CStr as quote",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "ToTokens>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "to_tokens",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#24}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(64298..64307),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(64309..64313),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(64315..64321),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(64328..64339),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64351..64357),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(64358..64364),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(64365..64372),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c_string,
                                                                                            span: bytes(64374..64382),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(64383..64387),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 25,
                                struct_name: Name {
                                    name: "CString",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "std",
                                        next: Some(
                                            MyPath {
                                                name: "ffi",
                                                next: Some(
                                                    MyPath {
                                                        name: "CString",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(64405..64413),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: CString,
                                                            span: bytes(64418..64425),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<std::ffi::CString as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<std",
                                                next: Some(
                                                    MyPath {
                                                        name: "ffi",
                                                        next: Some(
                                                            MyPath {
                                                                name: "CString as quote",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "ToTokens>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "to_tokens",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#25}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(64435..64444),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(64446..64450),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(64452..64458),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(64465..64476),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64488..64494),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(64495..64501),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Literal,
                                                                                            span: bytes(64502..64509),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: c_string,
                                                                                            span: bytes(64511..64519),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(64520..64524),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 26,
                                struct_name: Name {
                                    name: "Group",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "Group",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(64542..64550),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Group,
                                                            span: bytes(64555..64560),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<proc_macro2::Group as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Group as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "to_tokens",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#26}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(64570..64579),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(64581..64585),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(64587..64593),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(64600..64611),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64623..64629),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(64630..64636),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(64637..64641),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: clone,
                                                                            span: bytes(64642..64647),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 27,
                                struct_name: Name {
                                    name: "Ident",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "Ident",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(64666..64674),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Ident,
                                                            span: bytes(64679..64684),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<proc_macro2::Ident as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Ident as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "to_tokens",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#27}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(64694..64703),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(64705..64709),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(64711..64717),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(64724..64735),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64747..64753),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(64754..64760),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(64761..64765),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: clone,
                                                                            span: bytes(64766..64771),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 28,
                                struct_name: Name {
                                    name: "Punct",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "Punct",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(64790..64798),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Punct,
                                                            span: bytes(64803..64808),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<proc_macro2::Punct as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Punct as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "to_tokens",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#28}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(64818..64827),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(64829..64833),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(64835..64841),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(64848..64859),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64871..64877),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(64878..64884),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(64885..64889),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: clone,
                                                                            span: bytes(64890..64895),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 29,
                                struct_name: Name {
                                    name: "Literal",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "Literal",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(64914..64922),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Literal,
                                                            span: bytes(64927..64934),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<proc_macro2::Literal as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Literal as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "to_tokens",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#29}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(64944..64953),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(64955..64959),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(64961..64967),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(64974..64985),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(64997..65003),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(65004..65010),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(65011..65015),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: clone,
                                                                            span: bytes(65016..65021),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 30,
                                struct_name: Name {
                                    name: "TokenTree",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "TokenTree",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(65040..65048),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: TokenTree,
                                                            span: bytes(65053..65062),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<proc_macro2::TokenTree as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenTree as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "to_tokens",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#30}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(65072..65081),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(65083..65087),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(65089..65095),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(65102..65113),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(65125..65131),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: append,
                                                                    span: bytes(65132..65138),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(65139..65143),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: clone,
                                                                            span: bytes(65144..65149),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 31,
                                struct_name: Name {
                                    name: "TokenStream",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "TokenStream",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "quote::to_tokens::ToTokens",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(65168..65176),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: TokenStream,
                                                            span: bytes(65181..65192),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<proc_macro2::TokenStream as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStream as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "to_tokens",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#31}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(65202..65211),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(65213..65217),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(65219..65225),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(65232..65243),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(65255..65261),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: extend,
                                                                    span: bytes(65262..65268),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: iter,
                                                                                            span: bytes(65269..65273),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: once,
                                                                                            span: bytes(65275..65279),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(65280..65284),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: clone,
                                                                                    span: bytes(65285..65290),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "into_token_stream",
                                            complete_name: "<proc_macro2::TokenStream as quote::to_tokens::ToTokens>::into_token_stream",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "TokenStream as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "into_token_stream",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#31}::into_token_stream",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: into_token_stream,
                                                        span: bytes(65310..65327),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(65328..65332),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(65337..65348),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: self,
                                                                                span: bytes(65359..65363),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                        ],
                        functions: [],
                        traits: [
                            TraitItem {
                                trait_name: Name {
                                    name: "ToTokens",
                                    complete_name: "quote::to_tokens::ToTokens",
                                    import_name: MyPath {
                                        name: "quote",
                                        next: Some(
                                            MyPath {
                                                name: "to_tokens",
                                                next: Some(
                                                    MyPath {
                                                        name: "ToTokens",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: ToTokens,
                                            span: bytes(58701..58709),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        supertraits: [],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<  as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_tokens",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "ToTokens::to_tokens",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(60058..60067),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(60069..60073),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(60075..60081),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(60088..60099),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "to_token_stream",
                                            complete_name: "<  as quote::to_tokens::ToTokens>::to_token_stream",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "to_token_stream",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "ToTokens::to_token_stream",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_token_stream,
                                                        span: bytes(60324..60339),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(60341..60345),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(60350..60361),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: Some(
                                                    Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Local {
                                                                attrs: [],
                                                                let_token: Let,
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(60380..60386),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                init: Some(
                                                                    LocalInit {
                                                                        eq_token: Eq,
                                                                        expr: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: TokenStream,
                                                                                                span: bytes(60389..60400),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: new,
                                                                                                span: bytes(60402..60405),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        diverge: None,
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                            Stmt::Expr(
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(60417..60421),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: to_tokens,
                                                                        span: bytes(60422..60431),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: tokens,
                                                                                                span: bytes(60437..60443),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                Some(
                                                                    Semi,
                                                                ),
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: tokens,
                                                                                    span: bytes(60454..60460),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                semi_token: None,
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "into_token_stream",
                                            complete_name: "<  as quote::to_tokens::ToTokens>::into_token_stream",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "to_tokens",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ToTokens>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "into_token_stream",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "ToTokens::into_token_stream",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: into_token_stream,
                                                        span: bytes(60689..60706),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: Some(
                                                            WhereClause {
                                                                where_token: Where,
                                                                predicates: [
                                                                    WherePredicate::Type(
                                                                        PredicateType {
                                                                            lifetimes: None,
                                                                            bounded_ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(60746..60750),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            colon_token: Colon,
                                                                            bounds: [
                                                                                TypeParamBound::Trait(
                                                                                    TraitBound {
                                                                                        paren_token: None,
                                                                                        modifier: TraitBoundModifier::None,
                                                                                        lifetimes: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Sized,
                                                                                                        span: bytes(60752..60757),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(60707..60711),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(60716..60727),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: Some(
                                                    Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(60773..60777),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: to_token_stream,
                                                                        span: bytes(60778..60793),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                semi_token: None,
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                ],
                                visibility: PubT,
                                relative_types: [],
                            },
                        ],
                        use_trees: [
                            UseTree {
                                use_name: "TokenStreamExt",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "quote",
                                    next: Some(
                                        MyPath {
                                            name: "ext",
                                            next: Some(
                                                MyPath {
                                                    name: "TokenStreamExt",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Cow",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "alloc",
                                    next: Some(
                                        MyPath {
                                            name: "borrow",
                                            next: Some(
                                                MyPath {
                                                    name: "Cow",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Rc",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "alloc",
                                    next: Some(
                                        MyPath {
                                            name: "rc",
                                            next: Some(
                                                MyPath {
                                                    name: "Rc",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "iter",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "iter",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Group",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Group",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Ident",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Ident",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Literal",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Literal",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Punct",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Punct",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Span",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Span",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TokenStream",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "TokenStream",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TokenTree",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "TokenTree",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "CStr",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "std",
                                    next: Some(
                                        MyPath {
                                            name: "ffi",
                                            next: Some(
                                                MyPath {
                                                    name: "CStr",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "CString",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "std",
                                    next: Some(
                                        MyPath {
                                            name: "ffi",
                                            next: Some(
                                                MyPath {
                                                    name: "CString",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: []
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "",
                            mod_tree: MyPath {
                                name: "",
                                next: None,
                            },
                            file_path: "",
                            parent_directory_path: "",
                            mod_file_directory_path: None,
                            visibility: Pri,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: self,
                                                    span: bytes(65376..65380),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: get_span,
                                                            span: bytes(65382..65390),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Group(
                                                            UseGroup {
                                                                brace_token: Brace,
                                                                items: [
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: GetSpan,
                                                                                span: bytes(65393..65400),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: GetSpanBase,
                                                                                span: bytes(65402..65413),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    UseTree::Name(
                                                                        UseName {
                                                                            ident: Ident {
                                                                                sym: GetSpanInner,
                                                                                span: bytes(65415..65427),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(65434..65439),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: IdentFragment,
                                                                        span: bytes(65442..65455),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: ToTokens,
                                                                        span: bytes(65457..65465),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TokenStreamExt,
                                                                        span: bytes(65467..65481),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(65488..65492),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: fmt,
                                                            span: bytes(65494..65497),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(65503..65507),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: iter,
                                                            span: bytes(65509..65513),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(65519..65523),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: ops,
                                                            span: bytes(65525..65528),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: BitOr,
                                                                    span: bytes(65530..65535),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(65541..65552),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Group,
                                                                        span: bytes(65555..65560),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Ident,
                                                                        span: bytes(65562..65567),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Punct,
                                                                        span: bytes(65569..65574),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Spacing,
                                                                        span: bytes(65576..65583),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TokenTree,
                                                                        span: bytes(65585..65594),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: alloc,
                                                    span: bytes(65621..65626),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: format,
                                                            span: bytes(65628..65634),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: PubT,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(65659..65663),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: option,
                                                            span: bytes(65665..65671),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: Option,
                                                                    span: bytes(65673..65679),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: PubT,
                            },
                        ],
                        mods: [
                            ModItem {
                                mod_name: "ext",
                                file_name: None,
                                item: Some(
                                    ItemMod {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        mod_token: Mod,
                                        ident: Ident {
                                            sym: ext,
                                            span: bytes(67148..67151),
                                        },
                                        content: Some(
                                            (
                                                Brace,
                                                [],
                                            ),
                                        ),
                                        semi: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(67162..67167),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: RepInterp,
                                                            span: bytes(67169..67178),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: super,
                                                    span: bytes(67188..67193),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Rename(
                                                                UseRename {
                                                                    ident: Ident {
                                                                        sym: HasIterator,
                                                                        span: bytes(67196..67207),
                                                                    },
                                                                    as_token: As,
                                                                    rename: Ident {
                                                                        sym: HasIter,
                                                                        span: bytes(67211..67218),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Rename(
                                                                UseRename {
                                                                    ident: Ident {
                                                                        sym: ThereIsNoIteratorInRepetition,
                                                                        span: bytes(67220..67249),
                                                                    },
                                                                    as_token: As,
                                                                    rename: Ident {
                                                                        sym: DoesNotHaveIter,
                                                                        span: bytes(67253..67268),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(67279..67284),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: ToTokens,
                                                            span: bytes(67286..67294),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: alloc,
                                                    span: bytes(67304..67309),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: collections,
                                                            span: bytes(67311..67322),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: btree_set,
                                                                    span: bytes(67324..67333),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Group(
                                                                    UseGroup {
                                                                        brace_token: Brace,
                                                                        items: [
                                                                            UseTree::Name(
                                                                                UseName {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(67336..67340),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            Comma,
                                                                            UseTree::Name(
                                                                                UseName {
                                                                                    ident: Ident {
                                                                                        sym: BTreeSet,
                                                                                        span: bytes(67342..67350),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(67361..67365),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: slice,
                                                            span: bytes(67367..67372),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Trait {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::NameValue {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(67379..67451),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    eq_token: Eq,
                                                    value: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Str {
                                                            token: " Extension trait providing the `quote_into_iter` method on iterators.",
                                                        },
                                                    },
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(67458..67461),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: hidden,
                                                            span: bytes(67462..67468),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: RepIteratorExt,
                                            span: bytes(67485..67499),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        supertraits: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iterator,
                                                                    span: bytes(67501..67509),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                            Plus,
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Sized,
                                                                    span: bytes(67512..67517),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        brace_token: Brace,
                                        items: [
                                            TraitItem::Fn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(67531..67546),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(67547..67551),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(67557..67561),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(67563..67570),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                default: Some(
                                                    Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(67587..67591),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(67593..67600),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                semi_token: None,
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(67628..67629),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iterator,
                                                                                    span: bytes(67631..67639),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepIteratorExt,
                                                                span: bytes(67641..67655),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(67660..67661),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                    Item::Trait {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::NameValue {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(67670..67732),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    eq_token: Eq,
                                                    value: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Str {
                                                            token: " Extension trait providing the `quote_into_iter` method for",
                                                        },
                                                    },
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::NameValue {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(67737..67807),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    eq_token: Eq,
                                                    value: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Str {
                                                            token: " non-iterable types. These types interpolate the same value in each",
                                                        },
                                                    },
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::NameValue {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(67812..67844),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    eq_token: Eq,
                                                    value: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Str {
                                                            token: " iteration of the repetition.",
                                                        },
                                                    },
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(67851..67854),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: hidden,
                                                            span: bytes(67855..67861),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: RepToTokensExt,
                                            span: bytes(67878..67892),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        supertraits: [],
                                        brace_token: Brace,
                                        items: [
                                            TraitItem::Fn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::NameValue {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: doc,
                                                                            span: bytes(67903..67971),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            value: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Str {
                                                                    token: " Pretend to be an iterator for the purposes of `quote_into_iter`.",
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::NameValue {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: doc,
                                                                            span: bytes(67980..68043),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            value: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Str {
                                                                    token: " This allows repeated calls to `quote_into_iter` to continue",
                                                                },
                                                            },
                                                        },
                                                    },
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::NameValue {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: doc,
                                                                            span: bytes(68052..68092),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            value: Expr::Lit {
                                                                attrs: [],
                                                                lit: Lit::Str {
                                                                    token: " correctly returning DoesNotHaveIter.",
                                                                },
                                                            },
                                                        },
                                                    },
                                                ],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next,
                                                        span: bytes(68104..68108),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(68110..68114),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(68119..68125),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Reference {
                                                                                        and_token: And,
                                                                                        lifetime: None,
                                                                                        mutability: None,
                                                                                        elem: Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Self,
                                                                                                            span: bytes(68127..68131),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: Some(
                                                    Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Some,
                                                                                        span: bytes(68147..68151),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(68152..68156),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                semi_token: None,
                                            },
                                            TraitItem::Fn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(68180..68195),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(68197..68201),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(68208..68212),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: DoesNotHaveIter,
                                                                                    span: bytes(68214..68229),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                default: Some(
                                                    Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Expr(
                                                                Expr::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(68246..68250),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: DoesNotHaveIter,
                                                                                            span: bytes(68252..68267),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                semi_token: None,
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(68295..68296),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(68298..68306),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(68310..68315),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepToTokensExt,
                                                                span: bytes(68317..68331),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(68336..68337),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                    Item::Trait {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::NameValue {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(68346..68419),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    eq_token: Eq,
                                                    value: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Str {
                                                            token: " Extension trait providing the `quote_into_iter` method for types that",
                                                        },
                                                    },
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::NameValue {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(68424..68461),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    eq_token: Eq,
                                                    value: Expr::Lit {
                                                        attrs: [],
                                                        lit: Lit::Str {
                                                            token: " can be referenced as an iterator.",
                                                        },
                                                    },
                                                },
                                            },
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: doc,
                                                                    span: bytes(68468..68471),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: hidden,
                                                            span: bytes(68472..68478),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: RepAsIteratorExt,
                                            span: bytes(68495..68511),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(68512..68513),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(68513..68514),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        supertraits: [],
                                        brace_token: Brace,
                                        items: [
                                            TraitItem::Type {
                                                attrs: [],
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(68531..68535),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                bounds: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iterator,
                                                                            span: bytes(68537..68545),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                default: None,
                                                semi_token: Semi,
                                            },
                                            TraitItem::Fn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(68559..68574),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(68576..68577),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(68577..68578),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(68576..68577),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(68577..68578),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(68579..68583),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(68589..68593),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(68595..68599),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(68601..68608),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(68627..68628),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(68628..68629),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(68631..68632),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: RepAsIteratorExt,
                                                                                    span: bytes(68634..68650),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Lifetime(
                                                                                            Lifetime {
                                                                                                apostrophe: bytes(68651..68652),
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(68652..68653),
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(68658..68663),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepAsIteratorExt,
                                                                span: bytes(68665..68681),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(68682..68683),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(68683..68684),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: None,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(68691..68692),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(68708..68712),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(68715..68716),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter,
                                                                    span: bytes(68718..68722),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(68736..68751),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(68753..68754),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(68754..68755),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(68753..68754),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(68754..68755),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(68756..68760),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(68766..68770),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(68772..68776),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(68778..68785),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: Some(
                                                                        QSelf {
                                                                            lt_token: Lt,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(68802..68803),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            position: 1,
                                                                            as_token: Some(
                                                                                As,
                                                                            ),
                                                                            gt_token: Gt,
                                                                        },
                                                                    ),
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: RepAsIteratorExt,
                                                                                    span: bytes(68807..68823),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: quote_into_iter,
                                                                                    span: bytes(68826..68841),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(68843..68847),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(68875..68876),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(68876..68877),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(68879..68880),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: RepAsIteratorExt,
                                                                                    span: bytes(68882..68898),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Lifetime(
                                                                                            Lifetime {
                                                                                                apostrophe: bytes(68899..68900),
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(68900..68901),
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(68906..68911),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepAsIteratorExt,
                                                                span: bytes(68913..68929),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(68930..68931),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(68931..68932),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Reference {
                                            and_token: And,
                                            lifetime: None,
                                            mutability: Some(
                                                Mut,
                                            ),
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(68943..68944),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(68960..68964),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(68967..68968),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter,
                                                                    span: bytes(68970..68974),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(68988..69003),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69005..69006),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69006..69007),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69005..69006),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69006..69007),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(69008..69012),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(69018..69022),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(69024..69028),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(69030..69037),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: Some(
                                                                        QSelf {
                                                                            lt_token: Lt,
                                                                            ty: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(69054..69055),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            position: 1,
                                                                            as_token: Some(
                                                                                As,
                                                                            ),
                                                                            gt_token: Gt,
                                                                        },
                                                                    ),
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: RepAsIteratorExt,
                                                                                    span: bytes(69059..69075),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: quote_into_iter,
                                                                                    span: bytes(69078..69093),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(69095..69099),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(69127..69128),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(69128..69129),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(69131..69132),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Lifetime {
                                                                apostrophe: bytes(69134..69135),
                                                                ident: Ident {
                                                                    sym: q,
                                                                    span: bytes(69135..69136),
                                                                },
                                                            },
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepAsIteratorExt,
                                                                span: bytes(69138..69154),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69155..69156),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69156..69157),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Slice {
                                            bracket_token: Bracket,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(69164..69165),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(69182..69186),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: slice,
                                                                    span: bytes(69189..69194),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter,
                                                                    span: bytes(69196..69200),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69201..69202),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69202..69203),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(69205..69206),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(69221..69236),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69238..69239),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69239..69240),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69238..69239),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69239..69240),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(69241..69245),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(69251..69255),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(69257..69261),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(69263..69270),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(69287..69291),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: iter,
                                                                            span: bytes(69292..69296),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: HasIter,
                                                                                        span: bytes(69300..69307),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(69335..69336),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(69336..69337),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(69339..69340),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Lifetime {
                                                                apostrophe: bytes(69342..69343),
                                                                ident: Ident {
                                                                    sym: q,
                                                                    span: bytes(69343..69344),
                                                                },
                                                            },
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Const(
                                                    ConstParam {
                                                        attrs: [],
                                                        const_token: Const,
                                                        ident: Ident {
                                                            sym: N,
                                                            span: bytes(69352..69353),
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: usize,
                                                                            span: bytes(69355..69360),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepAsIteratorExt,
                                                                span: bytes(69362..69378),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69379..69380),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69380..69381),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Array {
                                            bracket_token: Bracket,
                                            elem: Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(69388..69389),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            semi_token: Semi,
                                            len: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: N,
                                                                span: bytes(69391..69392),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(69409..69413),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: slice,
                                                                    span: bytes(69416..69421),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter,
                                                                    span: bytes(69423..69427),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69428..69429),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69429..69430),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(69432..69433),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(69448..69463),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69465..69466),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69466..69467),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69465..69466),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69466..69467),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(69468..69472),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(69478..69482),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(69484..69488),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(69490..69497),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(69514..69518),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: iter,
                                                                            span: bytes(69519..69523),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: HasIter,
                                                                                        span: bytes(69527..69534),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(69562..69563),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(69563..69564),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(69566..69567),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Lifetime {
                                                                apostrophe: bytes(69569..69570),
                                                                ident: Ident {
                                                                    sym: q,
                                                                    span: bytes(69570..69571),
                                                                },
                                                            },
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepAsIteratorExt,
                                                                span: bytes(69573..69589),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69590..69591),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69591..69592),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Vec,
                                                            span: bytes(69598..69601),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(69602..69603),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(69620..69624),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: slice,
                                                                    span: bytes(69627..69632),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter,
                                                                    span: bytes(69634..69638),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69639..69640),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69640..69641),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(69643..69644),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(69659..69674),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69676..69677),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69677..69678),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69676..69677),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69677..69678),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(69679..69683),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(69689..69693),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(69695..69699),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(69701..69708),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(69725..69729),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: iter,
                                                                            span: bytes(69730..69734),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: HasIter,
                                                                                        span: bytes(69738..69745),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(69773..69774),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(69774..69775),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(69777..69778),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Lifetime {
                                                                apostrophe: bytes(69780..69781),
                                                                ident: Ident {
                                                                    sym: q,
                                                                    span: bytes(69781..69782),
                                                                },
                                                            },
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepAsIteratorExt,
                                                                span: bytes(69784..69800),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69801..69802),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69802..69803),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: BTreeSet,
                                                            span: bytes(69809..69817),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(69818..69819),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(69836..69840),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: btree_set,
                                                                    span: bytes(69843..69852),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter,
                                                                    span: bytes(69854..69858),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69859..69860),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69860..69861),
                                                                                },
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(69863..69864),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(69879..69894),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(69896..69897),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(69897..69898),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(69896..69897),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(69897..69898),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(69899..69903),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(69909..69913),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(69915..69919),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(69921..69928),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(69945..69949),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: iter,
                                                                            span: bytes(69950..69954),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: HasIter,
                                                                                        span: bytes(69958..69965),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(69993..69994),
                                                            ident: Ident {
                                                                sym: q,
                                                                span: bytes(69994..69995),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                                Comma,
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(69997..69998),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: RepAsIteratorExt,
                                                                                    span: bytes(70000..70016),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Lifetime(
                                                                                            Lifetime {
                                                                                                apostrophe: bytes(70017..70018),
                                                                                                ident: Ident {
                                                                                                    sym: q,
                                                                                                    span: bytes(70018..70019),
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: RepAsIteratorExt,
                                                                span: bytes(70022..70038),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Lifetime(
                                                                        Lifetime {
                                                                            apostrophe: bytes(70039..70040),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(70040..70041),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: RepInterp,
                                                            span: bytes(70047..70056),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(70057..70058),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Iter,
                                                    span: bytes(70075..70079),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(70082..70083),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Iter,
                                                                    span: bytes(70085..70089),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: quote_into_iter,
                                                        span: bytes(70103..70118),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(70120..70121),
                                                                                ident: Ident {
                                                                                    sym: q,
                                                                                    span: bytes(70121..70122),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: Some(
                                                                        Lifetime {
                                                                            apostrophe: bytes(70120..70121),
                                                                            ident: Ident {
                                                                                sym: q,
                                                                                span: bytes(70121..70122),
                                                                            },
                                                                        },
                                                                    ),
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(70123..70127),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(70133..70137),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iter,
                                                                                    span: bytes(70139..70143),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIter,
                                                                                    span: bytes(70145..70152),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(70168..70172),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(70173..70174),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: quote_into_iter,
                                                                    span: bytes(70175..70190),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ],
                                visibility: PubT,
                            },
                            ModItem {
                                mod_name: "get_span",
                                file_name: None,
                                item: Some(
                                    ItemMod {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        unsafety: None,
                                        mod_token: Mod,
                                        ident: Ident {
                                            sym: get_span,
                                            span: bytes(71215..71223),
                                        },
                                        content: Some(
                                            (
                                                Brace,
                                                [],
                                            ),
                                        ),
                                        semi: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: core,
                                                    span: bytes(71234..71238),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: ops,
                                                            span: bytes(71240..71243),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: Deref,
                                                                    span: bytes(71245..71250),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(71260..71271),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: extra,
                                                            span: bytes(71273..71278),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: DelimSpan,
                                                                    span: bytes(71280..71289),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(71299..71310),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: Span,
                                                            span: bytes(71312..71316),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Struct {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: GetSpan,
                                            span: bytes(71334..71341),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(71342..71343),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Unnamed {
                                            paren_token: Paren,
                                            unnamed: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Restricted {
                                                        pub_token: Pub,
                                                        paren_token: Paren,
                                                        in_token: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: crate,
                                                                        span: bytes(71349..71354),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    mutability: FieldMutability::None,
                                                    ident: None,
                                                    colon_token: None,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: GetSpanInner,
                                                                        span: bytes(71356..71368),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Type(
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: T,
                                                                                                    span: bytes(71369..71370),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                    Item::Struct {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: GetSpanInner,
                                            span: bytes(71390..71402),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(71403..71404),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Unnamed {
                                            paren_token: Paren,
                                            unnamed: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Restricted {
                                                        pub_token: Pub,
                                                        paren_token: Paren,
                                                        in_token: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: crate,
                                                                        span: bytes(71410..71415),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    mutability: FieldMutability::None,
                                                    ident: None,
                                                    colon_token: None,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: GetSpanBase,
                                                                        span: bytes(71417..71428),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Type(
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: T,
                                                                                                    span: bytes(71429..71430),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                    Item::Struct {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: GetSpanBase,
                                            span: bytes(71450..71461),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(71462..71463),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Unnamed {
                                            paren_token: Paren,
                                            unnamed: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Restricted {
                                                        pub_token: Pub,
                                                        paren_token: Paren,
                                                        in_token: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: crate,
                                                                        span: bytes(71469..71474),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    mutability: FieldMutability::None,
                                                    ident: None,
                                                    colon_token: None,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: T,
                                                                        span: bytes(71476..71477),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: GetSpan,
                                                            span: bytes(71490..71497),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Span,
                                                                                        span: bytes(71498..71502),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Fn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(71516..71522),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: __into_span,
                                                        span: bytes(71539..71550),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(71551..71555),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(71560..71564),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Field {
                                                                attrs: [],
                                                                base: Expr::Paren {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    expr: Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Paren {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            expr: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(71581..71585),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Unnamed(
                                                                                    Index {
                                                                                        index: 0,
                                                                                        span: bytes(71586..71587),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Unnamed(
                                                                            Index {
                                                                                index: 0,
                                                                                span: bytes(71589..71590),
                                                                            },
                                                                        ),
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                member: Member::Unnamed(
                                                                    Index {
                                                                        index: 0,
                                                                        span: bytes(71592..71593),
                                                                    },
                                                                ),
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: GetSpanInner,
                                                            span: bytes(71620..71632),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: DelimSpan,
                                                                                        span: bytes(71633..71642),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Fn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(71656..71662),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: __into_span,
                                                        span: bytes(71679..71690),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(71692..71696),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(71701..71705),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Paren {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(71721..71725),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(71726..71727),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(71729..71730),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: join,
                                                                    span: bytes(71731..71735),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(71764..71765),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: GetSpanBase,
                                                            span: bytes(71767..71778),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(71779..71780),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Fn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::List {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: allow,
                                                                            span: bytes(71794..71799),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Ident {
                                                                    sym: clippy,
                                                                    span: bytes(71800..71806),
                                                                },
                                                                Punct {
                                                                    char: ':',
                                                                    spacing: Joint,
                                                                    span: bytes(71806..71807),
                                                                },
                                                                Punct {
                                                                    char: ':',
                                                                    spacing: Alone,
                                                                    span: bytes(71807..71808),
                                                                },
                                                                Ident {
                                                                    sym: unused_self,
                                                                    span: bytes(71808..71819),
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: __into_span,
                                                        span: bytes(71837..71848),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(71850..71854),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(71859..71860),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Macro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: unreachable,
                                                                                    span: bytes(71875..71886),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Not,
                                                                    delimiter: MacroDelimiter::Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(71916..71917),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Deref,
                                                                span: bytes(71919..71924),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: GetSpan,
                                                            span: bytes(71929..71936),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(71937..71938),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Target,
                                                    span: bytes(71955..71961),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpanInner,
                                                                    span: bytes(71964..71976),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(71977..71978),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(71992..71998),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: deref,
                                                        span: bytes(72011..72016),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(72018..72022),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(72028..72032),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Target,
                                                                                span: bytes(72034..72040),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: None,
                                                                expr: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(72056..72060),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(72061..72062),
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(72089..72090),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Deref,
                                                                span: bytes(72092..72097),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: GetSpanInner,
                                                            span: bytes(72102..72114),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(72115..72116),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Target,
                                                    span: bytes(72133..72139),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpanBase,
                                                                    span: bytes(72142..72153),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(72154..72155),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [
                                                    Attribute {
                                                        pound_token: Pound,
                                                        style: AttrStyle::Outer,
                                                        bracket_token: Bracket,
                                                        meta: Meta::Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: inline,
                                                                        span: bytes(72169..72175),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: deref,
                                                        span: bytes(72188..72193),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(72195..72199),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Self,
                                                                                span: bytes(72205..72209),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Target,
                                                                                span: bytes(72211..72217),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Reference {
                                                                attrs: [],
                                                                and_token: And,
                                                                mutability: None,
                                                                expr: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(72233..72237),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(72238..72239),
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ],
                                visibility: Pri,
                            },
                        ],
                        statics: [],
                        types: [
                            TypeItem {
                                item: Some(
                                    ItemType {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Delimiter,
                                            span: bytes(65706..65715),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(65718..65729),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Delimiter,
                                                            span: bytes(65731..65740),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: PubT,
                            },
                            TypeItem {
                                item: Some(
                                    ItemType {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        type_token: Type,
                                        ident: Ident {
                                            sym: Span,
                                            span: bytes(65766..65770),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(65773..65784),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Span,
                                                            span: bytes(65786..65790),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: PubT,
                            },
                            TypeItem {
                                item: Some(
                                    ItemType {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        type_token: Type,
                                        ident: Ident {
                                            sym: TokenStream,
                                            span: bytes(65816..65827),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        eq_token: Eq,
                                        ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(65830..65841),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: TokenStream,
                                                            span: bytes(65843..65854),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: PubT,
                            },
                        ],
                        structs: [
                            StructItem {
                                struct_name: Name {
                                    name: "HasIterator",
                                    complete_name: "::HasIterator",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "HasIterator",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: HasIterator,
                                            span: bytes(65883..65894),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Unit,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [],
                            },
                            StructItem {
                                struct_name: Name {
                                    name: "ThereIsNoIteratorInRepetition",
                                    complete_name: "::ThereIsNoIteratorInRepetition",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "ThereIsNoIteratorInRepetition",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: ThereIsNoIteratorInRepetition,
                                            span: bytes(65930..65959),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        fields: Fields::Unit,
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [],
                            },
                            StructItem {
                                struct_name: Name {
                                    name: "RepInterp",
                                    complete_name: "::RepInterp",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "RepInterp",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(70365..70371),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Copy,
                                                            span: bytes(70372..70376),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(70376..70377),
                                                        },
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(70378..70383),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: RepInterp,
                                            span: bytes(70412..70421),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(70422..70423),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Unnamed {
                                            paren_token: Paren,
                                            unnamed: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Public(
                                                        Pub,
                                                    ),
                                                    mutability: FieldMutability::None,
                                                    ident: None,
                                                    colon_token: None,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: T,
                                                                        span: bytes(70429..70430),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [
                                    "T",
                                ],
                            },
                            StructItem {
                                struct_name: Name {
                                    name: "IdentFragmentAdapter",
                                    complete_name: "::IdentFragmentAdapter",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "IdentFragmentAdapter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemStruct {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::List {
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: derive,
                                                                    span: bytes(80676..80682),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                    delimiter: MacroDelimiter::Paren(
                                                        Paren,
                                                    ),
                                                    tokens: TokenStream [
                                                        Ident {
                                                            sym: Copy,
                                                            span: bytes(80683..80687),
                                                        },
                                                        Punct {
                                                            char: ',',
                                                            spacing: Alone,
                                                            span: bytes(80687..80688),
                                                        },
                                                        Ident {
                                                            sym: Clone,
                                                            span: bytes(80689..80694),
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: IdentFragmentAdapter,
                                            span: bytes(80723..80743),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(80744..80745),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(80747..80760),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Unnamed {
                                            paren_token: Paren,
                                            unnamed: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Public(
                                                        Pub,
                                                    ),
                                                    mutability: FieldMutability::None,
                                                    ident: None,
                                                    colon_token: None,
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: T,
                                                                        span: bytes(80766..80767),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                        semi_token: Some(
                                            Semi,
                                        ),
                                    },
                                ),
                                visibility: PubT,
                                relative_types: [
                                    "IdentFragment",
                                    "T",
                                ],
                            },
                        ],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "ThereIsNoIteratorInRepetition",
                                    complete_name: "::ThereIsNoIteratorInRepetition",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "ThereIsNoIteratorInRepetition",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "BitOr",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "core",
                                            next: Some(
                                                MyPath {
                                                    name: "ops",
                                                    next: Some(
                                                        MyPath {
                                                            name: "BitOr",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: BitOr,
                                                                span: bytes(65976..65981),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ThereIsNoIteratorInRepetition,
                                                                                            span: bytes(65982..66011),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: ThereIsNoIteratorInRepetition,
                                                            span: bytes(66017..66046),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Output,
                                                    span: bytes(66058..66064),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ThereIsNoIteratorInRepetition,
                                                                    span: bytes(66067..66096),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "bitor",
                                            complete_name: "<::ThereIsNoIteratorInRepetition as core::ops::BitOr>::bitor",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "ThereIsNoIteratorInRepetition as core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ops",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "BitOr>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "bitor",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::bitor",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: bitor,
                                                        span: bytes(66105..66110),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(66111..66115),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: _rhs,
                                                                        span: bytes(66117..66121),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ThereIsNoIteratorInRepetition,
                                                                                    span: bytes(66123..66152),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ThereIsNoIteratorInRepetition,
                                                                            span: bytes(66157..66186),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ThereIsNoIteratorInRepetition,
                                                                                span: bytes(66197..66226),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "ThereIsNoIteratorInRepetition",
                                ],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "HasIterator",
                                    complete_name: "::HasIterator",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "HasIterator",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "BitOr",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "core",
                                            next: Some(
                                                MyPath {
                                                    name: "ops",
                                                    next: Some(
                                                        MyPath {
                                                            name: "BitOr",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: BitOr,
                                                                span: bytes(66241..66246),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ThereIsNoIteratorInRepetition,
                                                                                            span: bytes(66247..66276),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: HasIterator,
                                                            span: bytes(66282..66293),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Output,
                                                    span: bytes(66305..66311),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: HasIterator,
                                                                    span: bytes(66314..66325),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "bitor",
                                            complete_name: "<::HasIterator as core::ops::BitOr>::bitor",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "HasIterator as core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ops",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "BitOr>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "bitor",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::bitor",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: bitor,
                                                        span: bytes(66334..66339),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(66340..66344),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: _rhs,
                                                                        span: bytes(66346..66350),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ThereIsNoIteratorInRepetition,
                                                                                    span: bytes(66352..66381),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: HasIterator,
                                                                            span: bytes(66386..66397),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: HasIterator,
                                                                                span: bytes(66408..66419),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "HasIterator",
                                ],
                            },
                            ImplItem {
                                impl_num: 2,
                                struct_name: Name {
                                    name: "ThereIsNoIteratorInRepetition",
                                    complete_name: "::ThereIsNoIteratorInRepetition",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "ThereIsNoIteratorInRepetition",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "BitOr",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "core",
                                            next: Some(
                                                MyPath {
                                                    name: "ops",
                                                    next: Some(
                                                        MyPath {
                                                            name: "BitOr",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: BitOr,
                                                                span: bytes(66434..66439),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIterator,
                                                                                            span: bytes(66440..66451),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: ThereIsNoIteratorInRepetition,
                                                            span: bytes(66457..66486),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Output,
                                                    span: bytes(66498..66504),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: HasIterator,
                                                                    span: bytes(66507..66518),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "bitor",
                                            complete_name: "<::ThereIsNoIteratorInRepetition as core::ops::BitOr>::bitor",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "ThereIsNoIteratorInRepetition as core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ops",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "BitOr>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "bitor",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::bitor",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: bitor,
                                                        span: bytes(66527..66532),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(66533..66537),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: _rhs,
                                                                        span: bytes(66539..66543),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIterator,
                                                                                    span: bytes(66545..66556),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: HasIterator,
                                                                            span: bytes(66561..66572),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: HasIterator,
                                                                                span: bytes(66583..66594),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "HasIterator",
                                ],
                            },
                            ImplItem {
                                impl_num: 3,
                                struct_name: Name {
                                    name: "HasIterator",
                                    complete_name: "::HasIterator",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "HasIterator",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "BitOr",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "core",
                                            next: Some(
                                                MyPath {
                                                    name: "ops",
                                                    next: Some(
                                                        MyPath {
                                                            name: "BitOr",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: BitOr,
                                                                span: bytes(66609..66614),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIterator,
                                                                                            span: bytes(66615..66626),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: HasIterator,
                                                            span: bytes(66632..66643),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Output,
                                                    span: bytes(66655..66661),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: HasIterator,
                                                                    span: bytes(66664..66675),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "bitor",
                                            complete_name: "<::HasIterator as core::ops::BitOr>::bitor",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "HasIterator as core",
                                                        next: Some(
                                                            MyPath {
                                                                name: "ops",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "BitOr>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "bitor",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#3}::bitor",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: bitor,
                                                        span: bytes(66684..66689),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(66690..66694),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: _rhs,
                                                                        span: bytes(66696..66700),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: HasIterator,
                                                                                    span: bytes(66702..66713),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: HasIterator,
                                                                            span: bytes(66718..66729),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: HasIterator,
                                                                                span: bytes(66740..66751),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "HasIterator",
                                ],
                            },
                            ImplItem {
                                impl_num: 4,
                                struct_name: Name {
                                    name: "RepInterp",
                                    complete_name: "::RepInterp",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "RepInterp",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: None,
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(70439..70440),
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: RepInterp,
                                                            span: bytes(70442..70451),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(70452..70453),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next",
                                            complete_name: "::RepInterp::next",
                                            import_name: MyPath {
                                                name: "",
                                                next: Some(
                                                    MyPath {
                                                        name: "RepInterp",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#4}::next",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next,
                                                        span: bytes(70747..70751),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: None,
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Self,
                                                                                    span: bytes(70752..70756),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(70761..70767),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(70768..70769),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Some,
                                                                                    span: bytes(70781..70785),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(70786..70790),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Unnamed(
                                                                            Index {
                                                                                index: 0,
                                                                                span: bytes(70791..70792),
                                                                            },
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 5,
                                struct_name: Name {
                                    name: "RepInterp",
                                    complete_name: "::RepInterp",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "RepInterp",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "",
                                            next: None,
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(70808..70809),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iterator,
                                                                                    span: bytes(70811..70819),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Iterator,
                                                                span: bytes(70821..70829),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: RepInterp,
                                                            span: bytes(70834..70843),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(70844..70845),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [
                                    ImplTypeItem {
                                        item: Some(
                                            ImplItemType {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Item,
                                                    span: bytes(70858..70862),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(70865..70866),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Item,
                                                                    span: bytes(70868..70872),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "next",
                                            complete_name: "<::RepInterp as >::next",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "RepInterp as >",
                                                        next: Some(
                                                            MyPath {
                                                                name: "next",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#5}::next",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next,
                                                        span: bytes(70882..70886),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(70892..70896),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(70901..70907),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(70908..70912),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(70914..70918),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(70930..70934),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(70935..70936),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: next,
                                                                    span: bytes(70937..70941),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "Iterator",
                                    "Item",
                                    "T",
                                ],
                            },
                            ImplItem {
                                impl_num: 6,
                                struct_name: Name {
                                    name: "RepInterp",
                                    complete_name: "::RepInterp",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "RepInterp",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "ToTokens",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(70958..70959),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(70961..70969),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ToTokens,
                                                                span: bytes(70971..70979),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: RepInterp,
                                                            span: bytes(70984..70993),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(70994..70995),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "to_tokens",
                                            complete_name: "<::RepInterp as quote::to_tokens::ToTokens>::to_tokens",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "RepInterp as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "to_tokens",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ToTokens>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "to_tokens",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#6}::to_tokens",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: to_tokens,
                                                        span: bytes(71006..71015),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(71017..71021),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: tokens,
                                                                        span: bytes(71023..71029),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: TokenStream,
                                                                                        span: bytes(71036..71047),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Default,
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(71059..71063),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(71064..71065),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: to_tokens,
                                                                    span: bytes(71066..71075),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(71076..71082),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Some(
                                                                Semi,
                                                            ),
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "ToTokens",
                                ],
                            },
                            ImplItem {
                                impl_num: 7,
                                struct_name: Name {
                                    name: "IdentFragmentAdapter",
                                    complete_name: "::IdentFragmentAdapter",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "IdentFragmentAdapter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: None,
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(80776..80777),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(80779..80792),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: None,
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: IdentFragmentAdapter,
                                                            span: bytes(80794..80814),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(80815..80816),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "span",
                                            complete_name: "::IdentFragmentAdapter::span",
                                            import_name: MyPath {
                                                name: "",
                                                next: Some(
                                                    MyPath {
                                                        name: "IdentFragmentAdapter",
                                                        next: Some(
                                                            MyPath {
                                                                name: "span",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#7}::span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: span,
                                                        span: bytes(80831..80835),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(80837..80841),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(80846..80852),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(80853..80857),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(80869..80873),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Unnamed(
                                                                        Index {
                                                                            index: 0,
                                                                            span: bytes(80874..80875),
                                                                        },
                                                                    ),
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: span,
                                                                    span: bytes(80876..80880),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: PubT,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "IdentFragment",
                                ],
                            },
                            ImplItem {
                                impl_num: 8,
                                struct_name: Name {
                                    name: "IdentFragmentAdapter",
                                    complete_name: "::IdentFragmentAdapter",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "IdentFragmentAdapter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Display",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "Display",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(80897..80898),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(80900..80913),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(80915..80918),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Display,
                                                                span: bytes(80920..80927),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: IdentFragmentAdapter,
                                                            span: bytes(80932..80952),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(80953..80954),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<::IdentFragmentAdapter as fmt::Display>::fmt",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "IdentFragmentAdapter as fmt",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Display>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#8}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(80965..80968),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(80970..80974),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(80976..80977),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(80984..80987),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(80989..80998),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(81003..81006),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(81008..81014),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(81025..81038),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81040..81043),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(81045..81049),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(81050..81051),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(81053..81054),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "IdentFragment",
                                ],
                            },
                            ImplItem {
                                impl_num: 9,
                                struct_name: Name {
                                    name: "IdentFragmentAdapter",
                                    complete_name: "::IdentFragmentAdapter",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "IdentFragmentAdapter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Octal",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "Octal",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(81070..81071),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(81073..81086),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81089..81092),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Octal,
                                                                                    span: bytes(81094..81099),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(81101..81104),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Octal,
                                                                span: bytes(81106..81111),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: IdentFragmentAdapter,
                                                            span: bytes(81116..81136),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(81137..81138),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<::IdentFragmentAdapter as fmt::Octal>::fmt",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "IdentFragmentAdapter as fmt",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Octal>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#9}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(81149..81152),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(81154..81158),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(81160..81161),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(81168..81171),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(81173..81182),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(81187..81190),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(81192..81198),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81209..81212),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Octal,
                                                                                    span: bytes(81214..81219),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81221..81224),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(81226..81230),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(81231..81232),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(81234..81235),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "IdentFragment",
                                    "Octal",
                                    "fmt",
                                ],
                            },
                            ImplItem {
                                impl_num: 10,
                                struct_name: Name {
                                    name: "IdentFragmentAdapter",
                                    complete_name: "::IdentFragmentAdapter",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "IdentFragmentAdapter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "LowerHex",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "LowerHex",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(81251..81252),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(81254..81267),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81270..81273),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: LowerHex,
                                                                                    span: bytes(81275..81283),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(81285..81288),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: LowerHex,
                                                                span: bytes(81290..81298),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: IdentFragmentAdapter,
                                                            span: bytes(81303..81323),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(81324..81325),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<::IdentFragmentAdapter as fmt::LowerHex>::fmt",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "IdentFragmentAdapter as fmt",
                                                        next: Some(
                                                            MyPath {
                                                                name: "LowerHex>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#10}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(81336..81339),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(81341..81345),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(81347..81348),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(81355..81358),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(81360..81369),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(81374..81377),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(81379..81385),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81396..81399),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: LowerHex,
                                                                                    span: bytes(81401..81409),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81411..81414),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(81416..81420),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(81421..81422),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(81424..81425),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "IdentFragment",
                                    "LowerHex",
                                    "fmt",
                                ],
                            },
                            ImplItem {
                                impl_num: 11,
                                struct_name: Name {
                                    name: "IdentFragmentAdapter",
                                    complete_name: "::IdentFragmentAdapter",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "IdentFragmentAdapter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "UpperHex",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "UpperHex",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(81441..81442),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(81444..81457),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81460..81463),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: UpperHex,
                                                                                    span: bytes(81465..81473),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(81475..81478),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: UpperHex,
                                                                span: bytes(81480..81488),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: IdentFragmentAdapter,
                                                            span: bytes(81493..81513),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(81514..81515),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<::IdentFragmentAdapter as fmt::UpperHex>::fmt",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "IdentFragmentAdapter as fmt",
                                                        next: Some(
                                                            MyPath {
                                                                name: "UpperHex>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#11}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(81526..81529),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(81531..81535),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(81537..81538),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(81545..81548),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(81550..81559),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(81564..81567),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(81569..81575),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81586..81589),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: UpperHex,
                                                                                    span: bytes(81591..81599),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81601..81604),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(81606..81610),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(81611..81612),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(81614..81615),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "IdentFragment",
                                    "UpperHex",
                                    "fmt",
                                ],
                            },
                            ImplItem {
                                impl_num: 12,
                                struct_name: Name {
                                    name: "IdentFragmentAdapter",
                                    complete_name: "::IdentFragmentAdapter",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "IdentFragmentAdapter",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Binary",
                                        complete_name: "",
                                        import_name: MyPath {
                                            name: "fmt",
                                            next: Some(
                                                MyPath {
                                                    name: "Binary",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(81631..81632),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: IdentFragment,
                                                                                    span: bytes(81634..81647),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81650..81653),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Binary,
                                                                                    span: bytes(81655..81661),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fmt,
                                                                span: bytes(81663..81666),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Binary,
                                                                span: bytes(81668..81674),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: IdentFragmentAdapter,
                                                            span: bytes(81679..81699),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: T,
                                                                                        span: bytes(81700..81701),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "fmt",
                                            complete_name: "<::IdentFragmentAdapter as fmt::Binary>::fmt",
                                            import_name: MyPath {
                                                name: "<",
                                                next: Some(
                                                    MyPath {
                                                        name: "IdentFragmentAdapter as fmt",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Binary>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "fmt",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#12}::fmt",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: fmt,
                                                        span: bytes(81712..81715),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(81717..81721),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                        Comma,
                                                        FnArg::Typed(
                                                            PatType {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: f,
                                                                        span: bytes(81723..81724),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: fmt,
                                                                                        span: bytes(81731..81734),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Formatter,
                                                                                        span: bytes(81736..81745),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fmt,
                                                                            span: bytes(81750..81753),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Result,
                                                                            span: bytes(81755..81761),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81772..81775),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Binary,
                                                                                    span: bytes(81777..81783),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: fmt,
                                                                                    span: bytes(81785..81788),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(81790..81794),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(81795..81796),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: f,
                                                                                        span: bytes(81798..81799),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: true,
                                    },
                                ],
                                relative_types: [
                                    "Binary",
                                    "IdentFragment",
                                    "fmt",
                                ],
                            },
                        ],
                        functions: [
                            FnItem {
                                fn_name: Name {
                                    name: "get_span",
                                    complete_name: "::get_span",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "get_span",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "get_span",
                                item: Some(
                                    ItemFn {
                                        attrs: [
                                            Attribute {
                                                pound_token: Pound,
                                                style: AttrStyle::Outer,
                                                bracket_token: Bracket,
                                                meta: Meta::Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: inline,
                                                                span: bytes(71111..71117),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: get_span,
                                                span: bytes(71126..71134),
                                            },
                                            generics: Generics {
                                                lt_token: Some(
                                                    Lt,
                                                ),
                                                params: [
                                                    GenericParam::Type(
                                                        TypeParam {
                                                            attrs: [],
                                                            ident: Ident {
                                                                sym: T,
                                                                span: bytes(71135..71136),
                                                            },
                                                            colon_token: None,
                                                            bounds: [],
                                                            eq_token: None,
                                                            default: None,
                                                        },
                                                    ),
                                                ],
                                                gt_token: Some(
                                                    Gt,
                                                ),
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(71138..71142),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(71144..71145),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpan,
                                                                    span: bytes(71150..71157),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(71158..71159),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: GetSpan,
                                                                            span: bytes(71167..71174),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: GetSpanInner,
                                                                                    span: bytes(71175..71187),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: GetSpanBase,
                                                                                            span: bytes(71188..71199),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: span,
                                                                                                span: bytes(71200..71204),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_group",
                                    complete_name: "::push_group",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_group",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_group",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_group,
                                                span: bytes(72281..72291),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(72292..72298),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(72305..72316),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: delimiter,
                                                                span: bytes(72318..72327),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Delimiter,
                                                                            span: bytes(72329..72338),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: inner,
                                                                span: bytes(72340..72345),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(72347..72358),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(72366..72372),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: append,
                                                            span: bytes(72373..72379),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Group,
                                                                                    span: bytes(72380..72385),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(72387..72390),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: delimiter,
                                                                                        span: bytes(72391..72400),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: inner,
                                                                                        span: bytes(72402..72407),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_group_spanned",
                                    complete_name: "::push_group_spanned",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_group_spanned",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_group_spanned",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_group_spanned,
                                                span: bytes(72436..72454),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(72460..72466),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(72473..72484),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(72490..72494),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(72496..72500),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: delimiter,
                                                                span: bytes(72506..72515),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Delimiter,
                                                                            span: bytes(72517..72526),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: inner,
                                                                span: bytes(72532..72537),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(72539..72550),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: g,
                                                            span: bytes(72568..72569),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Group,
                                                                                    span: bytes(72572..72577),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(72579..72582),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: delimiter,
                                                                                        span: bytes(72583..72592),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: inner,
                                                                                        span: bytes(72594..72599),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: g,
                                                                            span: bytes(72606..72607),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: set_span,
                                                            span: bytes(72608..72616),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: span,
                                                                                span: bytes(72617..72621),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(72628..72634),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: append,
                                                            span: bytes(72635..72641),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: g,
                                                                                span: bytes(72642..72643),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "parse",
                                    complete_name: "::parse",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "parse",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "parse",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: parse,
                                                span: bytes(72671..72676),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(72677..72683),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(72690..72701),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(72703..72704),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(72707..72710),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Type {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(72722..72723),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(72725..72736),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: s,
                                                                                        span: bytes(72739..72740),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: parse,
                                                                        span: bytes(72741..72746),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: expect,
                                                                    span: bytes(72749..72755),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Str {
                                                                            token: "invalid token stream",
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(72785..72791),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: extend,
                                                            span: bytes(72792..72798),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(72799..72803),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: once,
                                                                                    span: bytes(72805..72809),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: s,
                                                                                        span: bytes(72810..72811),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "parse_spanned",
                                    complete_name: "::parse_spanned",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "parse_spanned",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "parse_spanned",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: parse_spanned,
                                                span: bytes(72840..72853),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(72854..72860),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(72867..72878),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(72880..72884),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(72886..72890),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(72892..72893),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(72896..72899),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Type {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(72911..72912),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(72914..72925),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: s,
                                                                                        span: bytes(72928..72929),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: parse,
                                                                        span: bytes(72930..72935),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: expect,
                                                                    span: bytes(72938..72944),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Str {
                                                                            token: "invalid token stream",
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(72974..72980),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: extend,
                                                            span: bytes(72981..72987),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: s,
                                                                                        span: bytes(72988..72989),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: into_iter,
                                                                        span: bytes(72990..72999),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: map,
                                                                    span: bytes(73002..73005),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: t,
                                                                                    span: bytes(73007..73008),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: respan_token_tree,
                                                                                                span: bytes(73010..73027),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: t,
                                                                                                    span: bytes(73028..73029),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: span,
                                                                                                    span: bytes(73031..73035),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "respan_token_tree",
                                    complete_name: "::respan_token_tree",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "respan_token_tree",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "respan_token_tree",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: respan_token_tree,
                                                span: bytes(73103..73120),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            ident: Ident {
                                                                sym: token,
                                                                span: bytes(73125..73130),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenTree,
                                                                            span: bytes(73132..73141),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(73143..73147),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(73149..73153),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: TokenTree,
                                                                    span: bytes(73158..73167),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Match {
                                                        attrs: [],
                                                        match_token: Match,
                                                        expr: Expr::Reference {
                                                            attrs: [],
                                                            and_token: And,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            expr: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: token,
                                                                                span: bytes(73185..73190),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        brace_token: Brace,
                                                        arms: [
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::TupleStruct {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: TokenTree,
                                                                                    span: bytes(73201..73210),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Group,
                                                                                    span: bytes(73212..73217),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: g,
                                                                                span: bytes(73218..73219),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Local {
                                                                                attrs: [],
                                                                                let_token: Let,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: stream,
                                                                                        span: bytes(73242..73248),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                init: Some(
                                                                                    LocalInit {
                                                                                        eq_token: Eq,
                                                                                        expr: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::MethodCall {
                                                                                                        attrs: [],
                                                                                                        receiver: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: g,
                                                                                                                            span: bytes(73251..73252),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        method: Ident {
                                                                                                            sym: stream,
                                                                                                            span: bytes(73270..73276),
                                                                                                        },
                                                                                                        turbofish: None,
                                                                                                        paren_token: Paren,
                                                                                                        args: [],
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: into_iter,
                                                                                                        span: bytes(73296..73305),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [],
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: map,
                                                                                                    span: bytes(73325..73328),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Closure {
                                                                                                        attrs: [],
                                                                                                        lifetimes: None,
                                                                                                        constness: None,
                                                                                                        movability: None,
                                                                                                        asyncness: None,
                                                                                                        capture: None,
                                                                                                        or1_token: Or,
                                                                                                        inputs: [
                                                                                                            Pat::Ident {
                                                                                                                attrs: [],
                                                                                                                by_ref: None,
                                                                                                                mutability: None,
                                                                                                                ident: Ident {
                                                                                                                    sym: token,
                                                                                                                    span: bytes(73330..73335),
                                                                                                                },
                                                                                                                subpat: None,
                                                                                                            },
                                                                                                        ],
                                                                                                        or2_token: Or,
                                                                                                        output: ReturnType::Default,
                                                                                                        body: Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: respan_token_tree,
                                                                                                                                span: bytes(73337..73354),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: token,
                                                                                                                                    span: bytes(73355..73360),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: span,
                                                                                                                                    span: bytes(73362..73366),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: collect,
                                                                                                span: bytes(73386..73393),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [],
                                                                                        },
                                                                                        diverge: None,
                                                                                    },
                                                                                ),
                                                                                semi_token: Semi,
                                                                            },
                                                                            Stmt::Expr(
                                                                                Expr::Assign {
                                                                                    attrs: [],
                                                                                    left: Expr::Unary {
                                                                                        attrs: [],
                                                                                        op: UnOp::Deref(
                                                                                            Star,
                                                                                        ),
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: g,
                                                                                                            span: bytes(73410..73411),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    eq_token: Eq,
                                                                                    right: Expr::Call {
                                                                                        attrs: [],
                                                                                        func: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Group,
                                                                                                            span: bytes(73414..73419),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: new,
                                                                                                            span: bytes(73421..73424),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        paren_token: Paren,
                                                                                        args: [
                                                                                            Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: g,
                                                                                                                    span: bytes(73425..73426),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: delimiter,
                                                                                                    span: bytes(73427..73436),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                            Comma,
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: stream,
                                                                                                                span: bytes(73440..73446),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::MethodCall {
                                                                                    attrs: [],
                                                                                    receiver: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: g,
                                                                                                        span: bytes(73461..73462),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    method: Ident {
                                                                                        sym: set_span,
                                                                                        span: bytes(73463..73471),
                                                                                    },
                                                                                    turbofish: None,
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: span,
                                                                                                            span: bytes(73472..73476),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                Some(
                                                                                    Semi,
                                                                                ),
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                                comma: None,
                                                            },
                                                            Arm {
                                                                attrs: [],
                                                                pat: Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: other,
                                                                        span: bytes(73497..73502),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                guard: None,
                                                                fat_arrow_token: FatArrow,
                                                                body: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: other,
                                                                                        span: bytes(73506..73511),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: set_span,
                                                                        span: bytes(73512..73520),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: span,
                                                                                            span: bytes(73521..73525),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                comma: Some(
                                                                    Comma,
                                                                ),
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                                Stmt::Expr(
                                                    Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: token,
                                                                        span: bytes(73538..73543),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_ident",
                                    complete_name: "::push_ident",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_ident",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_ident",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_ident,
                                                span: bytes(73569..73579),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(73580..73586),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(73593..73604),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(73606..73607),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(73610..73613),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: span,
                                                            span: bytes(73625..73629),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Span,
                                                                                    span: bytes(73632..73636),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: call_site,
                                                                                    span: bytes(73638..73647),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: push_ident_spanned,
                                                                            span: bytes(73655..73673),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: tokens,
                                                                                span: bytes(73674..73680),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: span,
                                                                                span: bytes(73682..73686),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: s,
                                                                                span: bytes(73688..73689),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_ident_spanned",
                                    complete_name: "::push_ident_spanned",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_ident_spanned",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_ident_spanned",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_ident_spanned,
                                                span: bytes(73717..73735),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(73736..73742),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(73749..73760),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(73762..73766),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(73768..73772),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: s,
                                                                span: bytes(73774..73775),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(73778..73781),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(73789..73795),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: append,
                                                            span: bytes(73796..73802),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ident_maybe_raw,
                                                                                    span: bytes(73803..73818),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: s,
                                                                                        span: bytes(73819..73820),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: span,
                                                                                        span: bytes(73822..73826),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_lifetime",
                                    complete_name: "::push_lifetime",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_lifetime",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_lifetime",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_lifetime,
                                                span: bytes(73855..73868),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(73869..73875),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(73882..73893),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: lifetime,
                                                                span: bytes(73895..73903),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(73906..73909),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Item(
                                                    Item::Struct {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        struct_token: Struct,
                                                        ident: Ident {
                                                            sym: Lifetime,
                                                            span: bytes(73924..73932),
                                                        },
                                                        generics: Generics {
                                                            lt_token: Some(
                                                                Lt,
                                                            ),
                                                            params: [
                                                                GenericParam::Lifetime(
                                                                    LifetimeParam {
                                                                        attrs: [],
                                                                        lifetime: Lifetime {
                                                                            apostrophe: bytes(73933..73934),
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(73934..73935),
                                                                            },
                                                                        },
                                                                        colon_token: None,
                                                                        bounds: [],
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Some(
                                                                Gt,
                                                            ),
                                                            where_clause: None,
                                                        },
                                                        fields: Fields::Named {
                                                            brace_token: Brace,
                                                            named: [
                                                                Field {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    mutability: FieldMutability::None,
                                                                    ident: Some(
                                                                        Ident {
                                                                            sym: name,
                                                                            span: bytes(73947..73951),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    ty: Type::Reference {
                                                                        and_token: And,
                                                                        lifetime: Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(73954..73955),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(73955..73956),
                                                                                },
                                                                            },
                                                                        ),
                                                                        mutability: None,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: str,
                                                                                            span: bytes(73957..73960),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                Field {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    mutability: FieldMutability::None,
                                                                    ident: Some(
                                                                        Ident {
                                                                            sym: state,
                                                                            span: bytes(73970..73975),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u8,
                                                                                        span: bytes(73977..73979),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                            ],
                                                        },
                                                        semi_token: None,
                                                    },
                                                ),
                                                Stmt::Item(
                                                    Item::Impl {
                                                        attrs: [],
                                                        defaultness: None,
                                                        unsafety: None,
                                                        impl_token: Impl,
                                                        generics: Generics {
                                                            lt_token: Some(
                                                                Lt,
                                                            ),
                                                            params: [
                                                                GenericParam::Lifetime(
                                                                    LifetimeParam {
                                                                        attrs: [],
                                                                        lifetime: Lifetime {
                                                                            apostrophe: bytes(73997..73998),
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(73998..73999),
                                                                            },
                                                                        },
                                                                        colon_token: None,
                                                                        bounds: [],
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Some(
                                                                Gt,
                                                            ),
                                                            where_clause: None,
                                                        },
                                                        trait_: Some(
                                                            (
                                                                None,
                                                                Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Iterator,
                                                                                span: bytes(74001..74009),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                For,
                                                            ),
                                                        ),
                                                        self_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Lifetime,
                                                                            span: bytes(74014..74022),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(74023..74024),
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(74024..74025),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        brace_token: Brace,
                                                        items: [
                                                            ImplItem::Type {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                defaultness: None,
                                                                type_token: Type,
                                                                ident: Ident {
                                                                    sym: Item,
                                                                    span: bytes(74042..74046),
                                                                },
                                                                generics: Generics {
                                                                    lt_token: None,
                                                                    params: [],
                                                                    gt_token: None,
                                                                    where_clause: None,
                                                                },
                                                                eq_token: Eq,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: TokenTree,
                                                                                    span: bytes(74049..74058),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                semi_token: Semi,
                                                            },
                                                            ImplItem::Fn {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                defaultness: None,
                                                                sig: Signature {
                                                                    constness: None,
                                                                    asyncness: None,
                                                                    unsafety: None,
                                                                    abi: None,
                                                                    fn_token: Fn,
                                                                    ident: Ident {
                                                                        sym: next,
                                                                        span: bytes(74072..74076),
                                                                    },
                                                                    generics: Generics {
                                                                        lt_token: None,
                                                                        params: [],
                                                                        gt_token: None,
                                                                        where_clause: None,
                                                                    },
                                                                    paren_token: Paren,
                                                                    inputs: [
                                                                        FnArg::Receiver(
                                                                            Receiver {
                                                                                attrs: [],
                                                                                reference: Some(
                                                                                    (
                                                                                        And,
                                                                                        None,
                                                                                    ),
                                                                                ),
                                                                                mutability: Some(
                                                                                    Mut,
                                                                                ),
                                                                                self_token: SelfValue,
                                                                                colon_token: None,
                                                                                ty: Type::Reference {
                                                                                    and_token: And,
                                                                                    lifetime: None,
                                                                                    mutability: Some(
                                                                                        Mut,
                                                                                    ),
                                                                                    elem: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(74082..74086),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    variadic: None,
                                                                    output: ReturnType::Type(
                                                                        RArrow,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Option,
                                                                                            span: bytes(74091..74097),
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: None,
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Type(
                                                                                                    Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Self,
                                                                                                                        span: bytes(74098..74102),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Item,
                                                                                                                        span: bytes(74104..74108),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                },
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Match {
                                                                                attrs: [],
                                                                                match_token: Match,
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(74130..74134),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: state,
                                                                                            span: bytes(74135..74140),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                brace_token: Brace,
                                                                                arms: [
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 0,
                                                                                            },
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::Block {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            block: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Assign {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(74186..74190),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: state,
                                                                                                                        span: bytes(74191..74196),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            eq_token: Eq,
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Some,
                                                                                                                                span: bytes(74222..74226),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: TokenTree,
                                                                                                                                        span: bytes(74227..74236),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Punct,
                                                                                                                                        span: bytes(74238..74243),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Call {
                                                                                                                            attrs: [],
                                                                                                                            func: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: Punct,
                                                                                                                                                span: bytes(74244..74249),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                        PathSep,
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: new,
                                                                                                                                                span: bytes(74251..74254),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [
                                                                                                                                Expr::Lit {
                                                                                                                                    attrs: [],
                                                                                                                                    lit: Lit::Char {
                                                                                                                                        token: '\'',
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                Comma,
                                                                                                                                Expr::Path {
                                                                                                                                    attrs: [],
                                                                                                                                    qself: None,
                                                                                                                                    path: Path {
                                                                                                                                        leading_colon: None,
                                                                                                                                        segments: [
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: Spacing,
                                                                                                                                                    span: bytes(74261..74268),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                            PathSep,
                                                                                                                                            PathSegment {
                                                                                                                                                ident: Ident {
                                                                                                                                                    sym: Joint,
                                                                                                                                                    span: bytes(74270..74275),
                                                                                                                                                },
                                                                                                                                                arguments: PathArguments::None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        comma: None,
                                                                                    },
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::Block {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            block: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Assign {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(74340..74344),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: state,
                                                                                                                        span: bytes(74345..74350),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            eq_token: Eq,
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 2,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Some,
                                                                                                                                span: bytes(74376..74380),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: TokenTree,
                                                                                                                                        span: bytes(74381..74390),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Ident,
                                                                                                                                        span: bytes(74392..74397),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Call {
                                                                                                                            attrs: [],
                                                                                                                            func: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: Ident,
                                                                                                                                                span: bytes(74398..74403),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                        PathSep,
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: new,
                                                                                                                                                span: bytes(74405..74408),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [
                                                                                                                                Expr::Field {
                                                                                                                                    attrs: [],
                                                                                                                                    base: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: self,
                                                                                                                                                        span: bytes(74409..74413),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    dot_token: Dot,
                                                                                                                                    member: Member::Named(
                                                                                                                                        Ident {
                                                                                                                                            sym: name,
                                                                                                                                            span: bytes(74414..74418),
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                                Comma,
                                                                                                                                Expr::Call {
                                                                                                                                    attrs: [],
                                                                                                                                    func: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: Span,
                                                                                                                                                        span: bytes(74420..74424),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                                PathSep,
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: call_site,
                                                                                                                                                        span: bytes(74426..74435),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    paren_token: Paren,
                                                                                                                                    args: [],
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        comma: None,
                                                                                    },
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::Wild {
                                                                                            attrs: [],
                                                                                            underscore_token: Underscore,
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: None,
                                                                                                            span: bytes(74480..74484),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        comma: Some(
                                                                                            Comma,
                                                                                        ),
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ),
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(74521..74527),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: extend,
                                                            span: bytes(74528..74534),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Lifetime,
                                                                                span: bytes(74535..74543),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: name,
                                                                                span: bytes(74554..74558),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            expr: Expr::Index {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: lifetime,
                                                                                                    span: bytes(74561..74569),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                bracket_token: Bracket,
                                                                                index: Expr::Range {
                                                                                    attrs: [],
                                                                                    start: Some(
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                    limits: RangeLimits::HalfOpen(
                                                                                        DotDot,
                                                                                    ),
                                                                                    end: None,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: state,
                                                                                span: bytes(74584..74589),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [
                                    Item::Struct {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: Lifetime,
                                            span: bytes(73924..73932),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(73933..73934),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(73934..73935),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Named {
                                            brace_token: Brace,
                                            named: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: name,
                                                            span: bytes(73947..73951),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Reference {
                                                        and_token: And,
                                                        lifetime: Some(
                                                            Lifetime {
                                                                apostrophe: bytes(73954..73955),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(73955..73956),
                                                                },
                                                            },
                                                        ),
                                                        mutability: None,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: str,
                                                                            span: bytes(73957..73960),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(73970..73975),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(73977..73979),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                            ],
                                        },
                                        semi_token: None,
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(73997..73998),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(73998..73999),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Iterator,
                                                                span: bytes(74001..74009),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Lifetime,
                                                            span: bytes(74014..74022),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(74023..74024),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(74024..74025),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Item,
                                                    span: bytes(74042..74046),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: TokenTree,
                                                                    span: bytes(74049..74058),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next,
                                                        span: bytes(74072..74076),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(74082..74086),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(74091..74097),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(74098..74102),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(74104..74108),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Match {
                                                                attrs: [],
                                                                match_token: Match,
                                                                expr: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(74130..74134),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: state,
                                                                            span: bytes(74135..74140),
                                                                        },
                                                                    ),
                                                                },
                                                                brace_token: Brace,
                                                                arms: [
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(74186..74190),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: state,
                                                                                                        span: bytes(74191..74196),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Some,
                                                                                                                span: bytes(74222..74226),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: TokenTree,
                                                                                                                        span: bytes(74227..74236),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Punct,
                                                                                                                        span: bytes(74238..74243),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Punct,
                                                                                                                                span: bytes(74244..74249),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: new,
                                                                                                                                span: bytes(74251..74254),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Char {
                                                                                                                        token: '\'',
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: Spacing,
                                                                                                                                    span: bytes(74261..74268),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                            PathSep,
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: Joint,
                                                                                                                                    span: bytes(74270..74275),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: None,
                                                                    },
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(74340..74344),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: state,
                                                                                                        span: bytes(74345..74350),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 2,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Some,
                                                                                                                span: bytes(74376..74380),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: TokenTree,
                                                                                                                        span: bytes(74381..74390),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Ident,
                                                                                                                        span: bytes(74392..74397),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Ident,
                                                                                                                                span: bytes(74398..74403),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: new,
                                                                                                                                span: bytes(74405..74408),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Field {
                                                                                                                    attrs: [],
                                                                                                                    base: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: self,
                                                                                                                                        span: bytes(74409..74413),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    member: Member::Named(
                                                                                                                        Ident {
                                                                                                                            sym: name,
                                                                                                                            span: bytes(74414..74418),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Span,
                                                                                                                                        span: bytes(74420..74424),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: call_site,
                                                                                                                                        span: bytes(74426..74435),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: None,
                                                                    },
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Wild {
                                                                            attrs: [],
                                                                            underscore_token: Underscore,
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: None,
                                                                                            span: bytes(74480..74484),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: Some(
                                                                            Comma,
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_lifetime_spanned",
                                    complete_name: "::push_lifetime_spanned",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_lifetime_spanned",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_lifetime_spanned",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_lifetime_spanned,
                                                span: bytes(74627..74648),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(74649..74655),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(74662..74673),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(74675..74679),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(74681..74685),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: lifetime,
                                                                span: bytes(74687..74695),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(74698..74701),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Item(
                                                    Item::Struct {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        struct_token: Struct,
                                                        ident: Ident {
                                                            sym: Lifetime,
                                                            span: bytes(74716..74724),
                                                        },
                                                        generics: Generics {
                                                            lt_token: Some(
                                                                Lt,
                                                            ),
                                                            params: [
                                                                GenericParam::Lifetime(
                                                                    LifetimeParam {
                                                                        attrs: [],
                                                                        lifetime: Lifetime {
                                                                            apostrophe: bytes(74725..74726),
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(74726..74727),
                                                                            },
                                                                        },
                                                                        colon_token: None,
                                                                        bounds: [],
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Some(
                                                                Gt,
                                                            ),
                                                            where_clause: None,
                                                        },
                                                        fields: Fields::Named {
                                                            brace_token: Brace,
                                                            named: [
                                                                Field {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    mutability: FieldMutability::None,
                                                                    ident: Some(
                                                                        Ident {
                                                                            sym: name,
                                                                            span: bytes(74739..74743),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    ty: Type::Reference {
                                                                        and_token: And,
                                                                        lifetime: Some(
                                                                            Lifetime {
                                                                                apostrophe: bytes(74746..74747),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(74747..74748),
                                                                                },
                                                                            },
                                                                        ),
                                                                        mutability: None,
                                                                        elem: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: str,
                                                                                            span: bytes(74749..74752),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                Field {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    mutability: FieldMutability::None,
                                                                    ident: Some(
                                                                        Ident {
                                                                            sym: span,
                                                                            span: bytes(74762..74766),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Span,
                                                                                        span: bytes(74768..74772),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                                Field {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    mutability: FieldMutability::None,
                                                                    ident: Some(
                                                                        Ident {
                                                                            sym: state,
                                                                            span: bytes(74782..74787),
                                                                        },
                                                                    ),
                                                                    colon_token: Some(
                                                                        Colon,
                                                                    ),
                                                                    ty: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: u8,
                                                                                        span: bytes(74789..74791),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                Comma,
                                                            ],
                                                        },
                                                        semi_token: None,
                                                    },
                                                ),
                                                Stmt::Item(
                                                    Item::Impl {
                                                        attrs: [],
                                                        defaultness: None,
                                                        unsafety: None,
                                                        impl_token: Impl,
                                                        generics: Generics {
                                                            lt_token: Some(
                                                                Lt,
                                                            ),
                                                            params: [
                                                                GenericParam::Lifetime(
                                                                    LifetimeParam {
                                                                        attrs: [],
                                                                        lifetime: Lifetime {
                                                                            apostrophe: bytes(74809..74810),
                                                                            ident: Ident {
                                                                                sym: a,
                                                                                span: bytes(74810..74811),
                                                                            },
                                                                        },
                                                                        colon_token: None,
                                                                        bounds: [],
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Some(
                                                                Gt,
                                                            ),
                                                            where_clause: None,
                                                        },
                                                        trait_: Some(
                                                            (
                                                                None,
                                                                Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Iterator,
                                                                                span: bytes(74813..74821),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                For,
                                                            ),
                                                        ),
                                                        self_ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Lifetime,
                                                                            span: bytes(74826..74834),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(74835..74836),
                                                                                        ident: Ident {
                                                                                            sym: a,
                                                                                            span: bytes(74836..74837),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        brace_token: Brace,
                                                        items: [
                                                            ImplItem::Type {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                defaultness: None,
                                                                type_token: Type,
                                                                ident: Ident {
                                                                    sym: Item,
                                                                    span: bytes(74854..74858),
                                                                },
                                                                generics: Generics {
                                                                    lt_token: None,
                                                                    params: [],
                                                                    gt_token: None,
                                                                    where_clause: None,
                                                                },
                                                                eq_token: Eq,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: TokenTree,
                                                                                    span: bytes(74861..74870),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                semi_token: Semi,
                                                            },
                                                            ImplItem::Fn {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                defaultness: None,
                                                                sig: Signature {
                                                                    constness: None,
                                                                    asyncness: None,
                                                                    unsafety: None,
                                                                    abi: None,
                                                                    fn_token: Fn,
                                                                    ident: Ident {
                                                                        sym: next,
                                                                        span: bytes(74884..74888),
                                                                    },
                                                                    generics: Generics {
                                                                        lt_token: None,
                                                                        params: [],
                                                                        gt_token: None,
                                                                        where_clause: None,
                                                                    },
                                                                    paren_token: Paren,
                                                                    inputs: [
                                                                        FnArg::Receiver(
                                                                            Receiver {
                                                                                attrs: [],
                                                                                reference: Some(
                                                                                    (
                                                                                        And,
                                                                                        None,
                                                                                    ),
                                                                                ),
                                                                                mutability: Some(
                                                                                    Mut,
                                                                                ),
                                                                                self_token: SelfValue,
                                                                                colon_token: None,
                                                                                ty: Type::Reference {
                                                                                    and_token: And,
                                                                                    lifetime: None,
                                                                                    mutability: Some(
                                                                                        Mut,
                                                                                    ),
                                                                                    elem: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(74894..74898),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    variadic: None,
                                                                    output: ReturnType::Type(
                                                                        RArrow,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Option,
                                                                                            span: bytes(74903..74909),
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: None,
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Type(
                                                                                                    Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Self,
                                                                                                                        span: bytes(74910..74914),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Item,
                                                                                                                        span: bytes(74916..74920),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                },
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Match {
                                                                                attrs: [],
                                                                                match_token: Match,
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(74942..74946),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Named(
                                                                                        Ident {
                                                                                            sym: state,
                                                                                            span: bytes(74947..74952),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                brace_token: Brace,
                                                                                arms: [
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 0,
                                                                                            },
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::Block {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            block: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Assign {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(74998..75002),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: state,
                                                                                                                        span: bytes(75003..75008),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            eq_token: Eq,
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 1,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                    Stmt::Local {
                                                                                                        attrs: [],
                                                                                                        let_token: Let,
                                                                                                        pat: Pat::Ident {
                                                                                                            attrs: [],
                                                                                                            by_ref: None,
                                                                                                            mutability: Some(
                                                                                                                Mut,
                                                                                                            ),
                                                                                                            ident: Ident {
                                                                                                                sym: apostrophe,
                                                                                                                span: bytes(75042..75052),
                                                                                                            },
                                                                                                            subpat: None,
                                                                                                        },
                                                                                                        init: Some(
                                                                                                            LocalInit {
                                                                                                                eq_token: Eq,
                                                                                                                expr: Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Punct,
                                                                                                                                        span: bytes(75055..75060),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: new,
                                                                                                                                        span: bytes(75062..75065),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Char {
                                                                                                                                token: '\'',
                                                                                                                            },
                                                                                                                        },
                                                                                                                        Comma,
                                                                                                                        Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: Spacing,
                                                                                                                                            span: bytes(75072..75079),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                    PathSep,
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: Joint,
                                                                                                                                            span: bytes(75081..75086),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                                diverge: None,
                                                                                                            },
                                                                                                        ),
                                                                                                        semi_token: Semi,
                                                                                                    },
                                                                                                    Stmt::Expr(
                                                                                                        Expr::MethodCall {
                                                                                                            attrs: [],
                                                                                                            receiver: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: apostrophe,
                                                                                                                                span: bytes(75109..75119),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            method: Ident {
                                                                                                                sym: set_span,
                                                                                                                span: bytes(75120..75128),
                                                                                                            },
                                                                                                            turbofish: None,
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Field {
                                                                                                                    attrs: [],
                                                                                                                    base: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: self,
                                                                                                                                        span: bytes(75129..75133),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    member: Member::Named(
                                                                                                                        Ident {
                                                                                                                            sym: span,
                                                                                                                            span: bytes(75134..75138),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Some,
                                                                                                                                span: bytes(75161..75165),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: TokenTree,
                                                                                                                                        span: bytes(75166..75175),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Punct,
                                                                                                                                        span: bytes(75177..75182),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: apostrophe,
                                                                                                                                            span: bytes(75183..75193),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        comma: None,
                                                                                    },
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::Block {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            block: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Assign {
                                                                                                            attrs: [],
                                                                                                            left: Expr::Field {
                                                                                                                attrs: [],
                                                                                                                base: Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: self,
                                                                                                                                    span: bytes(75257..75261),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                dot_token: Dot,
                                                                                                                member: Member::Named(
                                                                                                                    Ident {
                                                                                                                        sym: state,
                                                                                                                        span: bytes(75262..75267),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            eq_token: Eq,
                                                                                                            right: Expr::Lit {
                                                                                                                attrs: [],
                                                                                                                lit: Lit::Int {
                                                                                                                    token: 2,
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        Some(
                                                                                                            Semi,
                                                                                                        ),
                                                                                                    ),
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Some,
                                                                                                                                span: bytes(75293..75297),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: TokenTree,
                                                                                                                                        span: bytes(75298..75307),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Ident,
                                                                                                                                        span: bytes(75309..75314),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Call {
                                                                                                                            attrs: [],
                                                                                                                            func: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: Ident,
                                                                                                                                                span: bytes(75315..75320),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                        PathSep,
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: new,
                                                                                                                                                span: bytes(75322..75325),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [
                                                                                                                                Expr::Field {
                                                                                                                                    attrs: [],
                                                                                                                                    base: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: self,
                                                                                                                                                        span: bytes(75326..75330),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    dot_token: Dot,
                                                                                                                                    member: Member::Named(
                                                                                                                                        Ident {
                                                                                                                                            sym: name,
                                                                                                                                            span: bytes(75331..75335),
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                                Comma,
                                                                                                                                Expr::Field {
                                                                                                                                    attrs: [],
                                                                                                                                    base: Expr::Path {
                                                                                                                                        attrs: [],
                                                                                                                                        qself: None,
                                                                                                                                        path: Path {
                                                                                                                                            leading_colon: None,
                                                                                                                                            segments: [
                                                                                                                                                PathSegment {
                                                                                                                                                    ident: Ident {
                                                                                                                                                        sym: self,
                                                                                                                                                        span: bytes(75337..75341),
                                                                                                                                                    },
                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    dot_token: Dot,
                                                                                                                                    member: Member::Named(
                                                                                                                                        Ident {
                                                                                                                                            sym: span,
                                                                                                                                            span: bytes(75342..75346),
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        comma: None,
                                                                                    },
                                                                                    Arm {
                                                                                        attrs: [],
                                                                                        pat: Pat::Wild {
                                                                                            attrs: [],
                                                                                            underscore_token: Underscore,
                                                                                        },
                                                                                        guard: None,
                                                                                        fat_arrow_token: FatArrow,
                                                                                        body: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: None,
                                                                                                            span: bytes(75389..75393),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        comma: Some(
                                                                                            Comma,
                                                                                        ),
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ),
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(75430..75436),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: extend,
                                                            span: bytes(75437..75443),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Struct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Lifetime,
                                                                                span: bytes(75444..75452),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                brace_token: Brace,
                                                                fields: [
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: name,
                                                                                span: bytes(75463..75467),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            expr: Expr::Index {
                                                                                attrs: [],
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: lifetime,
                                                                                                    span: bytes(75470..75478),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                bracket_token: Bracket,
                                                                                index: Expr::Range {
                                                                                    attrs: [],
                                                                                    start: Some(
                                                                                        Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                    limits: RangeLimits::HalfOpen(
                                                                                        DotDot,
                                                                                    ),
                                                                                    end: None,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: span,
                                                                                span: bytes(75493..75497),
                                                                            },
                                                                        ),
                                                                        colon_token: None,
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: span,
                                                                                            span: bytes(75493..75497),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    FieldValue {
                                                                        attrs: [],
                                                                        member: Member::Named(
                                                                            Ident {
                                                                                sym: state,
                                                                                span: bytes(75507..75512),
                                                                            },
                                                                        ),
                                                                        colon_token: Some(
                                                                            Colon,
                                                                        ),
                                                                        expr: Expr::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                    },
                                                                    Comma,
                                                                ],
                                                                dot2_token: None,
                                                                rest: None,
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [
                                    Item::Struct {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        struct_token: Struct,
                                        ident: Ident {
                                            sym: Lifetime,
                                            span: bytes(74716..74724),
                                        },
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(74725..74726),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(74726..74727),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        fields: Fields::Named {
                                            brace_token: Brace,
                                            named: [
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: name,
                                                            span: bytes(74739..74743),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Reference {
                                                        and_token: And,
                                                        lifetime: Some(
                                                            Lifetime {
                                                                apostrophe: bytes(74746..74747),
                                                                ident: Ident {
                                                                    sym: a,
                                                                    span: bytes(74747..74748),
                                                                },
                                                            },
                                                        ),
                                                        mutability: None,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: str,
                                                                            span: bytes(74749..74752),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: span,
                                                            span: bytes(74762..74766),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Span,
                                                                        span: bytes(74768..74772),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                                Field {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    mutability: FieldMutability::None,
                                                    ident: Some(
                                                        Ident {
                                                            sym: state,
                                                            span: bytes(74782..74787),
                                                        },
                                                    ),
                                                    colon_token: Some(
                                                        Colon,
                                                    ),
                                                    ty: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u8,
                                                                        span: bytes(74789..74791),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                Comma,
                                            ],
                                        },
                                        semi_token: None,
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Lifetime(
                                                    LifetimeParam {
                                                        attrs: [],
                                                        lifetime: Lifetime {
                                                            apostrophe: bytes(74809..74810),
                                                            ident: Ident {
                                                                sym: a,
                                                                span: bytes(74810..74811),
                                                            },
                                                        },
                                                        colon_token: None,
                                                        bounds: [],
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Iterator,
                                                                span: bytes(74813..74821),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Lifetime,
                                                            span: bytes(74826..74834),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Lifetime(
                                                                    Lifetime {
                                                                        apostrophe: bytes(74835..74836),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(74836..74837),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [
                                            ImplItem::Type {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                type_token: Type,
                                                ident: Ident {
                                                    sym: Item,
                                                    span: bytes(74854..74858),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                eq_token: Eq,
                                                ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: TokenTree,
                                                                    span: bytes(74861..74870),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                semi_token: Semi,
                                            },
                                            ImplItem::Fn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: next,
                                                        span: bytes(74884..74888),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: Some(
                                                                    Mut,
                                                                ),
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: Some(
                                                                        Mut,
                                                                    ),
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(74894..74898),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(74903..74909),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Self,
                                                                                                        span: bytes(74910..74914),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Item,
                                                                                                        span: bytes(74916..74920),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Match {
                                                                attrs: [],
                                                                match_token: Match,
                                                                expr: Expr::Field {
                                                                    attrs: [],
                                                                    base: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: self,
                                                                                        span: bytes(74942..74946),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    member: Member::Named(
                                                                        Ident {
                                                                            sym: state,
                                                                            span: bytes(74947..74952),
                                                                        },
                                                                    ),
                                                                },
                                                                brace_token: Brace,
                                                                arms: [
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 0,
                                                                            },
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(74998..75002),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: state,
                                                                                                        span: bytes(75003..75008),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 1,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Local {
                                                                                        attrs: [],
                                                                                        let_token: Let,
                                                                                        pat: Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: Some(
                                                                                                Mut,
                                                                                            ),
                                                                                            ident: Ident {
                                                                                                sym: apostrophe,
                                                                                                span: bytes(75042..75052),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        init: Some(
                                                                                            LocalInit {
                                                                                                eq_token: Eq,
                                                                                                expr: Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Punct,
                                                                                                                        span: bytes(75055..75060),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: new,
                                                                                                                        span: bytes(75062..75065),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Char {
                                                                                                                token: '\'',
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Spacing,
                                                                                                                            span: bytes(75072..75079),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: Joint,
                                                                                                                            span: bytes(75081..75086),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                diverge: None,
                                                                                            },
                                                                                        ),
                                                                                        semi_token: Semi,
                                                                                    },
                                                                                    Stmt::Expr(
                                                                                        Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: apostrophe,
                                                                                                                span: bytes(75109..75119),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: set_span,
                                                                                                span: bytes(75120..75128),
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Field {
                                                                                                    attrs: [],
                                                                                                    base: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: self,
                                                                                                                        span: bytes(75129..75133),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    member: Member::Named(
                                                                                                        Ident {
                                                                                                            sym: span,
                                                                                                            span: bytes(75134..75138),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Some,
                                                                                                                span: bytes(75161..75165),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: TokenTree,
                                                                                                                        span: bytes(75166..75175),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Punct,
                                                                                                                        span: bytes(75177..75182),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: apostrophe,
                                                                                                                            span: bytes(75183..75193),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: None,
                                                                    },
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Lit {
                                                                            attrs: [],
                                                                            lit: Lit::Int {
                                                                                token: 1,
                                                                            },
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Block {
                                                                            attrs: [],
                                                                            label: None,
                                                                            block: Block {
                                                                                brace_token: Brace,
                                                                                stmts: [
                                                                                    Stmt::Expr(
                                                                                        Expr::Assign {
                                                                                            attrs: [],
                                                                                            left: Expr::Field {
                                                                                                attrs: [],
                                                                                                base: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: self,
                                                                                                                    span: bytes(75257..75261),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                member: Member::Named(
                                                                                                    Ident {
                                                                                                        sym: state,
                                                                                                        span: bytes(75262..75267),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            eq_token: Eq,
                                                                                            right: Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 2,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        Some(
                                                                                            Semi,
                                                                                        ),
                                                                                    ),
                                                                                    Stmt::Expr(
                                                                                        Expr::Call {
                                                                                            attrs: [],
                                                                                            func: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Some,
                                                                                                                span: bytes(75293..75297),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            paren_token: Paren,
                                                                                            args: [
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: TokenTree,
                                                                                                                        span: bytes(75298..75307),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Ident,
                                                                                                                        span: bytes(75309..75314),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Ident,
                                                                                                                                span: bytes(75315..75320),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: new,
                                                                                                                                span: bytes(75322..75325),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Field {
                                                                                                                    attrs: [],
                                                                                                                    base: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: self,
                                                                                                                                        span: bytes(75326..75330),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    member: Member::Named(
                                                                                                                        Ident {
                                                                                                                            sym: name,
                                                                                                                            span: bytes(75331..75335),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::Field {
                                                                                                                    attrs: [],
                                                                                                                    base: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: self,
                                                                                                                                        span: bytes(75337..75341),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    dot_token: Dot,
                                                                                                                    member: Member::Named(
                                                                                                                        Ident {
                                                                                                                            sym: span,
                                                                                                                            span: bytes(75342..75346),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        None,
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: None,
                                                                    },
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Wild {
                                                                            attrs: [],
                                                                            underscore_token: Underscore,
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: None,
                                                                                            span: bytes(75389..75393),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: Some(
                                                                            Comma,
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_underscore",
                                    complete_name: "::push_underscore",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_underscore",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_underscore",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_underscore,
                                                span: bytes(79676..79691),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(79692..79698),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(79705..79716),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: push_underscore_spanned,
                                                                            span: bytes(79724..79747),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: tokens,
                                                                                span: bytes(79748..79754),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Span,
                                                                                    span: bytes(79756..79760),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: call_site,
                                                                                    span: bytes(79762..79771),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "push_underscore_spanned",
                                    complete_name: "::push_underscore_spanned",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "push_underscore_spanned",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "push_underscore_spanned",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: push_underscore_spanned,
                                                span: bytes(79801..79824),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(79825..79831),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: Some(
                                                                Mut,
                                                            ),
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: TokenStream,
                                                                                span: bytes(79838..79849),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(79851..79855),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(79857..79861),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Default,
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokens,
                                                                            span: bytes(79869..79875),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: append,
                                                            span: bytes(79876..79882),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Ident,
                                                                                    span: bytes(79883..79888),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: new,
                                                                                    span: bytes(79890..79893),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Str {
                                                                            token: "_",
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: span,
                                                                                        span: bytes(79899..79903),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                    Some(
                                                        Semi,
                                                    ),
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "mk_ident",
                                    complete_name: "::mk_ident",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "mk_ident",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "mk_ident",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: mk_ident,
                                                span: bytes(80037..80045),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: id,
                                                                span: bytes(80046..80048),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(80051..80054),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(80056..80060),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Option,
                                                                            span: bytes(80062..80068),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(80069..80073),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Ident,
                                                                    span: bytes(80079..80084),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: span,
                                                            span: bytes(80095..80099),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: span,
                                                                                    span: bytes(80102..80106),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: unwrap_or_else,
                                                                    span: bytes(80107..80121),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Span,
                                                                                        span: bytes(80122..80126),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: call_site,
                                                                                        span: bytes(80128..80137),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ident_maybe_raw,
                                                                            span: bytes(80144..80159),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: id,
                                                                                span: bytes(80160..80162),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: span,
                                                                                span: bytes(80164..80168),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: PubT,
                            },
                            FnItem {
                                fn_name: Name {
                                    name: "ident_maybe_raw",
                                    complete_name: "::ident_maybe_raw",
                                    import_name: MyPath {
                                        name: "",
                                        next: Some(
                                            MyPath {
                                                name: "ident_maybe_raw",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "ident_maybe_raw",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: ident_maybe_raw,
                                                span: bytes(80176..80191),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: id,
                                                                span: bytes(80192..80194),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Reference {
                                                            and_token: And,
                                                            lifetime: None,
                                                            mutability: None,
                                                            elem: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: str,
                                                                                span: bytes(80197..80200),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    },
                                                ),
                                                Comma,
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: span,
                                                                span: bytes(80202..80206),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(80208..80212),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Ident,
                                                                    span: bytes(80217..80222),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Expr(
                                                    Expr::If {
                                                        attrs: [],
                                                        if_token: If,
                                                        cond: Expr::Let {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::TupleStruct {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Some,
                                                                                span: bytes(80236..80240),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: id,
                                                                            span: bytes(80241..80243),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                ],
                                                            },
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: id,
                                                                                    span: bytes(80247..80249),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: strip_prefix,
                                                                    span: bytes(80250..80262),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Str {
                                                                            token: "r#",
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        then_branch: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Ident,
                                                                                            span: bytes(80279..80284),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: new_raw,
                                                                                            span: bytes(80286..80293),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: id,
                                                                                                span: bytes(80294..80296),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: span,
                                                                                                span: bytes(80298..80302),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                        else_branch: Some(
                                                            (
                                                                Else,
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Expr(
                                                                                Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Ident,
                                                                                                        span: bytes(80325..80330),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: new,
                                                                                                        span: bytes(80332..80335),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: id,
                                                                                                            span: bytes(80336..80338),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: span,
                                                                                                            span: bytes(80340..80344),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                            },
                        ],
                        traits: [],
                        use_trees: [
                            UseTree {
                                use_name: "GetSpan",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "",
                                    next: Some(
                                        MyPath {
                                            name: "get_span",
                                            next: Some(
                                                MyPath {
                                                    name: "GetSpan",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "GetSpanBase",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "",
                                    next: Some(
                                        MyPath {
                                            name: "get_span",
                                            next: Some(
                                                MyPath {
                                                    name: "GetSpanBase",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "GetSpanInner",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "",
                                    next: Some(
                                        MyPath {
                                            name: "get_span",
                                            next: Some(
                                                MyPath {
                                                    name: "GetSpanInner",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "IdentFragment",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "quote",
                                    next: Some(
                                        MyPath {
                                            name: "ident_fragment",
                                            next: Some(
                                                MyPath {
                                                    name: "IdentFragment",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "ToTokens",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "quote",
                                    next: Some(
                                        MyPath {
                                            name: "to_tokens",
                                            next: Some(
                                                MyPath {
                                                    name: "ToTokens",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TokenStreamExt",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "quote",
                                    next: Some(
                                        MyPath {
                                            name: "ext",
                                            next: Some(
                                                MyPath {
                                                    name: "TokenStreamExt",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "fmt",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "fmt",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "iter",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "iter",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "BitOr",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "ops",
                                            next: Some(
                                                MyPath {
                                                    name: "BitOr",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Group",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Group",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Ident",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Ident",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Punct",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Punct",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Spacing",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Spacing",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TokenTree",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "TokenTree",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "format",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "alloc",
                                    next: Some(
                                        MyPath {
                                            name: "format",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: PubT,
                            },
                            UseTree {
                                use_name: "Option",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "core",
                                    next: Some(
                                        MyPath {
                                            name: "option",
                                            next: Some(
                                                MyPath {
                                                    name: "Option",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: PubT,
                            },
                        ],
                    },
                     sub_mods: [
                        RefCell {
                            value: ModContext {
                             mod_info: Mod(
                                ModModInfo {
                                    mod_name: "ext",
                                    mod_tree: MyPath {
                                        name: "ext",
                                        next: None,
                                    },
                                    file_path: "",
                                    parent_directory_path: "",
                                    mod_file_directory_path: None,
                                    visibility: PubT,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: super,
                                                            span: bytes(67162..67167),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: RepInterp,
                                                                    span: bytes(67169..67178),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: super,
                                                            span: bytes(67188..67193),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Group(
                                                            UseGroup {
                                                                brace_token: Brace,
                                                                items: [
                                                                    UseTree::Rename(
                                                                        UseRename {
                                                                            ident: Ident {
                                                                                sym: HasIterator,
                                                                                span: bytes(67196..67207),
                                                                            },
                                                                            as_token: As,
                                                                            rename: Ident {
                                                                                sym: HasIter,
                                                                                span: bytes(67211..67218),
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    UseTree::Rename(
                                                                        UseRename {
                                                                            ident: Ident {
                                                                                sym: ThereIsNoIteratorInRepetition,
                                                                                span: bytes(67220..67249),
                                                                            },
                                                                            as_token: As,
                                                                            rename: Ident {
                                                                                sym: DoesNotHaveIter,
                                                                                span: bytes(67253..67268),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(67279..67284),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: ToTokens,
                                                                    span: bytes(67286..67294),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: alloc,
                                                            span: bytes(67304..67309),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: collections,
                                                                    span: bytes(67311..67322),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Path(
                                                                    UsePath {
                                                                        ident: Ident {
                                                                            sym: btree_set,
                                                                            span: bytes(67324..67333),
                                                                        },
                                                                        colon2_token: PathSep,
                                                                        tree: UseTree::Group(
                                                                            UseGroup {
                                                                                brace_token: Brace,
                                                                                items: [
                                                                                    UseTree::Name(
                                                                                        UseName {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(67336..67340),
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                    Comma,
                                                                                    UseTree::Name(
                                                                                        UseName {
                                                                                            ident: Ident {
                                                                                                sym: BTreeSet,
                                                                                                span: bytes(67342..67350),
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: core,
                                                            span: bytes(67361..67365),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: slice,
                                                                    span: bytes(67367..67372),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [],
                                enums: [],
                                unions: [],
                                impls: [
                                    ImplItem {
                                        impl_num: 0,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepIteratorExt",
                                                complete_name: "ext::RepIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(67628..67629),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iterator,
                                                                                            span: bytes(67631..67639),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepIteratorExt,
                                                                        span: bytes(67641..67655),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(67660..67661),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        relative_types: [
                                            "Iterator",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 1,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepToTokensExt",
                                                complete_name: "ext::RepToTokensExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepToTokensExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(68295..68296),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ToTokens,
                                                                                            span: bytes(68298..68306),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Plus,
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::Maybe(
                                                                                Question,
                                                                            ),
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Sized,
                                                                                            span: bytes(68310..68315),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepToTokensExt,
                                                                        span: bytes(68317..68331),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(68336..68337),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        relative_types: [
                                            "Sized",
                                            "ToTokens",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 2,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepAsIteratorExt",
                                                complete_name: "ext::RepAsIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepAsIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(68627..68628),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(68628..68629),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(68631..68632),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: RepAsIteratorExt,
                                                                                            span: bytes(68634..68650),
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: None,
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Lifetime(
                                                                                                    Lifetime {
                                                                                                        apostrophe: bytes(68651..68652),
                                                                                                        ident: Ident {
                                                                                                            sym: q,
                                                                                                            span: bytes(68652..68653),
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Plus,
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::Maybe(
                                                                                Question,
                                                                            ),
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Sized,
                                                                                            span: bytes(68658..68663),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepAsIteratorExt,
                                                                        span: bytes(68665..68681),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(68682..68683),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(68683..68684),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: None,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: T,
                                                                        span: bytes(68691..68692),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(68708..68712),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(68715..68716),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iter,
                                                                            span: bytes(68718..68722),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "< as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "< as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepAsIteratorExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#2}::quote_into_iter",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(68736..68751),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(68753..68754),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(68754..68755),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(68753..68754),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(68754..68755),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(68756..68760),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(68766..68770),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(68772..68776),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(68778..68785),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: Some(
                                                                                QSelf {
                                                                                    lt_token: Lt,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(68802..68803),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    position: 1,
                                                                                    as_token: Some(
                                                                                        As,
                                                                                    ),
                                                                                    gt_token: Gt,
                                                                                },
                                                                            ),
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: RepAsIteratorExt,
                                                                                            span: bytes(68807..68823),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: quote_into_iter,
                                                                                            span: bytes(68826..68841),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(68843..68847),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "RepAsIteratorExt",
                                            "Sized",
                                            "Iter",
                                            "T",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 3,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepAsIteratorExt",
                                                complete_name: "ext::RepAsIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepAsIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(68875..68876),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(68876..68877),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(68879..68880),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: RepAsIteratorExt,
                                                                                            span: bytes(68882..68898),
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: None,
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Lifetime(
                                                                                                    Lifetime {
                                                                                                        apostrophe: bytes(68899..68900),
                                                                                                        ident: Ident {
                                                                                                            sym: q,
                                                                                                            span: bytes(68900..68901),
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Plus,
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::Maybe(
                                                                                Question,
                                                                            ),
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Sized,
                                                                                            span: bytes(68906..68911),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepAsIteratorExt,
                                                                        span: bytes(68913..68929),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(68930..68931),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(68931..68932),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Reference {
                                                    and_token: And,
                                                    lifetime: None,
                                                    mutability: Some(
                                                        Mut,
                                                    ),
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: T,
                                                                        span: bytes(68943..68944),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(68960..68964),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(68967..68968),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iter,
                                                                            span: bytes(68970..68974),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "< as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "< as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepAsIteratorExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#3}::quote_into_iter",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(68988..69003),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69005..69006),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69006..69007),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69005..69006),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69006..69007),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(69008..69012),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(69018..69022),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(69024..69028),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(69030..69037),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: Some(
                                                                                QSelf {
                                                                                    lt_token: Lt,
                                                                                    ty: Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(69054..69055),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    position: 1,
                                                                                    as_token: Some(
                                                                                        As,
                                                                                    ),
                                                                                    gt_token: Gt,
                                                                                },
                                                                            ),
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: RepAsIteratorExt,
                                                                                            span: bytes(69059..69075),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: quote_into_iter,
                                                                                            span: bytes(69078..69093),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Unary {
                                                                                attrs: [],
                                                                                op: UnOp::Deref(
                                                                                    Star,
                                                                                ),
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(69095..69099),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "RepAsIteratorExt",
                                            "Sized",
                                            "Iter",
                                            "T",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 4,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepAsIteratorExt",
                                                complete_name: "ext::RepAsIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepAsIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(69127..69128),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(69128..69129),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(69131..69132),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Lifetime {
                                                                        apostrophe: bytes(69134..69135),
                                                                        ident: Ident {
                                                                            sym: q,
                                                                            span: bytes(69135..69136),
                                                                        },
                                                                    },
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepAsIteratorExt,
                                                                        span: bytes(69138..69154),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69155..69156),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69156..69157),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Slice {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: T,
                                                                        span: bytes(69164..69165),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(69182..69186),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: slice,
                                                                            span: bytes(69189..69194),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iter,
                                                                            span: bytes(69196..69200),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69201..69202),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69202..69203),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(69205..69206),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "< as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "< as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepAsIteratorExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#4}::quote_into_iter",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(69221..69236),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69238..69239),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69239..69240),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69238..69239),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69239..69240),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(69241..69245),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(69251..69255),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(69257..69261),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(69263..69270),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(69287..69291),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(69292..69296),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: HasIter,
                                                                                                span: bytes(69300..69307),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "Iter",
                                            "T",
                                            "slice",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 5,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepAsIteratorExt",
                                                complete_name: "ext::RepAsIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepAsIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(69335..69336),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(69336..69337),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(69339..69340),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Lifetime {
                                                                        apostrophe: bytes(69342..69343),
                                                                        ident: Ident {
                                                                            sym: q,
                                                                            span: bytes(69343..69344),
                                                                        },
                                                                    },
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Const(
                                                            ConstParam {
                                                                attrs: [],
                                                                const_token: Const,
                                                                ident: Ident {
                                                                    sym: N,
                                                                    span: bytes(69352..69353),
                                                                },
                                                                colon_token: Colon,
                                                                ty: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(69355..69360),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepAsIteratorExt,
                                                                        span: bytes(69362..69378),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69379..69380),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69380..69381),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Array {
                                                    bracket_token: Bracket,
                                                    elem: Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: T,
                                                                        span: bytes(69388..69389),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    semi_token: Semi,
                                                    len: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: N,
                                                                        span: bytes(69391..69392),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(69409..69413),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: slice,
                                                                            span: bytes(69416..69421),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iter,
                                                                            span: bytes(69423..69427),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69428..69429),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69429..69430),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(69432..69433),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "< as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "< as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepAsIteratorExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#5}::quote_into_iter",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(69448..69463),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69465..69466),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69466..69467),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69465..69466),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69466..69467),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(69468..69472),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(69478..69482),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(69484..69488),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(69490..69497),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(69514..69518),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(69519..69523),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: HasIter,
                                                                                                span: bytes(69527..69534),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "Iter",
                                            "T",
                                            "slice",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 6,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepAsIteratorExt",
                                                complete_name: "ext::RepAsIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepAsIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(69562..69563),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(69563..69564),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(69566..69567),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Lifetime {
                                                                        apostrophe: bytes(69569..69570),
                                                                        ident: Ident {
                                                                            sym: q,
                                                                            span: bytes(69570..69571),
                                                                        },
                                                                    },
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepAsIteratorExt,
                                                                        span: bytes(69573..69589),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69590..69591),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69591..69592),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Vec,
                                                                    span: bytes(69598..69601),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(69602..69603),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(69620..69624),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: slice,
                                                                            span: bytes(69627..69632),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iter,
                                                                            span: bytes(69634..69638),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69639..69640),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69640..69641),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(69643..69644),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "< as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "< as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepAsIteratorExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#6}::quote_into_iter",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(69659..69674),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69676..69677),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69677..69678),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69676..69677),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69677..69678),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(69679..69683),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(69689..69693),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(69695..69699),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(69701..69708),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(69725..69729),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(69730..69734),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: HasIter,
                                                                                                span: bytes(69738..69745),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "Iter",
                                            "T",
                                            "slice",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 7,
                                        struct_name: Name {
                                            name: "BTreeSet",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "alloc",
                                                next: Some(
                                                    MyPath {
                                                        name: "collections",
                                                        next: Some(
                                                            MyPath {
                                                                name: "btree_set",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "BTreeSet",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepAsIteratorExt",
                                                complete_name: "ext::RepAsIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepAsIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(69773..69774),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(69774..69775),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(69777..69778),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Lifetime {
                                                                        apostrophe: bytes(69780..69781),
                                                                        ident: Ident {
                                                                            sym: q,
                                                                            span: bytes(69781..69782),
                                                                        },
                                                                    },
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepAsIteratorExt,
                                                                        span: bytes(69784..69800),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69801..69802),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69802..69803),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: BTreeSet,
                                                                    span: bytes(69809..69817),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(69818..69819),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(69836..69840),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: btree_set,
                                                                            span: bytes(69843..69852),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iter,
                                                                            span: bytes(69854..69858),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Lifetime(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69859..69860),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69860..69861),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(69863..69864),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "<alloc::collections::btree_set::BTreeSet as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "<alloc",
                                                        next: Some(
                                                            MyPath {
                                                                name: "collections",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "btree_set",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "BTreeSet as ext",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "RepAsIteratorExt>",
                                                                                        next: Some(
                                                                                            MyPath {
                                                                                                name: "quote_into_iter",
                                                                                                next: None,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#7}::quote_into_iter",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(69879..69894),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(69896..69897),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(69897..69898),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(69896..69897),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(69897..69898),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(69899..69903),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(69909..69913),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(69915..69919),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(69921..69928),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::MethodCall {
                                                                                attrs: [],
                                                                                receiver: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(69945..69949),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                method: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(69950..69954),
                                                                                },
                                                                                turbofish: None,
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                            Comma,
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: HasIter,
                                                                                                span: bytes(69958..69965),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "Iter",
                                            "T",
                                            "btree_set",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 8,
                                        struct_name: Name {
                                            name: "RepInterp",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: Some(
                                                    MyPath {
                                                        name: "RepInterp",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "RepAsIteratorExt",
                                                complete_name: "ext::RepAsIteratorExt",
                                                import_name: MyPath {
                                                    name: "ext",
                                                    next: Some(
                                                        MyPath {
                                                            name: "RepAsIteratorExt",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(69993..69994),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(69994..69995),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                        Comma,
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(69997..69998),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: RepAsIteratorExt,
                                                                                            span: bytes(70000..70016),
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: None,
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Lifetime(
                                                                                                    Lifetime {
                                                                                                        apostrophe: bytes(70017..70018),
                                                                                                        ident: Ident {
                                                                                                            sym: q,
                                                                                                            span: bytes(70018..70019),
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: RepAsIteratorExt,
                                                                        span: bytes(70022..70038),
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: None,
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Lifetime(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(70039..70040),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(70040..70041),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: RepInterp,
                                                                    span: bytes(70047..70056),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(70057..70058),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(70075..70079),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: T,
                                                                            span: bytes(70082..70083),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iter,
                                                                            span: bytes(70085..70089),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "<::RepInterp as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "<",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepInterp as ext",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "RepAsIteratorExt>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "quote_into_iter",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#8}::quote_into_iter",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(70103..70118),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(70120..70121),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(70121..70122),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(70120..70121),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(70121..70122),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(70123..70127),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(70133..70137),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(70139..70143),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(70145..70152),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(70168..70172),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(70173..70174),
                                                                                },
                                                                            ),
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: quote_into_iter,
                                                                            span: bytes(70175..70190),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "RepAsIteratorExt",
                                            "Iter",
                                            "T",
                                        ],
                                    },
                                ],
                                functions: [],
                                traits: [
                                    TraitItem {
                                        trait_name: Name {
                                            name: "RepIteratorExt",
                                            complete_name: "ext::RepIteratorExt",
                                            import_name: MyPath {
                                                name: "ext",
                                                next: Some(
                                                    MyPath {
                                                        name: "RepIteratorExt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemTrait {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                unsafety: None,
                                                auto_token: None,
                                                restriction: None,
                                                trait_token: Trait,
                                                ident: Ident {
                                                    sym: RepIteratorExt,
                                                    span: bytes(67485..67499),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: Some(
                                                    Colon,
                                                ),
                                                supertraits: [
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Iterator,
                                                                            span: bytes(67501..67509),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Plus,
                                                    TypeParamBound::Trait(
                                                        TraitBound {
                                                            paren_token: None,
                                                            modifier: TraitBoundModifier::None,
                                                            lifetimes: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Sized,
                                                                            span: bytes(67512..67517),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                ],
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [
                                            TraitFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "<  as ext::RepIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "<  as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepIteratorExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "RepIteratorExt::quote_into_iter",
                                                item: Some(
                                                    TraitItemFn {
                                                        attrs: [],
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(67531..67546),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: None,
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(67547..67551),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(67557..67561),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(67563..67570),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        default: Some(
                                                            Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Tuple {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(67587..67591),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: HasIter,
                                                                                                    span: bytes(67593..67600),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        semi_token: None,
                                                    },
                                                ),
                                                inside_items: [],
                                                is_constructor: true,
                                            },
                                        ],
                                        visibility: PubT,
                                        relative_types: [
                                            "Iterator",
                                            "Sized",
                                        ],
                                    },
                                    TraitItem {
                                        trait_name: Name {
                                            name: "RepToTokensExt",
                                            complete_name: "ext::RepToTokensExt",
                                            import_name: MyPath {
                                                name: "ext",
                                                next: Some(
                                                    MyPath {
                                                        name: "RepToTokensExt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemTrait {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                unsafety: None,
                                                auto_token: None,
                                                restriction: None,
                                                trait_token: Trait,
                                                ident: Ident {
                                                    sym: RepToTokensExt,
                                                    span: bytes(67878..67892),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: None,
                                                supertraits: [],
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [
                                            TraitFnItem {
                                                fn_name: Name {
                                                    name: "next",
                                                    complete_name: "<  as ext::RepToTokensExt>::next",
                                                    import_name: MyPath {
                                                        name: "<  as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepToTokensExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "next",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "RepToTokensExt::next",
                                                item: Some(
                                                    TraitItemFn {
                                                        attrs: [],
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: next,
                                                                span: bytes(68104..68108),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(68110..68114),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Option,
                                                                                    span: bytes(68119..68125),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Type(
                                                                                            Type::Reference {
                                                                                                and_token: And,
                                                                                                lifetime: None,
                                                                                                mutability: None,
                                                                                                elem: Type::Path {
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: Self,
                                                                                                                    span: bytes(68127..68131),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        default: Some(
                                                            Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Some,
                                                                                                span: bytes(68147..68151),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(68152..68156),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        semi_token: None,
                                                    },
                                                ),
                                                inside_items: [],
                                                is_constructor: true,
                                            },
                                            TraitFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "<  as ext::RepToTokensExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "<  as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepToTokensExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "RepToTokensExt::quote_into_iter",
                                                item: Some(
                                                    TraitItemFn {
                                                        attrs: [],
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(68180..68195),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(68197..68201),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(68208..68212),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: DoesNotHaveIter,
                                                                                            span: bytes(68214..68229),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        default: Some(
                                                            Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Expr(
                                                                        Expr::Tuple {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: self,
                                                                                                    span: bytes(68246..68250),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: DoesNotHaveIter,
                                                                                                    span: bytes(68252..68267),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        semi_token: None,
                                                    },
                                                ),
                                                inside_items: [],
                                                is_constructor: true,
                                            },
                                        ],
                                        visibility: PubT,
                                        relative_types: [],
                                    },
                                    TraitItem {
                                        trait_name: Name {
                                            name: "RepAsIteratorExt",
                                            complete_name: "ext::RepAsIteratorExt",
                                            import_name: MyPath {
                                                name: "ext",
                                                next: Some(
                                                    MyPath {
                                                        name: "RepAsIteratorExt",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemTrait {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                unsafety: None,
                                                auto_token: None,
                                                restriction: None,
                                                trait_token: Trait,
                                                ident: Ident {
                                                    sym: RepAsIteratorExt,
                                                    span: bytes(68495..68511),
                                                },
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(68512..68513),
                                                                    ident: Ident {
                                                                        sym: q,
                                                                        span: bytes(68513..68514),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                colon_token: None,
                                                supertraits: [],
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            TraitTypeItem {
                                                item: Some(
                                                    TraitItemType {
                                                        attrs: [],
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Iter,
                                                            span: bytes(68531..68535),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Iterator,
                                                                                    span: bytes(68537..68545),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        default: None,
                                                        semi_token: Semi,
                                                    },
                                                ),
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            TraitFnItem {
                                                fn_name: Name {
                                                    name: "quote_into_iter",
                                                    complete_name: "<  as ext::RepAsIteratorExt>::quote_into_iter",
                                                    import_name: MyPath {
                                                        name: "<  as ext",
                                                        next: Some(
                                                            MyPath {
                                                                name: "RepAsIteratorExt>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "quote_into_iter",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "RepAsIteratorExt::quote_into_iter",
                                                item: Some(
                                                    TraitItemFn {
                                                        attrs: [],
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: quote_into_iter,
                                                                span: bytes(68559..68574),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                Some(
                                                                                    Lifetime {
                                                                                        apostrophe: bytes(68576..68577),
                                                                                        ident: Ident {
                                                                                            sym: q,
                                                                                            span: bytes(68577..68578),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: Some(
                                                                                Lifetime {
                                                                                    apostrophe: bytes(68576..68577),
                                                                                    ident: Ident {
                                                                                        sym: q,
                                                                                        span: bytes(68577..68578),
                                                                                    },
                                                                                },
                                                                            ),
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(68579..68583),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(68589..68593),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Iter,
                                                                                            span: bytes(68595..68599),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: HasIter,
                                                                                            span: bytes(68601..68608),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                        default: None,
                                                        semi_token: Some(
                                                            Semi,
                                                        ),
                                                    },
                                                ),
                                                inside_items: [],
                                                is_constructor: true,
                                            },
                                        ],
                                        visibility: PubT,
                                        relative_types: [],
                                    },
                                ],
                                use_trees: [
                                    UseTree {
                                        use_name: "RepInterp",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "",
                                            next: Some(
                                                MyPath {
                                                    name: "RepInterp",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "HasIterator",
                                        alias_name: Some(
                                            "HasIter",
                                        ),
                                        use_tree: MyPath {
                                            name: "",
                                            next: Some(
                                                MyPath {
                                                    name: "HasIterator",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "ThereIsNoIteratorInRepetition",
                                        alias_name: Some(
                                            "DoesNotHaveIter",
                                        ),
                                        use_tree: MyPath {
                                            name: "",
                                            next: Some(
                                                MyPath {
                                                    name: "ThereIsNoIteratorInRepetition",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "ToTokens",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "self",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "alloc",
                                            next: Some(
                                                MyPath {
                                                    name: "collections",
                                                    next: Some(
                                                        MyPath {
                                                            name: "btree_set",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "self",
                                                                    next: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "BTreeSet",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "alloc",
                                            next: Some(
                                                MyPath {
                                                    name: "collections",
                                                    next: Some(
                                                        MyPath {
                                                            name: "btree_set",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "BTreeSet",
                                                                    next: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "slice",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "core",
                                            next: Some(
                                                MyPath {
                                                    name: "slice",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                ],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                        RefCell {
                            value: ModContext {
                             mod_info: Mod(
                                ModModInfo {
                                    mod_name: "get_span",
                                    mod_tree: MyPath {
                                        name: "get_span",
                                        next: None,
                                    },
                                    file_path: "",
                                    parent_directory_path: "",
                                    mod_file_directory_path: None,
                                    visibility: PubS,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: core,
                                                            span: bytes(71234..71238),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: ops,
                                                                    span: bytes(71240..71243),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Name(
                                                                    UseName {
                                                                        ident: Ident {
                                                                            sym: Deref,
                                                                            span: bytes(71245..71250),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(71260..71271),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: extra,
                                                                    span: bytes(71273..71278),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Name(
                                                                    UseName {
                                                                        ident: Ident {
                                                                            sym: DelimSpan,
                                                                            span: bytes(71280..71289),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(71299..71310),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: Span,
                                                                    span: bytes(71312..71316),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [
                                    StructItem {
                                        struct_name: Name {
                                            name: "GetSpan",
                                            complete_name: "get_span::GetSpan",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpan",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemStruct {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                struct_token: Struct,
                                                ident: Ident {
                                                    sym: GetSpan,
                                                    span: bytes(71334..71341),
                                                },
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(71342..71343),
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                fields: Fields::Unnamed {
                                                    paren_token: Paren,
                                                    unnamed: [
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Restricted {
                                                                pub_token: Pub,
                                                                paren_token: Paren,
                                                                in_token: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                                span: bytes(71349..71354),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            mutability: FieldMutability::None,
                                                            ident: None,
                                                            colon_token: None,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: GetSpanInner,
                                                                                span: bytes(71356..71368),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: T,
                                                                                                            span: bytes(71369..71370),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        visibility: PubT,
                                        relative_types: [
                                            "GetSpanInner",
                                            "T",
                                        ],
                                    },
                                    StructItem {
                                        struct_name: Name {
                                            name: "GetSpanInner",
                                            complete_name: "get_span::GetSpanInner",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpanInner",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemStruct {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                struct_token: Struct,
                                                ident: Ident {
                                                    sym: GetSpanInner,
                                                    span: bytes(71390..71402),
                                                },
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(71403..71404),
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                fields: Fields::Unnamed {
                                                    paren_token: Paren,
                                                    unnamed: [
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Restricted {
                                                                pub_token: Pub,
                                                                paren_token: Paren,
                                                                in_token: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                                span: bytes(71410..71415),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            mutability: FieldMutability::None,
                                                            ident: None,
                                                            colon_token: None,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: GetSpanBase,
                                                                                span: bytes(71417..71428),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: T,
                                                                                                            span: bytes(71429..71430),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        visibility: PubT,
                                        relative_types: [
                                            "GetSpanBase",
                                            "T",
                                        ],
                                    },
                                    StructItem {
                                        struct_name: Name {
                                            name: "GetSpanBase",
                                            complete_name: "get_span::GetSpanBase",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpanBase",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemStruct {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                struct_token: Struct,
                                                ident: Ident {
                                                    sym: GetSpanBase,
                                                    span: bytes(71450..71461),
                                                },
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(71462..71463),
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                fields: Fields::Unnamed {
                                                    paren_token: Paren,
                                                    unnamed: [
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Restricted {
                                                                pub_token: Pub,
                                                                paren_token: Paren,
                                                                in_token: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                                span: bytes(71469..71474),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            mutability: FieldMutability::None,
                                                            ident: None,
                                                            colon_token: None,
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: T,
                                                                                span: bytes(71476..71477),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        visibility: PubT,
                                        relative_types: [
                                            "T",
                                        ],
                                    },
                                ],
                                enums: [],
                                unions: [],
                                impls: [
                                    ImplItem {
                                        impl_num: 0,
                                        struct_name: Name {
                                            name: "GetSpan",
                                            complete_name: "get_span::GetSpan",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpan",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: None,
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: None,
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpan,
                                                                    span: bytes(71490..71497),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Span,
                                                                                                span: bytes(71498..71502),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "__into_span",
                                                    complete_name: "get_span::GetSpan::__into_span",
                                                    import_name: MyPath {
                                                        name: "get_span",
                                                        next: Some(
                                                            MyPath {
                                                                name: "GetSpan",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "__into_span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#0}::__into_span",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [
                                                            Attribute {
                                                                pound_token: Pound,
                                                                style: AttrStyle::Outer,
                                                                bracket_token: Bracket,
                                                                meta: Meta::Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: inline,
                                                                                span: bytes(71516..71522),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                        vis: Visibility::Public(
                                                            Pub,
                                                        ),
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: __into_span,
                                                                span: bytes(71539..71550),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: None,
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Self,
                                                                                            span: bytes(71551..71555),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Span,
                                                                                    span: bytes(71560..71564),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Field {
                                                                        attrs: [],
                                                                        base: Expr::Paren {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            expr: Expr::Field {
                                                                                attrs: [],
                                                                                base: Expr::Paren {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    expr: Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: self,
                                                                                                            span: bytes(71581..71585),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Unnamed(
                                                                                            Index {
                                                                                                index: 0,
                                                                                                span: bytes(71586..71587),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                dot_token: Dot,
                                                                                member: Member::Unnamed(
                                                                                    Index {
                                                                                        index: 0,
                                                                                        span: bytes(71589..71590),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        member: Member::Unnamed(
                                                                            Index {
                                                                                index: 0,
                                                                                span: bytes(71592..71593),
                                                                            },
                                                                        ),
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: PubT,
                                                is_constructor: false,
                                            },
                                        ],
                                        relative_types: [],
                                    },
                                    ImplItem {
                                        impl_num: 1,
                                        struct_name: Name {
                                            name: "GetSpanInner",
                                            complete_name: "get_span::GetSpanInner",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpanInner",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: None,
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: None,
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpanInner,
                                                                    span: bytes(71620..71632),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: DelimSpan,
                                                                                                span: bytes(71633..71642),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "__into_span",
                                                    complete_name: "get_span::GetSpanInner::__into_span",
                                                    import_name: MyPath {
                                                        name: "get_span",
                                                        next: Some(
                                                            MyPath {
                                                                name: "GetSpanInner",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "__into_span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#1}::__into_span",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [
                                                            Attribute {
                                                                pound_token: Pound,
                                                                style: AttrStyle::Outer,
                                                                bracket_token: Bracket,
                                                                meta: Meta::Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: inline,
                                                                                span: bytes(71656..71662),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                        vis: Visibility::Public(
                                                            Pub,
                                                        ),
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: __into_span,
                                                                span: bytes(71679..71690),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(71692..71696),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Span,
                                                                                    span: bytes(71701..71705),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Paren {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                expr: Expr::Field {
                                                                                    attrs: [],
                                                                                    base: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: self,
                                                                                                        span: bytes(71721..71725),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    dot_token: Dot,
                                                                                    member: Member::Unnamed(
                                                                                        Index {
                                                                                            index: 0,
                                                                                            span: bytes(71726..71727),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(71729..71730),
                                                                                },
                                                                            ),
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: join,
                                                                            span: bytes(71731..71735),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: PubT,
                                                is_constructor: false,
                                            },
                                        ],
                                        relative_types: [],
                                    },
                                    ImplItem {
                                        impl_num: 2,
                                        struct_name: Name {
                                            name: "GetSpanBase",
                                            complete_name: "get_span::GetSpanBase",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpanBase",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: None,
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(71764..71765),
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: None,
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpanBase,
                                                                    span: bytes(71767..71778),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(71779..71780),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "__into_span",
                                                    complete_name: "get_span::GetSpanBase::__into_span",
                                                    import_name: MyPath {
                                                        name: "get_span",
                                                        next: Some(
                                                            MyPath {
                                                                name: "GetSpanBase",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "__into_span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#2}::__into_span",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [
                                                            Attribute {
                                                                pound_token: Pound,
                                                                style: AttrStyle::Outer,
                                                                bracket_token: Bracket,
                                                                meta: Meta::List {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: allow,
                                                                                    span: bytes(71794..71799),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    delimiter: MacroDelimiter::Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Ident {
                                                                            sym: clippy,
                                                                            span: bytes(71800..71806),
                                                                        },
                                                                        Punct {
                                                                            char: ':',
                                                                            spacing: Joint,
                                                                            span: bytes(71806..71807),
                                                                        },
                                                                        Punct {
                                                                            char: ':',
                                                                            spacing: Alone,
                                                                            span: bytes(71807..71808),
                                                                        },
                                                                        Ident {
                                                                            sym: unused_self,
                                                                            span: bytes(71808..71819),
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                        vis: Visibility::Public(
                                                            Pub,
                                                        ),
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: __into_span,
                                                                span: bytes(71837..71848),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(71850..71854),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: T,
                                                                                    span: bytes(71859..71860),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Macro {
                                                                        attrs: [],
                                                                        mac: Macro {
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: unreachable,
                                                                                            span: bytes(71875..71886),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            bang_token: Not,
                                                                            delimiter: MacroDelimiter::Paren(
                                                                                Paren,
                                                                            ),
                                                                            tokens: TokenStream [],
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: PubT,
                                                is_constructor: false,
                                            },
                                        ],
                                        relative_types: [],
                                    },
                                    ImplItem {
                                        impl_num: 3,
                                        struct_name: Name {
                                            name: "GetSpan",
                                            complete_name: "get_span::GetSpan",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpan",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "Deref",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "core",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ops",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "Deref",
                                                                    next: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(71916..71917),
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Deref,
                                                                        span: bytes(71919..71924),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpan,
                                                                    span: bytes(71929..71936),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(71937..71938),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Target,
                                                            span: bytes(71955..71961),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: GetSpanInner,
                                                                            span: bytes(71964..71976),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(71977..71978),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "deref",
                                                    complete_name: "<get_span::GetSpan as core::ops::Deref>::deref",
                                                    import_name: MyPath {
                                                        name: "<get_span",
                                                        next: Some(
                                                            MyPath {
                                                                name: "GetSpan as core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ops",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "Deref>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "deref",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#3}::deref",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [
                                                            Attribute {
                                                                pound_token: Pound,
                                                                style: AttrStyle::Outer,
                                                                bracket_token: Bracket,
                                                                meta: Meta::Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: inline,
                                                                                span: bytes(71992..71998),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: deref,
                                                                span: bytes(72011..72016),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(72018..72022),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(72028..72032),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Target,
                                                                                        span: bytes(72034..72040),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(72056..72060),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(72061..72062),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "GetSpanInner",
                                            "T",
                                        ],
                                    },
                                    ImplItem {
                                        impl_num: 4,
                                        struct_name: Name {
                                            name: "GetSpanInner",
                                            complete_name: "get_span::GetSpanInner",
                                            import_name: MyPath {
                                                name: "get_span",
                                                next: Some(
                                                    MyPath {
                                                        name: "GetSpanInner",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "Deref",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "core",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ops",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "Deref",
                                                                    next: None,
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(72089..72090),
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Deref,
                                                                        span: bytes(72092..72097),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: GetSpanInner,
                                                                    span: bytes(72102..72114),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: T,
                                                                                                span: bytes(72115..72116),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Target,
                                                            span: bytes(72133..72139),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: GetSpanBase,
                                                                            span: bytes(72142..72153),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: T,
                                                                                                        span: bytes(72154..72155),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "deref",
                                                    complete_name: "<get_span::GetSpanInner as core::ops::Deref>::deref",
                                                    import_name: MyPath {
                                                        name: "<get_span",
                                                        next: Some(
                                                            MyPath {
                                                                name: "GetSpanInner as core",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "ops",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "Deref>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "deref",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#4}::deref",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [
                                                            Attribute {
                                                                pound_token: Pound,
                                                                style: AttrStyle::Outer,
                                                                bracket_token: Bracket,
                                                                meta: Meta::Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: inline,
                                                                                span: bytes(72169..72175),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: deref,
                                                                span: bytes(72188..72193),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: None,
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: None,
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(72195..72199),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(72205..72209),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Target,
                                                                                        span: bytes(72211..72217),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Reference {
                                                                        attrs: [],
                                                                        and_token: And,
                                                                        mutability: None,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(72233..72237),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Unnamed(
                                                                                Index {
                                                                                    index: 0,
                                                                                    span: bytes(72238..72239),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "GetSpanBase",
                                            "T",
                                        ],
                                    },
                                ],
                                functions: [],
                                traits: [],
                                use_trees: [
                                    UseTree {
                                        use_name: "Deref",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "core",
                                            next: Some(
                                                MyPath {
                                                    name: "ops",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Deref",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "DelimSpan",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "proc_macro2",
                                            next: Some(
                                                MyPath {
                                                    name: "extra",
                                                    next: Some(
                                                        MyPath {
                                                            name: "DelimSpan",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "Span",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "proc_macro2",
                                            next: Some(
                                                MyPath {
                                                    name: "Span",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                ],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                        RefCell {
                            value: ModContext {
                             mod_info: Fn(
                                FunctionModInfo {
                                    function_name: "push_lifetime",
                                    mod_tree: MyPath {
                                        name: "push_lifetime",
                                        next: None,
                                    },
                                    visibility: Pri,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [
                                    StructItem {
                                        struct_name: Name {
                                            name: "Lifetime",
                                            complete_name: "push_lifetime::Lifetime",
                                            import_name: MyPath {
                                                name: "push_lifetime",
                                                next: Some(
                                                    MyPath {
                                                        name: "Lifetime",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemStruct {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                struct_token: Struct,
                                                ident: Ident {
                                                    sym: Lifetime,
                                                    span: bytes(73924..73932),
                                                },
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(73933..73934),
                                                                    ident: Ident {
                                                                        sym: a,
                                                                        span: bytes(73934..73935),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                fields: Fields::Named {
                                                    brace_token: Brace,
                                                    named: [
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            mutability: FieldMutability::None,
                                                            ident: Some(
                                                                Ident {
                                                                    sym: name,
                                                                    span: bytes(73947..73951),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(73954..73955),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(73955..73956),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: str,
                                                                                    span: bytes(73957..73960),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            mutability: FieldMutability::None,
                                                            ident: Some(
                                                                Ident {
                                                                    sym: state,
                                                                    span: bytes(73970..73975),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u8,
                                                                                span: bytes(73977..73979),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                    ],
                                                },
                                                semi_token: None,
                                            },
                                        ),
                                        visibility: Pri,
                                        relative_types: [
                                            "str",
                                            "u8",
                                        ],
                                    },
                                ],
                                enums: [],
                                unions: [],
                                impls: [
                                    ImplItem {
                                        impl_num: 0,
                                        struct_name: Name {
                                            name: "Lifetime",
                                            complete_name: "push_lifetime::Lifetime",
                                            import_name: MyPath {
                                                name: "push_lifetime",
                                                next: Some(
                                                    MyPath {
                                                        name: "Lifetime",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "",
                                                    next: None,
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(73997..73998),
                                                                    ident: Ident {
                                                                        sym: a,
                                                                        span: bytes(73998..73999),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iterator,
                                                                        span: bytes(74001..74009),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lifetime,
                                                                    span: bytes(74014..74022),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(74023..74024),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(74024..74025),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Item,
                                                            span: bytes(74042..74046),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenTree,
                                                                            span: bytes(74049..74058),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "next",
                                                    complete_name: "<push_lifetime::Lifetime as >::next",
                                                    import_name: MyPath {
                                                        name: "<push_lifetime",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Lifetime as >",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "next",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#0}::next",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: next,
                                                                span: bytes(74072..74076),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(74082..74086),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Option,
                                                                                    span: bytes(74091..74097),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Type(
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Self,
                                                                                                                span: bytes(74098..74102),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Item,
                                                                                                                span: bytes(74104..74108),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Match {
                                                                        attrs: [],
                                                                        match_token: Match,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(74130..74134),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: state,
                                                                                    span: bytes(74135..74140),
                                                                                },
                                                                            ),
                                                                        },
                                                                        brace_token: Brace,
                                                                        arms: [
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 0,
                                                                                    },
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(74186..74190),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: state,
                                                                                                                span: bytes(74191..74196),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 1,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                            Stmt::Expr(
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Some,
                                                                                                                        span: bytes(74222..74226),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: TokenTree,
                                                                                                                                span: bytes(74227..74236),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Punct,
                                                                                                                                span: bytes(74238..74243),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Punct,
                                                                                                                                        span: bytes(74244..74249),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: new,
                                                                                                                                        span: bytes(74251..74254),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Lit {
                                                                                                                            attrs: [],
                                                                                                                            lit: Lit::Char {
                                                                                                                                token: '\'',
                                                                                                                            },
                                                                                                                        },
                                                                                                                        Comma,
                                                                                                                        Expr::Path {
                                                                                                                            attrs: [],
                                                                                                                            qself: None,
                                                                                                                            path: Path {
                                                                                                                                leading_colon: None,
                                                                                                                                segments: [
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: Spacing,
                                                                                                                                            span: bytes(74261..74268),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                    PathSep,
                                                                                                                                    PathSegment {
                                                                                                                                        ident: Ident {
                                                                                                                                            sym: Joint,
                                                                                                                                            span: bytes(74270..74275),
                                                                                                                                        },
                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: None,
                                                                            },
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(74340..74344),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: state,
                                                                                                                span: bytes(74345..74350),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 2,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                            Stmt::Expr(
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Some,
                                                                                                                        span: bytes(74376..74380),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: TokenTree,
                                                                                                                                span: bytes(74381..74390),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Ident,
                                                                                                                                span: bytes(74392..74397),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Ident,
                                                                                                                                        span: bytes(74398..74403),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: new,
                                                                                                                                        span: bytes(74405..74408),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Field {
                                                                                                                            attrs: [],
                                                                                                                            base: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: self,
                                                                                                                                                span: bytes(74409..74413),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            dot_token: Dot,
                                                                                                                            member: Member::Named(
                                                                                                                                Ident {
                                                                                                                                    sym: name,
                                                                                                                                    span: bytes(74414..74418),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                        Comma,
                                                                                                                        Expr::Call {
                                                                                                                            attrs: [],
                                                                                                                            func: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: Span,
                                                                                                                                                span: bytes(74420..74424),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                        PathSep,
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: call_site,
                                                                                                                                                span: bytes(74426..74435),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            paren_token: Paren,
                                                                                                                            args: [],
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: None,
                                                                            },
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Wild {
                                                                                    attrs: [],
                                                                                    underscore_token: Underscore,
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: None,
                                                                                                    span: bytes(74480..74484),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: Some(
                                                                                    Comma,
                                                                                ),
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "TokenTree",
                                        ],
                                    },
                                ],
                                functions: [],
                                traits: [],
                                use_trees: [],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                        RefCell {
                            value: ModContext {
                             mod_info: Fn(
                                FunctionModInfo {
                                    function_name: "push_lifetime_spanned",
                                    mod_tree: MyPath {
                                        name: "push_lifetime_spanned",
                                        next: None,
                                    },
                                    visibility: Pri,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [
                                    StructItem {
                                        struct_name: Name {
                                            name: "Lifetime",
                                            complete_name: "push_lifetime_spanned::Lifetime",
                                            import_name: MyPath {
                                                name: "push_lifetime_spanned",
                                                next: Some(
                                                    MyPath {
                                                        name: "Lifetime",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemStruct {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                struct_token: Struct,
                                                ident: Ident {
                                                    sym: Lifetime,
                                                    span: bytes(74716..74724),
                                                },
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(74725..74726),
                                                                    ident: Ident {
                                                                        sym: a,
                                                                        span: bytes(74726..74727),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                fields: Fields::Named {
                                                    brace_token: Brace,
                                                    named: [
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            mutability: FieldMutability::None,
                                                            ident: Some(
                                                                Ident {
                                                                    sym: name,
                                                                    span: bytes(74739..74743),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            ty: Type::Reference {
                                                                and_token: And,
                                                                lifetime: Some(
                                                                    Lifetime {
                                                                        apostrophe: bytes(74746..74747),
                                                                        ident: Ident {
                                                                            sym: a,
                                                                            span: bytes(74747..74748),
                                                                        },
                                                                    },
                                                                ),
                                                                mutability: None,
                                                                elem: Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: str,
                                                                                    span: bytes(74749..74752),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            mutability: FieldMutability::None,
                                                            ident: Some(
                                                                Ident {
                                                                    sym: span,
                                                                    span: bytes(74762..74766),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: Span,
                                                                                span: bytes(74768..74772),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                        Field {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            mutability: FieldMutability::None,
                                                            ident: Some(
                                                                Ident {
                                                                    sym: state,
                                                                    span: bytes(74782..74787),
                                                                },
                                                            ),
                                                            colon_token: Some(
                                                                Colon,
                                                            ),
                                                            ty: Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: u8,
                                                                                span: bytes(74789..74791),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        Comma,
                                                    ],
                                                },
                                                semi_token: None,
                                            },
                                        ),
                                        visibility: Pri,
                                        relative_types: [
                                            "Span",
                                            "str",
                                            "u8",
                                        ],
                                    },
                                ],
                                enums: [],
                                unions: [],
                                impls: [
                                    ImplItem {
                                        impl_num: 0,
                                        struct_name: Name {
                                            name: "Lifetime",
                                            complete_name: "push_lifetime_spanned::Lifetime",
                                            import_name: MyPath {
                                                name: "push_lifetime_spanned",
                                                next: Some(
                                                    MyPath {
                                                        name: "Lifetime",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "",
                                                complete_name: "",
                                                import_name: MyPath {
                                                    name: "",
                                                    next: None,
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Lifetime(
                                                            LifetimeParam {
                                                                attrs: [],
                                                                lifetime: Lifetime {
                                                                    apostrophe: bytes(74809..74810),
                                                                    ident: Ident {
                                                                        sym: a,
                                                                        span: bytes(74810..74811),
                                                                    },
                                                                },
                                                                colon_token: None,
                                                                bounds: [],
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Iterator,
                                                                        span: bytes(74813..74821),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Lifetime,
                                                                    span: bytes(74826..74834),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Lifetime(
                                                                            Lifetime {
                                                                                apostrophe: bytes(74835..74836),
                                                                                ident: Ident {
                                                                                    sym: a,
                                                                                    span: bytes(74836..74837),
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [
                                            ImplTypeItem {
                                                item: Some(
                                                    ImplItemType {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        type_token: Type,
                                                        ident: Ident {
                                                            sym: Item,
                                                            span: bytes(74854..74858),
                                                        },
                                                        generics: Generics {
                                                            lt_token: None,
                                                            params: [],
                                                            gt_token: None,
                                                            where_clause: None,
                                                        },
                                                        eq_token: Eq,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenTree,
                                                                            span: bytes(74861..74870),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        semi_token: Semi,
                                                    },
                                                ),
                                                visibility: Pri,
                                            },
                                        ],
                                        consts: [],
                                        functions: [
                                            ImplFnItem {
                                                fn_name: Name {
                                                    name: "next",
                                                    complete_name: "<push_lifetime_spanned::Lifetime as >::next",
                                                    import_name: MyPath {
                                                        name: "<push_lifetime_spanned",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Lifetime as >",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "next",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                                complete_name_in_file: "{impl#0}::next",
                                                item: Some(
                                                    ImplItemFn {
                                                        attrs: [],
                                                        vis: Visibility::Inherited,
                                                        defaultness: None,
                                                        sig: Signature {
                                                            constness: None,
                                                            asyncness: None,
                                                            unsafety: None,
                                                            abi: None,
                                                            fn_token: Fn,
                                                            ident: Ident {
                                                                sym: next,
                                                                span: bytes(74884..74888),
                                                            },
                                                            generics: Generics {
                                                                lt_token: None,
                                                                params: [],
                                                                gt_token: None,
                                                                where_clause: None,
                                                            },
                                                            paren_token: Paren,
                                                            inputs: [
                                                                FnArg::Receiver(
                                                                    Receiver {
                                                                        attrs: [],
                                                                        reference: Some(
                                                                            (
                                                                                And,
                                                                                None,
                                                                            ),
                                                                        ),
                                                                        mutability: Some(
                                                                            Mut,
                                                                        ),
                                                                        self_token: SelfValue,
                                                                        colon_token: None,
                                                                        ty: Type::Reference {
                                                                            and_token: And,
                                                                            lifetime: None,
                                                                            mutability: Some(
                                                                                Mut,
                                                                            ),
                                                                            elem: Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Self,
                                                                                                span: bytes(74894..74898),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            variadic: None,
                                                            output: ReturnType::Type(
                                                                RArrow,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Option,
                                                                                    span: bytes(74903..74909),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Type(
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Self,
                                                                                                                span: bytes(74910..74914),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Item,
                                                                                                                span: bytes(74916..74920),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Match {
                                                                        attrs: [],
                                                                        match_token: Match,
                                                                        expr: Expr::Field {
                                                                            attrs: [],
                                                                            base: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: self,
                                                                                                span: bytes(74942..74946),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            member: Member::Named(
                                                                                Ident {
                                                                                    sym: state,
                                                                                    span: bytes(74947..74952),
                                                                                },
                                                                            ),
                                                                        },
                                                                        brace_token: Brace,
                                                                        arms: [
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 0,
                                                                                    },
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(74998..75002),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: state,
                                                                                                                span: bytes(75003..75008),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 1,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                            Stmt::Local {
                                                                                                attrs: [],
                                                                                                let_token: Let,
                                                                                                pat: Pat::Ident {
                                                                                                    attrs: [],
                                                                                                    by_ref: None,
                                                                                                    mutability: Some(
                                                                                                        Mut,
                                                                                                    ),
                                                                                                    ident: Ident {
                                                                                                        sym: apostrophe,
                                                                                                        span: bytes(75042..75052),
                                                                                                    },
                                                                                                    subpat: None,
                                                                                                },
                                                                                                init: Some(
                                                                                                    LocalInit {
                                                                                                        eq_token: Eq,
                                                                                                        expr: Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Punct,
                                                                                                                                span: bytes(75055..75060),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: new,
                                                                                                                                span: bytes(75062..75065),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Char {
                                                                                                                        token: '\'',
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: Spacing,
                                                                                                                                    span: bytes(75072..75079),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                            PathSep,
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: Joint,
                                                                                                                                    span: bytes(75081..75086),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                        diverge: None,
                                                                                                    },
                                                                                                ),
                                                                                                semi_token: Semi,
                                                                                            },
                                                                                            Stmt::Expr(
                                                                                                Expr::MethodCall {
                                                                                                    attrs: [],
                                                                                                    receiver: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: apostrophe,
                                                                                                                        span: bytes(75109..75119),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    dot_token: Dot,
                                                                                                    method: Ident {
                                                                                                        sym: set_span,
                                                                                                        span: bytes(75120..75128),
                                                                                                    },
                                                                                                    turbofish: None,
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Field {
                                                                                                            attrs: [],
                                                                                                            base: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: self,
                                                                                                                                span: bytes(75129..75133),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            dot_token: Dot,
                                                                                                            member: Member::Named(
                                                                                                                Ident {
                                                                                                                    sym: span,
                                                                                                                    span: bytes(75134..75138),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                            Stmt::Expr(
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Some,
                                                                                                                        span: bytes(75161..75165),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: TokenTree,
                                                                                                                                span: bytes(75166..75175),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Punct,
                                                                                                                                span: bytes(75177..75182),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Path {
                                                                                                                    attrs: [],
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: apostrophe,
                                                                                                                                    span: bytes(75183..75193),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: None,
                                                                            },
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Block {
                                                                                    attrs: [],
                                                                                    label: None,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Assign {
                                                                                                    attrs: [],
                                                                                                    left: Expr::Field {
                                                                                                        attrs: [],
                                                                                                        base: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: self,
                                                                                                                            span: bytes(75257..75261),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        dot_token: Dot,
                                                                                                        member: Member::Named(
                                                                                                            Ident {
                                                                                                                sym: state,
                                                                                                                span: bytes(75262..75267),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    eq_token: Eq,
                                                                                                    right: Expr::Lit {
                                                                                                        attrs: [],
                                                                                                        lit: Lit::Int {
                                                                                                            token: 2,
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                Some(
                                                                                                    Semi,
                                                                                                ),
                                                                                            ),
                                                                                            Stmt::Expr(
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Some,
                                                                                                                        span: bytes(75293..75297),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Call {
                                                                                                            attrs: [],
                                                                                                            func: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: TokenTree,
                                                                                                                                span: bytes(75298..75307),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                        PathSep,
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: Ident,
                                                                                                                                span: bytes(75309..75314),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                            paren_token: Paren,
                                                                                                            args: [
                                                                                                                Expr::Call {
                                                                                                                    attrs: [],
                                                                                                                    func: Expr::Path {
                                                                                                                        attrs: [],
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Ident,
                                                                                                                                        span: bytes(75315..75320),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: new,
                                                                                                                                        span: bytes(75322..75325),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    paren_token: Paren,
                                                                                                                    args: [
                                                                                                                        Expr::Field {
                                                                                                                            attrs: [],
                                                                                                                            base: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: self,
                                                                                                                                                span: bytes(75326..75330),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            dot_token: Dot,
                                                                                                                            member: Member::Named(
                                                                                                                                Ident {
                                                                                                                                    sym: name,
                                                                                                                                    span: bytes(75331..75335),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                        Comma,
                                                                                                                        Expr::Field {
                                                                                                                            attrs: [],
                                                                                                                            base: Expr::Path {
                                                                                                                                attrs: [],
                                                                                                                                qself: None,
                                                                                                                                path: Path {
                                                                                                                                    leading_colon: None,
                                                                                                                                    segments: [
                                                                                                                                        PathSegment {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: self,
                                                                                                                                                span: bytes(75337..75341),
                                                                                                                                            },
                                                                                                                                            arguments: PathArguments::None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            },
                                                                                                                            dot_token: Dot,
                                                                                                                            member: Member::Named(
                                                                                                                                Ident {
                                                                                                                                    sym: span,
                                                                                                                                    span: bytes(75342..75346),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: None,
                                                                            },
                                                                            Arm {
                                                                                attrs: [],
                                                                                pat: Pat::Wild {
                                                                                    attrs: [],
                                                                                    underscore_token: Underscore,
                                                                                },
                                                                                guard: None,
                                                                                fat_arrow_token: FatArrow,
                                                                                body: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: None,
                                                                                                    span: bytes(75389..75393),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                comma: Some(
                                                                                    Comma,
                                                                                ),
                                                                            },
                                                                        ],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ),
                                                inside_items: [],
                                                visibility: Pri,
                                                is_constructor: true,
                                            },
                                        ],
                                        relative_types: [
                                            "TokenTree",
                                        ],
                                    },
                                ],
                                functions: [],
                                traits: [],
                                use_trees: [],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                    ]
                     }
                    ,
                },
                RefCell {
                    value: ModContext {
                     mod_info: Mod(
                        ModModInfo {
                            mod_name: "spanned",
                            mod_tree: MyPath {
                                name: "quote",
                                next: Some(
                                    MyPath {
                                        name: "spanned",
                                        next: None,
                                    },
                                ),
                            },
                            file_path: "/home/abezbm/rust-utgen-test-crates/quote/src/spanned.rs",
                            parent_directory_path: "/home/abezbm/rust-utgen-test-crates/quote/src",
                            mod_file_directory_path: None,
                            visibility: PubT,
                        },
                    ),
                     syntax_context: SyntaxContext {
                        consts: [],
                        trait_aliases: [],
                        uses: [
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(81813..81818),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: ToTokens,
                                                            span: bytes(81820..81828),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(81834..81845),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: extra,
                                                            span: bytes(81847..81852),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: DelimSpan,
                                                                    span: bytes(81854..81863),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                            UseItem {
                                item: Some(
                                    ItemUse {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(81869..81880),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Group(
                                                    UseGroup {
                                                        brace_token: Brace,
                                                        items: [
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: Span,
                                                                        span: bytes(81883..81887),
                                                                    },
                                                                },
                                                            ),
                                                            Comma,
                                                            UseTree::Name(
                                                                UseName {
                                                                    ident: Ident {
                                                                        sym: TokenStream,
                                                                        span: bytes(81889..81900),
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                visibility: Pri,
                            },
                        ],
                        mods: [
                            ModItem {
                                mod_name: "private",
                                file_name: None,
                                item: Some(
                                    ItemMod {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        unsafety: None,
                                        mod_token: Mod,
                                        ident: Ident {
                                            sym: private,
                                            span: bytes(82685..82692),
                                        },
                                        content: Some(
                                            (
                                                Brace,
                                                [],
                                            ),
                                        ),
                                        semi: None,
                                    },
                                ),
                                inside_items: [
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                    span: bytes(82703..82708),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: ToTokens,
                                                            span: bytes(82710..82718),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(82728..82739),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: extra,
                                                            span: bytes(82741..82746),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: DelimSpan,
                                                                    span: bytes(82748..82757),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: proc_macro2,
                                                    span: bytes(82767..82778),
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Name(
                                                    UseName {
                                                        ident: Ident {
                                                            sym: Span,
                                                            span: bytes(82780..82784),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                    Item::Trait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: Sealed,
                                            span: bytes(82801..82807),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: None,
                                        supertraits: [],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Sealed,
                                                                span: bytes(82820..82826),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Span,
                                                            span: bytes(82831..82835),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Sealed,
                                                                span: bytes(82848..82854),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DelimSpan,
                                                            span: bytes(82859..82868),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                    Item::Impl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(82881..82882),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(82885..82890),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(82893..82901),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Sealed,
                                                                span: bytes(82903..82909),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(82914..82915),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ],
                                visibility: Pri,
                            },
                        ],
                        statics: [],
                        types: [],
                        structs: [],
                        enums: [],
                        unions: [],
                        impls: [
                            ImplItem {
                                impl_num: 0,
                                struct_name: Name {
                                    name: "Span",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "Span",
                                                next: None,
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Spanned",
                                        complete_name: "quote::spanned::Spanned",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "spanned",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Spanned",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Spanned,
                                                                span: bytes(82054..82061),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: Span,
                                                            span: bytes(82066..82070),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "__span",
                                            complete_name: "<proc_macro2::Span as quote::spanned::Spanned>::__span",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Span as quote",
                                                        next: Some(
                                                            MyPath {
                                                                name: "spanned",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "Spanned>",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "__span",
                                                                                next: None,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#0}::__span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: __span,
                                                        span: bytes(82080..82086),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(82088..82092),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(82097..82101),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Unary {
                                                                attrs: [],
                                                                op: UnOp::Deref(
                                                                    Star,
                                                                ),
                                                                expr: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(82113..82117),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 1,
                                struct_name: Name {
                                    name: "DelimSpan",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "proc_macro2",
                                        next: Some(
                                            MyPath {
                                                name: "extra",
                                                next: Some(
                                                    MyPath {
                                                        name: "DelimSpan",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Spanned",
                                        complete_name: "quote::spanned::Spanned",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "spanned",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Spanned",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Spanned,
                                                                span: bytes(82132..82139),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: DelimSpan,
                                                            span: bytes(82144..82153),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "__span",
                                            complete_name: "<proc_macro2::extra::DelimSpan as quote::spanned::Spanned>::__span",
                                            import_name: MyPath {
                                                name: "<proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "extra",
                                                        next: Some(
                                                            MyPath {
                                                                name: "DelimSpan as quote",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "spanned",
                                                                        next: Some(
                                                                            MyPath {
                                                                                name: "Spanned>",
                                                                                next: Some(
                                                                                    MyPath {
                                                                                        name: "__span",
                                                                                        next: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#1}::__span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: __span,
                                                        span: bytes(82163..82169),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(82171..82175),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(82180..82184),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: self,
                                                                                    span: bytes(82195..82199),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: join,
                                                                    span: bytes(82200..82204),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [],
                            },
                            ImplItem {
                                impl_num: 2,
                                struct_name: Name {
                                    name: "",
                                    complete_name: "",
                                    import_name: MyPath {
                                        name: "",
                                        next: None,
                                    },
                                },
                                trait_name: Some(
                                    Name {
                                        name: "Spanned",
                                        complete_name: "quote::spanned::Spanned",
                                        import_name: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "spanned",
                                                    next: Some(
                                                        MyPath {
                                                            name: "Spanned",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                                item: Some(
                                    ItemImpl {
                                        attrs: [],
                                        defaultness: None,
                                        unsafety: None,
                                        impl_token: Impl,
                                        generics: Generics {
                                            lt_token: Some(
                                                Lt,
                                            ),
                                            params: [
                                                GenericParam::Type(
                                                    TypeParam {
                                                        attrs: [],
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(82221..82222),
                                                        },
                                                        colon_token: Some(
                                                            Colon,
                                                        ),
                                                        bounds: [
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::Maybe(
                                                                        Question,
                                                                    ),
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: Sized,
                                                                                    span: bytes(82225..82230),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                            Plus,
                                                            TypeParamBound::Trait(
                                                                TraitBound {
                                                                    paren_token: None,
                                                                    modifier: TraitBoundModifier::None,
                                                                    lifetimes: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ToTokens,
                                                                                    span: bytes(82233..82241),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ],
                                                        eq_token: None,
                                                        default: None,
                                                    },
                                                ),
                                            ],
                                            gt_token: Some(
                                                Gt,
                                            ),
                                            where_clause: None,
                                        },
                                        trait_: Some(
                                            (
                                                None,
                                                Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: Spanned,
                                                                span: bytes(82243..82250),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                For,
                                            ),
                                        ),
                                        self_ty: Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: T,
                                                            span: bytes(82255..82256),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    ImplFnItem {
                                        fn_name: Name {
                                            name: "__span",
                                            complete_name: "< as quote::spanned::Spanned>::__span",
                                            import_name: MyPath {
                                                name: "< as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "spanned",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Spanned>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "__span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "{impl#2}::__span",
                                        item: Some(
                                            ImplItemFn {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                defaultness: None,
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: __span,
                                                        span: bytes(82266..82272),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(82274..82278),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(82283..82287),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: join_spans,
                                                                                    span: bytes(82298..82308),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: self,
                                                                                            span: bytes(82309..82313),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: into_token_stream,
                                                                            span: bytes(82314..82331),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ),
                                        inside_items: [],
                                        visibility: Pri,
                                        is_constructor: false,
                                    },
                                ],
                                relative_types: [
                                    "Sized",
                                    "ToTokens",
                                ],
                            },
                        ],
                        functions: [
                            FnItem {
                                fn_name: Name {
                                    name: "join_spans",
                                    complete_name: "quote::spanned::join_spans",
                                    import_name: MyPath {
                                        name: "quote",
                                        next: Some(
                                            MyPath {
                                                name: "spanned",
                                                next: Some(
                                                    MyPath {
                                                        name: "join_spans",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                complete_name_in_file: "join_spans",
                                item: Some(
                                    ItemFn {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        sig: Signature {
                                            constness: None,
                                            asyncness: None,
                                            unsafety: None,
                                            abi: None,
                                            fn_token: Fn,
                                            ident: Ident {
                                                sym: join_spans,
                                                span: bytes(82347..82357),
                                            },
                                            generics: Generics {
                                                lt_token: None,
                                                params: [],
                                                gt_token: None,
                                                where_clause: None,
                                            },
                                            paren_token: Paren,
                                            inputs: [
                                                FnArg::Typed(
                                                    PatType {
                                                        attrs: [],
                                                        pat: Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: tokens,
                                                                span: bytes(82358..82364),
                                                            },
                                                            subpat: None,
                                                        },
                                                        colon_token: Colon,
                                                        ty: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: TokenStream,
                                                                            span: bytes(82366..82377),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            variadic: None,
                                            output: ReturnType::Type(
                                                RArrow,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Span,
                                                                    span: bytes(82382..82386),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: Some(
                                                            Mut,
                                                        ),
                                                        ident: Ident {
                                                            sym: iter,
                                                            span: bytes(82401..82405),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: tokens,
                                                                                        span: bytes(82408..82414),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: into_iter,
                                                                        span: bytes(82415..82424),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: map,
                                                                    span: bytes(82427..82430),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: tt,
                                                                                    span: bytes(82432..82434),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: tt,
                                                                                                span: bytes(82436..82438),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: span,
                                                                                span: bytes(82439..82443),
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: first,
                                                            span: bytes(82457..82462),
                                                        },
                                                        subpat: None,
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::Match {
                                                                attrs: [],
                                                                match_token: Match,
                                                                expr: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: iter,
                                                                                        span: bytes(82471..82475),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: next,
                                                                        span: bytes(82476..82480),
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                brace_token: Brace,
                                                                arms: [
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::TupleStruct {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Some,
                                                                                            span: bytes(82493..82497),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: span,
                                                                                        span: bytes(82498..82502),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: span,
                                                                                            span: bytes(82507..82511),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        comma: Some(
                                                                            Comma,
                                                                        ),
                                                                    },
                                                                    Arm {
                                                                        attrs: [],
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: None,
                                                                                span: bytes(82521..82525),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        guard: None,
                                                                        fat_arrow_token: FatArrow,
                                                                        body: Expr::Return {
                                                                            attrs: [],
                                                                            return_token: Return,
                                                                            expr: Some(
                                                                                Expr::Call {
                                                                                    attrs: [],
                                                                                    func: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: Span,
                                                                                                        span: bytes(82536..82540),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                                PathSep,
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: call_site,
                                                                                                        span: bytes(82542..82551),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    paren_token: Paren,
                                                                                    args: [],
                                                                                },
                                                                            ),
                                                                        },
                                                                        comma: Some(
                                                                            Comma,
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::MethodCall {
                                                        attrs: [],
                                                        receiver: Expr::MethodCall {
                                                            attrs: [],
                                                            receiver: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: iter,
                                                                                    span: bytes(82567..82571),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: fold,
                                                                    span: bytes(82572..82576),
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: None,
                                                                                        span: bytes(82577..82581),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    Comma,
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: _prev,
                                                                                    span: bytes(82584..82589),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                            Comma,
                                                                            Pat::Ident {
                                                                                attrs: [],
                                                                                by_ref: None,
                                                                                mutability: None,
                                                                                ident: Ident {
                                                                                    sym: next,
                                                                                    span: bytes(82591..82595),
                                                                                },
                                                                                subpat: None,
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Some,
                                                                                                span: bytes(82597..82601),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: next,
                                                                                                    span: bytes(82602..82606),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            dot_token: Dot,
                                                            method: Ident {
                                                                sym: and_then,
                                                                span: bytes(82618..82626),
                                                            },
                                                            turbofish: None,
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: last,
                                                                                span: bytes(82628..82632),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: first,
                                                                                            span: bytes(82634..82639),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: join,
                                                                            span: bytes(82640..82644),
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: last,
                                                                                                span: bytes(82645..82649),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        dot_token: Dot,
                                                        method: Ident {
                                                            sym: unwrap_or,
                                                            span: bytes(82661..82670),
                                                        },
                                                        turbofish: None,
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: first,
                                                                                span: bytes(82671..82676),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                ),
                                inside_items: [],
                                visibility: Pri,
                            },
                        ],
                        traits: [
                            TraitItem {
                                trait_name: Name {
                                    name: "Spanned",
                                    complete_name: "quote::spanned::Spanned",
                                    import_name: MyPath {
                                        name: "quote",
                                        next: Some(
                                            MyPath {
                                                name: "spanned",
                                                next: Some(
                                                    MyPath {
                                                        name: "Spanned",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                },
                                item: Some(
                                    ItemTrait {
                                        attrs: [],
                                        vis: Visibility::Public(
                                            Pub,
                                        ),
                                        unsafety: None,
                                        auto_token: None,
                                        restriction: None,
                                        trait_token: Trait,
                                        ident: Ident {
                                            sym: Spanned,
                                            span: bytes(81989..81996),
                                        },
                                        generics: Generics {
                                            lt_token: None,
                                            params: [],
                                            gt_token: None,
                                            where_clause: None,
                                        },
                                        colon_token: Some(
                                            Colon,
                                        ),
                                        supertraits: [
                                            TypeParamBound::Trait(
                                                TraitBound {
                                                    paren_token: None,
                                                    modifier: TraitBoundModifier::None,
                                                    lifetimes: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: private,
                                                                    span: bytes(81998..82005),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Sealed,
                                                                    span: bytes(82007..82013),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        ],
                                        brace_token: Brace,
                                        items: [],
                                    },
                                ),
                                types: [],
                                consts: [],
                                functions: [
                                    TraitFnItem {
                                        fn_name: Name {
                                            name: "__span",
                                            complete_name: "<  as quote::spanned::Spanned>::__span",
                                            import_name: MyPath {
                                                name: "<  as quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "spanned",
                                                        next: Some(
                                                            MyPath {
                                                                name: "Spanned>",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "__span",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        complete_name_in_file: "Spanned::__span",
                                        item: Some(
                                            TraitItemFn {
                                                attrs: [],
                                                sig: Signature {
                                                    constness: None,
                                                    asyncness: None,
                                                    unsafety: None,
                                                    abi: None,
                                                    fn_token: Fn,
                                                    ident: Ident {
                                                        sym: __span,
                                                        span: bytes(82023..82029),
                                                    },
                                                    generics: Generics {
                                                        lt_token: None,
                                                        params: [],
                                                        gt_token: None,
                                                        where_clause: None,
                                                    },
                                                    paren_token: Paren,
                                                    inputs: [
                                                        FnArg::Receiver(
                                                            Receiver {
                                                                attrs: [],
                                                                reference: Some(
                                                                    (
                                                                        And,
                                                                        None,
                                                                    ),
                                                                ),
                                                                mutability: None,
                                                                self_token: SelfValue,
                                                                colon_token: None,
                                                                ty: Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: Self,
                                                                                        span: bytes(82031..82035),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                    variadic: None,
                                                    output: ReturnType::Type(
                                                        RArrow,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Span,
                                                                            span: bytes(82040..82044),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                },
                                                default: None,
                                                semi_token: Some(
                                                    Semi,
                                                ),
                                            },
                                        ),
                                        inside_items: [],
                                        is_constructor: false,
                                    },
                                ],
                                visibility: PubT,
                                relative_types: [
                                    "Sealed",
                                    "private",
                                ],
                            },
                        ],
                        use_trees: [
                            UseTree {
                                use_name: "ToTokens",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "quote",
                                    next: Some(
                                        MyPath {
                                            name: "to_tokens",
                                            next: Some(
                                                MyPath {
                                                    name: "ToTokens",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "DelimSpan",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "extra",
                                            next: Some(
                                                MyPath {
                                                    name: "DelimSpan",
                                                    next: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "Span",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "Span",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                            UseTree {
                                use_name: "TokenStream",
                                alias_name: None,
                                use_tree: MyPath {
                                    name: "proc_macro2",
                                    next: Some(
                                        MyPath {
                                            name: "TokenStream",
                                            next: None,
                                        },
                                    ),
                                },
                                visibility: Pri,
                            },
                        ],
                    },
                     sub_mods: [
                        RefCell {
                            value: ModContext {
                             mod_info: Mod(
                                ModModInfo {
                                    mod_name: "private",
                                    mod_tree: MyPath {
                                        name: "quote",
                                        next: Some(
                                            MyPath {
                                                name: "spanned",
                                                next: Some(
                                                    MyPath {
                                                        name: "private",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    file_path: "",
                                    parent_directory_path: "",
                                    mod_file_directory_path: None,
                                    visibility: PubS,
                                },
                            ),
                             syntax_context: SyntaxContext {
                                consts: [],
                                trait_aliases: [],
                                uses: [
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: crate,
                                                            span: bytes(82703..82708),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: ToTokens,
                                                                    span: bytes(82710..82718),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(82728..82739),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: extra,
                                                                    span: bytes(82741..82746),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Name(
                                                                    UseName {
                                                                        ident: Ident {
                                                                            sym: DelimSpan,
                                                                            span: bytes(82748..82757),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                    UseItem {
                                        item: Some(
                                            ItemUse {
                                                attrs: [],
                                                vis: Visibility::Inherited,
                                                use_token: Use,
                                                leading_colon: None,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: proc_macro2,
                                                            span: bytes(82767..82778),
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Name(
                                                            UseName {
                                                                ident: Ident {
                                                                    sym: Span,
                                                                    span: bytes(82780..82784),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                        ),
                                        visibility: Pri,
                                    },
                                ],
                                mods: [],
                                statics: [],
                                types: [],
                                structs: [],
                                enums: [],
                                unions: [],
                                impls: [
                                    ImplItem {
                                        impl_num: 0,
                                        struct_name: Name {
                                            name: "Span",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "Span",
                                                        next: None,
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "Sealed",
                                                complete_name: "quote::spanned::private::Sealed",
                                                import_name: MyPath {
                                                    name: "quote",
                                                    next: Some(
                                                        MyPath {
                                                            name: "spanned",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "private",
                                                                    next: Some(
                                                                        MyPath {
                                                                            name: "Sealed",
                                                                            next: None,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Sealed,
                                                                        span: bytes(82820..82826),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: Span,
                                                                    span: bytes(82831..82835),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        relative_types: [],
                                    },
                                    ImplItem {
                                        impl_num: 1,
                                        struct_name: Name {
                                            name: "DelimSpan",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "proc_macro2",
                                                next: Some(
                                                    MyPath {
                                                        name: "extra",
                                                        next: Some(
                                                            MyPath {
                                                                name: "DelimSpan",
                                                                next: None,
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "Sealed",
                                                complete_name: "quote::spanned::private::Sealed",
                                                import_name: MyPath {
                                                    name: "quote",
                                                    next: Some(
                                                        MyPath {
                                                            name: "spanned",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "private",
                                                                    next: Some(
                                                                        MyPath {
                                                                            name: "Sealed",
                                                                            next: None,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Sealed,
                                                                        span: bytes(82848..82854),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: DelimSpan,
                                                                    span: bytes(82859..82868),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        relative_types: [],
                                    },
                                    ImplItem {
                                        impl_num: 2,
                                        struct_name: Name {
                                            name: "",
                                            complete_name: "",
                                            import_name: MyPath {
                                                name: "",
                                                next: None,
                                            },
                                        },
                                        trait_name: Some(
                                            Name {
                                                name: "Sealed",
                                                complete_name: "quote::spanned::private::Sealed",
                                                import_name: MyPath {
                                                    name: "quote",
                                                    next: Some(
                                                        MyPath {
                                                            name: "spanned",
                                                            next: Some(
                                                                MyPath {
                                                                    name: "private",
                                                                    next: Some(
                                                                        MyPath {
                                                                            name: "Sealed",
                                                                            next: None,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        item: Some(
                                            ItemImpl {
                                                attrs: [],
                                                defaultness: None,
                                                unsafety: None,
                                                impl_token: Impl,
                                                generics: Generics {
                                                    lt_token: Some(
                                                        Lt,
                                                    ),
                                                    params: [
                                                        GenericParam::Type(
                                                            TypeParam {
                                                                attrs: [],
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(82881..82882),
                                                                },
                                                                colon_token: Some(
                                                                    Colon,
                                                                ),
                                                                bounds: [
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::Maybe(
                                                                                Question,
                                                                            ),
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: Sized,
                                                                                            span: bytes(82885..82890),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Plus,
                                                                    TypeParamBound::Trait(
                                                                        TraitBound {
                                                                            paren_token: None,
                                                                            modifier: TraitBoundModifier::None,
                                                                            lifetimes: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ToTokens,
                                                                                            span: bytes(82893..82901),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                                eq_token: None,
                                                                default: None,
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Some(
                                                        Gt,
                                                    ),
                                                    where_clause: None,
                                                },
                                                trait_: Some(
                                                    (
                                                        None,
                                                        Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: Sealed,
                                                                        span: bytes(82903..82909),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                        For,
                                                    ),
                                                ),
                                                self_ty: Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: T,
                                                                    span: bytes(82914..82915),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        relative_types: [
                                            "Sized",
                                            "ToTokens",
                                        ],
                                    },
                                ],
                                functions: [],
                                traits: [
                                    TraitItem {
                                        trait_name: Name {
                                            name: "Sealed",
                                            complete_name: "quote::spanned::private::Sealed",
                                            import_name: MyPath {
                                                name: "quote",
                                                next: Some(
                                                    MyPath {
                                                        name: "spanned",
                                                        next: Some(
                                                            MyPath {
                                                                name: "private",
                                                                next: Some(
                                                                    MyPath {
                                                                        name: "Sealed",
                                                                        next: None,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                        item: Some(
                                            ItemTrait {
                                                attrs: [],
                                                vis: Visibility::Public(
                                                    Pub,
                                                ),
                                                unsafety: None,
                                                auto_token: None,
                                                restriction: None,
                                                trait_token: Trait,
                                                ident: Ident {
                                                    sym: Sealed,
                                                    span: bytes(82801..82807),
                                                },
                                                generics: Generics {
                                                    lt_token: None,
                                                    params: [],
                                                    gt_token: None,
                                                    where_clause: None,
                                                },
                                                colon_token: None,
                                                supertraits: [],
                                                brace_token: Brace,
                                                items: [],
                                            },
                                        ),
                                        types: [],
                                        consts: [],
                                        functions: [],
                                        visibility: PubT,
                                        relative_types: [],
                                    },
                                ],
                                use_trees: [
                                    UseTree {
                                        use_name: "ToTokens",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "quote",
                                            next: Some(
                                                MyPath {
                                                    name: "to_tokens",
                                                    next: Some(
                                                        MyPath {
                                                            name: "ToTokens",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "DelimSpan",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "proc_macro2",
                                            next: Some(
                                                MyPath {
                                                    name: "extra",
                                                    next: Some(
                                                        MyPath {
                                                            name: "DelimSpan",
                                                            next: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                    UseTree {
                                        use_name: "Span",
                                        alias_name: None,
                                        use_tree: MyPath {
                                            name: "proc_macro2",
                                            next: Some(
                                                MyPath {
                                                    name: "Span",
                                                    next: None,
                                                },
                                            ),
                                        },
                                        visibility: Pri,
                                    },
                                ],
                            },
                             sub_mods: []
                             }
                            ,
                        },
                    ]
                     }
                    ,
                },
            ]
             }
            ,
        },
    ],
}