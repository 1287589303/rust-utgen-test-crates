[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, &str> = Right(\"value\");",
          "    let result = right.map_left(|x| x * 2);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(\"value\"));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, &str> = Right(\"value\");",
          "    let result = right.map_left(|x| x * 2);",
          "    assert_eq!(result, Right(\"value\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, u32> = Right(42);",
          "    let result = right.map_left(|x| x * 2);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(42));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, u32> = Right(42);",
          "    let result = right.map_left(|x| x * 2);",
          "    assert_eq!(result, Right(42));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<String, &str> = Right(\"test\");",
          "    let result = right.map_left(|x| x.len());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(\"test\"));"
        ],
        "code": [
          "{",
          "    let right: Either<String, &str> = Right(\"test\");",
          "    let result = right.map_left(|x| x.len());",
          "    assert_eq!(result, Right(\"test\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<f64, f64> = Right(3.14);",
          "    let result = right.map_left(|x| x * 2.0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(3.14));"
        ],
        "code": [
          "{",
          "    let right: Either<f64, f64> = Right(3.14);",
          "    let result = right.map_left(|x| x * 2.0);",
          "    assert_eq!(result, Right(3.14));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, &str> = Right(\"\");",
          "    let result = right.map_left(|x| x * 3);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(\"\"));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, &str> = Right(\"\");",
          "    let result = right.map_left(|x| x * 3);",
          "    assert_eq!(result, Right(\"\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]