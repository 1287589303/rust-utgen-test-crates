[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right_value: Either<i32, i32> = Right(5);",
          "    let default_value: i32 = 10;",
          "    let result = right_value.left_or(default_value);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 10);"
        ],
        "code": [
          "{",
          "    let right_value: Either<i32, i32> = Right(5);",
          "    let default_value: i32 = 10;",
          "    let result = right_value.left_or(default_value);",
          "    assert_eq!(result, 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right_value: Either<&str, &str> = Right(\"right\");",
          "    let default_value: &str = \"left\";",
          "    let result = right_value.left_or(default_value);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, \"left\");"
        ],
        "code": [
          "{",
          "    let right_value: Either<&str, &str> = Right(\"right\");",
          "    let default_value: &str = \"left\";",
          "    let result = right_value.left_or(default_value);",
          "    assert_eq!(result, \"left\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right_value: Either<f32, f32> = Right(3.14);",
          "    let default_value: f32 = 1.61;",
          "    let result = right_value.left_or(default_value);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 1.61);"
        ],
        "code": [
          "{",
          "    let right_value: Either<f32, f32> = Right(3.14);",
          "    let default_value: f32 = 1.61;",
          "    let result = right_value.left_or(default_value);",
          "    assert_eq!(result, 1.61);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right_value: Either<&str, &str> = Right(\"right\");",
          "    let default_value: &str = \"\";",
          "    let result = right_value.left_or(default_value);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, default_value);"
        ],
        "code": [
          "{",
          "    let right_value: Either<&str, &str> = Right(\"right\");",
          "    let default_value: &str = \"\";",
          "    let result = right_value.left_or(default_value);",
          "    assert_eq!(result, default_value);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right_value: Either<char, char> = Right('y');",
          "    let default_value: char = 'x';",
          "    let result = right_value.left_or(default_value);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 'x');"
        ],
        "code": [
          "{",
          "    let right_value: Either<char, char> = Right('y');",
          "    let default_value: char = 'x';",
          "    let result = right_value.left_or(default_value);",
          "    assert_eq!(result, 'x');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]