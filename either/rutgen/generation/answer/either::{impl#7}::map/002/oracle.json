[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<i32, i32> = Left(10);",
          "    let other = value.map(|x| x);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(other, Left(10));",
          "    assert!(matches!(other, Left(_)));",
          "    assert!(matches!(value.map(|x| x * 2), Left(_)));"
        ],
        "code": [
          "{",
          "    let value: Either<i32, i32> = Left(10);",
          "    let other = value.map(|x| x);",
          "    assert_eq!(other, Left(10));",
          "    assert!(matches!(other, Left(_)));",
          "    assert!(matches!(value.map(|x| x * 2), Left(_)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<i32, i32> = Left(5);",
          "    let other = value.map(|x| x * 3);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(other, Left(15));"
        ],
        "code": [
          "{",
          "    let value: Either<i32, i32> = Left(5);",
          "    let other = value.map(|x| x * 3);",
          "    assert_eq!(other, Left(15));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<String, i32> = Left(String::from(\"test\"));",
          "    let other = value.map(|s| s.len());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(other, Left(4));"
        ],
        "code": [
          "{",
          "    let value: Either<String, i32> = Left(String::from(\"test\"));",
          "    let other = value.map(|s| s.len());",
          "    assert_eq!(other, Left(4));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<f64, f64> = Left(2.5);",
          "    let other = value.map(|x| x * 4.0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(other, Left(10.0));"
        ],
        "code": [
          "{",
          "    let value: Either<f64, f64> = Left(2.5);",
          "    let other = value.map(|x| x * 4.0);",
          "    assert_eq!(other, Left(10.0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<i32, f64> = Left(7);",
          "    let other = value.map(|x| x + 10);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(other, Left(17));"
        ],
        "code": [
          "{",
          "    let value: Either<i32, f64> = Left(7);",
          "    let other = value.map(|x| x + 10);",
          "    assert_eq!(other, Left(17));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]