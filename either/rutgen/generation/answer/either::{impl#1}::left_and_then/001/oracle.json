[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, _> = Right(123);",
          "    let _result = right.left_and_then(|x| Right(x * 2));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(right.left_and_then(|x| Right(x * 2)), Right(123));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, _> = Right(123);",
          "    let _result = right.left_and_then(|x| Right(x * 2));",
          "    assert_eq!(right.left_and_then(|x| Right(x * 2)), Right(123));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<(), String> = Right(String::from(\"Test\"));",
          "    let _result = right.left_and_then(|x| Right(x.len().to_string()));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(right.left_and_then(|x| Right(x.len().to_string())), Right(String::from(\"Test\")));"
        ],
        "code": [
          "{",
          "    let right: Either<(), String> = Right(String::from(\"Test\"));",
          "    let _result = right.left_and_then(|x| Right(x.len().to_string()));",
          "    assert_eq!(right.left_and_then(|x| Right(x.len().to_string())), Right(String::from(\"Test\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct CustomType {",
          "        value: i32,",
          "    }",
          "",
          "    let right: Either<CustomType, _> = Right(CustomType { value: 42 });",
          "    let _result = right.left_and_then(|_x| Right(\"Still Right\"));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(right.left_and_then(|_x| Right(\"Still Right\")), Right(CustomType { value: 42 }));"
        ],
        "code": [
          "{",
          "    struct CustomType {",
          "        value: i32,",
          "    }",
          "",
          "    let right: Either<CustomType, _> = Right(CustomType { value: 42 });",
          "    let _result = right.left_and_then(|_x| Right(\"Still Right\"));",
          "    assert_eq!(right.left_and_then(|_x| Right(\"Still Right\")), Right(CustomType { value: 42 }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<(), ()> = Right(());",
          "    let _result = right.left_and_then(|_x| Right(\"Not used\"));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(()));"
        ],
        "code": [
          "{",
          "    let right: Either<(), ()> = Right(());",
          "    let _result = right.left_and_then(|_x| Right(\"Not used\"));",
          "    assert_eq!(result, Right(()));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]