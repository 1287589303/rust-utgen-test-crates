[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: Either<String, u32> = Left(\"left\".to_string());",
          "    let result = left.right_or_default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, u32::default());",
          "    assert_eq!(result, 0);",
          "    assert!(matches!(left, Either::Left(_)));",
          "    assert!(left.is_left());",
          "    assert!(!left.is_right());"
        ],
        "code": [
          "{",
          "    let left: Either<String, u32> = Left(\"left\".to_string());",
          "    let result = left.right_or_default();",
          "    assert_eq!(result, u32::default());",
          "    assert_eq!(result, 0);",
          "    assert!(matches!(left, Either::Left(_)));",
          "    assert!(left.is_left());",
          "    assert!(!left.is_right());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: Either<String, u32> = Left(\"\".to_string());",
          "    let result = left.right_or_default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, u32::default());"
        ],
        "code": [
          "{",
          "    let left: Either<String, u32> = Left(\"\".to_string());",
          "    let result = left.right_or_default();",
          "    assert_eq!(result, u32::default());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: Either<String, u32> = Left(\"zero length\".to_string());",
          "    let result = left.right_or_default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, u32::default());"
        ],
        "code": [
          "{",
          "    let left: Either<String, u32> = Left(\"zero length\".to_string());",
          "    let result = left.right_or_default();",
          "    assert_eq!(result, u32::default());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: Either<String, u32> = Left(\"123\".to_string());",
          "    let result = left.right_or_default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);",
          "    assert_eq!(left.right_or_default(), u32::default());",
          "    assert!(matches!(left, Either::Left(_)));",
          "    assert_ne!(left.right_or_default(), 42);",
          "    assert_eq!(result, u32::default());"
        ],
        "code": [
          "{",
          "    let left: Either<String, u32> = Left(\"123\".to_string());",
          "    let result = left.right_or_default();",
          "    assert_eq!(result, 0);",
          "    assert_eq!(left.right_or_default(), u32::default());",
          "    assert!(matches!(left, Either::Left(_)));",
          "    assert_ne!(left.right_or_default(), 42);",
          "    assert_eq!(result, u32::default());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]