[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: Either<String, ()> = Left(String::from(\"some value\"));",
          "    let result = left.as_ref();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Left(&String::from(\"some value\")));"
        ],
        "code": [
          "{",
          "    let left: Either<String, ()> = Left(String::from(\"some value\"));",
          "    let result = left.as_ref();",
          "    assert_eq!(result, Left(&String::from(\"some value\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: Either<String, ()> = Left(String::from(\"\"));",
          "    let result = left.as_ref();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Left(&String::from(\"\")));"
        ],
        "code": [
          "{",
          "    let left: Either<String, ()> = Left(String::from(\"\"));",
          "    let result = left.as_ref();",
          "    assert_eq!(result, Left(&String::from(\"\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let left: Either<String, ()> = Left(String::from(\"a\".repeat(1000)));",
          "    let result = left.as_ref();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Left(&String::from(\"a\".repeat(1000))));"
        ],
        "code": [
          "{",
          "    let left: Either<String, ()> = Left(String::from(\"a\".repeat(1000)));",
          "    let result = left.as_ref();",
          "    assert_eq!(result, Left(&String::from(\"a\".repeat(1000))));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]