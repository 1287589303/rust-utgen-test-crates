[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<&[&str], Vec<u8>> = Right(vec![]);",
          "    let result: Vec<_> = right.factor_into_iter().collect();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, vec![]);"
        ],
        "code": [
          "{",
          "    let right: Either<&[&str], Vec<u8>> = Right(vec![]);",
          "    let result: Vec<_> = right.factor_into_iter().collect();",
          "    assert_eq!(result, vec![]);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<&[&str], Vec<u8>> = Right(vec![42]);",
          "    let result: Vec<_> = right.factor_into_iter().collect();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, vec![Right(42)]);"
        ],
        "code": [
          "{",
          "    let right: Either<&[&str], Vec<u8>> = Right(vec![42]);",
          "    let result: Vec<_> = right.factor_into_iter().collect();",
          "    assert_eq!(result, vec![Right(42)]);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<&[&str], Vec<u8>> = Right(vec![1, 2, 3]);",
          "    let result: Vec<_> = right.factor_into_iter().collect();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, vec![Right(1), Right(2), Right(3)]);"
        ],
        "code": [
          "{",
          "    let right: Either<&[&str], Vec<u8>> = Right(vec![1, 2, 3]);",
          "    let result: Vec<_> = right.factor_into_iter().collect();",
          "    assert_eq!(result, vec![Right(1), Right(2), Right(3)]);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]