[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<i32, &str> = Right(\"the right value\");",
          "    let result = value.is_left();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let value: Either<i32, &str> = Right(\"the right value\");",
          "    let result = value.is_left();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<f64, bool> = Right(true);",
          "    let result = value.is_left();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let value: Either<f64, bool> = Right(true);",
          "    let result = value.is_left();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<&str, String> = Right(String::from(\"\"));",
          "    let result = value.is_left();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let value: Either<&str, String> = Right(String::from(\"\"));",
          "    let result = value.is_left();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<u32, f64> = Right(3.14);",
          "    let result = value.is_left();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let value: Either<u32, f64> = Right(3.14);",
          "    let result = value.is_left();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: Either<(i32, i32), Vec<i32>> = Right(vec![1, 2, 3]);",
          "    let result = value.is_left();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let value: Either<(i32, i32), Vec<i32>> = Right(vec![1, 2, 3]);",
          "    let result = value.is_left();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]