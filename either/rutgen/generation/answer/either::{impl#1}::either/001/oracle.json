[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, i32> = Right(5);",
          "    let result = right.either(|n| n * 2, |n| -n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, -5);"
        ],
        "code": [
          "{",
          "    let right: Either<u32, i32> = Right(5);",
          "    let result = right.either(|n| n * 2, |n| -n);",
          "    assert_eq!(result, -5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, i32> = Right(-3);",
          "    let result = right.either(|n| n * 2, |n| -n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 3);"
        ],
        "code": [
          "{",
          "    let right: Either<u32, i32> = Right(-3);",
          "    let result = right.either(|n| n * 2, |n| -n);",
          "    assert_eq!(result, 3);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, i32> = Right(0);",
          "    let result = right.either(|n| n * 2, |n| -n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);"
        ],
        "code": [
          "{",
          "    let right: Either<u32, i32> = Right(0);",
          "    let result = right.either(|n| n * 2, |n| -n);",
          "    assert_eq!(result, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]