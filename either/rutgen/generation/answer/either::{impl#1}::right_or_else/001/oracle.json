[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<String, u32> = Right(0);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);"
        ],
        "code": [
          "{",
          "    let right: Either<String, u32> = Right(0);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "    assert_eq!(result, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<String, u32> = Right(1);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 1);"
        ],
        "code": [
          "{",
          "    let right: Either<String, u32> = Right(1);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "    assert_eq!(result, 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<String, u32> = Right(2);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 2);"
        ],
        "code": [
          "{",
          "    let right: Either<String, u32> = Right(2);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "    assert_eq!(result, 2);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<String, u32> = Right(u32::MAX);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, u32::MAX);"
        ],
        "code": [
          "{",
          "    let right: Either<String, u32> = Right(u32::MAX);",
          "    let result = right.right_or_else(|x| x.parse().unwrap());",
          "    assert_eq!(result, u32::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]