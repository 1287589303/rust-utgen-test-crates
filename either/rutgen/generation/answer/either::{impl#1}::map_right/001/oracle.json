[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, _> = Right(500);",
          "    let result = right.map_right(|x| x * 2);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(1000));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, _> = Right(500);",
          "    let result = right.map_right(|x| x * 2);",
          "    assert_eq!(result, Right(1000));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, _> = Right(1000);",
          "    let result = right.map_right(|x| x + 1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(1001));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, _> = Right(1000);",
          "    let result = right.map_right(|x| x + 1);",
          "    assert_eq!(result, Right(1001));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, _> = Right(1);",
          "    let result = right.map_right(|x| x - 1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(0));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, _> = Right(1);",
          "    let result = right.map_right(|x| x - 1);",
          "    assert_eq!(result, Right(0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, _> = Right(0);",
          "    let result = right.map_right(|x| x + 5);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(5));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, _> = Right(0);",
          "    let result = right.map_right(|x| x + 5);",
          "    assert_eq!(result, Right(5));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let right: Either<u32, _> = Right(999);",
          "    let result = right.map_right(|x| x * 10);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Right(9990));"
        ],
        "code": [
          "{",
          "    let right: Either<u32, _> = Right(999);",
          "    let result = right.map_right(|x| x * 10);",
          "    assert_eq!(result, Right(9990));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]