[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _5 = discriminant(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:402:9: 402:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb2, 1: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:402:15: 402:19 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:13: 403:20 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = move ((_1 as Right).0: R),
            StorageLive(_13),
            StorageLive(_14),
            _14 = move _4,
            StorageLive(_15),
            StorageLive(_16),
            _16 = move _2,
            StorageLive(_17),
            _17 = move _12,
            _15 = (move _16, move _17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:31: 404:40 (#0),
                    scope: scope[2],
                },
                kind: _13 = <G as core::ops::FnOnce<(Ctx, R)>>::call_once(move _14, move _15) -> [return: bb10, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_6),
            _6 = move ((_1 as Left).0: L),
            StorageLive(_7),
            StorageLive(_8),
            _8 = move _3,
            StorageLive(_9),
            StorageLive(_10),
            _10 = move _2,
            StorageLive(_11),
            _11 = move _6,
            _9 = (move _10, move _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:29: 403:38 (#0),
                    scope: scope[1],
                },
                kind: _7 = <F as core::ops::FnOnce<(Ctx, L)>>::call_once(move _8, move _9) -> [return: bb5, unwind: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb6, unwind: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb7, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_8),
            _0 = Either::<M, S>::Left(move _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:38: 403:39 (#0),
                    scope: scope[1],
                },
                kind: drop(_7) -> [return: bb8, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:38: 403:39 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb9, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:38: 403:39 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_17) -> [return: bb11, unwind: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_16) -> [return: bb12, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_14),
            _0 = Either::<M, S>::Right(move _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:40: 404:41 (#0),
                    scope: scope[2],
                },
                kind: drop(_13) -> [return: bb13, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:40: 404:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_12) -> [return: bb14, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:40: 404:41 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb16, unwind: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb17, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb18, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb19, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:6: 406:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_16) -> [return: bb21, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_14) -> [return: bb22, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:40: 404:41 (#0),
                    scope: scope[2],
                },
                kind: drop(_13) -> [return: bb27, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_15) -> [return: bb24, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_17) -> [return: bb25, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_16) -> [return: bb26, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:39: 404:40 (#0),
                    scope: scope[2],
                },
                kind: drop(_14) -> [return: bb27, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:404:40: 404:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_12) -> [return: bb36, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb29, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_8) -> [return: bb30, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:38: 403:39 (#0),
                    scope: scope[1],
                },
                kind: drop(_7) -> [return: bb35, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb32, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb33, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb34, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:37: 403:38 (#0),
                    scope: scope[1],
                },
                kind: drop(_8) -> [return: bb35, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:403:38: 403:39 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb36, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb37, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb39, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:406:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:397:5: 406:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Either<M/#5, S/#6>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:397:76: 397:88 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: Either<L/#0, R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:397:45: 397:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/lib.rs:397:56: 397:59 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:397:51: 397:54 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:397:51: 397:54 (#0),
                    },
                ),
            ),
        ),
        ty: Ctx/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:397:51: 397:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/lib.rs:397:64: 397:65 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:397:61: 397:62 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:397:61: 397:62 (#0),
                    },
                ),
            ),
        ),
        ty: F/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:397:61: 397:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/lib.rs:397:70: 397:71 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:397:67: 397:68 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:397:67: 397:68 (#0),
                    },
                ),
            ),
        ),
        ty: G/#4,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:397:67: 397:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:403:13: 403:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/lib.rs:402:15: 402:19 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:403:13: 403:20 (#0),
                    },
                ),
            ),
        ),
        ty: L/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:403:18: 403:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: M/#5,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:403:29: 403:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: F/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:403:29: 403:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: (Ctx/#2, L/#0),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:403:29: 403:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: Ctx/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:403:31: 403:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: L/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:403:36: 403:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/lib.rs:402:15: 402:19 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:404:13: 404:21 (#0),
                    },
                ),
            ),
        ),
        ty: R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:404:19: 404:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: S/#6,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:404:31: 404:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: G/#4,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:404:31: 404:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: (Ctx/#2, R/#1),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:404:31: 404:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: Ctx/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:404:33: 404:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:402:9: 405:10 (#0),
                },
            ),
        ),
        ty: R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:404:38: 404:39 (#0),
            scope: scope[0],
        },
    },
]