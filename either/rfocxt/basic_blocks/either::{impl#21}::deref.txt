[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            PlaceMention(_1),
            _3 = discriminant((*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:83:9: 83:9 (#115),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1334:19: 1334:23 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:84:13: 84:43 (#115),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            _8 = &(((*_1) as Right).0: R),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &(*_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1334:35: 1334:42 (#0),
                    scope: scope[2],
                },
                kind: _10 = <R as core::ops::Deref>::deref(move _11) -> [return: bb6, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &(((*_1) as Left).0: L),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1334:35: 1334:42 (#0),
                    scope: scope[1],
                },
                kind: _6 = <L as core::ops::Deref>::deref(move _7) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _5 = &(*_6),
            _2 = &(*_5),
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:84:18: 84:19 (#115),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            _9 = &(*_10),
            _2 = &(*_9),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:85:18: 85:19 (#115),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = &(*_2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1335:6: 1335:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:1333:5: 1335:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(1:3552 ~ core[a245]::ops::deref::Deref::Target) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1333:24: 1333:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} Either<L/#0, R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1333:14: 1333:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:83:9: 86:10 (#115),
                },
            ),
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(1:3552 ~ core[a245]::ops::deref::Deref::Target) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:83:9: 86:10 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:84:13: 84:43 (#115),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/lib.rs:1334:19: 1334:23 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:84:13: 84:43 (#115),
                    },
                ),
            ),
        ),
        ty: &'{erased} L/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:25: 1334:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:83:9: 86:10 (#115),
                },
            ),
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(1:3552 ~ core[a245]::ops::deref::Deref::Target) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:34: 1334:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:83:9: 86:10 (#115),
                },
            ),
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(1:3552 ~ core[a245]::ops::deref::Deref::Target) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:35: 1334:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:83:9: 86:10 (#115),
                },
            ),
        ),
        ty: &'{erased} L/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:36: 1334:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/lib.rs:1334:19: 1334:23 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:85:13: 85:44 (#115),
                    },
                ),
            ),
        ),
        ty: &'{erased} R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:25: 1334:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:83:9: 86:10 (#115),
                },
            ),
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(1:3552 ~ core[a245]::ops::deref::Deref::Target) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:34: 1334:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:83:9: 86:10 (#115),
                },
            ),
        ),
        ty: &'{erased} Alias(Projection, AliasTy { args: [L/#0], def_id: DefId(1:3552 ~ core[a245]::ops::deref::Deref::Target) }),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:35: 1334:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/lib.rs:83:9: 86:10 (#115),
                },
            ),
        ),
        ty: &'{erased} R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:1334:36: 1334:42 (#0),
            scope: scope[0],
        },
    },
]