{
  "name": "either::{impl#11}::from",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1561:2"
  },
  "visible": true,
  "loc": "src/lib.rs:1133:5:1138:6",
  "doc": "",
  "code": [
    "fn from(val: Either<L, R>) -> Self {",
    "    match val {",
    "        Left(l) => Err(l),",
    "        Right(r) => Ok(r),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "val matches Right(r)",
          "norm": null,
          "value": "true",
          "line": 1134,
          "bound": null
        }
      ],
      "ret": "Ok(r)",
      "path": [
        0,
        3,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "val matches Left(l)",
          "norm": null,
          "value": "true",
          "line": 1134,
          "bound": null
        },
        {
          "cond": "val matches Left(l)",
          "norm": null,
          "value": "true",
          "line": 1134,
          "bound": null
        }
      ],
      "ret": "Err(l)",
      "path": [
        0,
        2,
        4,
        5,
        6,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}