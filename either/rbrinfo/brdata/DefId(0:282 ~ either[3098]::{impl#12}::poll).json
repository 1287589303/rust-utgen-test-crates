{
  "name": "either::{impl#12}::poll",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1561:2"
  },
  "visible": true,
  "loc": "src/lib.rs:1149:5:1154:6",
  "doc": "",
  "code": [
    "fn poll(",
    "    self: Pin<&mut Self>,",
    "    cx: &mut core::task::Context<'_>,",
    ") -> core::task::Poll<Self::Output> {",
    "    for_both!(self.as_pin_mut(), inner => inner.poll(cx))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.as_pin_mut() matches $crate::Either::Right($pattern)",
          "norm": null,
          "value": "true",
          "line": 1153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.as_pin_mut() matches $crate::Either::Left($pattern)",
          "norm": null,
          "value": "true",
          "line": 1153,
          "bound": null
        },
        {
          "cond": "self.as_pin_mut() matches $crate::Either::Left($pattern)",
          "norm": null,
          "value": "true",
          "line": 1153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}