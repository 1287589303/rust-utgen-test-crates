{
  "name": "either::{impl#1}::flip",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1561:2"
  },
  "visible": true,
  "loc": "src/lib.rs:298:5:303:6",
  "doc": "/// Convert `Either<L, R>` to `Either<R, L>`.\n///\n/// ```\n/// use either::*;\n///\n/// let left: Either<_, ()> = Left(123);\n/// assert_eq!(left.flip(), Right(123));\n///\n/// let right: Either<(), _> = Right(\"some value\");\n/// assert_eq!(right.flip(), Left(\"some value\"));\n/// ```\n",
  "code": [
    "pub fn flip(self) -> Either<R, L> {",
    "    match self {",
    "        Left(l) => Right(l),",
    "        Right(r) => Left(r),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Right(r)",
          "norm": null,
          "value": "true",
          "line": 299,
          "bound": null
        }
      ],
      "ret": "Left(r)",
      "path": [
        0,
        3,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Left(l)",
          "norm": null,
          "value": "true",
          "line": 299,
          "bound": null
        },
        {
          "cond": "self matches Left(l)",
          "norm": null,
          "value": "true",
          "line": 299,
          "bound": null
        }
      ],
      "ret": "Right(l)",
      "path": [
        0,
        2,
        4,
        5,
        6,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}