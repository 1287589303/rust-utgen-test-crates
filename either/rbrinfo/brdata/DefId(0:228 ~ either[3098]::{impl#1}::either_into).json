{
  "name": "either::{impl#1}::either_into",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1561:2"
  },
  "visible": true,
  "loc": "src/lib.rs:921:5:927:6",
  "doc": "/// Convert the contained value into `T`\n///\n/// # Examples\n///\n/// ```\n/// # use either::*;\n/// // Both u16 and u32 can be converted to u64.\n/// let left: Either<u16, u32> = Left(3u16);\n/// assert_eq!(left.either_into::<u64>(), 3u64);\n/// let right: Either<u16, u32> = Right(7u32);\n/// assert_eq!(right.either_into::<u64>(), 7u64);\n/// ```\n",
  "code": [
    "pub fn either_into<T>(self) -> T",
    "where",
    "    L: Into<T>,",
    "    R: Into<T>,",
    "{",
    "    for_both!(self, inner => inner.into())",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches $crate::Either::Right($pattern)",
          "norm": null,
          "value": "true",
          "line": 926,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches $crate::Either::Left($pattern)",
          "norm": null,
          "value": "true",
          "line": 926,
          "bound": null
        },
        {
          "cond": "self matches $crate::Either::Left($pattern)",
          "norm": null,
          "value": "true",
          "line": 926,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        6,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}