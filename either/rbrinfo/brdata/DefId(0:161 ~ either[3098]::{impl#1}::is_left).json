{
  "name": "either::{impl#1}::is_left",
  "mod_info": {
    "name": "",
    "loc": "src/lib.rs:1:1:1561:2"
  },
  "visible": true,
  "loc": "src/lib.rs:175:5:180:6",
  "doc": "/// Return true if the value is the `Left` variant.\n///\n/// ```\n/// use either::*;\n///\n/// let values = [Left(1), Right(\"the right value\")];\n/// assert_eq!(values[0].is_left(), true);\n/// assert_eq!(values[1].is_left(), false);\n/// ```\n",
  "code": [
    "pub fn is_left(&self) -> bool {",
    "    match self {",
    "        Left(_) => true,",
    "        Right(_) => false,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Right(_)",
          "norm": null,
          "value": "true",
          "line": 176,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        3,
        5
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Left(_)",
          "norm": null,
          "value": "true",
          "line": 176,
          "bound": null
        },
        {
          "cond": "self matches Left(_)",
          "norm": null,
          "value": "true",
          "line": 176,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        2,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}