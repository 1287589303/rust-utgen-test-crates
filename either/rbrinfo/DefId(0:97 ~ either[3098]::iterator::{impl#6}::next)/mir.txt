bb0
  0: StorageLive(_2)
    SourceInfo(src/lib.rs:135:9-138:10)
  1: PlaceMention(((*_1).0: Either<L, R>))
    SourceInfo(src/iterator.rs:188:26-188:36)
  2: _3 = discriminant(((*_1).0: Either<L, R>))
    SourceInfo(src/iterator.rs:188:26-188:36)
  Terminator {
      source_info: SourceInfo(src/lib.rs:135:9-135:9)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: Either<L, R>))
    SourceInfo(src/iterator.rs:188:26-188:36)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:26-188:36)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/lib.rs:136:13-136:27)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_14)
    SourceInfo(src/iterator.rs:188:38-188:51)
  1: _14 = &mut ((((*_1).0: Either<L, R>) as Right).0: R)
    SourceInfo(src/iterator.rs:188:38-188:51)
  2: StorageLive(_15)
    SourceInfo(src/iterator.rs:188:55-188:68)
  3: StorageLive(_16)
    SourceInfo(src/iterator.rs:188:55-188:68)
  4: StorageLive(_17)
    SourceInfo(src/iterator.rs:188:55-188:67)
  5: StorageLive(_18)
    SourceInfo(src/iterator.rs:188:55-188:60)
  6: _18 = &mut (*_14)
    SourceInfo(src/iterator.rs:188:55-188:60)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:67)
      kind: _17 = <R as core::iter::Iterator>::next(move _18) -> [return: bb15, unwind: bb35]
  }
  preds [bb0, bb2]
  succs [bb15, bb35]

bb4
  0: StorageLive(_4)
    SourceInfo(src/iterator.rs:188:38-188:51)
  1: _4 = &mut ((((*_1).0: Either<L, R>) as Left).0: L)
    SourceInfo(src/iterator.rs:188:38-188:51)
  2: StorageLive(_5)
    SourceInfo(src/iterator.rs:188:55-188:68)
  3: StorageLive(_6)
    SourceInfo(src/iterator.rs:188:55-188:68)
  4: StorageLive(_7)
    SourceInfo(src/iterator.rs:188:55-188:67)
  5: StorageLive(_8)
    SourceInfo(src/iterator.rs:188:55-188:60)
  6: _8 = &mut (*_4)
    SourceInfo(src/iterator.rs:188:55-188:60)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:67)
      kind: _7 = <L as core::iter::Iterator>::next(move _8) -> [return: bb5, unwind: bb35]
  }
  preds [bb2]
  succs [bb5, bb35]

bb5
  0: StorageDead(_8)
    SourceInfo(src/iterator.rs:188:66-188:67)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: _6 = <core::option::Option<<L as core::iter::Iterator>::Item> as core::ops::Try>::branch(move _7) -> [return: bb6, unwind: bb34]
  }
  preds [bb4]
  succs [bb6, bb34]

bb6
  0: StorageDead(_7)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: PlaceMention(_6)
    SourceInfo(src/iterator.rs:188:55-188:68)
  2: _9 = discriminant(_6)
    SourceInfo(src/iterator.rs:188:55-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: switchInt(move _9) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(src/iterator.rs:188:55-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:67-188:68)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_13)
    SourceInfo(src/iterator.rs:188:55-188:68)
  1: _13 = move ((_6 as Continue).0: <L as core::iter::Iterator>::Item)
    SourceInfo(src/iterator.rs:188:55-188:68)
  2: _5 = move _13
    SourceInfo(src/iterator.rs:188:55-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:67-188:68)
      kind: drop(_13) -> [return: bb12, unwind: bb33]
  }
  preds [bb6, bb8]
  succs [bb12, bb33]

bb10
  0: StorageLive(_10)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: _10 = ((_6 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/iterator.rs:188:67-188:68)
  2: StorageLive(_12)
    SourceInfo(src/iterator.rs:188:67-188:68)
  3: _12 = _10
    SourceInfo(src/iterator.rs:188:67-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: _0 = <core::option::Option<Either<<L as core::iter::Iterator>::Item, <R as core::iter::Iterator>::Item>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _12) -> [return: bb11, unwind: bb33]
  }
  preds [bb8]
  succs [bb11, bb33]

bb11
  0: StorageDead(_12)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: StorageDead(_10)
    SourceInfo(src/iterator.rs:188:67-188:68)
  2: StorageDead(_5)
    SourceInfo(src/lib.rs:136:43-136:44)
  Terminator {
      source_info: SourceInfo(src/lib.rs:136:43-136:44)
      kind: drop(_6) -> [return: bb28, unwind: bb35]
  }
  preds [bb10]
  succs [bb28, bb35]

bb12
  0: StorageDead(_13)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: _2 = Either::<<L as core::iter::Iterator>::Item, <R as core::iter::Iterator>::Item>::Left(move _5)
    SourceInfo(src/lib.rs:136:31-136:44)
  Terminator {
      source_info: SourceInfo(src/lib.rs:136:43-136:44)
      kind: drop(_5) -> [return: bb13, unwind: bb33]
  }
  preds [bb9]
  succs [bb13, bb33]

bb13
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:136:43-136:44)
  Terminator {
      source_info: SourceInfo(src/lib.rs:136:43-136:44)
      kind: drop(_6) -> [return: bb14, unwind: bb35]
  }
  preds [bb12]
  succs [bb14, bb35]

bb14
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:136:43-136:44)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:136:43-136:44)
  Terminator {
      source_info: SourceInfo(src/lib.rs:136:43-136:44)
      kind: goto -> bb25
  }
  preds [bb13]
  succs [bb25]

bb15
  0: StorageDead(_18)
    SourceInfo(src/iterator.rs:188:66-188:67)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: _16 = <core::option::Option<<R as core::iter::Iterator>::Item> as core::ops::Try>::branch(move _17) -> [return: bb16, unwind: bb32]
  }
  preds [bb3]
  succs [bb16, bb32]

bb16
  0: StorageDead(_17)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: PlaceMention(_16)
    SourceInfo(src/iterator.rs:188:55-188:68)
  2: _19 = discriminant(_16)
    SourceInfo(src/iterator.rs:188:55-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: switchInt(move _19) -> [0: bb19, 1: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(src/iterator.rs:188:55-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:67-188:68)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_23)
    SourceInfo(src/iterator.rs:188:55-188:68)
  1: _23 = move ((_16 as Continue).0: <R as core::iter::Iterator>::Item)
    SourceInfo(src/iterator.rs:188:55-188:68)
  2: _15 = move _23
    SourceInfo(src/iterator.rs:188:55-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:67-188:68)
      kind: drop(_23) -> [return: bb22, unwind: bb31]
  }
  preds [bb16, bb18]
  succs [bb22, bb31]

bb20
  0: StorageLive(_20)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: _20 = ((_16 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/iterator.rs:188:67-188:68)
  2: StorageLive(_22)
    SourceInfo(src/iterator.rs:188:67-188:68)
  3: _22 = _20
    SourceInfo(src/iterator.rs:188:67-188:68)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:55-188:68)
      kind: _0 = <core::option::Option<Either<<L as core::iter::Iterator>::Item, <R as core::iter::Iterator>::Item>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _22) -> [return: bb21, unwind: bb31]
  }
  preds [bb18]
  succs [bb21, bb31]

bb21
  0: StorageDead(_22)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: StorageDead(_20)
    SourceInfo(src/iterator.rs:188:67-188:68)
  2: StorageDead(_15)
    SourceInfo(src/lib.rs:137:45-137:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:137:45-137:46)
      kind: drop(_16) -> [return: bb27, unwind: bb35]
  }
  preds [bb20]
  succs [bb27, bb35]

bb22
  0: StorageDead(_23)
    SourceInfo(src/iterator.rs:188:67-188:68)
  1: _2 = Either::<<L as core::iter::Iterator>::Item, <R as core::iter::Iterator>::Item>::Right(move _15)
    SourceInfo(src/lib.rs:137:32-137:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:137:45-137:46)
      kind: drop(_15) -> [return: bb23, unwind: bb31]
  }
  preds [bb19]
  succs [bb23, bb31]

bb23
  0: StorageDead(_15)
    SourceInfo(src/lib.rs:137:45-137:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:137:45-137:46)
      kind: drop(_16) -> [return: bb24, unwind: bb35]
  }
  preds [bb22]
  succs [bb24, bb35]

bb24
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:137:45-137:46)
  1: StorageDead(_14)
    SourceInfo(src/lib.rs:137:45-137:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:137:45-137:46)
      kind: goto -> bb25
  }
  preds [bb23]
  succs [bb25]

bb25
  0: _0 = core::option::Option::<Either<<L as core::iter::Iterator>::Item, <R as core::iter::Iterator>::Item>>::Some(move _2)
    SourceInfo(src/iterator.rs:188:9-188:70)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:69-188:70)
      kind: drop(_2) -> [return: bb26, unwind: bb35]
  }
  preds [bb14, bb24]
  succs [bb26, bb35]

bb26
  0: StorageDead(_2)
    SourceInfo(src/iterator.rs:188:69-188:70)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:189:6-189:6)
      kind: goto -> bb30
  }
  preds [bb25]
  succs [bb30]

bb27
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:137:45-137:46)
  1: StorageDead(_14)
    SourceInfo(src/lib.rs:137:45-137:46)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb21]
  succs [bb29]

bb28
  0: StorageDead(_6)
    SourceInfo(src/lib.rs:136:43-136:44)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:136:43-136:44)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb11]
  succs [bb29]

bb29
  0: StorageDead(_2)
    SourceInfo(src/iterator.rs:188:69-188:70)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:189:6-189:6)
      kind: goto -> bb30
  }
  preds [bb27, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/iterator.rs:189:6-189:6)
      kind: return
  }
  preds [bb26, bb29]
  succs []

bb31
  Terminator {
      source_info: SourceInfo(src/lib.rs:137:45-137:46)
      kind: drop(_16) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb19, bb20, bb22]
  succs [bb35]

bb32
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:67-188:68)
      kind: drop(_17) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb35]

bb33
  Terminator {
      source_info: SourceInfo(src/lib.rs:136:43-136:44)
      kind: drop(_6) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb12]
  succs [bb35]

bb34
  Terminator {
      source_info: SourceInfo(src/iterator.rs:188:67-188:68)
      kind: drop(_7) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(src/iterator.rs:187:5-189:6)
      kind: resume
  }
  preds [bb3, bb4, bb11, bb13, bb21, bb23, bb25, bb31, bb32, bb33, bb34]
  succs []

