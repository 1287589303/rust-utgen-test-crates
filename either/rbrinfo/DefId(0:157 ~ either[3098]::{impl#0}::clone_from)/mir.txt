bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:157:15-157:29)
  1: StorageLive(_4)
    SourceInfo(src/lib.rs:157:16-157:20)
  2: _4 = move _1
    SourceInfo(src/lib.rs:157:16-157:20)
  3: StorageLive(_5)
    SourceInfo(src/lib.rs:157:22-157:28)
  4: _5 = _2
    SourceInfo(src/lib.rs:157:22-157:28)
  5: _3 = (move _4, move _5)
    SourceInfo(src/lib.rs:157:15-157:29)
  6: StorageDead(_5)
    SourceInfo(src/lib.rs:157:28-157:29)
  7: StorageDead(_4)
    SourceInfo(src/lib.rs:157:28-157:29)
  8: PlaceMention(_3)
    SourceInfo(src/lib.rs:157:15-157:29)
  9: _8 = discriminant((*(_3.0: &mut Either<L, R>)))
    SourceInfo(src/lib.rs:157:15-157:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:157:9-157:29)
      kind: switchInt(move _8) -> [0: bb2, 1: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb4]

bb1
  0: StorageLive(_17)
    SourceInfo(src/lib.rs:160:14-160:18)
  1: _17 = move (_3.0: &mut Either<L, R>)
    SourceInfo(src/lib.rs:160:14-160:18)
  2: StorageLive(_18)
    SourceInfo(src/lib.rs:160:20-160:26)
  3: _18 = (_3.1: &Either<L, R>)
    SourceInfo(src/lib.rs:160:20-160:26)
  4: StorageLive(_19)
    SourceInfo(src/lib.rs:160:39-160:53)
  5: StorageLive(_20)
    SourceInfo(src/lib.rs:160:39-160:45)
  6: _20 = &(*_18)
    SourceInfo(src/lib.rs:160:39-160:45)
  Terminator {
      source_info: SourceInfo(src/lib.rs:160:39-160:53)
      kind: _19 = <Either<L, R> as core::clone::Clone>::clone(move _20) -> [return: bb10, unwind: bb15]
  }
  preds [bb0, bb2, bb4, bb5]
  succs [bb10, bb15]

bb2
  0: _6 = discriminant((*(_3.1: &Either<L, R>)))
    SourceInfo(src/lib.rs:157:15-157:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:157:9-157:29)
      kind: switchInt(move _6) -> [0: bb3, otherwise: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  Terminator {
      source_info: SourceInfo(src/lib.rs:158:13-158:39)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: _7 = discriminant((*(_3.1: &Either<L, R>)))
    SourceInfo(src/lib.rs:157:15-157:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:157:9-157:29)
      kind: switchInt(move _7) -> [1: bb5, otherwise: bb1]
  }
  preds [bb0, bb3]
  succs [bb1, bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/lib.rs:159:13-159:41)
      kind: falseEdge -> [real: bb8, imaginary: bb1]
  }
  preds [bb4]
  succs [bb1, bb8]

bb6
  0: StorageLive(_9)
    SourceInfo(src/lib.rs:158:19-158:23)
  1: _9 = &mut (((*(_3.0: &mut Either<L, R>)) as Left).0: L)
    SourceInfo(src/lib.rs:158:19-158:23)
  2: StorageLive(_10)
    SourceInfo(src/lib.rs:158:31-158:37)
  3: _10 = &(((*(_3.1: &Either<L, R>)) as Left).0: L)
    SourceInfo(src/lib.rs:158:31-158:37)
  4: StorageLive(_11)
    SourceInfo(src/lib.rs:158:43-158:47)
  5: _11 = &mut (*_9)
    SourceInfo(src/lib.rs:158:43-158:47)
  6: StorageLive(_12)
    SourceInfo(src/lib.rs:158:59-158:65)
  7: _12 = &(*_10)
    SourceInfo(src/lib.rs:158:59-158:65)
  Terminator {
      source_info: SourceInfo(src/lib.rs:158:43-158:66)
      kind: _0 = <L as core::clone::Clone>::clone_from(move _11, move _12) -> [return: bb7, unwind: bb15]
  }
  preds [bb3]
  succs [bb7, bb15]

bb7
  0: StorageDead(_12)
    SourceInfo(src/lib.rs:158:65-158:66)
  1: StorageDead(_11)
    SourceInfo(src/lib.rs:158:65-158:66)
  2: StorageDead(_10)
    SourceInfo(src/lib.rs:158:65-158:66)
  3: StorageDead(_9)
    SourceInfo(src/lib.rs:158:65-158:66)
  Terminator {
      source_info: SourceInfo(src/lib.rs:158:65-158:66)
      kind: goto -> bb14
  }
  preds [bb6]
  succs [bb14]

bb8
  0: StorageLive(_13)
    SourceInfo(src/lib.rs:159:20-159:24)
  1: _13 = &mut (((*(_3.0: &mut Either<L, R>)) as Right).0: R)
    SourceInfo(src/lib.rs:159:20-159:24)
  2: StorageLive(_14)
    SourceInfo(src/lib.rs:159:33-159:39)
  3: _14 = &(((*(_3.1: &Either<L, R>)) as Right).0: R)
    SourceInfo(src/lib.rs:159:33-159:39)
  4: StorageLive(_15)
    SourceInfo(src/lib.rs:159:45-159:49)
  5: _15 = &mut (*_13)
    SourceInfo(src/lib.rs:159:45-159:49)
  6: StorageLive(_16)
    SourceInfo(src/lib.rs:159:61-159:67)
  7: _16 = &(*_14)
    SourceInfo(src/lib.rs:159:61-159:67)
  Terminator {
      source_info: SourceInfo(src/lib.rs:159:45-159:68)
      kind: _0 = <R as core::clone::Clone>::clone_from(move _15, move _16) -> [return: bb9, unwind: bb15]
  }
  preds [bb5]
  succs [bb9, bb15]

bb9
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:159:67-159:68)
  1: StorageDead(_15)
    SourceInfo(src/lib.rs:159:67-159:68)
  2: StorageDead(_14)
    SourceInfo(src/lib.rs:159:67-159:68)
  3: StorageDead(_13)
    SourceInfo(src/lib.rs:159:67-159:68)
  Terminator {
      source_info: SourceInfo(src/lib.rs:159:67-159:68)
      kind: goto -> bb14
  }
  preds [bb8]
  succs [bb14]

bb10
  0: StorageDead(_20)
    SourceInfo(src/lib.rs:160:52-160:53)
  Terminator {
      source_info: SourceInfo(src/lib.rs:160:31-160:36)
      kind: drop((*_17)) -> [return: bb11, unwind: bb12]
  }
  preds [bb1]
  succs [bb11, bb12]

bb11
  0: (*_17) = move _19
    SourceInfo(src/lib.rs:160:31-160:36)
  1: _0 = const ()
    SourceInfo(src/lib.rs:160:31-160:53)
  Terminator {
      source_info: SourceInfo(src/lib.rs:160:52-160:53)
      kind: drop(_19) -> [return: bb13, unwind: bb15]
  }
  preds [bb10]
  succs [bb13, bb15]

bb12
  0: (*_17) = move _19
    SourceInfo(src/lib.rs:160:31-160:36)
  Terminator {
      source_info: SourceInfo(src/lib.rs:160:52-160:53)
      kind: drop(_19) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb15]

bb13
  0: StorageDead(_19)
    SourceInfo(src/lib.rs:160:52-160:53)
  1: StorageDead(_18)
    SourceInfo(src/lib.rs:160:52-160:53)
  2: StorageDead(_17)
    SourceInfo(src/lib.rs:160:52-160:53)
  Terminator {
      source_info: SourceInfo(src/lib.rs:160:52-160:53)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb14
  0: StorageDead(_3)
    SourceInfo(src/lib.rs:162:5-162:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:162:6-162:6)
      kind: return
  }
  preds [bb7, bb9, bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(src/lib.rs:156:5-162:6)
      kind: resume
  }
  preds [bb1, bb6, bb8, bb11, bb12]
  succs []

