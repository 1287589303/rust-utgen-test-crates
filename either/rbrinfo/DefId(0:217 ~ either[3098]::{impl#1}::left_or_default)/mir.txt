bb0
  0: PlaceMention(_1)
    SourceInfo(src/lib.rs:696:15-696:19)
  1: _2 = discriminant(_1)
    SourceInfo(src/lib.rs:696:15-696:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:696:9-696:19)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/lib.rs:696:15-696:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:696:15-696:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/lib.rs:697:13-697:28)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  Terminator {
      source_info: SourceInfo(src/lib.rs:698:33-698:45)
      kind: _0 = <L as core::default::Default>::default() -> [return: bb6, unwind: bb8]
  }
  preds [bb0, bb2]
  succs [bb6, bb8]

bb4
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:697:26-697:27)
  1: _3 = move ((_1 as Left).0: L)
    SourceInfo(src/lib.rs:697:26-697:27)
  2: _0 = move _3
    SourceInfo(src/lib.rs:697:32-697:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:697:32-697:33)
      kind: drop(_3) -> [return: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb5
  0: StorageDead(_3)
    SourceInfo(src/lib.rs:697:32-697:33)
  Terminator {
      source_info: SourceInfo(src/lib.rs:697:32-697:33)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/lib.rs:700:5-700:6)
      kind: drop(_1) -> [return: bb7, unwind: bb9]
  }
  preds [bb3, bb5]
  succs [bb7, bb9]

bb7
  Terminator {
      source_info: SourceInfo(src/lib.rs:700:6-700:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(src/lib.rs:700:5-700:6)
      kind: drop(_1) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb3, bb4]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/lib.rs:692:5-700:6)
      kind: resume
  }
  preds [bb6, bb8]
  succs []

