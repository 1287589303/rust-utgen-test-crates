bb0
  0: PlaceMention(_1)
    SourceInfo(src/iterator.rs:62:19-62:23)
  1: _4 = discriminant(_1)
    SourceInfo(src/iterator.rs:62:19-62:23)
  Terminator {
      source_info: SourceInfo(src/lib.rs:83:9-83:9)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/iterator.rs:62:19-62:23)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:19-62:23)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/lib.rs:84:13-84:43)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_9)
    SourceInfo(src/iterator.rs:62:25-62:30)
  1: _9 = move ((_1 as Right).0: R)
    SourceInfo(src/iterator.rs:62:25-62:30)
  2: StorageLive(_10)
    SourceInfo(src/iterator.rs:62:34-62:39)
  3: _10 = move _9
    SourceInfo(src/iterator.rs:62:34-62:39)
  4: StorageLive(_11)
    SourceInfo(src/iterator.rs:62:45-62:49)
  5: _11 = move _2
    SourceInfo(src/iterator.rs:62:45-62:49)
  6: StorageLive(_12)
    SourceInfo(src/iterator.rs:62:51-62:52)
  7: _12 = move _3
    SourceInfo(src/iterator.rs:62:51-62:52)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:34-62:53)
      kind: _0 = <R as core::iter::Iterator>::fold::<Acc, G>(move _10, move _11, move _12) -> [return: bb7, unwind: bb13]
  }
  preds [bb0, bb2]
  succs [bb7, bb13]

bb4
  0: StorageLive(_5)
    SourceInfo(src/iterator.rs:62:25-62:30)
  1: _5 = move ((_1 as Left).0: L)
    SourceInfo(src/iterator.rs:62:25-62:30)
  2: StorageLive(_6)
    SourceInfo(src/iterator.rs:62:34-62:39)
  3: _6 = move _5
    SourceInfo(src/iterator.rs:62:34-62:39)
  4: StorageLive(_7)
    SourceInfo(src/iterator.rs:62:45-62:49)
  5: _7 = move _2
    SourceInfo(src/iterator.rs:62:45-62:49)
  6: StorageLive(_8)
    SourceInfo(src/iterator.rs:62:51-62:52)
  7: _8 = move _3
    SourceInfo(src/iterator.rs:62:51-62:52)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:34-62:53)
      kind: _0 = <L as core::iter::Iterator>::fold::<Acc, G>(move _6, move _7, move _8) -> [return: bb5, unwind: bb17]
  }
  preds [bb2]
  succs [bb5, bb17]

bb5
  0: StorageDead(_8)
    SourceInfo(src/iterator.rs:62:52-62:53)
  1: StorageDead(_7)
    SourceInfo(src/iterator.rs:62:52-62:53)
  2: StorageDead(_6)
    SourceInfo(src/iterator.rs:62:52-62:53)
  Terminator {
      source_info: SourceInfo(src/lib.rs:84:18-84:19)
      kind: drop(_5) -> [return: bb6, unwind: bb21]
  }
  preds [bb4]
  succs [bb6, bb21]

bb6
  0: StorageDead(_5)
    SourceInfo(src/lib.rs:84:18-84:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:84:18-84:19)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: StorageDead(_12)
    SourceInfo(src/iterator.rs:62:52-62:53)
  1: StorageDead(_11)
    SourceInfo(src/iterator.rs:62:52-62:53)
  2: StorageDead(_10)
    SourceInfo(src/iterator.rs:62:52-62:53)
  Terminator {
      source_info: SourceInfo(src/lib.rs:85:18-85:19)
      kind: drop(_9) -> [return: bb8, unwind: bb21]
  }
  preds [bb3]
  succs [bb8, bb21]

bb8
  0: StorageDead(_9)
    SourceInfo(src/lib.rs:85:18-85:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:85:18-85:19)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(src/iterator.rs:63:5-63:6)
      kind: drop(_3) -> [return: bb10, unwind: bb22]
  }
  preds [bb6, bb8]
  succs [bb10, bb22]

bb10
  Terminator {
      source_info: SourceInfo(src/iterator.rs:63:5-63:6)
      kind: drop(_2) -> [return: bb11, unwind: bb23]
  }
  preds [bb9]
  succs [bb11, bb23]

bb11
  Terminator {
      source_info: SourceInfo(src/iterator.rs:63:5-63:6)
      kind: drop(_1) -> [return: bb12, unwind: bb24]
  }
  preds [bb10]
  succs [bb12, bb24]

bb12
  Terminator {
      source_info: SourceInfo(src/iterator.rs:63:6-63:6)
      kind: return
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:52-62:53)
      kind: drop(_12) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:52-62:53)
      kind: drop(_11) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:52-62:53)
      kind: drop(_10) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/lib.rs:85:18-85:19)
      kind: drop(_9) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb21]

bb17
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:52-62:53)
      kind: drop(_8) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:52-62:53)
      kind: drop(_7) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/iterator.rs:62:52-62:53)
      kind: drop(_6) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(src/lib.rs:84:18-84:19)
      kind: drop(_5) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/iterator.rs:63:5-63:6)
      kind: drop(_3) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb16, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(src/iterator.rs:63:5-63:6)
      kind: drop(_2) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb9, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/iterator.rs:63:5-63:6)
      kind: drop(_1) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb10, bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(src/iterator.rs:58:5-63:6)
      kind: resume
  }
  preds [bb11, bb23]
  succs []

