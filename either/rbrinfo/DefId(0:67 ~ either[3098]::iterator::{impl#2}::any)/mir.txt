bb0
  0: PlaceMention(_1)
    SourceInfo(src/iterator.rs:110:19-110:23)
  1: _3 = discriminant((*_1))
    SourceInfo(src/iterator.rs:110:19-110:23)
  Terminator {
      source_info: SourceInfo(src/lib.rs:83:9-83:9)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/iterator.rs:110:19-110:23)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:110:19-110:23)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/lib.rs:84:13-84:43)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_7)
    SourceInfo(src/iterator.rs:110:25-110:30)
  1: _7 = &mut (((*_1) as Right).0: R)
    SourceInfo(src/iterator.rs:110:25-110:30)
  2: StorageLive(_8)
    SourceInfo(src/iterator.rs:110:34-110:39)
  3: _8 = &mut (*_7)
    SourceInfo(src/iterator.rs:110:34-110:39)
  4: StorageLive(_9)
    SourceInfo(src/iterator.rs:110:44-110:45)
  5: _9 = move _2
    SourceInfo(src/iterator.rs:110:44-110:45)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:110:34-110:46)
      kind: _0 = <R as core::iter::Iterator>::any::<F>(move _8, move _9) -> [return: bb6, unwind: bb9]
  }
  preds [bb0, bb2]
  succs [bb6, bb9]

bb4
  0: StorageLive(_4)
    SourceInfo(src/iterator.rs:110:25-110:30)
  1: _4 = &mut (((*_1) as Left).0: L)
    SourceInfo(src/iterator.rs:110:25-110:30)
  2: StorageLive(_5)
    SourceInfo(src/iterator.rs:110:34-110:39)
  3: _5 = &mut (*_4)
    SourceInfo(src/iterator.rs:110:34-110:39)
  4: StorageLive(_6)
    SourceInfo(src/iterator.rs:110:44-110:45)
  5: _6 = move _2
    SourceInfo(src/iterator.rs:110:44-110:45)
  Terminator {
      source_info: SourceInfo(src/iterator.rs:110:34-110:46)
      kind: _0 = <L as core::iter::Iterator>::any::<F>(move _5, move _6) -> [return: bb5, unwind: bb10]
  }
  preds [bb2]
  succs [bb5, bb10]

bb5
  0: StorageDead(_6)
    SourceInfo(src/iterator.rs:110:45-110:46)
  1: StorageDead(_5)
    SourceInfo(src/iterator.rs:110:45-110:46)
  2: StorageDead(_4)
    SourceInfo(src/lib.rs:84:18-84:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:84:18-84:19)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_9)
    SourceInfo(src/iterator.rs:110:45-110:46)
  1: StorageDead(_8)
    SourceInfo(src/iterator.rs:110:45-110:46)
  2: StorageDead(_7)
    SourceInfo(src/lib.rs:85:18-85:19)
  Terminator {
      source_info: SourceInfo(src/lib.rs:85:18-85:19)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/iterator.rs:111:5-111:6)
      kind: drop(_2) -> [return: bb8, unwind: bb12]
  }
  preds [bb5, bb6]
  succs [bb8, bb12]

bb8
  Terminator {
      source_info: SourceInfo(src/iterator.rs:111:6-111:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/iterator.rs:110:45-110:46)
      kind: drop(_9) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb11]

bb10
  Terminator {
      source_info: SourceInfo(src/iterator.rs:110:45-110:46)
      kind: drop(_6) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/iterator.rs:111:5-111:6)
      kind: drop(_2) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb9, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/iterator.rs:106:5-111:6)
      kind: resume
  }
  preds [bb7, bb11]
  succs []

