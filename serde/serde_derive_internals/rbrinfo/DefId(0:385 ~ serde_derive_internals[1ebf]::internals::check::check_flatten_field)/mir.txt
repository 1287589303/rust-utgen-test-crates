bb0
  0: StorageLive(_4)
    SourceInfo(serde_derive_internals/src/check.rs:118:5-120:6)
  1: StorageLive(_5)
    SourceInfo(serde_derive_internals/src/check.rs:118:9-118:30)
  2: StorageLive(_6)
    SourceInfo(serde_derive_internals/src/check.rs:118:9-118:20)
  3: _6 = &((*_3).1: internals::attr::Field)
    SourceInfo(serde_derive_internals/src/check.rs:118:9-118:20)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:118:9-118:30)
      kind: _5 = internals::attr::Field::flatten(move _6) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:118:9-118:30)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(serde_derive_internals/src/check.rs:118:29-118:30)
  1: _4 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:120:6-120:6)
  2: StorageDead(_5)
    SourceInfo(serde_derive_internals/src/check.rs:120:5-120:6)
  3: StorageDead(_4)
    SourceInfo(serde_derive_internals/src/check.rs:120:5-120:6)
  4: PlaceMention(_2)
    SourceInfo(serde_derive_internals/src/check.rs:121:11-121:16)
  5: _8 = discriminant(_2)
    SourceInfo(serde_derive_internals/src/check.rs:121:11-121:16)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:121:5-121:16)
      kind: switchInt(move _8) -> [1: bb5, 2: bb6, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb5, bb6]

bb3
  0: StorageDead(_6)
    SourceInfo(serde_derive_internals/src/check.rs:118:29-118:30)
  1: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:119:9-119:15)
  2: StorageDead(_5)
    SourceInfo(serde_derive_internals/src/check.rs:120:5-120:6)
  3: StorageDead(_4)
    SourceInfo(serde_derive_internals/src/check.rs:120:5-120:6)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:136:2-136:2)
      kind: goto -> bb11
  }
  preds [bb1]
  succs [bb11]

bb4
  0: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:134:14-134:16)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:134:14-134:16)
      kind: goto -> bb11
  }
  preds [bb2, bb6]
  succs [bb11]

bb5
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:122:9-122:21)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb2]
  succs [bb6, bb7]

bb6
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:128:9-128:23)
      kind: falseEdge -> [real: bb9, imaginary: bb4]
  }
  preds [bb2, bb5]
  succs [bb4, bb9]

bb7
  0: StorageLive(_9)
    SourceInfo(serde_derive_internals/src/check.rs:123:13-126:14)
  1: StorageLive(_10)
    SourceInfo(serde_derive_internals/src/check.rs:123:13-123:15)
  2: _10 = &(*_1)
    SourceInfo(serde_derive_internals/src/check.rs:123:13-123:15)
  3: StorageLive(_11)
    SourceInfo(serde_derive_internals/src/check.rs:124:17-124:31)
  4: _11 = ((*_3).3: &syn::Field)
    SourceInfo(serde_derive_internals/src/check.rs:124:17-124:31)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:123:13-126:14)
      kind: _9 = internals::ctxt::Ctxt::error_spanned_by::<&syn::Field, &str>(move _10, move _11, const "#[serde(flatten)] cannot be used on tuple structs") -> [return: bb8, unwind: bb12]
  }
  preds [bb5]
  succs [bb8, bb12]

bb8
  0: StorageDead(_11)
    SourceInfo(serde_derive_internals/src/check.rs:126:13-126:14)
  1: StorageDead(_10)
    SourceInfo(serde_derive_internals/src/check.rs:126:13-126:14)
  2: StorageDead(_9)
    SourceInfo(serde_derive_internals/src/check.rs:126:14-126:15)
  3: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:122:25-127:10)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:122:25-127:10)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb9
  0: StorageLive(_12)
    SourceInfo(serde_derive_internals/src/check.rs:129:13-132:14)
  1: StorageLive(_13)
    SourceInfo(serde_derive_internals/src/check.rs:129:13-129:15)
  2: _13 = &(*_1)
    SourceInfo(serde_derive_internals/src/check.rs:129:13-129:15)
  3: StorageLive(_14)
    SourceInfo(serde_derive_internals/src/check.rs:130:17-130:31)
  4: _14 = ((*_3).3: &syn::Field)
    SourceInfo(serde_derive_internals/src/check.rs:130:17-130:31)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:129:13-132:14)
      kind: _12 = internals::ctxt::Ctxt::error_spanned_by::<&syn::Field, &str>(move _13, move _14, const "#[serde(flatten)] cannot be used on newtype structs") -> [return: bb10, unwind: bb12]
  }
  preds [bb6]
  succs [bb10, bb12]

bb10
  0: StorageDead(_14)
    SourceInfo(serde_derive_internals/src/check.rs:132:13-132:14)
  1: StorageDead(_13)
    SourceInfo(serde_derive_internals/src/check.rs:132:13-132:14)
  2: StorageDead(_12)
    SourceInfo(serde_derive_internals/src/check.rs:132:14-132:15)
  3: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:128:27-133:10)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:128:27-133:10)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:136:2-136:2)
      kind: return
  }
  preds [bb3, bb4, bb8, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:117:1-136:2)
      kind: resume
  }
  preds [bb0, bb7, bb9]
  succs []

