{
  "serde_derive_internals/src/receiver.rs:58:24:58:42": [
    {
      "For": {
        "iter_var": "segment",
        "iter_range": "&mut path.segments"
      }
    }
  ],
  "serde_derive_internals/src/receiver.rs:60:20:60:52": [
    {
      "Bool": {
        "Other": "bracketed.colon2_token.is_none()"
      }
    }
  ],
  "serde_derive_internals/src/receiver.rs:65:12:65:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "variant.segments.len() > 1",
          "lhs": "variant.segments.len()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "serde_derive_internals/src/receiver.rs:60:57:60:82": [
    {
      "Bool": {
        "Other": "bracketed.args.is_empty()"
      }
    }
  ],
  "serde_derive_internals/src/receiver.rs:59:16:59:85": [
    {
      "Bool": {
        "Other": "let PathArguments::AngleBracketed(bracketed) = &mut segment.arguments"
      }
    }
  ]
}