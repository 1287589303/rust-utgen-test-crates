{
  "name": "serde_derive_internals::internals::check::check_flatten_field",
  "mod_info": {
    "name": "internals::check",
    "loc": "serde_derive_internals/src/mod.rs:6:1:6:11"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/check.rs:117:1:136:2",
  "doc": "",
  "code": [
    "fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {",
    "    if !field.attrs.flatten() {",
    "        return;",
    "    }",
    "    match style {",
    "        Style::Tuple => {",
    "            cx.error_spanned_by(",
    "                field.original,",
    "                \"#[serde(flatten)] cannot be used on tuple structs\",",
    "            );",
    "        }",
    "        Style::Newtype => {",
    "            cx.error_spanned_by(",
    "                field.original,",
    "                \"#[serde(flatten)] cannot be used on newtype structs\",",
    "            );",
    "        }",
    "        _ => {}",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "field.attrs.flatten()",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "style matches Style::Tuple",
          "norm": null,
          "value": "false",
          "line": 122,
          "bound": null
        },
        {
          "cond": "style matches _",
          "norm": null,
          "value": "true",
          "line": 134,
          "bound": null
        },
        {
          "cond": "style matches Style::Newtype",
          "norm": null,
          "value": "false",
          "line": 128,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "field.attrs.flatten()",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "style matches Style::Newtype",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        },
        {
          "cond": "style matches Style::Newtype",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "field.attrs.flatten()",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "style matches Style::Tuple",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        },
        {
          "cond": "style matches Style::Tuple",
          "norm": null,
          "value": "true",
          "line": 121,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        7,
        8,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "field.attrs.flatten()",
          "norm": null,
          "value": "false",
          "line": 118,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}