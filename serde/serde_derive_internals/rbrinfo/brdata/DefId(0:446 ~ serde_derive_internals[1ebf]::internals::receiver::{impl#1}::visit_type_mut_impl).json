{
  "name": "serde_derive_internals::internals::receiver::{impl#1}::visit_type_mut_impl",
  "mod_info": {
    "name": "internals::receiver",
    "loc": "serde_derive_internals/src/mod.rs:8:1:8:14"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/receiver.rs:107:5:152:6",
  "doc": "",
  "code": [
    "fn visit_type_mut_impl(&mut self, ty: &mut Type) {",
    "    match ty {",
    "        #![cfg_attr(all(test, exhaustive), deny(non_exhaustive_omitted_patterns))]",
    "        Type::Array(ty) => {",
    "            self.visit_type_mut(&mut ty.elem);",
    "            self.visit_expr_mut(&mut ty.len);",
    "        }",
    "        Type::BareFn(ty) => {",
    "            for arg in &mut ty.inputs {",
    "                self.visit_type_mut(&mut arg.ty);",
    "            }",
    "            self.visit_return_type_mut(&mut ty.output);",
    "        }",
    "        Type::Group(ty) => self.visit_type_mut(&mut ty.elem),",
    "        Type::ImplTrait(ty) => {",
    "            for bound in &mut ty.bounds {",
    "                self.visit_type_param_bound_mut(bound);",
    "            }",
    "        }",
    "        Type::Macro(ty) => self.visit_macro_mut(&mut ty.mac),",
    "        Type::Paren(ty) => self.visit_type_mut(&mut ty.elem),",
    "        Type::Path(ty) => {",
    "            if let Some(qself) = &mut ty.qself {",
    "                self.visit_type_mut(&mut qself.ty);",
    "            }",
    "            self.visit_path_mut(&mut ty.path);",
    "        }",
    "        Type::Ptr(ty) => self.visit_type_mut(&mut ty.elem),",
    "        Type::Reference(ty) => self.visit_type_mut(&mut ty.elem),",
    "        Type::Slice(ty) => self.visit_type_mut(&mut ty.elem),",
    "        Type::TraitObject(ty) => {",
    "            for bound in &mut ty.bounds {",
    "                self.visit_type_param_bound_mut(bound);",
    "            }",
    "        }",
    "        Type::Tuple(ty) => {",
    "            for elem in &mut ty.elems {",
    "                self.visit_type_mut(elem);",
    "            }",
    "        }",
    "",
    "        Type::Infer(_) | Type::Never(_) | Type::Verbatim(_) => {}",
    "",
    "        _ => {}",
    "    }",
    "}"
  ],
  "size": {
    "chain": 21,
    "contra": 4,
    "min_set": 20
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "ty matches Type::ImplTrait(ty)",
          "norm": null,
          "value": "false",
          "line": 121,
          "bound": null
        },
        {
          "cond": "ty matches Type::BareFn(ty)",
          "norm": null,
          "value": "false",
          "line": 114,
          "bound": null
        },
        {
          "cond": "ty matches Type::Paren(ty)",
          "norm": null,
          "value": "false",
          "line": 127,
          "bound": null
        },
        {
          "cond": "ty matches Type::Macro(ty)",
          "norm": null,
          "value": "false",
          "line": 126,
          "bound": null
        },
        {
          "cond": "ty matches Type::Array(ty)",
          "norm": null,
          "value": "false",
          "line": 110,
          "bound": null
        },
        {
          "cond": "ty matches Type::Reference(ty)",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "ty matches Type::Slice(ty)",
          "norm": null,
          "value": "false",
          "line": 136,
          "bound": null
        },
        {
          "cond": "ty matches Type::Tuple(ty)",
          "norm": null,
          "value": "false",
          "line": 142,
          "bound": null
        },
        {
          "cond": "ty matches Type::Infer(_)",
          "norm": null,
          "value": "false",
          "line": 148,
          "bound": null
        },
        {
          "cond": "ty matches Type::Path(ty)",
          "norm": null,
          "value": "false",
          "line": 128,
          "bound": null
        },
        {
          "cond": "ty matches Type::Verbatim(_)",
          "norm": null,
          "value": "false",
          "line": 148,
          "bound": null
        },
        {
          "cond": "ty matches Type::Group(ty)",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "ty matches Type::Never(_)",
          "norm": null,
          "value": "false",
          "line": 148,
          "bound": null
        },
        {
          "cond": "ty matches Type::Ptr(ty)",
          "norm": null,
          "value": "false",
          "line": 134,
          "bound": null
        },
        {
          "cond": "ty matches Type::TraitObject(ty)",
          "norm": null,
          "value": "false",
          "line": 137,
          "bound": null
        },
        {
          "cond": "ty matches _",
          "norm": null,
          "value": "true",
          "line": 150,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "ty matches Type::Verbatim(_)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Infer(_) or Type::Verbatim(_) or Type::Never(_)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        14,
        86,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "ty matches Type::Tuple(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Tuple(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "elem in &mut ty.elems",
          "norm": null,
          "value": "true",
          "line": 143,
          "bound": null
        },
        {
          "cond": "elem in &mut ty.elems",
          "norm": null,
          "value": "false",
          "line": 143,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        13,
        74,
        75,
        76,
        77,
        78,
        81,
        83,
        76,
        77,
        78,
        80,
        82,
        84,
        85,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "ty matches Type::Tuple(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Tuple(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "elem in &mut ty.elems",
          "norm": null,
          "value": "false",
          "line": 143,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        13,
        74,
        75,
        76,
        77,
        78,
        80,
        82,
        84,
        85,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "ty matches Type::TraitObject(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::TraitObject(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "bound in &mut ty.bounds",
          "norm": null,
          "value": "true",
          "line": 138,
          "bound": null
        },
        {
          "cond": "bound in &mut ty.bounds",
          "norm": null,
          "value": "false",
          "line": 138,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        12,
        62,
        63,
        64,
        65,
        66,
        69,
        71,
        64,
        65,
        66,
        68,
        70,
        72,
        73,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "ty matches Type::TraitObject(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::TraitObject(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "bound in &mut ty.bounds",
          "norm": null,
          "value": "false",
          "line": 138,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        12,
        62,
        63,
        64,
        65,
        66,
        68,
        70,
        72,
        73,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "ty matches Type::Slice(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Slice(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        11,
        60,
        61,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "ty matches Type::Reference(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Reference(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        10,
        58,
        59,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "ty matches Type::Ptr(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Ptr(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        9,
        56,
        57,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "ty matches Type::Path(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Path(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "let Some(qself) = &mut ty.qself",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        49,
        53,
        54,
        55,
        87
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "ty matches Type::Path(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Path(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "let Some(qself) = &mut ty.qself",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        49,
        50,
        51,
        52,
        54,
        55,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "ty matches Type::Paren(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Paren(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        47,
        48,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "ty matches Type::Never(_)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Infer(_) or Type::Verbatim(_) or Type::Never(_)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        14,
        86,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "ty matches Type::Macro(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Macro(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        45,
        46,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "ty matches Type::Infer(_)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Infer(_) or Type::Verbatim(_) or Type::Never(_)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        14,
        86,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "ty matches Type::ImplTrait(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::ImplTrait(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "bound in &mut ty.bounds",
          "norm": null,
          "value": "true",
          "line": 122,
          "bound": null
        },
        {
          "cond": "bound in &mut ty.bounds",
          "norm": null,
          "value": "false",
          "line": 122,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        33,
        34,
        35,
        36,
        37,
        40,
        42,
        35,
        36,
        37,
        39,
        41,
        43,
        44,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "ty matches Type::ImplTrait(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::ImplTrait(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "bound in &mut ty.bounds",
          "norm": null,
          "value": "false",
          "line": 122,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        43,
        44,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "ty matches Type::Group(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Group(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        31,
        32,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "ty matches Type::BareFn(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::BareFn(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "arg in &mut ty.inputs",
          "norm": null,
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "arg in &mut ty.inputs",
          "norm": null,
          "value": "false",
          "line": 115,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        21,
        22,
        25,
        27,
        20,
        21,
        22,
        24,
        26,
        28,
        29,
        30,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "ty matches Type::BareFn(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::BareFn(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "arg in &mut ty.inputs",
          "norm": null,
          "value": "false",
          "line": 115,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        21,
        22,
        24,
        26,
        28,
        29,
        30,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "ty matches Type::Array(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        },
        {
          "cond": "ty matches Type::Array(ty)",
          "norm": null,
          "value": "true",
          "line": 108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        15,
        16,
        17,
        87
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}