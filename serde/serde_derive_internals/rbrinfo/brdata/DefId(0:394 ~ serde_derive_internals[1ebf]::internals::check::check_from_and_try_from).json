{
  "name": "serde_derive_internals::internals::check::check_from_and_try_from",
  "mod_info": {
    "name": "internals::check",
    "loc": "serde_derive_internals/src/mod.rs:6:1:6:11"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/check.rs:470:1:477:2",
  "doc": "",
  "code": [
    "fn check_from_and_try_from(cx: &Ctxt, cont: &mut Container) {",
    "    if cont.attrs.type_from().is_some() && cont.attrs.type_try_from().is_some() {",
    "        cx.error_spanned_by(",
    "            cont.original,",
    "            \"#[serde(from = \\\"...\\\")] and #[serde(try_from = \\\"...\\\")] conflict with each other\",",
    "        );",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "cont.attrs.type_from().is_some()",
          "norm": null,
          "value": "true",
          "line": 471,
          "bound": null
        },
        {
          "cond": "cont.attrs.type_try_from().is_some()",
          "norm": null,
          "value": "true",
          "line": 471,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "cont.attrs.type_from().is_some()",
          "norm": null,
          "value": "true",
          "line": 471,
          "bound": null
        },
        {
          "cond": "cont.attrs.type_try_from().is_some()",
          "norm": null,
          "value": "false",
          "line": 471,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "cont.attrs.type_from().is_some()",
          "norm": null,
          "value": "false",
          "line": 471,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}