{
  "name": "serde_derive_internals::internals::case::{impl#1}::fmt",
  "mod_info": {
    "name": "internals::case",
    "loc": "serde_derive_internals/src/mod.rs:5:1:5:10"
  },
  "visible": true,
  "loc": "serde_derive_internals/src/case.rs:125:5:136:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {",
    "    f.write_str(\"unknown rename rule `rename_all = \")?;",
    "    Debug::fmt(self.unknown, f)?;",
    "    f.write_str(\"`, expected one of \")?;",
    "    for (i, (name, _rule)) in RENAME_RULES.iter().enumerate() {",
    "        if i > 0 {",
    "            f.write_str(\", \")?;",
    "        }",
    "        Debug::fmt(name, f)?;",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 2,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Err/None",
          "line": 126,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Err/None",
          "line": 127,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        13,
        14,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 127,
          "bound": null
        },
        {
          "cond": "f.write_str(\"`, expected one of \")?",
          "norm": null,
          "value": "Err/None",
          "line": 128,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        16,
        18,
        20,
        21,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 127,
          "bound": null
        },
        {
          "cond": "f.write_str(\"`, expected one of \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 128,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "f.write_str(\", \")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        16,
        19,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        32,
        33,
        34,
        36,
        38,
        39,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 127,
          "bound": null
        },
        {
          "cond": "f.write_str(\"`, expected one of \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 128,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "f.write_str(\", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        },
        {
          "cond": "Debug::fmt(name, f)?",
          "norm": null,
          "value": "Err/None",
          "line": 133,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        16,
        19,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        32,
        33,
        34,
        37,
        41,
        42,
        43,
        45,
        47,
        48,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 127,
          "bound": null
        },
        {
          "cond": "f.write_str(\"`, expected one of \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 128,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "f.write_str(\", \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        },
        {
          "cond": "Debug::fmt(name, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 133,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 129,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        16,
        19,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        32,
        33,
        34,
        37,
        41,
        42,
        43,
        46,
        25,
        26,
        27,
        29,
        31,
        50
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 127,
          "bound": null
        },
        {
          "cond": "f.write_str(\"`, expected one of \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 128,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 130,
          "bound": "i == 0"
        },
        {
          "cond": "Debug::fmt(name, f)?",
          "norm": null,
          "value": "Err/None",
          "line": 133,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        16,
        19,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        40,
        41,
        42,
        43,
        45,
        47,
        48,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 127,
          "bound": null
        },
        {
          "cond": "f.write_str(\"`, expected one of \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 128,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 129,
          "bound": null
        },
        {
          "cond": "i > 0",
          "norm": "0 < i",
          "value": "false",
          "line": 130,
          "bound": "i == 0"
        },
        {
          "cond": "Debug::fmt(name, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 133,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 129,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        16,
        19,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        40,
        41,
        42,
        43,
        46,
        25,
        26,
        27,
        29,
        31,
        50
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "f.write_str(\"unknown rename rule `rename_all = \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "Debug::fmt(self.unknown, f)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 127,
          "bound": null
        },
        {
          "cond": "f.write_str(\"`, expected one of \")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 128,
          "bound": null
        },
        {
          "cond": "(i, (name, _rule)) in RENAME_RULES.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 129,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        16,
        19,
        22,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        50
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}