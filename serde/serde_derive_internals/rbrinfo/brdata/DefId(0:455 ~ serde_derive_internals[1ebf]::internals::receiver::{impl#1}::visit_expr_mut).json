{
  "name": "serde_derive_internals::internals::receiver::{impl#1}::visit_expr_mut",
  "mod_info": {
    "name": "internals::receiver",
    "loc": "serde_derive_internals/src/mod.rs:8:1:8:14"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/receiver.rs:264:5:290:6",
  "doc": "",
  "code": [
    "fn visit_expr_mut(&mut self, expr: &mut Expr) {",
    "    match expr {",
    "        Expr::Binary(expr) => {",
    "            self.visit_expr_mut(&mut expr.left);",
    "            self.visit_expr_mut(&mut expr.right);",
    "        }",
    "        Expr::Call(expr) => {",
    "            self.visit_expr_mut(&mut expr.func);",
    "            for arg in &mut expr.args {",
    "                self.visit_expr_mut(arg);",
    "            }",
    "        }",
    "        Expr::Cast(expr) => {",
    "            self.visit_expr_mut(&mut expr.expr);",
    "            self.visit_type_mut(&mut expr.ty);",
    "        }",
    "        Expr::Field(expr) => self.visit_expr_mut(&mut expr.base),",
    "        Expr::Index(expr) => {",
    "            self.visit_expr_mut(&mut expr.expr);",
    "            self.visit_expr_mut(&mut expr.index);",
    "        }",
    "        Expr::Paren(expr) => self.visit_expr_mut(&mut expr.expr),",
    "        Expr::Path(expr) => self.visit_expr_path_mut(expr),",
    "        Expr::Unary(expr) => self.visit_expr_mut(&mut expr.expr),",
    "        _ => {}",
    "    }",
    "}"
  ],
  "size": {
    "chain": 10,
    "contra": 1,
    "min_set": 10
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "expr matches Expr::Field(expr)",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Paren(expr)",
          "norm": null,
          "value": "false",
          "line": 285,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Cast(expr)",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Binary(expr)",
          "norm": null,
          "value": "false",
          "line": 266,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Path(expr)",
          "norm": null,
          "value": "false",
          "line": 286,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Call(expr)",
          "norm": null,
          "value": "false",
          "line": 270,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Unary(expr)",
          "norm": null,
          "value": "false",
          "line": 287,
          "bound": null
        },
        {
          "cond": "expr matches _",
          "norm": null,
          "value": "true",
          "line": 288,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Index(expr)",
          "norm": null,
          "value": "false",
          "line": 281,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "expr matches Expr::Unary(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Unary(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        9,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "expr matches Expr::Path(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Path(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        36,
        37,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "expr matches Expr::Paren(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Paren(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        34,
        35,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "expr matches Expr::Index(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Index(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        31,
        32,
        33,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "expr matches Expr::Field(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Field(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        29,
        30,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "expr matches Expr::Cast(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Cast(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        26,
        27,
        28,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "expr matches Expr::Call(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Call(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "arg in &mut expr.args",
          "norm": null,
          "value": "true",
          "line": 272,
          "bound": null
        },
        {
          "cond": "arg in &mut expr.args",
          "norm": null,
          "value": "false",
          "line": 272,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        13,
        14,
        15,
        16,
        17,
        18,
        21,
        23,
        16,
        17,
        18,
        20,
        22,
        24,
        25,
        40
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "expr matches Expr::Call(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Call(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "arg in &mut expr.args",
          "norm": null,
          "value": "false",
          "line": 272,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        13,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        24,
        25,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "expr matches Expr::Binary(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        },
        {
          "cond": "expr matches Expr::Binary(expr)",
          "norm": null,
          "value": "true",
          "line": 265,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        10,
        11,
        12,
        40
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}