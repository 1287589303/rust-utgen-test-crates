{
  "name": "serde_derive_internals::internals::ctxt::{impl#0}::check",
  "mod_info": {
    "name": "internals::ctxt",
    "loc": "serde_derive_internals/src/mod.rs:7:1:7:10"
  },
  "visible": true,
  "loc": "serde_derive_internals/src/ctxt.rs:46:5:59:6",
  "doc": "/// Consume this object, producing a formatted error string if there are errors.\n",
  "code": [
    "pub fn check(self) -> syn::Result<()> {",
    "    let mut errors = self.errors.borrow_mut().take().unwrap().into_iter();",
    "",
    "    let mut combined = match errors.next() {",
    "        Some(first) => first,",
    "        None => return Ok(()),",
    "    };",
    "",
    "    for rest in errors {",
    "        combined.combine(rest);",
    "    }",
    "",
    "    Err(combined)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "errors.next() matches Some(first)",
          "norm": null,
          "value": "true",
          "line": 49,
          "bound": null
        },
        {
          "cond": "errors.next() matches Some(first)",
          "norm": null,
          "value": "true",
          "line": 49,
          "bound": null
        },
        {
          "cond": "rest in errors",
          "norm": null,
          "value": "true",
          "line": 54,
          "bound": null
        },
        {
          "cond": "rest in errors",
          "norm": null,
          "value": "false",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "Err(combined)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        20,
        22,
        23,
        24,
        15,
        16,
        17,
        19,
        21,
        25,
        26,
        27,
        28,
        29,
        30,
        33
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "errors.next() matches Some(first)",
          "norm": null,
          "value": "true",
          "line": 49,
          "bound": null
        },
        {
          "cond": "errors.next() matches Some(first)",
          "norm": null,
          "value": "true",
          "line": 49,
          "bound": null
        },
        {
          "cond": "rest in errors",
          "norm": null,
          "value": "false",
          "line": 54,
          "bound": null
        }
      ],
      "ret": "Err(combined)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        19,
        21,
        25,
        26,
        27,
        28,
        29,
        30,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "errors.next() matches None",
          "norm": null,
          "value": "true",
          "line": 49,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        31,
        32,
        33
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}