{
  "name": "serde_derive_internals::internals::receiver::{impl#1}::visit_type_mut",
  "mod_info": {
    "name": "internals::receiver",
    "loc": "serde_derive_internals/src/mod.rs:8:1:8:14"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/receiver.rs:74:5:87:6",
  "doc": "",
  "code": [
    "fn visit_type_mut(&mut self, ty: &mut Type) {",
    "    let span = if let Type::Path(node) = ty {",
    "        if node.qself.is_none() && node.path.is_ident(\"Self\") {",
    "            node.path.segments[0].ident.span()",
    "        } else {",
    "            self.visit_type_path_mut(node);",
    "            return;",
    "        }",
    "    } else {",
    "        self.visit_type_mut_impl(ty);",
    "        return;",
    "    };",
    "    *ty = Type::Path(self.self_ty(span));",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Type::Path(node) = ty",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        13,
        14,
        20,
        21
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Type::Path(node) = ty",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        },
        {
          "cond": "node.qself.is_none()",
          "norm": null,
          "value": "true",
          "line": 76,
          "bound": null
        },
        {
          "cond": "node.path.is_ident(\"Self\")",
          "norm": null,
          "value": "true",
          "line": 76,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        15,
        16,
        17,
        19,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Type::Path(node) = ty",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        },
        {
          "cond": "node.qself.is_none()",
          "norm": null,
          "value": "true",
          "line": 76,
          "bound": null
        },
        {
          "cond": "node.path.is_ident(\"Self\")",
          "norm": null,
          "value": "false",
          "line": 76,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        9,
        11,
        12,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Type::Path(node) = ty",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        },
        {
          "cond": "node.qself.is_none()",
          "norm": null,
          "value": "false",
          "line": 76,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        10,
        11,
        12,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}