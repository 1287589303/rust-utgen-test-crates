{
  "name": "serde_derive_internals::internals::ctxt::{impl#1}::drop",
  "mod_info": {
    "name": "internals::ctxt",
    "loc": "serde_derive_internals/src/mod.rs:7:1:7:10"
  },
  "visible": true,
  "loc": "serde_derive_internals/src/ctxt.rs:63:5:67:6",
  "doc": "",
  "code": [
    "fn drop(&mut self) {",
    "    if !thread::panicking() && self.errors.borrow().is_some() {",
    "        panic!(\"forgot to check for errors\");",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "thread::panicking()",
          "norm": null,
          "value": "true",
          "line": 64,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "thread::panicking()",
          "norm": null,
          "value": "false",
          "line": 64,
          "bound": null
        },
        {
          "cond": "self.errors.borrow().is_some()",
          "norm": null,
          "value": "true",
          "line": 64,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "thread::panicking()",
          "norm": null,
          "value": "false",
          "line": 64,
          "bound": null
        },
        {
          "cond": "self.errors.borrow().is_some()",
          "norm": null,
          "value": "false",
          "line": 64,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}