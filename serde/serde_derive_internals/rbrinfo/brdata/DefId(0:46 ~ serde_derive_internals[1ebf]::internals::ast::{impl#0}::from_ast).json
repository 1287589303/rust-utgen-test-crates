{
  "name": "serde_derive_internals::internals::ast::{impl#0}::from_ast",
  "mod_info": {
    "name": "internals::ast",
    "loc": "serde_derive_internals/src/mod.rs:1:1:1:13"
  },
  "visible": true,
  "loc": "serde_derive_internals/src/ast.rs:61:5:110:6",
  "doc": "/// Convert the raw Syn ast into a parsed container object, collecting errors in `cx`.\n",
  "code": [
    "pub fn from_ast(",
    "    cx: &Ctxt,",
    "    item: &'a syn::DeriveInput,",
    "    derive: Derive,",
    ") -> Option<Container<'a>> {",
    "    let attrs = attr::Container::from_ast(cx, item);",
    "",
    "    let mut data = match &item.data {",
    "        syn::Data::Enum(data) => Data::Enum(enum_from_ast(cx, &data.variants, attrs.default())),",
    "        syn::Data::Struct(data) => {",
    "            let (style, fields) = struct_from_ast(cx, &data.fields, None, attrs.default());",
    "            Data::Struct(style, fields)",
    "        }",
    "        syn::Data::Union(_) => {",
    "            cx.error_spanned_by(item, \"Serde does not support derive for unions\");",
    "            return None;",
    "        }",
    "    };",
    "",
    "    match &mut data {",
    "        Data::Enum(variants) => {",
    "            for variant in variants {",
    "                variant.attrs.rename_by_rules(attrs.rename_all_rules());",
    "                for field in &mut variant.fields {",
    "                    field.attrs.rename_by_rules(",
    "                        variant",
    "                            .attrs",
    "                            .rename_all_rules()",
    "                            .or(attrs.rename_all_fields_rules()),",
    "                    );",
    "                }",
    "            }",
    "        }",
    "        Data::Struct(_, fields) => {",
    "            for field in fields {",
    "                field.attrs.rename_by_rules(attrs.rename_all_rules());",
    "            }",
    "        }",
    "    }",
    "",
    "    let mut item = Container {",
    "        ident: item.ident.clone(),",
    "        attrs,",
    "        data,",
    "        generics: &item.generics,",
    "        original: item,",
    "    };",
    "    check::check(cx, &mut item, derive);",
    "    Some(item)",
    "}"
  ],
  "size": {
    "chain": 11,
    "contra": 6,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Union(_)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        5,
        16,
        64,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Struct(_, fields)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "field in fields",
          "norm": null,
          "value": "true",
          "line": 95,
          "bound": null
        },
        {
          "cond": "field in fields",
          "norm": null,
          "value": "false",
          "line": 95,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        3,
        6,
        7,
        8,
        9,
        17,
        20,
        44,
        45,
        46,
        47,
        50,
        52,
        53,
        45,
        46,
        47,
        49,
        51,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Struct(_, fields)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "field in fields",
          "norm": null,
          "value": "false",
          "line": 95,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        3,
        6,
        7,
        8,
        9,
        17,
        20,
        44,
        45,
        46,
        47,
        49,
        51,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "true",
          "line": 82,
          "bound": null
        },
        {
          "cond": "field in &mut variant.fields",
          "norm": null,
          "value": "true",
          "line": 84,
          "bound": null
        },
        {
          "cond": "field in &mut variant.fields",
          "norm": null,
          "value": "false",
          "line": 84,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "false",
          "line": 82,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        3,
        6,
        7,
        8,
        9,
        17,
        19,
        21,
        22,
        23,
        24,
        25,
        28,
        30,
        31,
        32,
        33,
        34,
        35,
        38,
        40,
        41,
        42,
        43,
        33,
        34,
        35,
        37,
        39,
        23,
        24,
        25,
        27,
        29,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "true",
          "line": 82,
          "bound": null
        },
        {
          "cond": "field in &mut variant.fields",
          "norm": null,
          "value": "false",
          "line": 84,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "false",
          "line": 82,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        3,
        6,
        7,
        8,
        9,
        17,
        19,
        21,
        22,
        23,
        24,
        25,
        28,
        30,
        31,
        32,
        33,
        34,
        35,
        37,
        39,
        23,
        24,
        25,
        27,
        29,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Enum(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "false",
          "line": 82,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        3,
        6,
        7,
        8,
        9,
        17,
        19,
        21,
        22,
        23,
        24,
        25,
        27,
        29,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Struct(_, fields)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "field in fields",
          "norm": null,
          "value": "true",
          "line": 95,
          "bound": null
        },
        {
          "cond": "field in fields",
          "norm": null,
          "value": "false",
          "line": 95,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        4,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        20,
        44,
        45,
        46,
        47,
        50,
        52,
        53,
        45,
        46,
        47,
        49,
        51,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Struct(_, fields)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "field in fields",
          "norm": null,
          "value": "false",
          "line": 95,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        4,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        20,
        44,
        45,
        46,
        47,
        49,
        51,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "true",
          "line": 82,
          "bound": null
        },
        {
          "cond": "field in &mut variant.fields",
          "norm": null,
          "value": "true",
          "line": 84,
          "bound": null
        },
        {
          "cond": "field in &mut variant.fields",
          "norm": null,
          "value": "false",
          "line": 84,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "false",
          "line": 82,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        4,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        21,
        22,
        23,
        24,
        25,
        28,
        30,
        31,
        32,
        33,
        34,
        35,
        38,
        40,
        41,
        42,
        43,
        33,
        34,
        35,
        37,
        39,
        23,
        24,
        25,
        27,
        29,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "true",
          "line": 82,
          "bound": null
        },
        {
          "cond": "field in &mut variant.fields",
          "norm": null,
          "value": "false",
          "line": 84,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "false",
          "line": 82,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        4,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        21,
        22,
        23,
        24,
        25,
        28,
        30,
        31,
        32,
        33,
        34,
        35,
        37,
        39,
        23,
        24,
        25,
        27,
        29,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&item.data matches syn::Data::Struct(data)",
          "norm": null,
          "value": "true",
          "line": 68,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "&mut data matches Data::Enum(variants)",
          "norm": null,
          "value": "true",
          "line": 80,
          "bound": null
        },
        {
          "cond": "variant in variants",
          "norm": null,
          "value": "false",
          "line": 82,
          "bound": null
        }
      ],
      "ret": "Some(item)",
      "path": [
        0,
        1,
        4,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        21,
        22,
        23,
        24,
        25,
        27,
        29,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        65
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}