{
  "name": "serde_derive_internals::internals::receiver::{impl#0}::self_to_qself",
  "mod_info": {
    "name": "internals::receiver",
    "loc": "serde_derive_internals/src/mod.rs:8:1:8:14"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/receiver.rs:30:5:53:6",
  "doc": "",
  "code": [
    "fn self_to_qself(&self, qself: &mut Option<QSelf>, path: &mut Path) {",
    "    if path.leading_colon.is_some() || path.segments[0].ident != \"Self\" {",
    "        return;",
    "    }",
    "",
    "    if path.segments.len() == 1 {",
    "        self.self_to_expr_path(path);",
    "        return;",
    "    }",
    "",
    "    let span = path.segments[0].ident.span();",
    "    *qself = Some(QSelf {",
    "        lt_token: Token![<](span),",
    "        ty: Box::new(Type::Path(self.self_ty(span))),",
    "        position: 0,",
    "        as_token: None,",
    "        gt_token: Token![>](span),",
    "    });",
    "",
    "    path.leading_colon = Some(**path.segments.pairs().next().unwrap().punct().unwrap());",
    "",
    "    let segments = mem::take(&mut path.segments);",
    "    path.segments = segments.into_pairs().skip(1).collect();",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "path.leading_colon.is_some()",
          "norm": null,
          "value": "true",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        7,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "path.leading_colon.is_some()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        },
        {
          "cond": "path.segments[0].ident != \"Self\"",
          "norm": "\"Self\" != path.segments[0].ident",
          "value": "true",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "path.leading_colon.is_some()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        },
        {
          "cond": "path.segments[0].ident != \"Self\"",
          "norm": "\"Self\" != path.segments[0].ident",
          "value": "false",
          "line": 31,
          "bound": null
        },
        {
          "cond": "path.segments.len() == 1",
          "norm": "1 == path.segments.len()",
          "value": "false",
          "line": 35,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        8,
        9,
        10,
        11,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "path.leading_colon.is_some()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        },
        {
          "cond": "path.segments[0].ident != \"Self\"",
          "norm": "\"Self\" != path.segments[0].ident",
          "value": "false",
          "line": 31,
          "bound": null
        },
        {
          "cond": "path.segments.len() == 1",
          "norm": "1 == path.segments.len()",
          "value": "true",
          "line": 35,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        8,
        9,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        37,
        38
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}