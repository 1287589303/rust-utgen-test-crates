{
  "name": "serde_derive_internals::internals::check::check_remote_generic",
  "mod_info": {
    "name": "internals::check",
    "loc": "serde_derive_internals/src/mod.rs:6:1:6:11"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/check.rs:66:1:74:2",
  "doc": "",
  "code": [
    "fn check_remote_generic(cx: &Ctxt, cont: &Container) {",
    "    if let Some(remote) = cont.attrs.remote() {",
    "        let local_has_generic = !cont.generics.params.is_empty();",
    "        let remote_has_generic = !remote.segments.last().unwrap().arguments.is_none();",
    "        if local_has_generic && remote_has_generic {",
    "            cx.error_spanned_by(remote, \"remove generic parameters from this path\");",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(remote) = cont.attrs.remote()",
          "norm": null,
          "value": "true",
          "line": 67,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        13,
        14
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(remote) = cont.attrs.remote()",
          "norm": null,
          "value": "true",
          "line": 67,
          "bound": null
        },
        {
          "cond": "local_has_generic",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        },
        {
          "cond": "remote_has_generic",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(remote) = cont.attrs.remote()",
          "norm": null,
          "value": "true",
          "line": 67,
          "bound": null
        },
        {
          "cond": "local_has_generic",
          "norm": null,
          "value": "true",
          "line": 70,
          "bound": null
        },
        {
          "cond": "remote_has_generic",
          "norm": null,
          "value": "false",
          "line": 70,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        12,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Some(remote) = cont.attrs.remote()",
          "norm": null,
          "value": "true",
          "line": 67,
          "bound": null
        },
        {
          "cond": "local_has_generic",
          "norm": null,
          "value": "false",
          "line": 70,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        11,
        12,
        14
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}