{
  "name": "serde_derive_internals::internals::attr::is_primitive_path",
  "mod_info": {
    "name": "internals::attr",
    "loc": "serde_derive_internals/src/mod.rs:2:1:2:14"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/attr.rs:1720:1:1725:2",
  "doc": "",
  "code": [
    "fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {",
    "    path.leading_colon.is_none()",
    "        && path.segments.len() == 1",
    "        && path.segments[0].ident == primitive",
    "        && path.segments[0].arguments.is_empty()",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "path.leading_colon.is_none()",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "path.segments.len() == 1",
          "norm": "1 == path.segments.len()",
          "value": "false",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "path.segments[0].ident == primitive",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        12,
        13,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "path.leading_colon.is_none()",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "path.segments.len() == 1",
          "norm": "1 == path.segments.len()",
          "value": "false",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "path.segments[0].ident == primitive",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "path.leading_colon.is_none()\n        && path.segments.len() == 1\n        && path.segments[0].ident == primitive\n        && path.segments[0].arguments.is_empty()",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        11,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "path.leading_colon.is_none()",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "path.segments.len() == 1",
          "norm": "1 == path.segments.len()",
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": "path.leading_colon.is_none()\n        && path.segments.len() == 1\n        && path.segments[0].ident == primitive\n        && path.segments[0].arguments.is_empty()",
      "path": [
        0,
        1,
        2,
        3,
        9,
        11,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "path.leading_colon.is_none()",
          "norm": null,
          "value": "false",
          "line": 1721,
          "bound": null
        }
      ],
      "ret": "path.leading_colon.is_none()\n        && path.segments.len() == 1\n        && path.segments[0].ident == primitive\n        && path.segments[0].arguments.is_empty()",
      "path": [
        0,
        1,
        10,
        11,
        14
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}