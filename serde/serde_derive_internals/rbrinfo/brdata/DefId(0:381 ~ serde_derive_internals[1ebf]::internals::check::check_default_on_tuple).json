{
  "name": "serde_derive_internals::internals::check::check_default_on_tuple",
  "mod_info": {
    "name": "internals::check",
    "loc": "serde_derive_internals/src/mod.rs:6:1:6:11"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/check.rs:27:1:52:2",
  "doc": "",
  "code": [
    "fn check_default_on_tuple(cx: &Ctxt, cont: &Container) {",
    "    if let Default::None = cont.attrs.default() {",
    "        if let Data::Struct(Style::Tuple, fields) = &cont.data {",
    "            let mut first_default_index = None;",
    "            for (i, field) in fields.iter().enumerate() {",
    "                // Skipped fields automatically get the #[serde(default)]",
    "                // attribute. We are interested only on non-skipped fields here.",
    "                if field.attrs.skip_deserializing() {",
    "                    continue;",
    "                }",
    "                if let Default::None = field.attrs.default() {",
    "                    if let Some(first) = first_default_index {",
    "                        cx.error_spanned_by(",
    "                            field.ty,",
    "                            format!(\"field must have #[serde(default)] because previous field {} has #[serde(default)]\", first),",
    "                        );",
    "                    }",
    "                    continue;",
    "                }",
    "                if first_default_index.is_none() {",
    "                    first_default_index = Some(i);",
    "                }",
    "            }",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 5,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "true",
          "line": 28,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        40,
        41,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        40,
        41,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 31,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "true",
          "line": 34,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        18,
        19,
        39,
        11,
        12,
        13,
        15,
        17,
        41,
        43
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 31,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "false",
          "line": 34,
          "bound": null
        },
        {
          "cond": "let Default::None = field.attrs.default()",
          "norm": null,
          "value": "true",
          "line": 37,
          "bound": null
        },
        {
          "cond": "first_default_index.is_none()",
          "norm": null,
          "value": "true",
          "line": 46,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        18,
        20,
        21,
        34,
        35,
        36,
        38,
        11,
        12,
        13,
        15,
        17,
        41,
        43
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 31,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "false",
          "line": 34,
          "bound": null
        },
        {
          "cond": "let Default::None = field.attrs.default()",
          "norm": null,
          "value": "true",
          "line": 37,
          "bound": null
        },
        {
          "cond": "first_default_index.is_none()",
          "norm": null,
          "value": "false",
          "line": 46,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        18,
        20,
        21,
        34,
        35,
        37,
        38,
        11,
        12,
        13,
        15,
        17,
        41,
        43
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 31,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "false",
          "line": 34,
          "bound": null
        },
        {
          "cond": "let Default::None = field.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 37,
          "bound": null
        },
        {
          "cond": "let Some(first) = first_default_index",
          "norm": null,
          "value": "true",
          "line": 38,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        18,
        20,
        21,
        22,
        23,
        32,
        33,
        39,
        11,
        12,
        13,
        15,
        17,
        41,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 31,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "false",
          "line": 34,
          "bound": null
        },
        {
          "cond": "let Default::None = field.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 37,
          "bound": null
        },
        {
          "cond": "let Some(first) = first_default_index",
          "norm": null,
          "value": "true",
          "line": 38,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        16,
        18,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        33,
        39,
        11,
        12,
        13,
        15,
        17,
        41,
        43
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "let Default::None = cont.attrs.default()",
          "norm": null,
          "value": "false",
          "line": 28,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "let Data::Struct(Style::Tuple, fields) = &cont.data",
          "norm": null,
          "value": "true",
          "line": 29,
          "bound": null
        },
        {
          "cond": "(i, field) in fields.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 31,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        17,
        41,
        43
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}