{
  "name": "serde_derive_internals::internals::ctxt::{impl#0}::error_spanned_by",
  "mod_info": {
    "name": "internals::ctxt",
    "loc": "serde_derive_internals/src/mod.rs:7:1:7:10"
  },
  "visible": true,
  "loc": "serde_derive_internals/src/ctxt.rs:31:5:38:6",
  "doc": "/// Add an error to the context object with a tokenenizable object.\n///\n/// The object is used for spanning in error messages.\n",
  "code": [
    "pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {",
    "    self.errors",
    "        .borrow_mut()",
    "        .as_mut()",
    "        .unwrap()",
    "        // Curb monomorphization from generating too many identical methods.",
    "        .push(syn::Error::new_spanned(obj.into_token_stream(), msg));",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}