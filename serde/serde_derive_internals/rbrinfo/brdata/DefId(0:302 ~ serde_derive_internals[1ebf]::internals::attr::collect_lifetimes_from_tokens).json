{
  "name": "serde_derive_internals::internals::attr::collect_lifetimes_from_tokens",
  "mod_info": {
    "name": "internals::attr",
    "loc": "serde_derive_internals/src/mod.rs:2:1:2:14"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/attr.rs:1817:1:1836:2",
  "doc": "",
  "code": [
    "fn collect_lifetimes_from_tokens(tokens: TokenStream, out: &mut BTreeSet<syn::Lifetime>) {",
    "    let mut iter = tokens.into_iter();",
    "    while let Some(tt) = iter.next() {",
    "        match &tt {",
    "            TokenTree::Punct(op) if op.as_char() == '\\'' && op.spacing() == Spacing::Joint => {",
    "                if let Some(TokenTree::Ident(ident)) = iter.next() {",
    "                    out.insert(syn::Lifetime {",
    "                        apostrophe: op.span(),",
    "                        ident,",
    "                    });",
    "                }",
    "            }",
    "            TokenTree::Group(group) => {",
    "                let tokens = group.stream();",
    "                collect_lifetimes_from_tokens(tokens, out);",
    "            }",
    "            _ => {}",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        },
        {
          "cond": "&tt matches _",
          "norm": null,
          "value": "true",
          "line": 1833,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "false",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Group(group)",
          "norm": null,
          "value": "false",
          "line": 1829,
          "bound": null
        },
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        34,
        36,
        37,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "op.as_char() == '\\''",
          "norm": "'\\'' == op.as_char()",
          "value": "false",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "op.spacing() == Spacing::Joint",
          "norm": "Spacing::Joint == op.spacing()",
          "value": "true",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "let Some(TokenTree::Ident(ident)) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1822,
          "bound": null
        },
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        19,
        26,
        28,
        29,
        34,
        36,
        37,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "op.as_char() == '\\''",
          "norm": "'\\'' == op.as_char()",
          "value": "false",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "op.spacing() == Spacing::Joint",
          "norm": "Spacing::Joint == op.spacing()",
          "value": "true",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "let Some(TokenTree::Ident(ident)) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1822,
          "bound": null
        },
        {
          "cond": "let Some(TokenTree::Ident(ident)) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1822,
          "bound": null
        },
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        19,
        20,
        26,
        28,
        29,
        34,
        36,
        37,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "op.as_char() == '\\''",
          "norm": "'\\'' == op.as_char()",
          "value": "false",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "op.spacing() == Spacing::Joint",
          "norm": "Spacing::Joint == op.spacing()",
          "value": "true",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "let Some(TokenTree::Ident(ident)) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1822,
          "bound": null
        },
        {
          "cond": "let Some(TokenTree::Ident(ident)) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1822,
          "bound": null
        },
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        15,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        27,
        28,
        29,
        34,
        36,
        37,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "op.as_char() == '\\''",
          "norm": "'\\'' == op.as_char()",
          "value": "false",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "op.spacing() == Spacing::Joint",
          "norm": "Spacing::Joint == op.spacing()",
          "value": "false",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        13,
        14,
        16,
        18,
        7,
        34,
        36,
        37,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Punct(op)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "op.as_char() == '\\''",
          "norm": "'\\'' == op.as_char()",
          "value": "true",
          "line": 1821,
          "bound": null
        },
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        17,
        18,
        7,
        34,
        36,
        37,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "&tt matches TokenTree::Group(group)",
          "norm": null,
          "value": "true",
          "line": 1820,
          "bound": null
        },
        {
          "cond": "let Some(tt) = iter.next()",
          "norm": null,
          "value": "true",
          "line": 1819,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        30,
        31,
        32,
        33,
        34,
        36,
        37,
        2,
        3,
        4,
        35,
        38,
        39,
        40
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}