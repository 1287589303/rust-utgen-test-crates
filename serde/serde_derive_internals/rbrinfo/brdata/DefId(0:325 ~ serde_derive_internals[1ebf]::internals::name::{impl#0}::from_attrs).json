{
  "name": "serde_derive_internals::internals::name::{impl#0}::from_attrs",
  "mod_info": {
    "name": "internals::name",
    "loc": "serde_derive_internals/src/mod.rs:3:1:3:14"
  },
  "visible": true,
  "loc": "serde_derive_internals/src/name.rs:18:5:42:6",
  "doc": "",
  "code": [
    "pub(crate) fn from_attrs(",
    "    source_name: Name,",
    "    ser_name: Attr<Name>,",
    "    de_name: Attr<Name>,",
    "    de_aliases: Option<VecAttr<Name>>,",
    ") -> Self {",
    "    let mut alias_set = BTreeSet::new();",
    "    if let Some(de_aliases) = de_aliases {",
    "        for alias_name in de_aliases.get() {",
    "            alias_set.insert(alias_name);",
    "        }",
    "    }",
    "",
    "    let ser_name = ser_name.get();",
    "    let ser_renamed = ser_name.is_some();",
    "    let de_name = de_name.get();",
    "    let de_renamed = de_name.is_some();",
    "    MultiName {",
    "        serialize: ser_name.unwrap_or_else(|| source_name.clone()),",
    "        serialize_renamed: ser_renamed,",
    "        deserialize: de_name.unwrap_or(source_name),",
    "        deserialize_renamed: de_renamed,",
    "        deserialize_aliases: alias_set,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(de_aliases) = de_aliases",
          "norm": null,
          "value": "true",
          "line": 25,
          "bound": null
        }
      ],
      "ret": "MultiName {\n            serialize: ser_name.unwrap_or_else(|| source_name.clone()),\n            serialize_renamed: ser_renamed,\n            deserialize: de_name.unwrap_or(source_name),\n            deserialize_renamed: de_renamed,\n            deserialize_aliases: alias_set,\n        }",
      "path": [
        0,
        1,
        19,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(de_aliases) = de_aliases",
          "norm": null,
          "value": "true",
          "line": 25,
          "bound": null
        },
        {
          "cond": "alias_name in de_aliases.get()",
          "norm": null,
          "value": "true",
          "line": 26,
          "bound": null
        },
        {
          "cond": "alias_name in de_aliases.get()",
          "norm": null,
          "value": "false",
          "line": 26,
          "bound": null
        }
      ],
      "ret": "MultiName {\n            serialize: ser_name.unwrap_or_else(|| source_name.clone()),\n            serialize_renamed: ser_renamed,\n            deserialize: de_name.unwrap_or(source_name),\n            deserialize_renamed: de_renamed,\n            deserialize_aliases: alias_set,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        13,
        14,
        15,
        6,
        7,
        8,
        10,
        12,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(de_aliases) = de_aliases",
          "norm": null,
          "value": "true",
          "line": 25,
          "bound": null
        },
        {
          "cond": "alias_name in de_aliases.get()",
          "norm": null,
          "value": "false",
          "line": 26,
          "bound": null
        }
      ],
      "ret": "MultiName {\n            serialize: ser_name.unwrap_or_else(|| source_name.clone()),\n            serialize_renamed: ser_renamed,\n            deserialize: de_name.unwrap_or(source_name),\n            deserialize_renamed: de_renamed,\n            deserialize_aliases: alias_set,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        12,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}