{
  "name": "serde_derive_internals::internals::check::allow_transparent",
  "mod_info": {
    "name": "internals::check",
    "loc": "serde_derive_internals/src/mod.rs:6:1:6:11"
  },
  "visible": false,
  "loc": "serde_derive_internals/src/check.rs:455:1:468:2",
  "doc": "",
  "code": [
    "fn allow_transparent(field: &Field, derive: Derive) -> bool {",
    "    if let Type::Path(ty) = ungroup(field.ty) {",
    "        if let Some(seg) = ty.path.segments.last() {",
    "            if seg.ident == \"PhantomData\" {",
    "                return false;",
    "            }",
    "        }",
    "    }",
    "",
    "    match derive {",
    "        Derive::Serialize => !field.attrs.skip_serializing(),",
    "        Derive::Deserialize => !field.attrs.skip_deserializing() && field.attrs.default().is_none(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 10,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Deserialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "true",
          "line": 466,
          "bound": null
        }
      ],
      "ret": "!field.attrs.skip_deserializing() && field.attrs.default().is_none()",
      "path": [
        0,
        1,
        12,
        13,
        16,
        19,
        20,
        24,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Deserialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "false",
          "line": 466,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        12,
        13,
        16,
        19,
        21,
        22,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Serialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Serialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        }
      ],
      "ret": "!field.attrs.skip_serializing()",
      "path": [
        0,
        1,
        12,
        13,
        15,
        17,
        18,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "let Some(seg) = ty.path.segments.last()",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Deserialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "true",
          "line": 466,
          "bound": null
        }
      ],
      "ret": "!field.attrs.skip_deserializing() && field.attrs.default().is_none()",
      "path": [
        0,
        1,
        2,
        3,
        4,
        10,
        11,
        13,
        16,
        19,
        20,
        24,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "let Some(seg) = ty.path.segments.last()",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Deserialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "false",
          "line": 466,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        10,
        11,
        13,
        16,
        19,
        21,
        22,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "let Some(seg) = ty.path.segments.last()",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Serialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Serialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        }
      ],
      "ret": "!field.attrs.skip_serializing()",
      "path": [
        0,
        1,
        2,
        3,
        4,
        10,
        11,
        13,
        15,
        17,
        18,
        25
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "let Some(seg) = ty.path.segments.last()",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "seg.ident == \"PhantomData\"",
          "norm": "\"PhantomData\" == seg.ident",
          "value": "true",
          "line": 458,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "let Some(seg) = ty.path.segments.last()",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "seg.ident == \"PhantomData\"",
          "norm": "\"PhantomData\" == seg.ident",
          "value": "false",
          "line": 458,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Deserialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "true",
          "line": 466,
          "bound": null
        }
      ],
      "ret": "!field.attrs.skip_deserializing() && field.attrs.default().is_none()",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        13,
        16,
        19,
        20,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "let Some(seg) = ty.path.segments.last()",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "seg.ident == \"PhantomData\"",
          "norm": "\"PhantomData\" == seg.ident",
          "value": "false",
          "line": 458,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Deserialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "field.attrs.skip_deserializing()",
          "norm": null,
          "value": "false",
          "line": 466,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        13,
        16,
        19,
        21,
        22,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "let Type::Path(ty) = ungroup(field.ty)",
          "norm": null,
          "value": "true",
          "line": 456,
          "bound": null
        },
        {
          "cond": "let Some(seg) = ty.path.segments.last()",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "seg.ident == \"PhantomData\"",
          "norm": "\"PhantomData\" == seg.ident",
          "value": "false",
          "line": 458,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Serialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        },
        {
          "cond": "derive matches Derive::Serialize",
          "norm": null,
          "value": "true",
          "line": 464,
          "bound": null
        }
      ],
      "ret": "!field.attrs.skip_serializing()",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        13,
        15,
        17,
        18,
        25
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}