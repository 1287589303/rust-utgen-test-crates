bb0
  0: PlaceMention(((*_2).2: internals::ast::Data<'_>))
    SourceInfo(serde_derive_internals/src/check.rs:79:11-79:20)
  1: _3 = discriminant(((*_2).2: internals::ast::Data<'_>))
    SourceInfo(serde_derive_internals/src/check.rs:79:11-79:20)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:79:5-79:20)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_2).2: internals::ast::Data<'_>))
    SourceInfo(serde_derive_internals/src/check.rs:79:11-79:20)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:79:11-79:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:80:9-80:22)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_9)
    SourceInfo(serde_derive_internals/src/check.rs:89:16-89:38)
  1: StorageLive(_10)
    SourceInfo(serde_derive_internals/src/check.rs:89:16-89:25)
  2: _10 = &((*_2).2: internals::ast::Data<'_>)
    SourceInfo(serde_derive_internals/src/check.rs:89:16-89:25)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:89:16-89:38)
      kind: _9 = internals::ast::Data::<'_>::has_getter(move _10) -> [return: bb10, unwind: bb21]
  }
  preds [bb0, bb2]
  succs [bb10, bb21]

bb4
  0: StorageLive(_4)
    SourceInfo(serde_derive_internals/src/check.rs:81:16-81:38)
  1: StorageLive(_5)
    SourceInfo(serde_derive_internals/src/check.rs:81:16-81:25)
  2: _5 = &((*_2).2: internals::ast::Data<'_>)
    SourceInfo(serde_derive_internals/src/check.rs:81:16-81:25)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:81:16-81:38)
      kind: _4 = internals::ast::Data::<'_>::has_getter(move _5) -> [return: bb5, unwind: bb21]
  }
  preds [bb2]
  succs [bb5, bb21]

bb5
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:81:16-81:38)
      kind: switchInt(move _4) -> [0: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_5)
    SourceInfo(serde_derive_internals/src/check.rs:81:37-81:38)
  1: StorageLive(_6)
    SourceInfo(serde_derive_internals/src/check.rs:82:17-85:18)
  2: StorageLive(_7)
    SourceInfo(serde_derive_internals/src/check.rs:82:17-82:19)
  3: _7 = &(*_1)
    SourceInfo(serde_derive_internals/src/check.rs:82:17-82:19)
  4: StorageLive(_8)
    SourceInfo(serde_derive_internals/src/check.rs:83:21-83:34)
  5: _8 = ((*_2).4: &syn::DeriveInput)
    SourceInfo(serde_derive_internals/src/check.rs:83:21-83:34)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:82:17-85:18)
      kind: _6 = internals::ctxt::Ctxt::error_spanned_by::<&syn::DeriveInput, &str>(move _7, move _8, const "#[serde(getter = \"...\")] is not allowed in an enum") -> [return: bb7, unwind: bb21]
  }
  preds [bb5]
  succs [bb7, bb21]

bb7
  0: StorageDead(_8)
    SourceInfo(serde_derive_internals/src/check.rs:85:17-85:18)
  1: StorageDead(_7)
    SourceInfo(serde_derive_internals/src/check.rs:85:17-85:18)
  2: StorageDead(_6)
    SourceInfo(serde_derive_internals/src/check.rs:85:18-85:19)
  3: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:81:39-86:14)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:81:13-86:14)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: StorageDead(_5)
    SourceInfo(serde_derive_internals/src/check.rs:81:37-81:38)
  1: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:86:14-86:14)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:81:13-86:14)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb9
  0: StorageDead(_4)
    SourceInfo(serde_derive_internals/src/check.rs:86:13-86:14)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:86:13-86:14)
      kind: goto -> bb20
  }
  preds [bb7, bb8]
  succs [bb20]

bb10
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:89:16-89:38)
      kind: switchInt(move _9) -> [0: bb17, otherwise: bb11]
  }
  preds [bb3]
  succs [bb11, bb17]

bb11
  0: StorageDead(_10)
    SourceInfo(serde_derive_internals/src/check.rs:89:37-89:38)
  1: StorageLive(_11)
    SourceInfo(serde_derive_internals/src/check.rs:89:42-89:71)
  2: StorageLive(_12)
    SourceInfo(serde_derive_internals/src/check.rs:89:42-89:61)
  3: StorageLive(_13)
    SourceInfo(serde_derive_internals/src/check.rs:89:42-89:61)
  4: StorageLive(_14)
    SourceInfo(serde_derive_internals/src/check.rs:89:42-89:52)
  5: _14 = &((*_2).1: internals::attr::Container)
    SourceInfo(serde_derive_internals/src/check.rs:89:42-89:52)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:89:42-89:61)
      kind: _13 = internals::attr::Container::remote(move _14) -> [return: bb12, unwind: bb21]
  }
  preds [bb10]
  succs [bb12, bb21]

bb12
  0: _12 = &_13
    SourceInfo(serde_derive_internals/src/check.rs:89:42-89:61)
  1: StorageDead(_14)
    SourceInfo(serde_derive_internals/src/check.rs:89:60-89:61)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:89:42-89:71)
      kind: _11 = std::option::Option::<&syn::Path>::is_none(move _12) -> [return: bb13, unwind: bb21]
  }
  preds [bb11]
  succs [bb13, bb21]

bb13
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:89:42-89:71)
      kind: switchInt(move _11) -> [0: bb16, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb16]

bb14
  0: StorageDead(_13)
    SourceInfo(serde_derive_internals/src/check.rs:89:70-89:71)
  1: StorageDead(_12)
    SourceInfo(serde_derive_internals/src/check.rs:89:70-89:71)
  2: StorageLive(_15)
    SourceInfo(serde_derive_internals/src/check.rs:90:17-93:18)
  3: StorageLive(_16)
    SourceInfo(serde_derive_internals/src/check.rs:90:17-90:19)
  4: _16 = &(*_1)
    SourceInfo(serde_derive_internals/src/check.rs:90:17-90:19)
  5: StorageLive(_17)
    SourceInfo(serde_derive_internals/src/check.rs:91:21-91:34)
  6: _17 = ((*_2).4: &syn::DeriveInput)
    SourceInfo(serde_derive_internals/src/check.rs:91:21-91:34)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:90:17-93:18)
      kind: _15 = internals::ctxt::Ctxt::error_spanned_by::<&syn::DeriveInput, &str>(move _16, move _17, const "#[serde(getter = \"...\")] can only be used in structs that have #[serde(remote = \"...\")]") -> [return: bb15, unwind: bb21]
  }
  preds [bb13]
  succs [bb15, bb21]

bb15
  0: StorageDead(_17)
    SourceInfo(serde_derive_internals/src/check.rs:93:17-93:18)
  1: StorageDead(_16)
    SourceInfo(serde_derive_internals/src/check.rs:93:17-93:18)
  2: StorageDead(_15)
    SourceInfo(serde_derive_internals/src/check.rs:93:18-93:19)
  3: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:89:72-94:14)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:89:13-94:14)
      kind: goto -> bb19
  }
  preds [bb14]
  succs [bb19]

bb16
  0: StorageDead(_13)
    SourceInfo(serde_derive_internals/src/check.rs:89:70-89:71)
  1: StorageDead(_12)
    SourceInfo(serde_derive_internals/src/check.rs:89:70-89:71)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/lib.rs:1:1-1:1)
      kind: goto -> bb18
  }
  preds [bb13]
  succs [bb18]

bb17
  0: StorageDead(_10)
    SourceInfo(serde_derive_internals/src/check.rs:89:37-89:38)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/lib.rs:1:1-1:1)
      kind: goto -> bb18
  }
  preds [bb10]
  succs [bb18]

bb18
  0: _0 = const ()
    SourceInfo(serde_derive_internals/src/check.rs:94:14-94:14)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:89:13-94:14)
      kind: goto -> bb19
  }
  preds [bb16, bb17]
  succs [bb19]

bb19
  0: StorageDead(_11)
    SourceInfo(serde_derive_internals/src/check.rs:94:13-94:14)
  1: StorageDead(_9)
    SourceInfo(serde_derive_internals/src/check.rs:94:13-94:14)
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:94:13-94:14)
      kind: goto -> bb20
  }
  preds [bb15, bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:97:2-97:2)
      kind: return
  }
  preds [bb9, bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(serde_derive_internals/src/check.rs:78:1-97:2)
      kind: resume
  }
  preds [bb3, bb4, bb6, bb11, bb12, bb14]
  succs []

