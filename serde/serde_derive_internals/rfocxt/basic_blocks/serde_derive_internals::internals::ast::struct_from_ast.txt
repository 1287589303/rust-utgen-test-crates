[
    BasicBlockData {
        statements: [
            PlaceMention(_2),
            _7 = discriminant((*_2)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:169:5: 169:17 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _7) -> [0: bb2, 1: bb3, 2: bb5, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:169:11: 169:17 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:170:9: 170:35 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb6, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:174:9: 174:37 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb9, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:178:9: 178:37 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb15, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_36),
            _36 = internals::ast::Style::Unit,
            StorageLive(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:182:44: 182:54 (#0),
                    scope: scope[0],
                },
                kind: _37 = std::vec::Vec::<internals::ast::Field<'_>>::new() -> [return: bb18, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            _8 = &(((*_2) as Named).0: syn::FieldsNamed),
            StorageLive(_9),
            _9 = internals::ast::Style::Struct,
            StorageLive(_10),
            StorageLive(_11),
            _11 = &(*_1),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &((*_8).1: syn::punctuated::Punctuated<syn::Field, syn::token::Comma>),
            _12 = &(*_13),
            StorageLive(_14),
            _14 = _3,
            StorageLive(_15),
            _15 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:172:13: 172:73 (#0),
                    scope: scope[1],
                },
                kind: _10 = internals::ast::fields_from_ast(move _11, move _12, move _14, move _15) -> [return: bb7, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_11),
            _0 = (move _9, move _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:173:9: 173:10 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb8, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_13),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:173:9: 173:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            StorageLive(_16),
            _16 = &(((*_2) as Unnamed).0: syn::FieldsUnnamed),
            _17 = &_16,
            _5 = &fake shallow _2,
            _6 = &fake shallow (*_2),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &((*(*_17)).1: syn::punctuated::Punctuated<syn::Field, syn::token::Comma>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:174:41: 174:61 (#0),
                    scope: scope[0],
                },
                kind: _19 = syn::punctuated::Punctuated::<syn::Field, syn::token::Comma>::len(move _20) -> [return: bb10, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            _18 = Eq(move _19, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:174:41: 174:66 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _18) -> [0: bb12, otherwise: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageDead(_18),
            FakeRead(ForMatchGuard, _5),
            FakeRead(ForMatchGuard, _6),
            StorageLive(_21),
            _21 = internals::ast::Style::Newtype,
            StorageLive(_22),
            StorageLive(_23),
            _23 = &(*_1),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &((*_16).1: syn::punctuated::Punctuated<syn::Field, syn::token::Comma>),
            _24 = &(*_25),
            StorageLive(_26),
            _26 = _3,
            StorageLive(_27),
            _27 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:176:13: 176:75 (#0),
                    scope: scope[2],
                },
                kind: _22 = internals::ast::fields_from_ast(move _23, move _24, move _26, move _27) -> [return: bb13, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:174:41: 174:66 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_24),
            StorageDead(_23),
            _0 = (move _21, move _22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:177:9: 177:10 (#0),
                    scope: scope[2],
                },
                kind: drop(_22) -> [return: bb14, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_25),
            StorageDead(_16),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:177:9: 177:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            _28 = &(((*_2) as Unnamed).0: syn::FieldsUnnamed),
            StorageLive(_29),
            _29 = internals::ast::Style::Tuple,
            StorageLive(_30),
            StorageLive(_31),
            _31 = &(*_1),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &((*_28).1: syn::punctuated::Punctuated<syn::Field, syn::token::Comma>),
            _32 = &(*_33),
            StorageLive(_34),
            _34 = _3,
            StorageLive(_35),
            _35 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:180:13: 180:75 (#0),
                    scope: scope[3],
                },
                kind: _30 = internals::ast::fields_from_ast(move _31, move _32, move _34, move _35) -> [return: bb16, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_34),
            StorageDead(_32),
            StorageDead(_31),
            _0 = (move _29, move _30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:181:9: 181:10 (#0),
                    scope: scope[3],
                },
                kind: drop(_30) -> [return: bb17, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            StorageDead(_33),
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:181:9: 181:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = (move _36, move _37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:182:54: 182:55 (#0),
                    scope: scope[0],
                },
                kind: drop(_37) -> [return: bb19, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:182:54: 182:55 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:184:2: 184:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/ast.rs:163:1: 184:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (internals::ast::Style, std::vec::Vec<internals::ast::Field<'{erased}>, std::alloc::Global>),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:168:6: 168:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/ast.rs:164:9: 164:14 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/ast.rs:164:5: 164:7 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/ast.rs:164:5: 164:7 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:164:5: 164:7 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/ast.rs:165:13: 165:28 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/ast.rs:165:5: 165:11 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/ast.rs:165:5: 165:11 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Fields,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:165:5: 165:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/ast.rs:166:12: 166:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/ast.rs:166:5: 166:10 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/ast.rs:166:5: 166:10 (#0),
                    },
                ),
            ),
        ),
        ty: std::option::Option<&'{erased} internals::attr::Variant>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:166:5: 166:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/ast.rs:167:24: 167:38 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/ast.rs:167:5: 167:22 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/ast.rs:167:5: 167:22 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:167:5: 167:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            FakeBorrow,
        ),
        ty: &'{erased} &'{erased} syn::Fields,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:169:11: 169:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            FakeBorrow,
        ),
        ty: &'{erased} syn::Fields,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:169:11: 169:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:170:9: 170:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/ast.rs:169:11: 169:17 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/ast.rs:170:9: 170:35 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::FieldsNamed,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:170:28: 170:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: internals::ast::Style,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:171:13: 171:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: std::vec::Vec<internals::ast::Field<'{erased}>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:172:13: 172:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:172:29: 172:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Field, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:172:33: 172:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Field, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:172:33: 172:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: std::option::Option<&'{erased} internals::attr::Variant>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:172:48: 172:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:172:55: 172:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/ast.rs:169:11: 169:17 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/ast.rs:174:9: 174:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::FieldsUnnamed,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:174:30: 174:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                RefForGuard,
            ),
        ),
        ty: &'{erased} &'{erased} syn::FieldsUnnamed,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:174:30: 174:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:174:41: 174:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:174:41: 174:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Field, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:174:41: 174:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: internals::ast::Style,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:175:13: 175:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: std::vec::Vec<internals::ast::Field<'{erased}>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:176:13: 176:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:176:29: 176:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Field, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:176:33: 176:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Field, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:176:33: 176:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: std::option::Option<&'{erased} internals::attr::Variant>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:176:50: 176:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:176:57: 176:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/ast.rs:169:11: 169:17 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/ast.rs:178:9: 178:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::FieldsUnnamed,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:178:30: 178:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: internals::ast::Style,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:179:13: 179:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: std::vec::Vec<internals::ast::Field<'{erased}>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:180:13: 180:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:180:29: 180:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Field, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:180:33: 180:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Field, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:180:33: 180:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: std::option::Option<&'{erased} internals::attr::Variant>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:180:50: 180:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:180:57: 180:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: internals::ast::Style,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:182:31: 182:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/ast.rs:169:5: 183:6 (#0),
                },
            ),
        ),
        ty: std::vec::Vec<internals::ast::Field<'{erased}>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/ast.rs:182:44: 182:54 (#0),
            scope: scope[0],
        },
    },
]