[
    BasicBlockData {
        statements: [
            PlaceMention(_2),
            _3 = discriminant((*_2)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:175:9: 175:24 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:175:15: 175:24 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:176:13: 176:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:177:13: 177:53 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb6, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_24),
            _24 = &mut (((*_2) as Parenthesized).0: syn::ParenthesizedGenericArguments),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &mut ((*_24).1: syn::punctuated::Punctuated<syn::Type, syn::token::Comma>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
                    scope: scope[6],
                },
                kind: _26 = <&mut syn::punctuated::Punctuated<syn::Type, syn::token::Comma> as std::iter::IntoIterator>::into_iter(move _27) -> [return: bb27, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:176:36: 176:38 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &mut (((*_2) as AngleBracketed).0: syn::AngleBracketedGenericArguments),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut ((*_4).2: syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
                    scope: scope[1],
                },
                kind: _5 = <&mut syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma> as std::iter::IntoIterator>::into_iter(move _6) -> [return: bb7, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            PlaceMention(_5),
            StorageLive(_7),
            _7 = move _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
                    scope: scope[2],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
                    scope: scope[2],
                },
                kind: falseUnwind -> [real: bb9, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut _7,
            _11 = &mut (*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
                    scope: scope[2],
                },
                kind: _10 = <syn::punctuated::IterMut<'_, syn::GenericArgument> as std::iter::Iterator>::next(move _11) -> [return: bb10, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            PlaceMention(_10),
            _13 = discriminant(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
                    scope: scope[2],
                },
                kind: switchInt(move _13) -> [0: bb12, 1: bb13, otherwise: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
                    scope: scope[2],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb14, imaginary: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = move ((_10 as Some).0: &mut syn::GenericArgument),
            PlaceMention(_15),
            _16 = discriminant((*_15)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:179:21: 179:30 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _16) -> [0: bb18, 1: bb16, 2: bb18, 3: bb17, 4: bb18, 5: bb18, otherwise: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:189:17: 189:18 (#587),
                    scope: scope[1],
                },
                kind: drop(_7) -> [return: bb25, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:187:30: 187:32 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:181:25: 181:51 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb19, imaginary: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:182:25: 182:56 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb21, imaginary: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:183:25: 186:57 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb23, imaginary: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            _17 = &mut (((*_15) as Type).0: syn::Type),
            StorageLive(_18),
            _18 = &mut (*_1),
            StorageLive(_19),
            _19 = &mut (*_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:181:55: 181:79 (#0),
                    scope: scope[4],
                },
                kind: _9 = internals::receiver::ReplaceReceiver::<'_>::visit_type_mut(move _18, move _19) -> [return: bb20, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:181:78: 181:79 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_20),
            _20 = &mut (((*_15) as AssocType).0: syn::AssocType),
            StorageLive(_21),
            _21 = &mut (*_1),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &mut ((*_20).3: syn::Type),
            _22 = &mut (*_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:182:60: 182:92 (#0),
                    scope: scope[5],
                },
                kind: _9 = internals::receiver::ReplaceReceiver::<'_>::visit_type_mut(move _21, move _22) -> [return: bb22, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_23),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:182:91: 182:92 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:186:61: 186:63 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_9),
            _8 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
                    scope: scope[2],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:189:17: 189:18 (#587),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb26, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:190:13: 190:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            PlaceMention(_26),
            StorageLive(_28),
            _28 = move _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:17: 194:18 (#590),
                    scope: scope[7],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:17: 194:18 (#590),
                    scope: scope[7],
                },
                kind: falseUnwind -> [real: bb29, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = &mut _28,
            _31 = &mut (*_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
                    scope: scope[7],
                },
                kind: _30 = <syn::punctuated::IterMut<'_, syn::Type> as std::iter::Iterator>::next(move _31) -> [return: bb30, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            PlaceMention(_30),
            _33 = discriminant(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
                    scope: scope[7],
                },
                kind: switchInt(move _33) -> [0: bb32, 1: bb33, otherwise: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
                    scope: scope[7],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:17: 194:18 (#590),
                    scope: scope[7],
                },
                kind: falseEdge -> [real: bb34, imaginary: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_35),
            _35 = move ((_30 as Some).0: &mut syn::Type),
            StorageLive(_36),
            StorageLive(_37),
            _37 = &mut (*_1),
            StorageLive(_38),
            _38 = &mut (*_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:193:21: 193:50 (#0),
                    scope: scope[8],
                },
                kind: _36 = internals::receiver::ReplaceReceiver::<'_>::visit_type_mut(move _37, move _38) -> [return: bb35, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _25 = const (),
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:194:17: 194:18 (#590),
                    scope: scope[6],
                },
                kind: drop(_28) -> [return: bb36, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            StorageDead(_36),
            _29 = const (),
            StorageDead(_35),
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_29),
            _8 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:192:17: 194:18 (#590),
                    scope: scope[7],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:194:17: 194:18 (#590),
                    scope: scope[6],
                },
                kind: drop(_26) -> [return: bb37, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_25),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &mut (*_1),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &mut ((*_24).2: syn::ReturnType),
            _41 = &mut (*_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:195:17: 195:66 (#0),
                    scope: scope[6],
                },
                kind: _39 = internals::receiver::ReplaceReceiver::<'_>::visit_return_type_mut(move _40, move _41) -> [return: bb38, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_42),
            StorageDead(_39),
            _0 = const (),
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:196:13: 196:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:198:6: 198:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:194:17: 194:18 (#590),
                    scope: scope[6],
                },
                kind: drop(_28) -> [return: bb41, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:194:17: 194:18 (#590),
                    scope: scope[6],
                },
                kind: drop(_26) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:189:17: 189:18 (#587),
                    scope: scope[1],
                },
                kind: drop(_7) -> [return: bb43, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:189:17: 189:18 (#587),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:174:5: 198:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:174:74: 174:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:174:33: 174:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/receiver.rs:174:55: 174:73 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/receiver.rs:174:44: 174:53 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:174:44: 174:53 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::PathArguments,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:174:44: 174:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:176:13: 176:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:175:15: 175:24 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:177:13: 177:53 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::AngleBracketedGenericArguments,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:177:43: 177:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
                },
            ),
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
                },
            ),
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
                    },
                ),
            ),
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:174:5: 198:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} mut syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:17: 189:18 (#587),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _10,
                                ),
                                serde_derive_internals/src/receiver.rs:178:28: 178:47 (#588),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:178:21: 178:24 (#589),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::GenericArgument,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:178:21: 178:24 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:181:25: 181:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _15,
                                ),
                                serde_derive_internals/src/receiver.rs:179:27: 179:30 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:181:25: 181:51 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:181:47: 181:50 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:179:21: 188:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:181:55: 181:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:179:21: 188:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:181:75: 181:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _15,
                                ),
                                serde_derive_internals/src/receiver.rs:179:27: 179:30 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:182:25: 182:56 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::AssocType,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:182:52: 182:55 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:179:21: 188:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:182:60: 182:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:179:21: 188:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:182:80: 182:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:179:21: 188:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:182:80: 182:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:175:15: 175:24 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:191:13: 191:52 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ParenthesizedGenericArguments,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:191:42: 191:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:17: 194:18 (#590),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::Type, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _26,
                                ),
                                serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
                    },
                ),
            ),
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} mut syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:17: 194:18 (#590),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:17: 194:18 (#590),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _30,
                                ),
                                serde_derive_internals/src/receiver.rs:192:33: 192:54 (#591),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:192:21: 192:29 (#592),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:192:21: 192:29 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:193:21: 193:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:193:21: 193:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:193:41: 193:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:195:17: 195:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:195:17: 195:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::ReturnType,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:195:44: 195:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::ReturnType,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:195:44: 195:65 (#0),
            scope: scope[0],
        },
    },
]