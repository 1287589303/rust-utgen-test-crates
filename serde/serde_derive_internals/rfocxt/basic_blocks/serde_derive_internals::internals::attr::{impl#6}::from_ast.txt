[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:755:28: 755:50 (#0),
                    scope: scope[0],
                },
                kind: _3 = internals::attr::Attr::<'_, internals::name::Name>::none(move _4, const internals::symbol::RENAME) -> [return: bb1, unwind: bb130],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:756:27: 756:49 (#0),
                    scope: scope[1],
                },
                kind: _5 = internals::attr::Attr::<'_, internals::name::Name>::none(move _6, const internals::symbol::RENAME) -> [return: bb2, unwind: bb129],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:757:30: 757:55 (#0),
                    scope: scope[2],
                },
                kind: _7 = internals::attr::VecAttr::<'_, internals::name::Name>::none(move _8, const internals::symbol::RENAME) -> [return: bb3, unwind: bb128],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:758:38: 758:76 (#0),
                    scope: scope[3],
                },
                kind: _9 = internals::attr::BoolAttr::<'_>::none(move _10, const internals::symbol::SKIP_DESERIALIZING) -> [return: bb4, unwind: bb127],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:759:36: 759:72 (#0),
                    scope: scope[4],
                },
                kind: _11 = internals::attr::BoolAttr::<'_>::none(move _12, const internals::symbol::SKIP_SERIALIZING) -> [return: bb5, unwind: bb126],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            FakeRead(ForLet(None), _11),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:760:39: 760:65 (#0),
                    scope: scope[5],
                },
                kind: _13 = internals::attr::Attr::<'_, internals::case::RenameRule>::none(move _14, const internals::symbol::RENAME_ALL) -> [return: bb6, unwind: bb125],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            FakeRead(ForLet(None), _13),
            StorageLive(_15),
            StorageLive(_16),
            _16 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:761:38: 761:64 (#0),
                    scope: scope[6],
                },
                kind: _15 = internals::attr::Attr::<'_, internals::case::RenameRule>::none(move _16, const internals::symbol::RENAME_ALL) -> [return: bb7, unwind: bb124],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            FakeRead(ForLet(None), _15),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:762:29: 762:50 (#0),
                    scope: scope[7],
                },
                kind: _17 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::none(move _18, const internals::symbol::BOUND) -> [return: bb8, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            FakeRead(ForLet(None), _17),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:763:28: 763:49 (#0),
                    scope: scope[8],
                },
                kind: _19 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::none(move _20, const internals::symbol::BOUND) -> [return: bb9, unwind: bb122],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            FakeRead(ForLet(None), _19),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:764:25: 764:50 (#0),
                    scope: scope[9],
                },
                kind: _21 = internals::attr::BoolAttr::<'_>::none(move _22, const internals::symbol::OTHER) -> [return: bb10, unwind: bb121],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            FakeRead(ForLet(None), _21),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:765:34: 765:64 (#0),
                    scope: scope[10],
                },
                kind: _23 = internals::attr::Attr::<'_, syn::ExprPath>::none(move _24, const internals::symbol::SERIALIZE_WITH) -> [return: bb11, unwind: bb120],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            FakeRead(ForLet(None), _23),
            StorageLive(_25),
            StorageLive(_26),
            _26 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:766:36: 766:68 (#0),
                    scope: scope[11],
                },
                kind: _25 = internals::attr::Attr::<'_, syn::ExprPath>::none(move _26, const internals::symbol::DESERIALIZE_WITH) -> [return: bb12, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            FakeRead(ForLet(None), _25),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:767:26: 767:48 (#0),
                    scope: scope[12],
                },
                kind: _27 = internals::attr::Attr::<'_, internals::attr::BorrowAttribute>::none(move _28, const internals::symbol::BORROW) -> [return: bb13, unwind: bb118],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            FakeRead(ForLet(None), _27),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:768:28: 768:56 (#0),
                    scope: scope[13],
                },
                kind: _29 = internals::attr::BoolAttr::<'_>::none(move _30, const internals::symbol::UNTAGGED) -> [return: bb14, unwind: bb117],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            FakeRead(ForLet(None), _29),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &((*_2).0: std::vec::Vec<syn::Attribute>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
                    scope: scope[14],
                },
                kind: _32 = <&std::vec::Vec<syn::Attribute> as std::iter::IntoIterator>::into_iter(move _33) -> [return: bb15, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            PlaceMention(_32),
            StorageLive(_34),
            _34 = move _32,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:9: 898:10 (#311),
                    scope: scope[15],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:9: 898:10 (#311),
                    scope: scope[15],
                },
                kind: falseUnwind -> [real: bb17, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &mut _34,
            _38 = &mut (*_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
                    scope: scope[15],
                },
                kind: _37 = <std::slice::Iter<'_, syn::Attribute> as std::iter::Iterator>::next(move _38) -> [return: bb18, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            PlaceMention(_37),
            _40 = discriminant(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
                    scope: scope[15],
                },
                kind: switchInt(move _40) -> [0: bb20, 1: bb21, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
                    scope: scope[15],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:9: 898:10 (#311),
                    scope: scope[15],
                },
                kind: falseEdge -> [real: bb22, imaginary: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_42),
            _42 = ((_37 as Some).0: &syn::Attribute),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            _47 = &(*_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:771:16: 771:27 (#0),
                    scope: scope[16],
                },
                kind: _46 = syn::Attribute::path(move _47) -> [return: bb23, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _31 = const (),
            StorageDead(_39),
            StorageDead(_37),
            StorageDead(_36),
            StorageDead(_34),
            StorageDead(_32),
            StorageDead(_31),
            StorageLive(_82),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            StorageLive(_86),
            StorageLive(_87),
            _87 = &((*_2).1: proc_macro2::Ident),
            _86 = &(*_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:902:29: 902:50 (#0),
                    scope: scope[14],
                },
                kind: _85 = internals::attr::unraw(move _86) -> [return: bb43, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = &_46,
            StorageDead(_47),
            StorageLive(_48),
            StorageLive(_49),
            _49 = const internals::symbol::SERDE,
            _48 = &_49,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:771:16: 771:36 (#0),
                    scope: scope[16],
                },
                kind: _44 = <&syn::Path as std::cmp::PartialEq<internals::symbol::Symbol>>::ne(move _45, move _48) -> [return: bb24, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:771:16: 771:36 (#0),
                    scope: scope[16],
                },
                kind: switchInt(move _44) -> [0: bb26, otherwise: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_46),
            StorageDead(_45),
            StorageDead(_44),
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[16],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_46),
            StorageDead(_45),
            _43 = const (),
            StorageDead(_44),
            StorageDead(_43),
            StorageLive(_51),
            StorageLive(_52),
            _52 = &((*_42).3: syn::Meta),
            PlaceMention(_52),
            _53 = discriminant((*_52)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:775:20: 775:41 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _53) -> [1: bb28, otherwise: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _51 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:775:13: 779:14 (#0),
                    scope: scope[16],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:775:20: 775:41 (#0),
                    scope: scope[17],
                },
                kind: falseEdge -> [real: bb29, imaginary: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_54),
            _54 = &(((*_52) as List).0: syn::MetaList),
            StorageLive(_55),
            StorageLive(_56),
            _56 = &((*_54).2: proc_macro2::TokenStream),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:776:20: 776:42 (#0),
                    scope: scope[17],
                },
                kind: _55 = proc_macro2::TokenStream::is_empty(move _56) -> [return: bb30, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:776:20: 776:42 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _55) -> [0: bb32, otherwise: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_55),
            StorageDead(_54),
            StorageDead(_52),
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[16],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            _51 = const (),
            StorageDead(_55),
            StorageDead(_54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:775:13: 779:14 (#0),
                    scope: scope[16],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            StorageDead(_51),
            StorageLive(_58),
            StorageLive(_59),
            _59 = &(*_42),
            StorageLive(_60),
            StorageLive(_61),
            _61 = &(*_1),
            StorageLive(_62),
            _62 = &mut _3,
            StorageLive(_63),
            _63 = &mut _5,
            StorageLive(_64),
            _64 = &mut _7,
            StorageLive(_65),
            _65 = &mut _13,
            StorageLive(_66),
            _66 = &mut _15,
            StorageLive(_67),
            _67 = &mut _11,
            StorageLive(_68),
            _68 = &mut _9,
            StorageLive(_69),
            _69 = &mut _21,
            StorageLive(_70),
            _70 = &mut _17,
            StorageLive(_71),
            _71 = &mut _19,
            StorageLive(_72),
            _72 = &mut _23,
            StorageLive(_73),
            _73 = &mut _25,
            StorageLive(_74),
            _74 = &_2,
            StorageLive(_75),
            _75 = &mut _27,
            StorageLive(_76),
            _76 = &mut _29,
            _60 = {closure@serde_derive_internals/src/attr.rs:781:54: 781:60} { cx: move _61, ser_name: move _62, de_name: move _63, de_aliases: move _64, rename_all_ser_rule: move _65, rename_all_de_rule: move _66, skip_serializing: move _67, skip_deserializing: move _68, other: move _69, ser_bound: move _70, de_bound: move _71, serialize_with: move _72, deserialize_with: move _73, variant: move _74, borrow: move _75, untagged: move _76 },
            StorageDead(_76),
            StorageDead(_75),
            StorageDead(_74),
            StorageDead(_73),
            StorageDead(_72),
            StorageDead(_71),
            StorageDead(_70),
            StorageDead(_69),
            StorageDead(_68),
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_65),
            StorageDead(_64),
            StorageDead(_63),
            StorageDead(_62),
            StorageDead(_61),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:781:31: 895:15 (#0),
                    scope: scope[18],
                },
                kind: _58 = syn::Attribute::parse_nested_meta::<{closure@serde_derive_internals/src/attr.rs:781:54: 781:60}>(move _59, move _60) -> [return: bb34, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
            StorageDead(_59),
            PlaceMention(_58),
            _77 = discriminant(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:781:20: 781:28 (#0),
                    scope: scope[18],
                },
                kind: switchInt(move _77) -> [1: bb35, otherwise: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:781:20: 781:28 (#0),
                    scope: scope[18],
                },
                kind: falseEdge -> [real: bb36, imaginary: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_78),
            _78 = move ((_58 as Err).0: syn::Error),
            StorageLive(_79),
            StorageLive(_80),
            _80 = &(*_1),
            StorageLive(_81),
            _81 = move _78,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:896:17: 896:34 (#0),
                    scope: scope[18],
                },
                kind: _79 = internals::ctxt::Ctxt::syn_error(move _80, move _81) -> [return: bb37, unwind: bb113],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_81),
            StorageDead(_80),
            StorageDead(_79),
            _36 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:897:13: 897:14 (#0),
                    scope: scope[16],
                },
                kind: drop(_78) -> [return: bb39, unwind: bb115],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _36 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:781:13: 897:14 (#0),
                    scope: scope[16],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:781:13: 897:14 (#0),
                    scope: scope[16],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:898:9: 898:10 (#0),
                    scope: scope[15],
                },
                kind: drop(_58) -> [return: bb41, unwind: bb116],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
            StorageDead(_42),
            StorageDead(_39),
            StorageDead(_37),
            StorageDead(_36),
            _35 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:770:9: 898:10 (#311),
                    scope: scope[15],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_39),
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[15],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            _84 = &_85,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:902:17: 902:51 (#0),
                    scope: scope[14],
                },
                kind: _83 = <internals::name::Name as std::convert::From<&proc_macro2::Ident>>::from(move _84) -> [return: bb44, unwind: bb98],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageLive(_88),
            _88 = move _3,
            StorageLive(_89),
            _89 = move _5,
            StorageLive(_90),
            StorageLive(_91),
            _91 = move _7,
            _90 = std::option::Option::<internals::attr::VecAttr<'_, internals::name::Name>>::Some(move _91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:905:32: 905:33 (#0),
                    scope: scope[14],
                },
                kind: drop(_91) -> [return: bb45, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:901:19: 906:14 (#0),
                    scope: scope[14],
                },
                kind: _82 = internals::name::MultiName::from_attrs(move _83, move _88, move _89, move _90) -> [return: bb46, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
            StorageDead(_89),
            StorageDead(_88),
            StorageDead(_83),
            StorageLive(_92),
            StorageLive(_93),
            StorageLive(_94),
            StorageLive(_95),
            _95 = move _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:908:28: 908:53 (#0),
                    scope: scope[14],
                },
                kind: _94 = internals::attr::Attr::<'_, internals::case::RenameRule>::get(move _95) -> [return: bb47, unwind: bb92],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            StorageLive(_96),
            _96 = internals::case::RenameRule::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:908:28: 908:81 (#0),
                    scope: scope[14],
                },
                kind: _93 = std::option::Option::<internals::case::RenameRule>::unwrap_or(move _94, move _96) -> [return: bb48, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
            StorageDead(_94),
            StorageLive(_97),
            StorageLive(_98),
            StorageLive(_99),
            _99 = move _15,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:909:30: 909:54 (#0),
                    scope: scope[14],
                },
                kind: _98 = internals::attr::Attr::<'_, internals::case::RenameRule>::get(move _99) -> [return: bb49, unwind: bb91],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_99),
            StorageLive(_100),
            _100 = internals::case::RenameRule::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:909:30: 909:82 (#0),
                    scope: scope[14],
                },
                kind: _97 = std::option::Option::<internals::case::RenameRule>::unwrap_or(move _98, move _100) -> [return: bb50, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
            StorageDead(_98),
            _92 = internals::attr::RenameAllRules { serialize: move _93, deserialize: move _97 },
            StorageDead(_97),
            StorageDead(_93),
            StorageLive(_101),
            StorageLive(_102),
            _102 = move _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:911:24: 911:39 (#0),
                    scope: scope[14],
                },
                kind: _101 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::get(move _102) -> [return: bb51, unwind: bb90],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
            StorageLive(_103),
            StorageLive(_104),
            _104 = move _19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:912:23: 912:37 (#0),
                    scope: scope[14],
                },
                kind: _103 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::get(move _104) -> [return: bb52, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_104),
            StorageLive(_105),
            StorageLive(_106),
            _106 = &_9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:913:33: 913:57 (#0),
                    scope: scope[14],
                },
                kind: _105 = internals::attr::BoolAttr::<'_>::get(move _106) -> [return: bb53, unwind: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
            StorageLive(_107),
            StorageLive(_108),
            _108 = &_11,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:914:31: 914:53 (#0),
                    scope: scope[14],
                },
                kind: _107 = internals::attr::BoolAttr::<'_>::get(move _108) -> [return: bb54, unwind: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_108),
            StorageLive(_109),
            StorageLive(_110),
            _110 = &_21,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:915:20: 915:31 (#0),
                    scope: scope[14],
                },
                kind: _109 = internals::attr::BoolAttr::<'_>::get(move _110) -> [return: bb55, unwind: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_110),
            StorageLive(_111),
            StorageLive(_112),
            _112 = move _23,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:916:29: 916:49 (#0),
                    scope: scope[14],
                },
                kind: _111 = internals::attr::Attr::<'_, syn::ExprPath>::get(move _112) -> [return: bb56, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_112),
            StorageLive(_113),
            StorageLive(_114),
            _114 = move _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:917:31: 917:53 (#0),
                    scope: scope[14],
                },
                kind: _113 = internals::attr::Attr::<'_, syn::ExprPath>::get(move _114) -> [return: bb57, unwind: bb84],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
            StorageLive(_115),
            StorageLive(_116),
            _116 = move _27,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:918:21: 918:33 (#0),
                    scope: scope[14],
                },
                kind: _115 = internals::attr::Attr::<'_, internals::attr::BorrowAttribute>::get(move _116) -> [return: bb58, unwind: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
            StorageLive(_117),
            StorageLive(_118),
            _118 = &_29,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:919:23: 919:37 (#0),
                    scope: scope[14],
                },
                kind: _117 = internals::attr::BoolAttr::<'_>::get(move _118) -> [return: bb59, unwind: bb81],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_118),
            _0 = internals::attr::Variant { name: move _82, rename_all_rules: move _92, ser_bound: move _101, de_bound: move _103, skip_deserializing: move _105, skip_serializing: move _107, other: move _109, serialize_with: move _111, deserialize_with: move _113, borrow: move _115, untagged: move _117 },
            StorageDead(_117),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_115) -> [return: bb60, unwind: bb83],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_113) -> [return: bb61, unwind: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_113),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_111) -> [return: bb62, unwind: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_111),
            StorageDead(_109),
            StorageDead(_107),
            StorageDead(_105),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_103) -> [return: bb63, unwind: bb89],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_101) -> [return: bb64, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_101),
            StorageDead(_92),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_82) -> [return: bb65, unwind: bb98],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_82),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_29) -> [return: bb66, unwind: bb99],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_27) -> [return: bb67, unwind: bb100],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_25) -> [return: bb68, unwind: bb101],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_23) -> [return: bb69, unwind: bb102],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_21) -> [return: bb70, unwind: bb103],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_19) -> [return: bb71, unwind: bb104],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_17) -> [return: bb72, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_15) -> [return: bb73, unwind: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_13) -> [return: bb74, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_11) -> [return: bb75, unwind: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_9) -> [return: bb76, unwind: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_7) -> [return: bb77, unwind: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb78, unwind: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb79, unwind: bb112],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_85) -> [return: bb80, unwind: bb130],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            StorageDead(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:6: 921:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_115) -> [return: bb83, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:918:32: 918:33 (#0),
                    scope: scope[14],
                },
                kind: drop(_116) -> [return: bb83, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_113) -> [return: bb85, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:917:52: 917:53 (#0),
                    scope: scope[14],
                },
                kind: drop(_114) -> [return: bb85, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_111) -> [return: bb87, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:916:48: 916:49 (#0),
                    scope: scope[14],
                },
                kind: drop(_112) -> [return: bb87, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_103) -> [return: bb89, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:912:36: 912:37 (#0),
                    scope: scope[14],
                },
                kind: drop(_104) -> [return: bb89, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_101) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:911:38: 911:39 (#0),
                    scope: scope[14],
                },
                kind: drop(_102) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:909:53: 909:54 (#0),
                    scope: scope[14],
                },
                kind: drop(_99) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:908:52: 908:53 (#0),
                    scope: scope[14],
                },
                kind: drop(_95) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:920:9: 920:10 (#0),
                    scope: scope[14],
                },
                kind: drop(_82) -> [return: bb98, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:906:13: 906:14 (#0),
                    scope: scope[14],
                },
                kind: drop(_90) -> [return: bb95, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:906:13: 906:14 (#0),
                    scope: scope[14],
                },
                kind: drop(_89) -> [return: bb96, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:906:13: 906:14 (#0),
                    scope: scope[14],
                },
                kind: drop(_88) -> [return: bb97, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:906:13: 906:14 (#0),
                    scope: scope[14],
                },
                kind: drop(_83) -> [return: bb98, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_29) -> [return: bb99, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_27) -> [return: bb100, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_25) -> [return: bb101, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_23) -> [return: bb102, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_21) -> [return: bb103, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_19) -> [return: bb104, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_17) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_15) -> [return: bb106, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_13) -> [return: bb107, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_11) -> [return: bb108, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_9) -> [return: bb109, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_7) -> [return: bb110, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb111, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb112, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_85) -> [return: bb130, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:896:33: 896:34 (#0),
                    scope: scope[18],
                },
                kind: drop(_81) -> [return: bb114, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:897:13: 897:14 (#0),
                    scope: scope[16],
                },
                kind: drop(_78) -> [return: bb115, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:898:9: 898:10 (#0),
                    scope: scope[15],
                },
                kind: drop(_58) -> [return: bb116, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_29) -> [return: bb117, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_27) -> [return: bb118, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_25) -> [return: bb119, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_23) -> [return: bb120, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_21) -> [return: bb121, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_19) -> [return: bb122, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_17) -> [return: bb123, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_15) -> [return: bb124, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_13) -> [return: bb125, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_11) -> [return: bb126, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_9) -> [return: bb127, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_7) -> [return: bb128, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb129, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:921:5: 921:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb130, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:754:5: 921:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: internals::attr::Variant,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:754:59: 754:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:754:25: 754:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:754:21: 754:23 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:754:21: 754:23 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:754:21: 754:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:754:41: 754:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:754:32: 754:39 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:754:32: 754:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Variant,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:754:32: 754:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:755:28: 755:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:755:13: 755:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:755:13: 755:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:755:39: 755:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:756:27: 756:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:756:13: 756:24 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:756:13: 756:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:756:38: 756:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:757:30: 757:55 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:757:13: 757:27 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::VecAttr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:757:13: 757:27 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:757:44: 757:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:758:38: 758:76 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:758:13: 758:35 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:758:13: 758:35 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:758:53: 758:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:759:36: 759:72 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:759:13: 759:33 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:759:13: 759:33 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:759:51: 759:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:760:39: 760:65 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:760:13: 760:36 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:760:13: 760:36 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:760:50: 760:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:761:38: 761:64 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:761:13: 761:35 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:761:13: 761:35 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:761:49: 761:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:762:29: 762:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:762:13: 762:26 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:762:13: 762:26 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:762:40: 762:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:763:28: 763:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:763:13: 763:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:763:13: 763:25 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:763:39: 763:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:764:25: 764:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:764:13: 764:22 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:764:13: 764:22 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:764:40: 764:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:765:34: 765:64 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:765:13: 765:31 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:765:13: 765:31 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:765:45: 765:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:766:36: 766:68 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:766:13: 766:33 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:766:13: 766:33 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:766:47: 766:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:767:26: 767:48 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:767:13: 767:23 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::attr::BorrowAttribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:767:13: 767:23 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:767:37: 767:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:768:28: 768:56 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:768:13: 768:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:768:13: 768:25 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:768:43: 768:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:9: 898:10 (#311),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<syn::Attribute, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _32,
                                ),
                                serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
                    },
                ),
            ),
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:754:5: 921:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:9: 898:10 (#311),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:9: 898:10 (#311),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _37,
                                ),
                                serde_derive_internals/src/attr.rs:770:21: 770:35 (#312),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:770:13: 770:17 (#313),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:770:13: 770:17 (#0),
            scope: scope[15],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:13: 773:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:16: 771:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:16: 771:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:16: 771:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:16: 771:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:31: 771:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:495 ~ serde_derive_internals[1ebf]::internals::symbol::SERDE),
            },
        ),
        ty: internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:31: 771:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:771:37: 773:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:775:13: 779:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Meta,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:775:44: 775:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:775:20: 775:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _52,
                                ),
                                serde_derive_internals/src/attr.rs:775:44: 775:54 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:775:20: 775:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::MetaList,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:775:36: 775:40 (#0),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:776:17: 778:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:776:20: 776:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:776:17: 778:18 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:776:20: 776:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:776:17: 778:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:776:43: 778:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:781:13: 897:14 (#0),
                },
            ),
        ),
        ty: std::result::Result<(), syn::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:31: 895:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:781:13: 897:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:31: 781:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:781:13: 897:14 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:211 ~ serde_derive_internals[1ebf]::internals::attr::{impl#6}::from_ast::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((syn::meta::ParseNestedMeta<'^0>,)) -> std::result::Result<(), syn::Error>, bound_vars: [Region(BrAnon)] },
                (&'{erased} internals::ctxt::Ctxt, &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::VecAttr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>, &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>, &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>, &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>, &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>, &'{erased} &'{erased} syn::Variant, &'{erased} mut internals::attr::Attr<'{erased}, internals::attr::BorrowAttribute>, &'{erased} mut internals::attr::BoolAttr<'{erased}>),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:781:13: 897:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::VecAttr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:781:13: 897:14 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} syn::Variant,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::attr::BorrowAttribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:54: 895:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:20: 781:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _58,
                                ),
                                serde_derive_internals/src/attr.rs:781:31: 895:15 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:781:20: 781:28 (#0),
                    },
                ),
            ),
        ),
        ty: syn::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:781:24: 781:27 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:896:17: 896:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:896:17: 896:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:896:30: 896:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::name::MultiName,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:901:19: 906:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:902:17: 902:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:902:28: 902:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:902:29: 902:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:902:35: 902:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:902:35: 902:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:903:17: 903:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:904:17: 904:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::attr::VecAttr<'{erased}, internals::name::Name>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:905:17: 905:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::VecAttr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:905:22: 905:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::RenameAllRules,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:907:31: 910:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:908:28: 908:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:908:28: 908:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:908:28: 908:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:908:64: 908:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:909:30: 909:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:909:30: 909:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:909:30: 909:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:909:65: 909:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:911:24: 911:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:911:24: 911:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:912:23: 912:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:912:23: 912:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:913:33: 913:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:913:33: 913:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:914:31: 914:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:914:31: 914:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:915:20: 915:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:915:20: 915:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:916:29: 916:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:916:29: 916:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:917:31: 917:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:917:31: 917:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<internals::attr::BorrowAttribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:918:21: 918:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::attr::BorrowAttribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:918:21: 918:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:919:23: 919:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:900:9: 920:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:919:23: 919:31 (#0),
            scope: scope[0],
        },
    },
]