[
    BasicBlockData {
        statements: [
            PlaceMention(_2),
            _3 = discriminant((*_2)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:265:9: 265:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [4: bb2, 7: bb3, 8: bb4, 12: bb5, 16: bb6, 24: bb7, 25: bb8, 35: bb9, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:288:18: 288:20 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:266:13: 266:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:270:13: 270:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb13, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:276:13: 276:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb26, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:280:13: 280:30 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb29, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:281:13: 281:30 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb31, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:285:13: 285:30 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb34, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:286:13: 286:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb36, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:287:13: 287:30 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb38, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &mut (((*_2) as Binary).0: syn::ExprBinary),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut (*_1),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &mut ((*_4).1: std::boxed::Box<syn::Expr>),
            _7 = &mut (*(*_8)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:267:17: 267:52 (#0),
                    scope: scope[1],
                },
                kind: _5 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _6, move _7) -> [return: bb11, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_8),
            StorageDead(_5),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &mut (*_1),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut ((*_4).3: std::boxed::Box<syn::Expr>),
            _11 = &mut (*(*_12)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:268:17: 268:53 (#0),
                    scope: scope[1],
                },
                kind: _9 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _10, move _11) -> [return: bb12, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_12),
            StorageDead(_9),
            _0 = const (),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:269:13: 269:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            _13 = &mut (((*_2) as Call).0: syn::ExprCall),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &mut (*_1),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &mut ((*_13).1: std::boxed::Box<syn::Expr>),
            _16 = &mut (*(*_17)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:271:17: 271:52 (#0),
                    scope: scope[2],
                },
                kind: _14 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _15, move _16) -> [return: bb14, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_17),
            StorageDead(_14),
            StorageLive(_18),
            StorageLive(_19),
            _19 = &mut ((*_13).3: syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
                    scope: scope[2],
                },
                kind: _18 = <&mut syn::punctuated::Punctuated<syn::Expr, syn::token::Comma> as std::iter::IntoIterator>::into_iter(move _19) -> [return: bb15, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            PlaceMention(_18),
            StorageLive(_20),
            _20 = move _18,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
                    scope: scope[3],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
                    scope: scope[3],
                },
                kind: falseUnwind -> [real: bb17, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &mut _20,
            _24 = &mut (*_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
                    scope: scope[3],
                },
                kind: _23 = <syn::punctuated::IterMut<'_, syn::Expr> as std::iter::Iterator>::next(move _24) -> [return: bb18, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            PlaceMention(_23),
            _26 = discriminant(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
                    scope: scope[3],
                },
                kind: switchInt(move _26) -> [0: bb20, 1: bb21, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb22, imaginary: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            _28 = move ((_23 as Some).0: &mut syn::Expr),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &mut (*_1),
            StorageLive(_31),
            _31 = &mut (*_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:273:21: 273:45 (#0),
                    scope: scope[4],
                },
                kind: _29 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _30, move _31) -> [return: bb23, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:274:17: 274:18 (#614),
                    scope: scope[2],
                },
                kind: drop(_20) -> [return: bb24, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            StorageDead(_29),
            _22 = const (),
            StorageDead(_28),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_22),
            _21 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
                    scope: scope[3],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:274:17: 274:18 (#614),
                    scope: scope[2],
                },
                kind: drop(_18) -> [return: bb25, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:275:13: 275:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_32),
            _32 = &mut (((*_2) as Cast).0: syn::ExprCast),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &mut (*_1),
            StorageLive(_35),
            StorageLive(_36),
            _36 = &mut ((*_32).1: std::boxed::Box<syn::Expr>),
            _35 = &mut (*(*_36)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:277:17: 277:52 (#0),
                    scope: scope[5],
                },
                kind: _33 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _34, move _35) -> [return: bb27, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_34),
            StorageDead(_36),
            StorageDead(_33),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &mut (*_1),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &mut ((*_32).3: std::boxed::Box<syn::Type>),
            _39 = &mut (*(*_40)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:278:17: 278:50 (#0),
                    scope: scope[5],
                },
                kind: _37 = internals::receiver::ReplaceReceiver::<'_>::visit_type_mut(move _38, move _39) -> [return: bb28, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            StorageDead(_40),
            StorageDead(_37),
            _0 = const (),
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:279:13: 279:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_41),
            _41 = &mut (((*_2) as Field).0: syn::ExprField),
            StorageLive(_42),
            _42 = &mut (*_1),
            StorageLive(_43),
            StorageLive(_44),
            _44 = &mut ((*_41).1: std::boxed::Box<syn::Expr>),
            _43 = &mut (*(*_44)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:280:34: 280:69 (#0),
                    scope: scope[6],
                },
                kind: _0 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _42, move _43) -> [return: bb30, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_42),
            StorageDead(_44),
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:280:68: 280:69 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_45),
            _45 = &mut (((*_2) as Index).0: syn::ExprIndex),
            StorageLive(_46),
            StorageLive(_47),
            _47 = &mut (*_1),
            StorageLive(_48),
            StorageLive(_49),
            _49 = &mut ((*_45).1: std::boxed::Box<syn::Expr>),
            _48 = &mut (*(*_49)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:282:17: 282:52 (#0),
                    scope: scope[7],
                },
                kind: _46 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _47, move _48) -> [return: bb32, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
            StorageDead(_47),
            StorageDead(_49),
            StorageDead(_46),
            StorageLive(_50),
            StorageLive(_51),
            _51 = &mut (*_1),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &mut ((*_45).3: std::boxed::Box<syn::Expr>),
            _52 = &mut (*(*_53)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:283:17: 283:53 (#0),
                    scope: scope[7],
                },
                kind: _50 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _51, move _52) -> [return: bb33, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            StorageDead(_51),
            StorageDead(_53),
            StorageDead(_50),
            _0 = const (),
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:284:13: 284:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_54),
            _54 = &mut (((*_2) as Paren).0: syn::ExprParen),
            StorageLive(_55),
            _55 = &mut (*_1),
            StorageLive(_56),
            StorageLive(_57),
            _57 = &mut ((*_54).2: std::boxed::Box<syn::Expr>),
            _56 = &mut (*(*_57)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:285:34: 285:69 (#0),
                    scope: scope[8],
                },
                kind: _0 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _55, move _56) -> [return: bb35, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_55),
            StorageDead(_57),
            StorageDead(_54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:285:68: 285:69 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_58),
            _58 = &mut (((*_2) as Path).0: syn::ExprPath),
            StorageLive(_59),
            _59 = &mut (*_1),
            StorageLive(_60),
            _60 = &mut (*_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:286:33: 286:63 (#0),
                    scope: scope[9],
                },
                kind: _0 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_path_mut(move _59, move _60) -> [return: bb37, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
            StorageDead(_59),
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:286:62: 286:63 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_61),
            _61 = &mut (((*_2) as Unary).0: syn::ExprUnary),
            StorageLive(_62),
            _62 = &mut (*_1),
            StorageLive(_63),
            StorageLive(_64),
            _64 = &mut ((*_61).2: std::boxed::Box<syn::Expr>),
            _63 = &mut (*(*_64)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:287:34: 287:69 (#0),
                    scope: scope[10],
                },
                kind: _0 = internals::receiver::ReplaceReceiver::<'_>::visit_expr_mut(move _62, move _63) -> [return: bb39, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageDead(_62),
            StorageDead(_64),
            StorageDead(_61),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:287:68: 287:69 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:290:6: 290:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:274:17: 274:18 (#614),
                    scope: scope[2],
                },
                kind: drop(_20) -> [return: bb42, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:274:17: 274:18 (#614),
                    scope: scope[2],
                },
                kind: drop(_18) -> [return: bb43, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:264:5: 290:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:264:50: 264:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:264:23: 264:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/receiver.rs:264:40: 264:49 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/receiver.rs:264:34: 264:38 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:264:34: 264:38 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:264:34: 264:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:266:13: 266:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:266:13: 266:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprBinary,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:266:26: 266:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:267:17: 267:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:267:17: 267:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:267:37: 267:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:267:37: 267:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:268:17: 268:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:268:17: 268:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:268:37: 268:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:268:37: 268:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:270:13: 270:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprCall,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:270:24: 270:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:271:17: 271:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:271:17: 271:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:271:37: 271:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:271:37: 271:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
                },
            ),
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::Expr>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
                },
            ),
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
                    },
                ),
            ),
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::Expr>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:264:5: 290:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} mut syn::Expr>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::Expr>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::Expr>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:17: 274:18 (#614),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _23,
                                ),
                                serde_derive_internals/src/receiver.rs:272:28: 272:42 (#615),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:272:21: 272:24 (#616),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:272:21: 272:24 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:273:21: 273:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:273:21: 273:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:273:41: 273:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:276:13: 276:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprCast,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:276:24: 276:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:277:17: 277:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:277:17: 277:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:277:37: 277:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:277:37: 277:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:278:17: 278:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:278:17: 278:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:278:37: 278:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:278:37: 278:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:280:13: 280:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprField,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:280:25: 280:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:280:34: 280:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:280:54: 280:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:280:54: 280:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:281:13: 281:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:281:25: 281:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:282:17: 282:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:282:17: 282:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:282:37: 282:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:282:37: 282:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:283:17: 283:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:283:17: 283:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:283:37: 283:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:283:37: 283:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:285:13: 285:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprParen,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:285:25: 285:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:285:34: 285:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:285:54: 285:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:285:54: 285:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:286:13: 286:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprPath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:286:24: 286:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:286:33: 286:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::ExprPath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:286:58: 286:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/receiver.rs:265:15: 265:19 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:287:13: 287:30 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::ExprUnary,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:287:25: 287:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:287:34: 287:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::Expr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:287:54: 287:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:265:9: 289:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut std::boxed::Box<syn::Expr, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:287:54: 287:68 (#0),
            scope: scope[0],
        },
    },
]