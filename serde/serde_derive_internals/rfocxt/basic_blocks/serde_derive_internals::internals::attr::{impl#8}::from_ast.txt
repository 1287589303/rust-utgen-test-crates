[
    BasicBlockData {
        statements: [
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1028:28: 1028:50 (#0),
                    scope: scope[0],
                },
                kind: _6 = internals::attr::Attr::<'_, internals::name::Name>::none(move _7, const internals::symbol::RENAME) -> [return: bb1, unwind: bb282],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            FakeRead(ForLet(None), _6),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1029:27: 1029:49 (#0),
                    scope: scope[1],
                },
                kind: _8 = internals::attr::Attr::<'_, internals::name::Name>::none(move _9, const internals::symbol::RENAME) -> [return: bb2, unwind: bb281],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            FakeRead(ForLet(None), _8),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1030:30: 1030:55 (#0),
                    scope: scope[2],
                },
                kind: _10 = internals::attr::VecAttr::<'_, internals::name::Name>::none(move _11, const internals::symbol::RENAME) -> [return: bb3, unwind: bb280],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            FakeRead(ForLet(None), _10),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1031:36: 1031:72 (#0),
                    scope: scope[3],
                },
                kind: _12 = internals::attr::BoolAttr::<'_>::none(move _13, const internals::symbol::SKIP_SERIALIZING) -> [return: bb4, unwind: bb279],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            FakeRead(ForLet(None), _12),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1032:38: 1032:76 (#0),
                    scope: scope[4],
                },
                kind: _14 = internals::attr::BoolAttr::<'_>::none(move _15, const internals::symbol::SKIP_DESERIALIZING) -> [return: bb5, unwind: bb278],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            FakeRead(ForLet(None), _14),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1033:39: 1033:74 (#0),
                    scope: scope[5],
                },
                kind: _16 = internals::attr::Attr::<'_, syn::ExprPath>::none(move _17, const internals::symbol::SKIP_SERIALIZING_IF) -> [return: bb6, unwind: bb277],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            FakeRead(ForLet(None), _16),
            StorageLive(_18),
            StorageLive(_19),
            _19 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1034:27: 1034:50 (#0),
                    scope: scope[6],
                },
                kind: _18 = internals::attr::Attr::<'_, internals::attr::Default>::none(move _19, const internals::symbol::DEFAULT) -> [return: bb7, unwind: bb276],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            FakeRead(ForLet(None), _18),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1035:34: 1035:64 (#0),
                    scope: scope[7],
                },
                kind: _20 = internals::attr::Attr::<'_, syn::ExprPath>::none(move _21, const internals::symbol::SERIALIZE_WITH) -> [return: bb8, unwind: bb275],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            FakeRead(ForLet(None), _20),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1036:36: 1036:68 (#0),
                    scope: scope[8],
                },
                kind: _22 = internals::attr::Attr::<'_, syn::ExprPath>::none(move _23, const internals::symbol::DESERIALIZE_WITH) -> [return: bb9, unwind: bb274],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            FakeRead(ForLet(None), _22),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1037:29: 1037:50 (#0),
                    scope: scope[9],
                },
                kind: _24 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::none(move _25, const internals::symbol::BOUND) -> [return: bb10, unwind: bb273],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            FakeRead(ForLet(None), _24),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1038:28: 1038:49 (#0),
                    scope: scope[10],
                },
                kind: _26 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::none(move _27, const internals::symbol::BOUND) -> [return: bb11, unwind: bb272],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            FakeRead(ForLet(None), _26),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1039:38: 1039:60 (#0),
                    scope: scope[11],
                },
                kind: _28 = internals::attr::Attr::<'_, std::collections::BTreeSet<syn::Lifetime>>::none(move _29, const internals::symbol::BORROW) -> [return: bb12, unwind: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            FakeRead(ForLet(None), _28),
            StorageLive(_30),
            StorageLive(_31),
            _31 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1040:26: 1040:48 (#0),
                    scope: scope[12],
                },
                kind: _30 = internals::attr::Attr::<'_, syn::ExprPath>::none(move _31, const internals::symbol::GETTER) -> [return: bb13, unwind: bb270],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            FakeRead(ForLet(None), _30),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1041:27: 1041:54 (#0),
                    scope: scope[13],
                },
                kind: _32 = internals::attr::BoolAttr::<'_>::none(move _33, const internals::symbol::FLATTEN) -> [return: bb14, unwind: bb269],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            FakeRead(ForLet(None), _32),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &((*_3).3: std::option::Option<proc_macro2::Ident>),
            PlaceMention(_35),
            _36 = discriminant((*_35)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1043:21: 1043:39 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _36) -> [0: bb17, 1: bb16, otherwise: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1043:27: 1043:39 (#0),
                    scope: scope[14],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1044:13: 1044:24 (#0),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb18, imaginary: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_41),
            StorageLive(_42),
            _42 = &_2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1046:24: 1046:41 (#0),
                    scope: scope[14],
                },
                kind: _41 = <usize as std::string::ToString>::to_string(move _42) -> [return: bb22, unwind: bb268],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_37),
            _37 = &(((*_35) as Some).0: proc_macro2::Ident),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &(*_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1044:40: 1044:52 (#0),
                    scope: scope[16],
                },
                kind: _39 = internals::attr::unraw(move _40) -> [return: bb19, unwind: bb268],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            _38 = &_39,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1044:28: 1044:53 (#0),
                    scope: scope[16],
                },
                kind: _34 = <internals::name::Name as std::convert::From<&proc_macro2::Ident>>::from(move _38) -> [return: bb20, unwind: bb267],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1044:52: 1044:53 (#0),
                    scope: scope[14],
                },
                kind: drop(_39) -> [return: bb21, unwind: bb268],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1044:52: 1044:53 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageLive(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1047:23: 1047:40 (#0),
                    scope: scope[14],
                },
                kind: _43 = proc_macro2::Span::call_site() -> [return: bb23, unwind: bb266],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _34 = internals::name::Name { value: move _41, span: move _43 },
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1048:13: 1048:14 (#0),
                    scope: scope[14],
                },
                kind: drop(_41) -> [return: bb24, unwind: bb268],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1048:13: 1048:14 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _34),
            StorageDead(_35),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            _46 = _4,
            StorageLive(_47),
            _47 = {closure@serde_derive_internals/src/attr.rs:1051:56: 1051:65},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1051:41: 1051:90 (#0),
                    scope: scope[17],
                },
                kind: _45 = std::option::Option::<&internals::attr::Variant>::and_then::<&internals::attr::BorrowAttribute, {closure@serde_derive_internals/src/attr.rs:1051:56: 1051:65}>(move _46, move _47) -> [return: bb26, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            StorageDead(_46),
            PlaceMention(_45),
            _48 = discriminant(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1051:16: 1051:38 (#0),
                    scope: scope[17],
                },
                kind: switchInt(move _48) -> [1: bb27, otherwise: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1051:16: 1051:38 (#0),
                    scope: scope[17],
                },
                kind: falseEdge -> [real: bb28, imaginary: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_49),
            _49 = ((_45 as Some).0: &internals::attr::BorrowAttribute),
            StorageLive(_50),
            StorageLive(_51),
            _51 = &(*_1),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &_34,
            _52 = &(*_53),
            StorageLive(_54),
            _54 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1052:37: 1052:76 (#0),
                    scope: scope[18],
                },
                kind: _50 = internals::attr::borrowable_lifetimes(move _51, move _52, move _54) -> [return: bb29, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            StorageDead(_52),
            StorageDead(_51),
            PlaceMention(_50),
            _55 = discriminant(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1052:20: 1052:34 (#0),
                    scope: scope[18],
                },
                kind: switchInt(move _55) -> [0: bb30, otherwise: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1052:20: 1052:34 (#0),
                    scope: scope[18],
                },
                kind: falseEdge -> [real: bb31, imaginary: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_56),
            _56 = move ((_50 as Ok).0: std::collections::BTreeSet<syn::Lifetime>),
            StorageLive(_57),
            _57 = &((*_49).1: std::option::Option<std::collections::BTreeSet<syn::Lifetime>>),
            PlaceMention(_57),
            _58 = discriminant((*_57)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1053:24: 1053:39 (#0),
                    scope: scope[19],
                },
                kind: switchInt(move _58) -> [1: bb32, otherwise: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1053:24: 1053:39 (#0),
                    scope: scope[19],
                },
                kind: falseEdge -> [real: bb33, imaginary: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_59),
            _59 = &(((*_57) as Some).0: std::collections::BTreeSet<syn::Lifetime>),
            StorageLive(_60),
            StorageLive(_61),
            StorageLive(_62),
            _62 = _59,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
                    scope: scope[19],
                },
                kind: _61 = <&std::collections::BTreeSet<syn::Lifetime> as std::iter::IntoIterator>::into_iter(move _62) -> [return: bb34, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
            PlaceMention(_61),
            StorageLive(_63),
            _63 = move _61,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:21: 1060:22 (#352),
                    scope: scope[20],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:21: 1060:22 (#352),
                    scope: scope[20],
                },
                kind: falseUnwind -> [real: bb36, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_65),
            StorageLive(_66),
            StorageLive(_67),
            StorageLive(_68),
            _68 = &mut _63,
            _67 = &mut (*_68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
                    scope: scope[20],
                },
                kind: _66 = <std::collections::btree_set::Iter<'_, syn::Lifetime> as std::iter::Iterator>::next(move _67) -> [return: bb37, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            PlaceMention(_66),
            _69 = discriminant(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
                    scope: scope[20],
                },
                kind: switchInt(move _69) -> [0: bb39, 1: bb40, otherwise: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
                    scope: scope[20],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:21: 1060:22 (#352),
                    scope: scope[20],
                },
                kind: falseEdge -> [real: bb41, imaginary: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_71),
            _71 = ((_66 as Some).0: &syn::Lifetime),
            StorageLive(_72),
            StorageLive(_73),
            _73 = &_56,
            StorageLive(_74),
            _74 = &(*_71),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1055:29: 1055:58 (#0),
                    scope: scope[21],
                },
                kind: _72 = std::collections::BTreeSet::<syn::Lifetime>::contains::<syn::Lifetime>(move _73, move _74) -> [return: bb42, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _60 = const (),
            StorageDead(_68),
            StorageDead(_66),
            StorageDead(_65),
            StorageDead(_63),
            StorageDead(_61),
            StorageDead(_60),
            StorageLive(_95),
            StorageLive(_96),
            _96 = &mut _28,
            StorageLive(_97),
            _97 = &((*_49).0: syn::Path),
            StorageLive(_98),
            StorageLive(_99),
            _99 = &(*_59),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1061:68: 1061:85 (#0),
                    scope: scope[19],
                },
                kind: _98 = <std::collections::BTreeSet<syn::Lifetime> as std::clone::Clone>::clone(move _99) -> [return: bb54, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1055:29: 1055:58 (#0),
                    scope: scope[21],
                },
                kind: switchInt(move _72) -> [0: bb44, otherwise: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            StorageDead(_73),
            _65 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1055:25: 1059:26 (#0),
                    scope: scope[21],
                },
                kind: goto -> bb53,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            StorageDead(_73),
            StorageLive(_75),
            StorageLive(_76),
            StorageLive(_77),
            StorageLive(_78),
            StorageLive(_79),
            StorageLive(_80),
            StorageLive(_81),
            _81 = [const "field `", const "` does not have lifetime "],
            _80 = &_81,
            _79 = &(*_80),
            StorageLive(_82),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            StorageLive(_86),
            StorageLive(_87),
            _87 = &_34,
            _86 = &(*_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1057:49: 1057:51 (#54),
                    scope: scope[21],
                },
                kind: _85 = core::fmt::rt::Argument::<'_>::new_display::<internals::name::Name>(move _86) -> [return: bb45, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            StorageLive(_88),
            StorageLive(_89),
            StorageLive(_90),
            _90 = &_71,
            _89 = &(*_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1057:76: 1057:78 (#54),
                    scope: scope[21],
                },
                kind: _88 = core::fmt::rt::Argument::<'_>::new_display::<&syn::Lifetime>(move _89) -> [return: bb46, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            _84 = [move _85, move _88],
            StorageDead(_88),
            StorageDead(_85),
            _83 = &_84,
            _82 = &(*_83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:43: 128:83 (#54),
                    scope: scope[21],
                },
                kind: _78 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _79, move _82) -> [return: bb47, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_82),
            StorageDead(_79),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:23: 128:84 (#53),
                    scope: scope[21],
                },
                kind: _77 = std::fmt::format(move _78) -> [return: bb48, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            FakeRead(ForLet(None), _77),
            StorageDead(_90),
            StorageDead(_87),
            StorageDead(_84),
            StorageDead(_83),
            StorageDead(_81),
            StorageDead(_80),
            _76 = move _77,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:130:9: 130:10 (#53),
                    scope: scope[21],
                },
                kind: drop(_77) -> [return: bb49, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:127:9: 130:11 (#53),
                    scope: scope[21],
                },
                kind: _75 = std::hint::must_use::<std::string::String>(move _76) -> [return: bb50, unwind: bb262],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            FakeRead(ForLet(None), _75),
            StorageLive(_91),
            StorageLive(_92),
            _92 = &(*_1),
            StorageLive(_93),
            _93 = _3,
            StorageLive(_94),
            _94 = move _75,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1058:29: 1058:60 (#0),
                    scope: scope[22],
                },
                kind: _91 = internals::ctxt::Ctxt::error_spanned_by::<&syn::Field, std::string::String>(move _92, move _93, move _94) -> [return: bb51, unwind: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
            StorageDead(_93),
            StorageDead(_92),
            StorageDead(_91),
            _65 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1059:25: 1059:26 (#0),
                    scope: scope[21],
                },
                kind: drop(_75) -> [return: bb52, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1055:25: 1059:26 (#0),
                    scope: scope[21],
                },
                kind: goto -> bb53,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
            StorageDead(_71),
            StorageDead(_68),
            StorageDead(_66),
            StorageDead(_65),
            _64 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1054:21: 1060:22 (#352),
                    scope: scope[20],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1061:21: 1061:86 (#0),
                    scope: scope[19],
                },
                kind: _95 = internals::attr::Attr::<'_, std::collections::BTreeSet<syn::Lifetime>>::set::<&syn::Path>(move _96, move _97, move _98) -> [return: bb55, unwind: bb259],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_98),
            StorageDead(_97),
            StorageDead(_96),
            StorageDead(_95),
            _44 = const (),
            StorageDead(_59),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1053:17: 1064:18 (#0),
                    scope: scope[18],
                },
                kind: goto -> bb58,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_100),
            StorageLive(_101),
            _101 = &mut _28,
            StorageLive(_102),
            _102 = &((*_49).0: syn::Path),
            StorageLive(_103),
            _103 = move _56,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1063:21: 1063:79 (#0),
                    scope: scope[18],
                },
                kind: _100 = internals::attr::Attr::<'_, std::collections::BTreeSet<syn::Lifetime>>::set::<&syn::Path>(move _101, move _102, move _103) -> [return: bb57, unwind: bb258],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
            StorageDead(_102),
            StorageDead(_101),
            StorageDead(_100),
            _44 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1053:17: 1064:18 (#0),
                    scope: scope[18],
                },
                kind: goto -> bb58,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1065:13: 1065:14 (#0),
                    scope: scope[17],
                },
                kind: drop(_56) -> [return: bb60, unwind: bb264],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _44 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1052:13: 1065:14 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb61,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1052:13: 1065:14 (#0),
                    scope: scope[17],
                },
                kind: goto -> bb61,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1066:9: 1066:10 (#0),
                    scope: scope[17],
                },
                kind: drop(_50) -> [return: bb62, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
            StorageDead(_50),
            StorageDead(_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1051:9: 1066:10 (#0),
                    scope: scope[15],
                },
                kind: goto -> bb64,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _44 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1051:9: 1066:10 (#0),
                    scope: scope[15],
                },
                kind: goto -> bb64,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            StorageDead(_44),
            StorageLive(_104),
            StorageLive(_105),
            StorageLive(_106),
            _106 = &((*_3).0: std::vec::Vec<syn::Attribute>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
                    scope: scope[15],
                },
                kind: _105 = <&std::vec::Vec<syn::Attribute> as std::iter::IntoIterator>::into_iter(move _106) -> [return: bb65, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
            PlaceMention(_105),
            StorageLive(_107),
            _107 = move _105,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:9: 1191:10 (#356),
                    scope: scope[24],
                },
                kind: goto -> bb66,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:9: 1191:10 (#356),
                    scope: scope[24],
                },
                kind: falseUnwind -> [real: bb67, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_108),
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            _111 = &mut _107,
            _110 = &mut (*_111),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
                    scope: scope[24],
                },
                kind: _109 = <std::slice::Iter<'_, syn::Attribute> as std::iter::Iterator>::next(move _110) -> [return: bb68, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_110),
            PlaceMention(_109),
            _112 = discriminant(_109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
                    scope: scope[24],
                },
                kind: switchInt(move _112) -> [0: bb70, 1: bb71, otherwise: bb69],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
                    scope: scope[24],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:9: 1191:10 (#356),
                    scope: scope[24],
                },
                kind: falseEdge -> [real: bb72, imaginary: bb71],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_114),
            _114 = ((_109 as Some).0: &syn::Attribute),
            StorageLive(_115),
            StorageLive(_116),
            StorageLive(_117),
            StorageLive(_118),
            StorageLive(_119),
            _119 = &(*_114),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1069:16: 1069:27 (#0),
                    scope: scope[25],
                },
                kind: _118 = syn::Attribute::path(move _119) -> [return: bb73, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _104 = const (),
            StorageDead(_111),
            StorageDead(_109),
            StorageDead(_108),
            StorageDead(_107),
            StorageDead(_105),
            StorageDead(_104),
            StorageLive(_155),
            PlaceMention((*_5)),
            _156 = discriminant((*_5)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1196:16: 1196:29 (#0),
                    scope: scope[28],
                },
                kind: switchInt(move _156) -> [0: bb94, otherwise: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _117 = &_118,
            StorageDead(_119),
            StorageLive(_120),
            StorageLive(_121),
            _121 = const internals::symbol::SERDE,
            _120 = &_121,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1069:16: 1069:36 (#0),
                    scope: scope[25],
                },
                kind: _116 = <&syn::Path as std::cmp::PartialEq<internals::symbol::Symbol>>::ne(move _117, move _120) -> [return: bb74, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1069:16: 1069:36 (#0),
                    scope: scope[25],
                },
                kind: switchInt(move _116) -> [0: bb76, otherwise: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            StorageDead(_120),
            StorageDead(_118),
            StorageDead(_117),
            StorageDead(_116),
            StorageDead(_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[25],
                },
                kind: goto -> bb92,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            StorageDead(_120),
            StorageDead(_118),
            StorageDead(_117),
            _115 = const (),
            StorageDead(_116),
            StorageDead(_115),
            StorageLive(_123),
            StorageLive(_124),
            _124 = &((*_114).3: syn::Meta),
            PlaceMention(_124),
            _125 = discriminant((*_124)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1073:20: 1073:41 (#0),
                    scope: scope[26],
                },
                kind: switchInt(move _125) -> [1: bb78, otherwise: bb77],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _123 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1073:13: 1077:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb83,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1073:20: 1073:41 (#0),
                    scope: scope[26],
                },
                kind: falseEdge -> [real: bb79, imaginary: bb77],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_126),
            _126 = &(((*_124) as List).0: syn::MetaList),
            StorageLive(_127),
            StorageLive(_128),
            _128 = &((*_126).2: proc_macro2::TokenStream),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1074:20: 1074:42 (#0),
                    scope: scope[26],
                },
                kind: _127 = proc_macro2::TokenStream::is_empty(move _128) -> [return: bb80, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1074:20: 1074:42 (#0),
                    scope: scope[26],
                },
                kind: switchInt(move _127) -> [0: bb82, otherwise: bb81],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_128),
            StorageDead(_127),
            StorageDead(_126),
            StorageDead(_124),
            StorageDead(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[25],
                },
                kind: goto -> bb92,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_128),
            _123 = const (),
            StorageDead(_127),
            StorageDead(_126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1073:13: 1077:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb83,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_124),
            StorageDead(_123),
            StorageLive(_130),
            StorageLive(_131),
            _131 = &(*_114),
            StorageLive(_132),
            StorageLive(_133),
            _133 = &(*_1),
            StorageLive(_134),
            _134 = &mut _6,
            StorageLive(_135),
            _135 = &mut _8,
            StorageLive(_136),
            _136 = &mut _10,
            StorageLive(_137),
            _137 = &mut _18,
            StorageLive(_138),
            _138 = &mut _12,
            StorageLive(_139),
            _139 = &mut _14,
            StorageLive(_140),
            _140 = &mut _16,
            StorageLive(_141),
            _141 = &mut _20,
            StorageLive(_142),
            _142 = &mut _22,
            StorageLive(_143),
            _143 = &mut _24,
            StorageLive(_144),
            _144 = &mut _26,
            StorageLive(_145),
            _145 = &_34,
            StorageLive(_146),
            _146 = &_3,
            StorageLive(_147),
            _147 = &mut _28,
            StorageLive(_148),
            _148 = &mut _30,
            StorageLive(_149),
            _149 = &mut _32,
            _132 = {closure@serde_derive_internals/src/attr.rs:1079:54: 1079:60} { cx: move _133, ser_name: move _134, de_name: move _135, de_aliases: move _136, default: move _137, skip_serializing: move _138, skip_deserializing: move _139, skip_serializing_if: move _140, serialize_with: move _141, deserialize_with: move _142, ser_bound: move _143, de_bound: move _144, ident: move _145, field: move _146, borrowed_lifetimes: move _147, getter: move _148, flatten: move _149 },
            StorageDead(_149),
            StorageDead(_148),
            StorageDead(_147),
            StorageDead(_146),
            StorageDead(_145),
            StorageDead(_144),
            StorageDead(_143),
            StorageDead(_142),
            StorageDead(_141),
            StorageDead(_140),
            StorageDead(_139),
            StorageDead(_138),
            StorageDead(_137),
            StorageDead(_136),
            StorageDead(_135),
            StorageDead(_134),
            StorageDead(_133),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1079:31: 1188:15 (#0),
                    scope: scope[27],
                },
                kind: _130 = syn::Attribute::parse_nested_meta::<{closure@serde_derive_internals/src/attr.rs:1079:54: 1079:60}>(move _131, move _132) -> [return: bb84, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_132),
            StorageDead(_131),
            PlaceMention(_130),
            _150 = discriminant(_130),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1079:20: 1079:28 (#0),
                    scope: scope[27],
                },
                kind: switchInt(move _150) -> [1: bb85, otherwise: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1079:20: 1079:28 (#0),
                    scope: scope[27],
                },
                kind: falseEdge -> [real: bb86, imaginary: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_151),
            _151 = move ((_130 as Err).0: syn::Error),
            StorageLive(_152),
            StorageLive(_153),
            _153 = &(*_1),
            StorageLive(_154),
            _154 = move _151,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1189:17: 1189:34 (#0),
                    scope: scope[27],
                },
                kind: _152 = internals::ctxt::Ctxt::syn_error(move _153, move _154) -> [return: bb87, unwind: bb255],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_154),
            StorageDead(_153),
            StorageDead(_152),
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1190:13: 1190:14 (#0),
                    scope: scope[25],
                },
                kind: drop(_151) -> [return: bb89, unwind: bb257],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _108 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb90,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_151),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb90,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1191:9: 1191:10 (#0),
                    scope: scope[24],
                },
                kind: drop(_130) -> [return: bb91, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_130),
            StorageDead(_114),
            StorageDead(_111),
            StorageDead(_109),
            StorageDead(_108),
            _64 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1068:9: 1191:10 (#356),
                    scope: scope[24],
                },
                kind: goto -> bb66,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
            StorageDead(_111),
            StorageDead(_109),
            StorageDead(_108),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[24],
                },
                kind: goto -> bb66,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _155 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1196:9: 1200:10 (#0),
                    scope: scope[15],
                },
                kind: goto -> bb101,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1196:16: 1196:29 (#0),
                    scope: scope[28],
                },
                kind: falseEdge -> [real: bb95, imaginary: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_157),
            StorageLive(_158),
            _158 = &((_14.0: internals::attr::Attr<'_, ()>).3: std::option::Option<()>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1197:16: 1197:52 (#0),
                    scope: scope[28],
                },
                kind: _157 = std::option::Option::<()>::is_some(move _158) -> [return: bb96, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1197:16: 1197:52 (#0),
                    scope: scope[28],
                },
                kind: switchInt(move _157) -> [0: bb99, otherwise: bb97],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_158),
            StorageLive(_159),
            StorageLive(_160),
            _160 = &mut _18,
            StorageLive(_161),
            _161 = internals::attr::Default::Default,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1198:17: 1198:54 (#0),
                    scope: scope[28],
                },
                kind: _159 = internals::attr::Attr::<'_, internals::attr::Default>::set_if_none(move _160, move _161) -> [return: bb98, unwind: bb254],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_161),
            StorageDead(_160),
            StorageDead(_159),
            _155 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1197:13: 1199:14 (#0),
                    scope: scope[28],
                },
                kind: goto -> bb100,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_158),
            _155 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1197:13: 1199:14 (#0),
                    scope: scope[28],
                },
                kind: goto -> bb100,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1196:9: 1200:10 (#0),
                    scope: scope[15],
                },
                kind: goto -> bb101,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_155),
            StorageLive(_162),
            StorageLive(_163),
            StorageLive(_164),
            _164 = move _28,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1202:38: 1202:62 (#0),
                    scope: scope[15],
                },
                kind: _163 = internals::attr::Attr::<'_, std::collections::BTreeSet<syn::Lifetime>>::get(move _164) -> [return: bb102, unwind: bb253],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_164),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1202:38: 1202:82 (#0),
                    scope: scope[15],
                },
                kind: _162 = std::option::Option::<std::collections::BTreeSet<syn::Lifetime>>::unwrap_or_default(move _163) -> [return: bb103, unwind: bb252],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_163),
            FakeRead(ForLet(None), _162),
            StorageLive(_165),
            StorageLive(_166),
            StorageLive(_167),
            _167 = &_162,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1203:13: 1203:42 (#0),
                    scope: scope[29],
                },
                kind: _166 = std::collections::BTreeSet::<syn::Lifetime>::is_empty(move _167) -> [return: bb104, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1203:13: 1203:42 (#0),
                    scope: scope[29],
                },
                kind: switchInt(move _166) -> [0: bb106, otherwise: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_167),
            StorageLive(_254),
            StorageLive(_255),
            StorageLive(_256),
            _256 = &((*_3).5: syn::Type),
            _255 = &(*_256),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1248:19: 1248:52 (#0),
                    scope: scope[29],
                },
                kind: _254 = internals::attr::is_implicitly_borrowed(move _255) -> [return: bb159, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_167),
            StorageLive(_168),
            StorageLive(_169),
            StorageLive(_170),
            _170 = &((*_3).5: syn::Type),
            _169 = &(*_170),
            StorageLive(_171),
            _171 = internals::attr::is_str as for<'a> fn(&'a syn::Type) -> bool (PointerCoercion(ReifyFnPointer)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1213:16: 1213:41 (#0),
                    scope: scope[29],
                },
                kind: _168 = internals::attr::is_cow(move _169, move _171) -> [return: bb107, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1213:16: 1213:41 (#0),
                    scope: scope[29],
                },
                kind: switchInt(move _168) -> [0: bb131, otherwise: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_171),
            StorageDead(_170),
            StorageDead(_169),
            StorageLive(_172),
            StorageLive(_173),
            _173 = std::option::Option::<syn::token::PathSep>::None,
            StorageLive(_174),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1216:31: 1216:48 (#0),
                    scope: scope[29],
                },
                kind: _174 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::new() -> [return: bb109, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _172 = syn::Path { leading_colon: move _173, segments: move _174 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1217:17: 1217:18 (#0),
                    scope: scope[29],
                },
                kind: drop(_174) -> [return: bb110, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            StorageDead(_173),
            FakeRead(ForLet(None), _172),
            StorageLive(_175),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1218:28: 1218:45 (#0),
                    scope: scope[30],
                },
                kind: _175 = proc_macro2::Span::call_site() -> [return: bb111, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _175),
            StorageLive(_176),
            StorageLive(_177),
            _177 = &mut (_172.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_178),
            StorageLive(_179),
            StorageLive(_180),
            StorageLive(_181),
            _181 = const "_serde",
            _180 = &(*_181),
            StorageLive(_182),
            _182 = _175,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1219:36: 1219:62 (#0),
                    scope: scope[31],
                },
                kind: _179 = proc_macro2::Ident::new(move _180, move _182) -> [return: bb112, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_182),
            StorageDead(_180),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1219:36: 1219:69 (#0),
                    scope: scope[31],
                },
                kind: _178 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _179) -> [return: bb113, unwind: bb249],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1219:17: 1219:70 (#0),
                    scope: scope[31],
                },
                kind: _176 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _177, move _178) -> [return: bb114, unwind: bb248],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_178),
            StorageDead(_177),
            StorageDead(_181),
            StorageDead(_176),
            StorageLive(_183),
            StorageLive(_184),
            _184 = &mut (_172.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_185),
            StorageLive(_186),
            StorageLive(_187),
            StorageLive(_188),
            _188 = const "__private",
            _187 = &(*_188),
            StorageLive(_189),
            _189 = _175,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1220:36: 1220:65 (#0),
                    scope: scope[31],
                },
                kind: _186 = proc_macro2::Ident::new(move _187, move _189) -> [return: bb115, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_189),
            StorageDead(_187),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1220:36: 1220:72 (#0),
                    scope: scope[31],
                },
                kind: _185 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _186) -> [return: bb116, unwind: bb247],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1220:17: 1220:73 (#0),
                    scope: scope[31],
                },
                kind: _183 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _184, move _185) -> [return: bb117, unwind: bb246],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_185),
            StorageDead(_184),
            StorageDead(_188),
            StorageDead(_183),
            StorageLive(_190),
            StorageLive(_191),
            _191 = &mut (_172.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_192),
            StorageLive(_193),
            StorageLive(_194),
            StorageLive(_195),
            _195 = const "de",
            _194 = &(*_195),
            StorageLive(_196),
            _196 = _175,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1221:36: 1221:58 (#0),
                    scope: scope[31],
                },
                kind: _193 = proc_macro2::Ident::new(move _194, move _196) -> [return: bb118, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_196),
            StorageDead(_194),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1221:36: 1221:65 (#0),
                    scope: scope[31],
                },
                kind: _192 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _193) -> [return: bb119, unwind: bb245],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_193),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1221:17: 1221:66 (#0),
                    scope: scope[31],
                },
                kind: _190 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _191, move _192) -> [return: bb120, unwind: bb244],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            StorageDead(_191),
            StorageDead(_195),
            StorageDead(_190),
            StorageLive(_197),
            StorageLive(_198),
            _198 = &mut (_172.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_199),
            StorageLive(_200),
            StorageLive(_201),
            StorageLive(_202),
            _202 = const "borrow_cow_str",
            _201 = &(*_202),
            StorageLive(_203),
            _203 = _175,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1223:27: 1223:61 (#0),
                    scope: scope[31],
                },
                kind: _200 = proc_macro2::Ident::new(move _201, move _203) -> [return: bb121, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_203),
            StorageDead(_201),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1223:27: 1223:68 (#0),
                    scope: scope[31],
                },
                kind: _199 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _200) -> [return: bb122, unwind: bb243],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_200),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1222:17: 1223:69 (#0),
                    scope: scope[31],
                },
                kind: _197 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _198, move _199) -> [return: bb123, unwind: bb242],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_199),
            StorageDead(_198),
            StorageDead(_202),
            StorageDead(_197),
            StorageLive(_204),
            StorageLive(_205),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1225:28: 1225:38 (#0),
                    scope: scope[31],
                },
                kind: _205 = std::vec::Vec::<syn::Attribute>::new() -> [return: bb124, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_206),
            _206 = std::option::Option::<syn::QSelf>::None,
            StorageLive(_207),
            _207 = move _172,
            _204 = syn::ExprPath { attrs: move _205, qself: move _206, path: move _207 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1228:17: 1228:18 (#0),
                    scope: scope[31],
                },
                kind: drop(_207) -> [return: bb125, unwind: bb240],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_207),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1228:17: 1228:18 (#0),
                    scope: scope[31],
                },
                kind: drop(_206) -> [return: bb126, unwind: bb241],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_206),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1228:17: 1228:18 (#0),
                    scope: scope[31],
                },
                kind: drop(_205) -> [return: bb127, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_205),
            FakeRead(ForLet(None), _204),
            StorageLive(_208),
            StorageLive(_209),
            _209 = &mut _22,
            StorageLive(_210),
            _210 = move _204,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1229:17: 1229:51 (#0),
                    scope: scope[32],
                },
                kind: _208 = internals::attr::Attr::<'_, syn::ExprPath>::set_if_none(move _209, move _210) -> [return: bb128, unwind: bb238],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_210),
            StorageDead(_209),
            StorageDead(_208),
            _165 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:13: 1230:14 (#0),
                    scope: scope[31],
                },
                kind: drop(_204) -> [return: bb129, unwind: bb250],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_204),
            StorageDead(_175),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:13: 1230:14 (#0),
                    scope: scope[29],
                },
                kind: drop(_172) -> [return: bb130, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_172),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb158,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_171),
            StorageDead(_170),
            StorageDead(_169),
            StorageLive(_211),
            StorageLive(_212),
            StorageLive(_213),
            _213 = &((*_3).5: syn::Type),
            _212 = &(*_213),
            StorageLive(_214),
            _214 = internals::attr::is_slice_u8 as for<'a> fn(&'a syn::Type) -> bool (PointerCoercion(ReifyFnPointer)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:23: 1230:53 (#0),
                    scope: scope[29],
                },
                kind: _211 = internals::attr::is_cow(move _212, move _214) -> [return: bb132, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:23: 1230:53 (#0),
                    scope: scope[29],
                },
                kind: switchInt(move _211) -> [0: bb156, otherwise: bb133],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_214),
            StorageDead(_213),
            StorageDead(_212),
            StorageLive(_215),
            StorageLive(_216),
            _216 = std::option::Option::<syn::token::PathSep>::None,
            StorageLive(_217),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1233:31: 1233:48 (#0),
                    scope: scope[29],
                },
                kind: _217 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::new() -> [return: bb134, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _215 = syn::Path { leading_colon: move _216, segments: move _217 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1234:17: 1234:18 (#0),
                    scope: scope[29],
                },
                kind: drop(_217) -> [return: bb135, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_217),
            StorageDead(_216),
            FakeRead(ForLet(None), _215),
            StorageLive(_218),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1235:28: 1235:45 (#0),
                    scope: scope[33],
                },
                kind: _218 = proc_macro2::Span::call_site() -> [return: bb136, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _218),
            StorageLive(_219),
            StorageLive(_220),
            _220 = &mut (_215.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_221),
            StorageLive(_222),
            StorageLive(_223),
            StorageLive(_224),
            _224 = const "_serde",
            _223 = &(*_224),
            StorageLive(_225),
            _225 = _218,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1236:36: 1236:62 (#0),
                    scope: scope[34],
                },
                kind: _222 = proc_macro2::Ident::new(move _223, move _225) -> [return: bb137, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_225),
            StorageDead(_223),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1236:36: 1236:69 (#0),
                    scope: scope[34],
                },
                kind: _221 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _222) -> [return: bb138, unwind: bb236],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_222),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1236:17: 1236:70 (#0),
                    scope: scope[34],
                },
                kind: _219 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _220, move _221) -> [return: bb139, unwind: bb235],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_221),
            StorageDead(_220),
            StorageDead(_224),
            StorageDead(_219),
            StorageLive(_226),
            StorageLive(_227),
            _227 = &mut (_215.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_228),
            StorageLive(_229),
            StorageLive(_230),
            StorageLive(_231),
            _231 = const "__private",
            _230 = &(*_231),
            StorageLive(_232),
            _232 = _218,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1237:36: 1237:65 (#0),
                    scope: scope[34],
                },
                kind: _229 = proc_macro2::Ident::new(move _230, move _232) -> [return: bb140, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_232),
            StorageDead(_230),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1237:36: 1237:72 (#0),
                    scope: scope[34],
                },
                kind: _228 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _229) -> [return: bb141, unwind: bb234],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_229),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1237:17: 1237:73 (#0),
                    scope: scope[34],
                },
                kind: _226 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _227, move _228) -> [return: bb142, unwind: bb233],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_228),
            StorageDead(_227),
            StorageDead(_231),
            StorageDead(_226),
            StorageLive(_233),
            StorageLive(_234),
            _234 = &mut (_215.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_235),
            StorageLive(_236),
            StorageLive(_237),
            StorageLive(_238),
            _238 = const "de",
            _237 = &(*_238),
            StorageLive(_239),
            _239 = _218,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1238:36: 1238:58 (#0),
                    scope: scope[34],
                },
                kind: _236 = proc_macro2::Ident::new(move _237, move _239) -> [return: bb143, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_239),
            StorageDead(_237),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1238:36: 1238:65 (#0),
                    scope: scope[34],
                },
                kind: _235 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _236) -> [return: bb144, unwind: bb232],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_236),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1238:17: 1238:66 (#0),
                    scope: scope[34],
                },
                kind: _233 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _234, move _235) -> [return: bb145, unwind: bb231],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_235),
            StorageDead(_234),
            StorageDead(_238),
            StorageDead(_233),
            StorageLive(_240),
            StorageLive(_241),
            _241 = &mut (_215.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_242),
            StorageLive(_243),
            StorageLive(_244),
            StorageLive(_245),
            _245 = const "borrow_cow_bytes",
            _244 = &(*_245),
            StorageLive(_246),
            _246 = _218,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1240:27: 1240:63 (#0),
                    scope: scope[34],
                },
                kind: _243 = proc_macro2::Ident::new(move _244, move _246) -> [return: bb146, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_246),
            StorageDead(_244),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1240:27: 1240:70 (#0),
                    scope: scope[34],
                },
                kind: _242 = <proc_macro2::Ident as std::convert::Into<syn::PathSegment>>::into(move _243) -> [return: bb147, unwind: bb230],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_243),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1239:17: 1240:71 (#0),
                    scope: scope[34],
                },
                kind: _240 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push(move _241, move _242) -> [return: bb148, unwind: bb229],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_242),
            StorageDead(_241),
            StorageDead(_245),
            StorageDead(_240),
            StorageLive(_247),
            StorageLive(_248),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1242:28: 1242:38 (#0),
                    scope: scope[34],
                },
                kind: _248 = std::vec::Vec::<syn::Attribute>::new() -> [return: bb149, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_249),
            _249 = std::option::Option::<syn::QSelf>::None,
            StorageLive(_250),
            _250 = move _215,
            _247 = syn::ExprPath { attrs: move _248, qself: move _249, path: move _250 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1245:17: 1245:18 (#0),
                    scope: scope[34],
                },
                kind: drop(_250) -> [return: bb150, unwind: bb227],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_250),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1245:17: 1245:18 (#0),
                    scope: scope[34],
                },
                kind: drop(_249) -> [return: bb151, unwind: bb228],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_249),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1245:17: 1245:18 (#0),
                    scope: scope[34],
                },
                kind: drop(_248) -> [return: bb152, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_248),
            FakeRead(ForLet(None), _247),
            StorageLive(_251),
            StorageLive(_252),
            _252 = &mut _22,
            StorageLive(_253),
            _253 = move _247,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1246:17: 1246:51 (#0),
                    scope: scope[35],
                },
                kind: _251 = internals::attr::Attr::<'_, syn::ExprPath>::set_if_none(move _252, move _253) -> [return: bb153, unwind: bb225],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_253),
            StorageDead(_252),
            StorageDead(_251),
            _165 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1247:13: 1247:14 (#0),
                    scope: scope[34],
                },
                kind: drop(_247) -> [return: bb154, unwind: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_247),
            StorageDead(_218),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1247:13: 1247:14 (#0),
                    scope: scope[29],
                },
                kind: drop(_215) -> [return: bb155, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_215),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:20: 1247:14 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb157,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_214),
            StorageDead(_213),
            StorageDead(_212),
            _165 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:20: 1247:14 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb157,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_211),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb158,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_168),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1203:9: 1252:10 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb164,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1248:19: 1248:52 (#0),
                    scope: scope[29],
                },
                kind: switchInt(move _254) -> [0: bb162, otherwise: bb160],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_256),
            StorageDead(_255),
            StorageLive(_257),
            StorageLive(_258),
            StorageLive(_259),
            _259 = &((*_3).5: syn::Type),
            _258 = &(*_259),
            StorageLive(_260),
            StorageLive(_261),
            _261 = &mut _162,
            _260 = &mut (*_261),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1251:13: 1251:66 (#0),
                    scope: scope[29],
                },
                kind: _257 = internals::attr::collect_lifetimes(move _258, move _260) -> [return: bb161, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_260),
            StorageDead(_258),
            StorageDead(_261),
            StorageDead(_259),
            StorageDead(_257),
            _165 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1248:16: 1252:10 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb163,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_256),
            StorageDead(_255),
            _165 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1248:16: 1252:10 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb163,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_254),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1203:9: 1252:10 (#0),
                    scope: scope[29],
                },
                kind: goto -> bb164,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_166),
            StorageDead(_165),
            StorageLive(_262),
            StorageLive(_263),
            _263 = move _34,
            StorageLive(_264),
            _264 = move _6,
            StorageLive(_265),
            _265 = move _8,
            StorageLive(_266),
            StorageLive(_267),
            _267 = move _10,
            _266 = std::option::Option::<internals::attr::VecAttr<'_, internals::name::Name>>::Some(move _267),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1255:82: 1255:83 (#0),
                    scope: scope[29],
                },
                kind: drop(_267) -> [return: bb165, unwind: bb221],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_267),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1255:19: 1255:84 (#0),
                    scope: scope[29],
                },
                kind: _262 = internals::name::MultiName::from_attrs(move _263, move _264, move _265, move _266) -> [return: bb166, unwind: bb221],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_266),
            StorageDead(_265),
            StorageDead(_264),
            StorageDead(_263),
            StorageLive(_268),
            StorageLive(_269),
            _269 = &_12,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1256:31: 1256:53 (#0),
                    scope: scope[29],
                },
                kind: _268 = internals::attr::BoolAttr::<'_>::get(move _269) -> [return: bb167, unwind: bb220],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_269),
            StorageLive(_270),
            StorageLive(_271),
            _271 = &_14,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1257:33: 1257:57 (#0),
                    scope: scope[29],
                },
                kind: _270 = internals::attr::BoolAttr::<'_>::get(move _271) -> [return: bb168, unwind: bb220],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_271),
            StorageLive(_272),
            StorageLive(_273),
            _273 = move _16,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1258:34: 1258:59 (#0),
                    scope: scope[29],
                },
                kind: _272 = internals::attr::Attr::<'_, syn::ExprPath>::get(move _273) -> [return: bb169, unwind: bb219],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_273),
            StorageLive(_274),
            StorageLive(_275),
            StorageLive(_276),
            _276 = move _18,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1259:22: 1259:35 (#0),
                    scope: scope[29],
                },
                kind: _275 = internals::attr::Attr::<'_, internals::attr::Default>::get(move _276) -> [return: bb170, unwind: bb217],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_276),
            StorageLive(_277),
            _277 = internals::attr::Default::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1259:22: 1259:60 (#0),
                    scope: scope[29],
                },
                kind: _274 = std::option::Option::<internals::attr::Default>::unwrap_or(move _275, move _277) -> [return: bb171, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_277),
            StorageDead(_275),
            StorageLive(_278),
            StorageLive(_279),
            _279 = move _20,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1260:29: 1260:49 (#0),
                    scope: scope[29],
                },
                kind: _278 = internals::attr::Attr::<'_, syn::ExprPath>::get(move _279) -> [return: bb172, unwind: bb213],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_279),
            StorageLive(_280),
            StorageLive(_281),
            _281 = move _22,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1261:31: 1261:53 (#0),
                    scope: scope[29],
                },
                kind: _280 = internals::attr::Attr::<'_, syn::ExprPath>::get(move _281) -> [return: bb173, unwind: bb211],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_281),
            StorageLive(_282),
            StorageLive(_283),
            _283 = move _24,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1262:24: 1262:39 (#0),
                    scope: scope[29],
                },
                kind: _282 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::get(move _283) -> [return: bb174, unwind: bb209],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_283),
            StorageLive(_284),
            StorageLive(_285),
            _285 = move _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1263:23: 1263:37 (#0),
                    scope: scope[29],
                },
                kind: _284 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::get(move _285) -> [return: bb175, unwind: bb207],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_285),
            StorageLive(_286),
            _286 = move _162,
            StorageLive(_287),
            StorageLive(_288),
            _288 = move _30,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1265:21: 1265:33 (#0),
                    scope: scope[29],
                },
                kind: _287 = internals::attr::Attr::<'_, syn::ExprPath>::get(move _288) -> [return: bb176, unwind: bb204],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_288),
            StorageLive(_289),
            StorageLive(_290),
            _290 = &_32,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1266:22: 1266:35 (#0),
                    scope: scope[29],
                },
                kind: _289 = internals::attr::BoolAttr::<'_>::get(move _290) -> [return: bb177, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_290),
            _0 = internals::attr::Field { name: move _262, skip_serializing: move _268, skip_deserializing: move _270, skip_serializing_if: move _272, default: move _274, serialize_with: move _278, deserialize_with: move _280, ser_bound: move _282, de_bound: move _284, borrowed_lifetimes: move _286, getter: move _287, flatten: move _289, transparent: const false },
            StorageDead(_289),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_287) -> [return: bb178, unwind: bb205],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_287),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_286) -> [return: bb179, unwind: bb206],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_286),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_284) -> [return: bb180, unwind: bb208],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_284),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_282) -> [return: bb181, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_282),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_280) -> [return: bb182, unwind: bb212],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_280),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_278) -> [return: bb183, unwind: bb214],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_278),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_274) -> [return: bb184, unwind: bb218],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_274),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_272) -> [return: bb185, unwind: bb220],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_272),
            StorageDead(_270),
            StorageDead(_268),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_262) -> [return: bb186, unwind: bb251],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_262),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[15],
                },
                kind: drop(_162) -> [return: bb187, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_162),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[14],
                },
                kind: drop(_34) -> [return: bb188, unwind: bb268],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_32) -> [return: bb189, unwind: bb269],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_30) -> [return: bb190, unwind: bb270],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_28) -> [return: bb191, unwind: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_26) -> [return: bb192, unwind: bb272],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_24) -> [return: bb193, unwind: bb273],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_22) -> [return: bb194, unwind: bb274],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_20) -> [return: bb195, unwind: bb275],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_18) -> [return: bb196, unwind: bb276],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_16) -> [return: bb197, unwind: bb277],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_14) -> [return: bb198, unwind: bb278],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_12) -> [return: bb199, unwind: bb279],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_10) -> [return: bb200, unwind: bb280],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_8) -> [return: bb201, unwind: bb281],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb202, unwind: bb282],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:6: 1269:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_287) -> [return: bb205, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1265:32: 1265:33 (#0),
                    scope: scope[29],
                },
                kind: drop(_288) -> [return: bb205, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_286) -> [return: bb206, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_284) -> [return: bb208, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1263:36: 1263:37 (#0),
                    scope: scope[29],
                },
                kind: drop(_285) -> [return: bb208, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_282) -> [return: bb210, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1262:38: 1262:39 (#0),
                    scope: scope[29],
                },
                kind: drop(_283) -> [return: bb210, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_280) -> [return: bb212, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1261:52: 1261:53 (#0),
                    scope: scope[29],
                },
                kind: drop(_281) -> [return: bb212, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_278) -> [return: bb214, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1260:48: 1260:49 (#0),
                    scope: scope[29],
                },
                kind: drop(_279) -> [return: bb214, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_274) -> [return: bb218, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1259:59: 1259:60 (#0),
                    scope: scope[29],
                },
                kind: drop(_277) -> [return: bb216, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1259:59: 1259:60 (#0),
                    scope: scope[29],
                },
                kind: drop(_275) -> [return: bb218, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1259:34: 1259:35 (#0),
                    scope: scope[29],
                },
                kind: drop(_276) -> [return: bb218, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_272) -> [return: bb220, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1258:58: 1258:59 (#0),
                    scope: scope[29],
                },
                kind: drop(_273) -> [return: bb220, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1268:9: 1268:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_262) -> [return: bb251, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1255:83: 1255:84 (#0),
                    scope: scope[29],
                },
                kind: drop(_266) -> [return: bb222, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1255:83: 1255:84 (#0),
                    scope: scope[29],
                },
                kind: drop(_265) -> [return: bb223, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1255:83: 1255:84 (#0),
                    scope: scope[29],
                },
                kind: drop(_264) -> [return: bb224, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1255:83: 1255:84 (#0),
                    scope: scope[29],
                },
                kind: drop(_263) -> [return: bb251, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1246:50: 1246:51 (#0),
                    scope: scope[35],
                },
                kind: drop(_253) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1247:13: 1247:14 (#0),
                    scope: scope[34],
                },
                kind: drop(_247) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1245:17: 1245:18 (#0),
                    scope: scope[34],
                },
                kind: drop(_249) -> [return: bb228, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1245:17: 1245:18 (#0),
                    scope: scope[34],
                },
                kind: drop(_248) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1240:70: 1240:71 (#0),
                    scope: scope[34],
                },
                kind: drop(_242) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1240:69: 1240:70 (#0),
                    scope: scope[34],
                },
                kind: drop(_243) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1238:65: 1238:66 (#0),
                    scope: scope[34],
                },
                kind: drop(_235) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1238:64: 1238:65 (#0),
                    scope: scope[34],
                },
                kind: drop(_236) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1237:72: 1237:73 (#0),
                    scope: scope[34],
                },
                kind: drop(_228) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1237:71: 1237:72 (#0),
                    scope: scope[34],
                },
                kind: drop(_229) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1236:69: 1236:70 (#0),
                    scope: scope[34],
                },
                kind: drop(_221) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1236:68: 1236:69 (#0),
                    scope: scope[34],
                },
                kind: drop(_222) -> [return: bb237, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1247:13: 1247:14 (#0),
                    scope: scope[29],
                },
                kind: drop(_215) -> [return: bb251, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1229:50: 1229:51 (#0),
                    scope: scope[32],
                },
                kind: drop(_210) -> [return: bb239, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:13: 1230:14 (#0),
                    scope: scope[31],
                },
                kind: drop(_204) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1228:17: 1228:18 (#0),
                    scope: scope[31],
                },
                kind: drop(_206) -> [return: bb241, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1228:17: 1228:18 (#0),
                    scope: scope[31],
                },
                kind: drop(_205) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1223:68: 1223:69 (#0),
                    scope: scope[31],
                },
                kind: drop(_199) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1223:67: 1223:68 (#0),
                    scope: scope[31],
                },
                kind: drop(_200) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1221:65: 1221:66 (#0),
                    scope: scope[31],
                },
                kind: drop(_192) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1221:64: 1221:65 (#0),
                    scope: scope[31],
                },
                kind: drop(_193) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1220:72: 1220:73 (#0),
                    scope: scope[31],
                },
                kind: drop(_185) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1220:71: 1220:72 (#0),
                    scope: scope[31],
                },
                kind: drop(_186) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1219:69: 1219:70 (#0),
                    scope: scope[31],
                },
                kind: drop(_178) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1219:68: 1219:69 (#0),
                    scope: scope[31],
                },
                kind: drop(_179) -> [return: bb250, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1230:13: 1230:14 (#0),
                    scope: scope[29],
                },
                kind: drop(_172) -> [return: bb251, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[15],
                },
                kind: drop(_162) -> [return: bb265, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1202:81: 1202:82 (#0),
                    scope: scope[15],
                },
                kind: drop(_163) -> [return: bb265, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1202:61: 1202:62 (#0),
                    scope: scope[15],
                },
                kind: drop(_164) -> [return: bb265, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1198:53: 1198:54 (#0),
                    scope: scope[28],
                },
                kind: drop(_161) -> [return: bb265, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1189:33: 1189:34 (#0),
                    scope: scope[27],
                },
                kind: drop(_154) -> [return: bb256, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1190:13: 1190:14 (#0),
                    scope: scope[25],
                },
                kind: drop(_151) -> [return: bb257, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1191:9: 1191:10 (#0),
                    scope: scope[24],
                },
                kind: drop(_130) -> [return: bb265, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1063:78: 1063:79 (#0),
                    scope: scope[18],
                },
                kind: drop(_103) -> [return: bb263, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1061:85: 1061:86 (#0),
                    scope: scope[19],
                },
                kind: drop(_98) -> [return: bb263, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1058:59: 1058:60 (#0),
                    scope: scope[22],
                },
                kind: drop(_94) -> [return: bb261, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1059:25: 1059:26 (#0),
                    scope: scope[21],
                },
                kind: drop(_75) -> [return: bb263, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:130:10: 130:11 (#53),
                    scope: scope[21],
                },
                kind: drop(_76) -> [return: bb263, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1065:13: 1065:14 (#0),
                    scope: scope[17],
                },
                kind: drop(_56) -> [return: bb264, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1066:9: 1066:10 (#0),
                    scope: scope[17],
                },
                kind: drop(_50) -> [return: bb265, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[14],
                },
                kind: drop(_34) -> [return: bb268, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1048:13: 1048:14 (#0),
                    scope: scope[14],
                },
                kind: drop(_41) -> [return: bb268, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1044:52: 1044:53 (#0),
                    scope: scope[14],
                },
                kind: drop(_39) -> [return: bb268, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_32) -> [return: bb269, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_30) -> [return: bb270, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_28) -> [return: bb271, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_26) -> [return: bb272, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_24) -> [return: bb273, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_22) -> [return: bb274, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_20) -> [return: bb275, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_18) -> [return: bb276, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_16) -> [return: bb277, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_14) -> [return: bb278, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_12) -> [return: bb279, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_10) -> [return: bb280, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_8) -> [return: bb281, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1269:5: 1269:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb282, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1021:5: 1269:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: internals::attr::Field,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1027:10: 1027:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1022:13: 1022:18 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1022:9: 1022:11 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1022:9: 1022:11 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1022:9: 1022:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1023:16: 1023:21 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1023:9: 1023:14 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1023:9: 1023:14 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1023:9: 1023:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1024:16: 1024:27 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1024:9: 1024:14 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1024:9: 1024:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Field,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1024:9: 1024:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1025:16: 1025:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1025:9: 1025:14 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1025:9: 1025:14 (#0),
                    },
                ),
            ),
        ),
        ty: std::option::Option<&'{erased} internals::attr::Variant>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1025:9: 1025:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1026:28: 1026:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1026:9: 1026:26 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1026:9: 1026:26 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1026:9: 1026:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1028:28: 1028:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1028:13: 1028:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1028:13: 1028:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1028:39: 1028:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1029:27: 1029:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1029:13: 1029:24 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1029:13: 1029:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1029:38: 1029:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1030:30: 1030:55 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1030:13: 1030:27 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::VecAttr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1030:13: 1030:27 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1030:44: 1030:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1031:36: 1031:72 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1031:13: 1031:33 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1031:13: 1031:33 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1031:51: 1031:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1032:38: 1032:76 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1032:13: 1032:35 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1032:13: 1032:35 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1032:53: 1032:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1033:39: 1033:74 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1033:13: 1033:36 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1033:13: 1033:36 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1033:50: 1033:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1034:27: 1034:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1034:13: 1034:24 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1034:13: 1034:24 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1034:38: 1034:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1035:34: 1035:64 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1035:13: 1035:31 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1035:13: 1035:31 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1035:45: 1035:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1036:36: 1036:68 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1036:13: 1036:33 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1036:13: 1036:33 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1036:47: 1036:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1037:29: 1037:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1037:13: 1037:26 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1037:13: 1037:26 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1037:40: 1037:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1038:28: 1038:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1038:13: 1038:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1038:13: 1038:25 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1038:39: 1038:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1039:38: 1039:60 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1039:13: 1039:35 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1039:13: 1039:35 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1039:49: 1039:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1040:26: 1040:48 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1040:13: 1040:23 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1040:13: 1040:23 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1040:37: 1040:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1041:27: 1041:54 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1041:13: 1041:24 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1041:13: 1041:24 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1041:42: 1041:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1043:21: 1049:10 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1043:13: 1043:18 (#0),
                    },
                ),
            ),
        ),
        ty: internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1043:13: 1043:18 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::option::Option<proc_macro2::Ident>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1043:27: 1043:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1044:13: 1044:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _35,
                                ),
                                serde_derive_internals/src/attr.rs:1043:27: 1043:39 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1044:13: 1044:24 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1044:18: 1044:23 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1044:39: 1044:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1044:40: 1044:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1044:46: 1044:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1046:24: 1046:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1046:24: 1046:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1047:23: 1047:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1051:9: 1066:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} internals::attr::BorrowAttribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1051:41: 1051:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} internals::attr::Variant>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1051:41: 1051:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:252 ~ serde_derive_internals[1ebf]::internals::attr::{impl#8}::from_ast::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn((&'{erased} internals::attr::Variant,)) -> std::option::Option<&'{erased} internals::attr::BorrowAttribute>, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1051:56: 1051:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1051:16: 1051:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _45,
                                ),
                                serde_derive_internals/src/attr.rs:1051:41: 1051:90 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1051:16: 1051:38 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} internals::attr::BorrowAttribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1051:21: 1051:37 (#0),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1052:13: 1065:14 (#0),
                },
            ),
        ),
        ty: std::result::Result<std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1052:37: 1052:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1052:13: 1065:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1052:58: 1052:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1052:13: 1065:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1052:62: 1052:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1052:13: 1065:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1052:62: 1052:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1052:13: 1065:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Field,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1052:70: 1052:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1052:20: 1052:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _50,
                                ),
                                serde_derive_internals/src/attr.rs:1052:37: 1052:76 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1052:20: 1052:34 (#0),
                    },
                ),
            ),
        ),
        ty: std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1052:23: 1052:33 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1053:17: 1064:18 (#0),
                },
            ),
        ),
        ty: &'{erased} std::option::Option<std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1053:42: 1053:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1053:24: 1053:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _57,
                                ),
                                serde_derive_internals/src/attr.rs:1053:42: 1053:69 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1053:24: 1053:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1053:29: 1053:38 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:21: 1060:22 (#352),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::collections::btree_set::Iter<'{erased}, syn::Lifetime>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _61,
                                ),
                                serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
                    },
                ),
            ),
        ),
        ty: std::collections::btree_set::Iter<'{erased}, syn::Lifetime>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1021:5: 1269:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::Lifetime>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::btree_set::Iter<'{erased}, syn::Lifetime>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::btree_set::Iter<'{erased}, syn::Lifetime>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:21: 1060:22 (#352),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:21: 1060:22 (#352),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _66,
                                ),
                                serde_derive_internals/src/attr.rs:1054:37: 1054:46 (#353),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1054:25: 1054:33 (#354),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Lifetime,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1054:25: 1054:33 (#0),
            scope: scope[20],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1055:25: 1059:26 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1055:29: 1055:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1055:25: 1059:26 (#0),
                },
            ),
        ),
        ty: &'{erased} std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1055:29: 1055:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1055:25: 1059:26 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Lifetime,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1055:49: 1055:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:127:9: 130:11 (#53),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1056:33: 1056:36 (#0),
                    },
                ),
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1056:33: 1056:36 (#0),
            scope: scope[21],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:127:36: 130:10 (#53),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:23: 128:84 (#53),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:17: 128:20 (#53),
                    },
                ),
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:17: 128:20 (#53),
            scope: scope[21],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:43: 128:83 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:41: 1057:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:41: 1057:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:41: 1057:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:43: 128:83 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:43: 128:83 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:128:43: 128:83 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:49: 1057:51 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:81: 1057:86 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:81: 1057:86 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:76: 1057:78 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} syn::Lifetime,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:88: 1057:96 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} syn::Lifetime,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1057:88: 1057:96 (#54),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1058:29: 1058:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1058:29: 1058:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Field,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1058:49: 1058:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1058:56: 1058:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1061:21: 1061:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1061:21: 1061:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1061:44: 1061:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1061:68: 1061:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1061:68: 1061:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1063:21: 1063:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1063:21: 1063:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1063:44: 1063:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1063:68: 1063:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:9: 1191:10 (#356),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<syn::Attribute, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _105,
                                ),
                                serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
                    },
                ),
            ),
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
            scope: scope[15],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:9: 1191:10 (#356),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:9: 1191:10 (#356),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _109,
                                ),
                                serde_derive_internals/src/attr.rs:1068:21: 1068:33 (#357),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1068:13: 1068:17 (#358),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1068:13: 1068:17 (#0),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:13: 1071:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:16: 1069:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:16: 1069:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:16: 1069:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:16: 1069:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:31: 1069:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:495 ~ serde_derive_internals[1ebf]::internals::symbol::SERDE),
            },
        ),
        ty: internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:31: 1069:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1069:37: 1071:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1073:13: 1077:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Meta,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1073:44: 1073:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1073:20: 1073:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _124,
                                ),
                                serde_derive_internals/src/attr.rs:1073:44: 1073:54 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1073:20: 1073:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::MetaList,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1073:36: 1073:40 (#0),
            scope: scope[26],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1074:17: 1076:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1074:20: 1074:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1074:17: 1076:18 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1074:20: 1074:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1074:17: 1076:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1074:43: 1076:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                },
            ),
        ),
        ty: std::result::Result<(), syn::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:31: 1188:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:31: 1079:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:253 ~ serde_derive_internals[1ebf]::internals::attr::{impl#8}::from_ast::{closure#1}),
            [
                i16,
                Binder { value: extern "RustCall" fn((syn::meta::ParseNestedMeta<'^0>,)) -> std::result::Result<(), syn::Error>, bound_vars: [Region(BrAnon)] },
                (&'{erased} internals::ctxt::Ctxt, &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::VecAttr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::Attr<'{erased}, internals::attr::Default>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>, &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>, &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>, &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>, &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>, &'{erased} internals::name::Name, &'{erased} &'{erased} syn::Field, &'{erased} mut internals::attr::Attr<'{erased}, std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>, &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>, &'{erased} mut internals::attr::BoolAttr<'{erased}>),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::VecAttr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1079:13: 1190:14 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} syn::Field,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:54: 1188:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:20: 1079:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _130,
                                ),
                                serde_derive_internals/src/attr.rs:1079:31: 1188:15 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1079:20: 1079:28 (#0),
                    },
                ),
            ),
        ),
        ty: syn::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1079:24: 1079:27 (#0),
            scope: scope[27],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1189:17: 1189:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1189:17: 1189:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1189:30: 1189:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1196:9: 1200:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1196:16: 1196:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1197:13: 1199:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1197:16: 1197:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1197:13: 1199:14 (#0),
                },
            ),
        ),
        ty: &'{erased} std::option::Option<()>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1197:16: 1197:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1198:17: 1198:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1198:17: 1198:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1198:37: 1198:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1202:38: 1202:82 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1202:13: 1202:35 (#0),
                    },
                ),
            ),
        ),
        ty: std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1202:13: 1202:35 (#0),
            scope: scope[15],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1202:38: 1202:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: internals::attr::Attr<'{erased}, std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1202:38: 1202:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1203:9: 1252:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1203:13: 1203:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1203:13: 1203:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1213:16: 1213:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1213:23: 1213:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1213:23: 1213:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: Binder { value: fn(&'^0.Named(DefId(0:726 ~ serde_derive_internals[1ebf]::internals::attr::is_str::'_), "'_") syn::Type) -> bool, bound_vars: [Region(BrNamed(DefId(0:726 ~ serde_derive_internals[1ebf]::internals::attr::is_str::'_), '_))] },
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1213:34: 1213:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1214:32: 1217:18 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1214:21: 1214:29 (#0),
                    },
                ),
            ),
        ),
        ty: syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1214:21: 1214:29 (#0),
            scope: scope[29],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1215:36: 1215:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1216:31: 1216:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1218:28: 1218:45 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1218:21: 1218:25 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1218:21: 1218:25 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1219:17: 1219:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1219:17: 1219:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1219:36: 1219:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1219:36: 1219:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1219:47: 1219:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1219:47: 1219:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1219:57: 1219:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1220:17: 1220:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1220:17: 1220:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1220:36: 1220:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1220:36: 1220:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1220:47: 1220:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1220:47: 1220:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1220:60: 1220:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1221:17: 1221:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1221:17: 1221:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1221:36: 1221:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1221:36: 1221:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1221:47: 1221:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1221:47: 1221:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1221:53: 1221:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1222:17: 1223:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1222:17: 1222:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1223:27: 1223:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1223:27: 1223:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1223:38: 1223:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1223:38: 1223:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1223:56: 1223:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1224:28: 1228:18 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1224:21: 1224:25 (#0),
                    },
                ),
            ),
        ),
        ty: syn::ExprPath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1224:21: 1224:25 (#0),
            scope: scope[31],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::vec::Vec<syn::Attribute, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1225:28: 1225:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::QSelf>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1226:28: 1226:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1227:21: 1227:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1229:17: 1229:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1229:17: 1229:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::ExprPath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1229:46: 1229:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1230:23: 1230:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1230:30: 1230:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1230:30: 1230:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1213:13: 1247:14 (#0),
                },
            ),
        ),
        ty: Binder { value: fn(&'^0.Named(DefId(0:727 ~ serde_derive_internals[1ebf]::internals::attr::is_slice_u8::'_), "'_") syn::Type) -> bool, bound_vars: [Region(BrNamed(DefId(0:727 ~ serde_derive_internals[1ebf]::internals::attr::is_slice_u8::'_), '_))] },
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1230:41: 1230:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1231:32: 1234:18 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1231:21: 1231:29 (#0),
                    },
                ),
            ),
        ),
        ty: syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1231:21: 1231:29 (#0),
            scope: scope[29],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1232:36: 1232:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1233:31: 1233:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1235:28: 1235:45 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1235:21: 1235:25 (#0),
                    },
                ),
            ),
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1235:21: 1235:25 (#0),
            scope: scope[33],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1236:17: 1236:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1236:17: 1236:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1236:36: 1236:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1236:36: 1236:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1236:47: 1236:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1236:47: 1236:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1236:57: 1236:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1237:17: 1237:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1237:17: 1237:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1237:36: 1237:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1237:36: 1237:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1237:47: 1237:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1237:47: 1237:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1237:60: 1237:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1238:17: 1238:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1238:17: 1238:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1238:36: 1238:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1238:36: 1238:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1238:47: 1238:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1238:47: 1238:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1238:53: 1238:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1239:17: 1240:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1239:17: 1239:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1240:27: 1240:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1240:27: 1240:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1240:38: 1240:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1240:38: 1240:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1240:58: 1240:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1241:28: 1245:18 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1241:21: 1241:25 (#0),
                    },
                ),
            ),
        ),
        ty: syn::ExprPath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1241:21: 1241:25 (#0),
            scope: scope[34],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::vec::Vec<syn::Attribute, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1242:28: 1242:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::QSelf>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1243:28: 1243:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1244:21: 1244:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1246:17: 1246:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1246:17: 1246:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::ExprPath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1246:46: 1246:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1248:19: 1248:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1248:42: 1248:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1248:42: 1248:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1251:13: 1251:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1251:31: 1251:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1251:31: 1251:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1251:42: 1251:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1251:42: 1251:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::name::MultiName,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1255:19: 1255:84 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1255:41: 1255:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1255:48: 1255:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1255:58: 1255:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::attr::VecAttr<'{erased}, internals::name::Name>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1255:67: 1255:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::VecAttr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1255:72: 1255:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1256:31: 1256:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1256:31: 1256:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1257:33: 1257:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1257:33: 1257:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1258:34: 1258:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1258:34: 1258:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1259:22: 1259:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1259:22: 1259:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1259:22: 1259:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1259:46: 1259:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1260:29: 1260:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1260:29: 1260:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1261:31: 1261:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1261:31: 1261:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1262:24: 1262:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1262:24: 1262:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1263:23: 1263:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1263:23: 1263:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1264:13: 1264:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1265:21: 1265:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::ExprPath>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1265:21: 1265:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1266:22: 1266:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1254:9: 1268:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1266:22: 1266:29 (#0),
            scope: scope[0],
        },
    },
]