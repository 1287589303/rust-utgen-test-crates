[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:239:28: 239:50 (#0),
                    scope: scope[0],
                },
                kind: _3 = internals::attr::Attr::<'_, internals::name::Name>::none(move _4, const internals::symbol::RENAME) -> [return: bb1, unwind: bb214],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:240:27: 240:49 (#0),
                    scope: scope[1],
                },
                kind: _5 = internals::attr::Attr::<'_, internals::name::Name>::none(move _6, const internals::symbol::RENAME) -> [return: bb2, unwind: bb213],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:241:31: 241:62 (#0),
                    scope: scope[2],
                },
                kind: _7 = internals::attr::BoolAttr::<'_>::none(move _8, const internals::symbol::TRANSPARENT) -> [return: bb3, unwind: bb212],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            FakeRead(ForLet(None), _7),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:242:39: 242:78 (#0),
                    scope: scope[3],
                },
                kind: _9 = internals::attr::BoolAttr::<'_>::none(move _10, const internals::symbol::DENY_UNKNOWN_FIELDS) -> [return: bb4, unwind: bb211],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:243:27: 243:50 (#0),
                    scope: scope[4],
                },
                kind: _11 = internals::attr::Attr::<'_, internals::attr::Default>::none(move _12, const internals::symbol::DEFAULT) -> [return: bb5, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            FakeRead(ForLet(None), _11),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:244:39: 244:65 (#0),
                    scope: scope[5],
                },
                kind: _13 = internals::attr::Attr::<'_, internals::case::RenameRule>::none(move _14, const internals::symbol::RENAME_ALL) -> [return: bb6, unwind: bb209],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            FakeRead(ForLet(None), _13),
            StorageLive(_15),
            StorageLive(_16),
            _16 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:245:38: 245:64 (#0),
                    scope: scope[6],
                },
                kind: _15 = internals::attr::Attr::<'_, internals::case::RenameRule>::none(move _16, const internals::symbol::RENAME_ALL) -> [return: bb7, unwind: bb208],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            FakeRead(ForLet(None), _15),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:246:46: 246:79 (#0),
                    scope: scope[7],
                },
                kind: _17 = internals::attr::Attr::<'_, internals::case::RenameRule>::none(move _18, const internals::symbol::RENAME_ALL_FIELDS) -> [return: bb8, unwind: bb207],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            FakeRead(ForLet(None), _17),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:247:45: 247:78 (#0),
                    scope: scope[8],
                },
                kind: _19 = internals::attr::Attr::<'_, internals::case::RenameRule>::none(move _20, const internals::symbol::RENAME_ALL_FIELDS) -> [return: bb9, unwind: bb206],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            FakeRead(ForLet(None), _19),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:248:29: 248:50 (#0),
                    scope: scope[9],
                },
                kind: _21 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::none(move _22, const internals::symbol::BOUND) -> [return: bb10, unwind: bb205],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            FakeRead(ForLet(None), _21),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:249:28: 249:49 (#0),
                    scope: scope[10],
                },
                kind: _23 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::none(move _24, const internals::symbol::BOUND) -> [return: bb11, unwind: bb204],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            FakeRead(ForLet(None), _23),
            StorageLive(_25),
            StorageLive(_26),
            _26 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:250:28: 250:56 (#0),
                    scope: scope[11],
                },
                kind: _25 = internals::attr::BoolAttr::<'_>::none(move _26, const internals::symbol::UNTAGGED) -> [return: bb12, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            FakeRead(ForLet(None), _25),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:251:32: 251:51 (#0),
                    scope: scope[12],
                },
                kind: _27 = internals::attr::Attr::<'_, std::string::String>::none(move _28, const internals::symbol::TAG) -> [return: bb13, unwind: bb202],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            FakeRead(ForLet(None), _27),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:252:27: 252:50 (#0),
                    scope: scope[13],
                },
                kind: _29 = internals::attr::Attr::<'_, std::string::String>::none(move _30, const internals::symbol::CONTENT) -> [return: bb14, unwind: bb201],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            FakeRead(ForLet(None), _29),
            StorageLive(_31),
            StorageLive(_32),
            _32 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:253:29: 253:49 (#0),
                    scope: scope[14],
                },
                kind: _31 = internals::attr::Attr::<'_, syn::Type>::none(move _32, const internals::symbol::FROM) -> [return: bb15, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            FakeRead(ForLet(None), _31),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:254:33: 254:57 (#0),
                    scope: scope[15],
                },
                kind: _33 = internals::attr::Attr::<'_, syn::Type>::none(move _34, const internals::symbol::TRY_FROM) -> [return: bb16, unwind: bb199],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            FakeRead(ForLet(None), _33),
            StorageLive(_35),
            StorageLive(_36),
            _36 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:255:29: 255:49 (#0),
                    scope: scope[16],
                },
                kind: _35 = internals::attr::Attr::<'_, syn::Type>::none(move _36, const internals::symbol::INTO) -> [return: bb17, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            FakeRead(ForLet(None), _35),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:256:26: 256:48 (#0),
                    scope: scope[17],
                },
                kind: _37 = internals::attr::Attr::<'_, syn::Path>::none(move _38, const internals::symbol::REMOTE) -> [return: bb18, unwind: bb197],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            FakeRead(ForLet(None), _37),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:257:36: 257:72 (#0),
                    scope: scope[18],
                },
                kind: _39 = internals::attr::BoolAttr::<'_>::none(move _40, const internals::symbol::FIELD_IDENTIFIER) -> [return: bb19, unwind: bb196],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            FakeRead(ForLet(None), _39),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:258:38: 258:76 (#0),
                    scope: scope[19],
                },
                kind: _41 = internals::attr::BoolAttr::<'_>::none(move _42, const internals::symbol::VARIANT_IDENTIFIER) -> [return: bb20, unwind: bb195],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            FakeRead(ForLet(None), _41),
            StorageLive(_43),
            StorageLive(_44),
            _44 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:259:30: 259:51 (#0),
                    scope: scope[20],
                },
                kind: _43 = internals::attr::Attr::<'_, syn::Path>::none(move _44, const internals::symbol::CRATE) -> [return: bb21, unwind: bb194],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            FakeRead(ForLet(None), _43),
            StorageLive(_45),
            StorageLive(_46),
            _46 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:260:29: 260:54 (#0),
                    scope: scope[21],
                },
                kind: _45 = internals::attr::Attr::<'_, std::string::String>::none(move _46, const internals::symbol::EXPECTING) -> [return: bb22, unwind: bb193],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            FakeRead(ForLet(None), _45),
            StorageLive(_47),
            _47 = const false,
            FakeRead(ForLet(None), _47),
            StorageLive(_48),
            StorageLive(_49),
            StorageLive(_50),
            _50 = &((*_2).0: std::vec::Vec<syn::Attribute>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
                    scope: scope[23],
                },
                kind: _49 = <&std::vec::Vec<syn::Attribute> as std::iter::IntoIterator>::into_iter(move _50) -> [return: bb23, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            PlaceMention(_49),
            StorageLive(_51),
            _51 = move _49,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:9: 504:10 (#247),
                    scope: scope[24],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:9: 504:10 (#247),
                    scope: scope[24],
                },
                kind: falseUnwind -> [real: bb25, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_53),
            StorageLive(_54),
            StorageLive(_55),
            StorageLive(_56),
            _56 = &mut _51,
            _55 = &mut (*_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
                    scope: scope[24],
                },
                kind: _54 = <std::slice::Iter<'_, syn::Attribute> as std::iter::Iterator>::next(move _55) -> [return: bb26, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            PlaceMention(_54),
            _57 = discriminant(_54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
                    scope: scope[24],
                },
                kind: switchInt(move _57) -> [0: bb28, 1: bb29, otherwise: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
                    scope: scope[24],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:9: 504:10 (#247),
                    scope: scope[24],
                },
                kind: falseEdge -> [real: bb30, imaginary: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_59),
            _59 = ((_54 as Some).0: &syn::Attribute),
            StorageLive(_60),
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            StorageLive(_64),
            _64 = &(*_59),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:264:16: 264:27 (#0),
                    scope: scope[25],
                },
                kind: _63 = syn::Attribute::path(move _64) -> [return: bb31, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _48 = const (),
            StorageDead(_56),
            StorageDead(_54),
            StorageDead(_53),
            StorageDead(_51),
            StorageDead(_49),
            StorageDead(_48),
            StorageLive(_118),
            _118 = const false,
            FakeRead(ForLet(None), _118),
            StorageLive(_119),
            StorageLive(_120),
            StorageLive(_121),
            _121 = &((*_2).0: std::vec::Vec<syn::Attribute>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
                    scope: scope[29],
                },
                kind: _120 = <&std::vec::Vec<syn::Attribute> as std::iter::IntoIterator>::into_iter(move _121) -> [return: bb58, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _62 = &_63,
            StorageDead(_64),
            StorageLive(_65),
            StorageLive(_66),
            _66 = const internals::symbol::SERDE,
            _65 = &_66,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:264:16: 264:36 (#0),
                    scope: scope[25],
                },
                kind: _61 = <&syn::Path as std::cmp::PartialEq<internals::symbol::Symbol>>::ne(move _62, move _65) -> [return: bb32, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:264:16: 264:36 (#0),
                    scope: scope[25],
                },
                kind: switchInt(move _61) -> [0: bb41, otherwise: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
            StorageDead(_65),
            StorageDead(_63),
            StorageDead(_62),
            StorageLive(_68),
            StorageLive(_69),
            _69 = &((*_59).3: syn::Meta),
            PlaceMention(_69),
            _72 = discriminant((*_69)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9: 457:9 (#40),
                    scope: scope[25],
                },
                kind: switchInt(move _72) -> [0: bb35, otherwise: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _68 = const false,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:18: 459:23 (#40),
                    scope: scope[25],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:266:42: 266:63 (#0),
                    scope: scope[25],
                },
                kind: falseEdge -> [real: bb36, imaginary: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_74),
            StorageLive(_73),
            _73 = &(((*_69) as Path).0: syn::Path),
            _74 = &_73,
            _70 = &fake shallow _69,
            _71 = &fake shallow (*_69),
            StorageLive(_75),
            StorageLive(_76),
            _76 = &(*_74),
            StorageLive(_77),
            StorageLive(_78),
            _78 = const internals::symbol::NON_EXHAUSTIVE,
            _77 = &_78,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:266:67: 266:89 (#0),
                    scope: scope[25],
                },
                kind: _75 = <&syn::Path as std::cmp::PartialEq<internals::symbol::Symbol>>::eq(move _76, move _77) -> [return: bb37, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:266:67: 266:89 (#0),
                    scope: scope[25],
                },
                kind: switchInt(move _75) -> [0: bb39, otherwise: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            StorageDead(_77),
            StorageDead(_76),
            StorageDead(_75),
            FakeRead(ForMatchGuard, _70),
            FakeRead(ForMatchGuard, _71),
            _68 = const true,
            StorageDead(_73),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:458:42: 458:43 (#40),
                    scope: scope[25],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            StorageDead(_77),
            StorageDead(_76),
            StorageDead(_75),
            StorageDead(_73),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:266:67: 266:89 (#0),
                    scope: scope[25],
                },
                kind: falseEdge -> [real: bb34, imaginary: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _47 = BitOr(_47, move _68),
            StorageDead(_68),
            StorageDead(_69),
            StorageDead(_61),
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[25],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
            StorageDead(_65),
            StorageDead(_63),
            StorageDead(_62),
            _60 = const (),
            StorageDead(_61),
            StorageDead(_60),
            StorageLive(_79),
            StorageLive(_80),
            _80 = &((*_59).3: syn::Meta),
            PlaceMention(_80),
            _81 = discriminant((*_80)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:270:20: 270:41 (#0),
                    scope: scope[27],
                },
                kind: switchInt(move _81) -> [1: bb43, otherwise: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _79 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:270:13: 274:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb48,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:270:20: 270:41 (#0),
                    scope: scope[27],
                },
                kind: falseEdge -> [real: bb44, imaginary: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_82),
            _82 = &(((*_80) as List).0: syn::MetaList),
            StorageLive(_83),
            StorageLive(_84),
            _84 = &((*_82).2: proc_macro2::TokenStream),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:271:20: 271:42 (#0),
                    scope: scope[27],
                },
                kind: _83 = proc_macro2::TokenStream::is_empty(move _84) -> [return: bb45, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:271:20: 271:42 (#0),
                    scope: scope[27],
                },
                kind: switchInt(move _83) -> [0: bb47, otherwise: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageDead(_83),
            StorageDead(_82),
            StorageDead(_80),
            StorageDead(_79),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[25],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            _79 = const (),
            StorageDead(_83),
            StorageDead(_82),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:270:13: 274:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb48,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            StorageDead(_79),
            StorageLive(_86),
            StorageLive(_87),
            _87 = &(*_59),
            StorageLive(_88),
            FakeRead(ForMatchedPlace(Some(DefId(0:168 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#0}))), ((*_2).4: syn::Data)),
            FakeRead(ForMatchedPlace(Some(DefId(0:168 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#0}))), ((*_2).4: syn::Data)),
            FakeRead(ForMatchedPlace(Some(DefId(0:168 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#0}))), ((*_2).4: syn::Data)),
            FakeRead(ForMatchedPlace(Some(DefId(0:168 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#0}))), ((*_2).4: syn::Data)),
            FakeRead(ForMatchedPlace(Some(DefId(0:168 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#0}))), ((*_2).4: syn::Data)),
            FakeRead(ForMatchedPlace(Some(DefId(0:168 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#0}))), ((*_2).4: syn::Data)),
            StorageLive(_89),
            _89 = &(*_1),
            StorageLive(_90),
            _90 = &mut _3,
            StorageLive(_91),
            _91 = &mut _5,
            StorageLive(_92),
            _92 = &mut _13,
            StorageLive(_93),
            _93 = &mut _15,
            StorageLive(_94),
            _94 = &(*_2),
            StorageLive(_95),
            _95 = &mut _17,
            StorageLive(_96),
            _96 = &mut _19,
            StorageLive(_97),
            _97 = &mut _7,
            StorageLive(_98),
            _98 = &mut _9,
            StorageLive(_99),
            _99 = &mut _11,
            StorageLive(_100),
            _100 = &mut _21,
            StorageLive(_101),
            _101 = &mut _23,
            StorageLive(_102),
            _102 = &mut _25,
            StorageLive(_103),
            _103 = &mut _27,
            StorageLive(_104),
            _104 = &mut _29,
            StorageLive(_105),
            _105 = &mut _31,
            StorageLive(_106),
            _106 = &mut _33,
            StorageLive(_107),
            _107 = &mut _35,
            StorageLive(_108),
            _108 = &mut _37,
            StorageLive(_109),
            _109 = &mut _39,
            StorageLive(_110),
            _110 = &mut _41,
            StorageLive(_111),
            _111 = &mut _43,
            StorageLive(_112),
            _112 = &mut _45,
            _88 = {closure@serde_derive_internals/src/attr.rs:276:54: 276:60} { cx: move _89, ser_name: move _90, de_name: move _91, rename_all_ser_rule: move _92, rename_all_de_rule: move _93, item: move _94, rename_all_fields_ser_rule: move _95, rename_all_fields_de_rule: move _96, transparent: move _97, deny_unknown_fields: move _98, default: move _99, ser_bound: move _100, de_bound: move _101, untagged: move _102, internal_tag: move _103, content: move _104, type_from: move _105, type_try_from: move _106, type_into: move _107, remote: move _108, field_identifier: move _109, variant_identifier: move _110, serde_path: move _111, expecting: move _112 },
            StorageDead(_112),
            StorageDead(_111),
            StorageDead(_110),
            StorageDead(_109),
            StorageDead(_108),
            StorageDead(_107),
            StorageDead(_106),
            StorageDead(_105),
            StorageDead(_104),
            StorageDead(_103),
            StorageDead(_102),
            StorageDead(_101),
            StorageDead(_100),
            StorageDead(_99),
            StorageDead(_98),
            StorageDead(_97),
            StorageDead(_96),
            StorageDead(_95),
            StorageDead(_94),
            StorageDead(_93),
            StorageDead(_92),
            StorageDead(_91),
            StorageDead(_90),
            StorageDead(_89),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:276:31: 501:15 (#0),
                    scope: scope[28],
                },
                kind: _86 = syn::Attribute::parse_nested_meta::<{closure@serde_derive_internals/src/attr.rs:276:54: 276:60}>(move _87, move _88) -> [return: bb49, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
            StorageDead(_87),
            PlaceMention(_86),
            _113 = discriminant(_86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:276:20: 276:28 (#0),
                    scope: scope[28],
                },
                kind: switchInt(move _113) -> [1: bb50, otherwise: bb53],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:276:20: 276:28 (#0),
                    scope: scope[28],
                },
                kind: falseEdge -> [real: bb51, imaginary: bb53],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_114),
            _114 = move ((_86 as Err).0: syn::Error),
            StorageLive(_115),
            StorageLive(_116),
            _116 = &(*_1),
            StorageLive(_117),
            _117 = move _114,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:502:17: 502:34 (#0),
                    scope: scope[28],
                },
                kind: _115 = internals::ctxt::Ctxt::syn_error(move _116, move _117) -> [return: bb52, unwind: bb189],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_117),
            StorageDead(_116),
            StorageDead(_115),
            _53 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:503:13: 503:14 (#0),
                    scope: scope[25],
                },
                kind: drop(_114) -> [return: bb54, unwind: bb191],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _53 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:276:13: 503:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb55,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:276:13: 503:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb55,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:504:9: 504:10 (#0),
                    scope: scope[24],
                },
                kind: drop(_86) -> [return: bb56, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            StorageDead(_59),
            StorageDead(_56),
            StorageDead(_54),
            StorageDead(_53),
            _52 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:263:9: 504:10 (#247),
                    scope: scope[24],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            StorageDead(_56),
            StorageDead(_54),
            StorageDead(_53),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[24],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            PlaceMention(_120),
            StorageLive(_122),
            _122 = move _120,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:9: 518:10 (#300),
                    scope: scope[30],
                },
                kind: goto -> bb59,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:9: 518:10 (#300),
                    scope: scope[30],
                },
                kind: falseUnwind -> [real: bb60, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_123),
            StorageLive(_124),
            StorageLive(_125),
            StorageLive(_126),
            _126 = &mut _122,
            _125 = &mut (*_126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
                    scope: scope[30],
                },
                kind: _124 = <std::slice::Iter<'_, syn::Attribute> as std::iter::Iterator>::next(move _125) -> [return: bb61, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_125),
            PlaceMention(_124),
            _127 = discriminant(_124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
                    scope: scope[30],
                },
                kind: switchInt(move _127) -> [0: bb63, 1: bb64, otherwise: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
                    scope: scope[30],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:9: 518:10 (#300),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb65, imaginary: bb64],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_129),
            _129 = ((_124 as Some).0: &syn::Attribute),
            StorageLive(_130),
            StorageLive(_131),
            StorageLive(_132),
            StorageLive(_133),
            _133 = &(*_129),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:508:16: 508:27 (#0),
                    scope: scope[31],
                },
                kind: _132 = syn::Attribute::path(move _133) -> [return: bb66, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _119 = const (),
            StorageDead(_126),
            StorageDead(_124),
            StorageDead(_123),
            StorageDead(_122),
            StorageDead(_120),
            StorageDead(_119),
            StorageLive(_140),
            StorageLive(_141),
            StorageLive(_142),
            StorageLive(_143),
            StorageLive(_144),
            StorageLive(_145),
            _145 = &((*_2).2: proc_macro2::Ident),
            _144 = &(*_145),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:521:53: 521:71 (#0),
                    scope: scope[29],
                },
                kind: _143 = internals::attr::unraw(move _144) -> [return: bb73, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _131 = &_132,
            StorageDead(_133),
            StorageLive(_134),
            StorageLive(_135),
            _135 = const internals::symbol::REPR,
            _134 = &_135,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:508:16: 508:35 (#0),
                    scope: scope[31],
                },
                kind: _130 = <&syn::Path as std::cmp::PartialEq<internals::symbol::Symbol>>::eq(move _131, move _134) -> [return: bb67, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:508:16: 508:35 (#0),
                    scope: scope[31],
                },
                kind: switchInt(move _130) -> [0: bb71, otherwise: bb68],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            StorageDead(_134),
            StorageDead(_132),
            StorageDead(_131),
            StorageLive(_136),
            StorageLive(_137),
            _137 = &(*_129),
            StorageLive(_138),
            StorageLive(_139),
            _139 = &mut _118,
            _138 = {closure@serde_derive_internals/src/attr.rs:509:46: 509:66} { is_packed: move _139 },
            StorageDead(_139),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:509:25: 516:19 (#0),
                    scope: scope[31],
                },
                kind: _136 = syn::Attribute::parse_args_with::<{closure@serde_derive_internals/src/attr.rs:509:46: 509:66}>(move _137, move _138) -> [return: bb69, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_138),
            StorageDead(_137),
            PlaceMention(_136),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:516:19: 516:20 (#0),
                    scope: scope[31],
                },
                kind: drop(_136) -> [return: bb70, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_136),
            _123 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:508:13: 517:14 (#0),
                    scope: scope[31],
                },
                kind: goto -> bb72,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            StorageDead(_134),
            StorageDead(_132),
            StorageDead(_131),
            _123 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:508:13: 517:14 (#0),
                    scope: scope[31],
                },
                kind: goto -> bb72,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_130),
            StorageDead(_129),
            StorageDead(_126),
            StorageDead(_124),
            StorageDead(_123),
            _52 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:507:9: 518:10 (#300),
                    scope: scope[30],
                },
                kind: goto -> bb59,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_144),
            _142 = &_143,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:521:41: 521:72 (#0),
                    scope: scope[29],
                },
                kind: _141 = <internals::name::Name as std::convert::From<&proc_macro2::Ident>>::from(move _142) -> [return: bb74, unwind: bb166],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_142),
            StorageLive(_146),
            _146 = move _3,
            StorageLive(_147),
            _147 = move _5,
            StorageLive(_148),
            _148 = std::option::Option::<internals::attr::VecAttr<'_, internals::name::Name>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:521:19: 521:98 (#0),
                    scope: scope[29],
                },
                kind: _140 = internals::name::MultiName::from_attrs(move _141, move _146, move _147, move _148) -> [return: bb75, unwind: bb162],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_148),
            StorageDead(_147),
            StorageDead(_146),
            StorageDead(_141),
            StorageLive(_149),
            StorageLive(_150),
            _150 = &_7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:522:26: 522:43 (#0),
                    scope: scope[29],
                },
                kind: _149 = internals::attr::BoolAttr::<'_>::get(move _150) -> [return: bb76, unwind: bb161],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageLive(_151),
            StorageLive(_152),
            _152 = &_9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:523:34: 523:59 (#0),
                    scope: scope[29],
                },
                kind: _151 = internals::attr::BoolAttr::<'_>::get(move _152) -> [return: bb77, unwind: bb161],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_152),
            StorageLive(_153),
            StorageLive(_154),
            StorageLive(_155),
            _155 = move _11,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:524:22: 524:35 (#0),
                    scope: scope[29],
                },
                kind: _154 = internals::attr::Attr::<'_, internals::attr::Default>::get(move _155) -> [return: bb78, unwind: bb160],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_155),
            StorageLive(_156),
            _156 = internals::attr::Default::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:524:22: 524:60 (#0),
                    scope: scope[29],
                },
                kind: _153 = std::option::Option::<internals::attr::Default>::unwrap_or(move _154, move _156) -> [return: bb79, unwind: bb158],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_156),
            StorageDead(_154),
            StorageLive(_157),
            StorageLive(_158),
            StorageLive(_159),
            StorageLive(_160),
            _160 = move _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:526:28: 526:53 (#0),
                    scope: scope[29],
                },
                kind: _159 = internals::attr::Attr::<'_, internals::case::RenameRule>::get(move _160) -> [return: bb80, unwind: bb156],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
            StorageLive(_161),
            _161 = internals::case::RenameRule::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:526:28: 526:81 (#0),
                    scope: scope[29],
                },
                kind: _158 = std::option::Option::<internals::case::RenameRule>::unwrap_or(move _159, move _161) -> [return: bb81, unwind: bb157],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_161),
            StorageDead(_159),
            StorageLive(_162),
            StorageLive(_163),
            StorageLive(_164),
            _164 = move _15,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:527:30: 527:54 (#0),
                    scope: scope[29],
                },
                kind: _163 = internals::attr::Attr::<'_, internals::case::RenameRule>::get(move _164) -> [return: bb82, unwind: bb155],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_164),
            StorageLive(_165),
            _165 = internals::case::RenameRule::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:527:30: 527:82 (#0),
                    scope: scope[29],
                },
                kind: _162 = std::option::Option::<internals::case::RenameRule>::unwrap_or(move _163, move _165) -> [return: bb83, unwind: bb157],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_165),
            StorageDead(_163),
            _157 = internals::attr::RenameAllRules { serialize: move _158, deserialize: move _162 },
            StorageDead(_162),
            StorageDead(_158),
            StorageLive(_166),
            StorageLive(_167),
            StorageLive(_168),
            StorageLive(_169),
            _169 = move _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:530:28: 530:60 (#0),
                    scope: scope[29],
                },
                kind: _168 = internals::attr::Attr::<'_, internals::case::RenameRule>::get(move _169) -> [return: bb84, unwind: bb154],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_169),
            StorageLive(_170),
            _170 = internals::case::RenameRule::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:530:28: 530:88 (#0),
                    scope: scope[29],
                },
                kind: _167 = std::option::Option::<internals::case::RenameRule>::unwrap_or(move _168, move _170) -> [return: bb85, unwind: bb157],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_170),
            StorageDead(_168),
            StorageLive(_171),
            StorageLive(_172),
            StorageLive(_173),
            _173 = move _19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:531:30: 531:61 (#0),
                    scope: scope[29],
                },
                kind: _172 = internals::attr::Attr::<'_, internals::case::RenameRule>::get(move _173) -> [return: bb86, unwind: bb153],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_173),
            StorageLive(_174),
            _174 = internals::case::RenameRule::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:531:30: 531:89 (#0),
                    scope: scope[29],
                },
                kind: _171 = std::option::Option::<internals::case::RenameRule>::unwrap_or(move _172, move _174) -> [return: bb87, unwind: bb157],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            StorageDead(_172),
            _166 = internals::attr::RenameAllRules { serialize: move _167, deserialize: move _171 },
            StorageDead(_171),
            StorageDead(_167),
            StorageLive(_175),
            StorageLive(_176),
            _176 = move _21,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:533:24: 533:39 (#0),
                    scope: scope[29],
                },
                kind: _175 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::get(move _176) -> [return: bb88, unwind: bb152],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_176),
            StorageLive(_177),
            StorageLive(_178),
            _178 = move _23,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:534:23: 534:37 (#0),
                    scope: scope[29],
                },
                kind: _177 = internals::attr::Attr::<'_, std::vec::Vec<syn::WherePredicate>>::get(move _178) -> [return: bb89, unwind: bb150],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_178),
            StorageLive(_179),
            StorageLive(_180),
            _180 = &(*_1),
            StorageLive(_181),
            _181 = &(*_2),
            StorageLive(_182),
            _182 = move _25,
            StorageLive(_183),
            _183 = move _27,
            StorageLive(_184),
            _184 = move _29,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:535:18: 535:71 (#0),
                    scope: scope[29],
                },
                kind: _179 = internals::attr::decide_tag(move _180, move _181, move _182, move _183, move _184) -> [return: bb90, unwind: bb146],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_184),
            StorageDead(_183),
            StorageDead(_182),
            StorageDead(_181),
            StorageDead(_180),
            StorageLive(_185),
            StorageLive(_186),
            _186 = move _31,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:536:24: 536:39 (#0),
                    scope: scope[29],
                },
                kind: _185 = internals::attr::Attr::<'_, syn::Type>::get(move _186) -> [return: bb91, unwind: bb144],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
            StorageLive(_187),
            StorageLive(_188),
            _188 = move _33,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:537:28: 537:47 (#0),
                    scope: scope[29],
                },
                kind: _187 = internals::attr::Attr::<'_, syn::Type>::get(move _188) -> [return: bb92, unwind: bb142],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_188),
            StorageLive(_189),
            StorageLive(_190),
            _190 = move _35,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:538:24: 538:39 (#0),
                    scope: scope[29],
                },
                kind: _189 = internals::attr::Attr::<'_, syn::Type>::get(move _190) -> [return: bb93, unwind: bb140],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_190),
            StorageLive(_191),
            StorageLive(_192),
            _192 = move _37,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:539:21: 539:33 (#0),
                    scope: scope[29],
                },
                kind: _191 = internals::attr::Attr::<'_, syn::Path>::get(move _192) -> [return: bb94, unwind: bb138],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            StorageLive(_193),
            StorageLive(_194),
            _194 = &(*_1),
            StorageLive(_195),
            _195 = &(*_2),
            StorageLive(_196),
            _196 = move _39,
            StorageLive(_197),
            _197 = move _41,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:540:25: 540:90 (#0),
                    scope: scope[29],
                },
                kind: _193 = internals::attr::decide_identifier(move _194, move _195, move _196, move _197) -> [return: bb95, unwind: bb135],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_197),
            StorageDead(_196),
            StorageDead(_195),
            StorageDead(_194),
            StorageLive(_198),
            StorageLive(_199),
            _199 = move _43,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:541:25: 541:41 (#0),
                    scope: scope[29],
                },
                kind: _198 = internals::attr::Attr::<'_, syn::Path>::get(move _199) -> [return: bb96, unwind: bb134],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_199),
            StorageLive(_200),
            _200 = _118,
            StorageLive(_201),
            StorageLive(_202),
            _202 = move _45,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:543:24: 543:39 (#0),
                    scope: scope[29],
                },
                kind: _201 = internals::attr::Attr::<'_, std::string::String>::get(move _202) -> [return: bb97, unwind: bb132],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_202),
            StorageLive(_203),
            _203 = _47,
            _0 = internals::attr::Container { name: move _140, transparent: move _149, deny_unknown_fields: move _151, default: move _153, rename_all_rules: move _157, rename_all_fields_rules: move _166, ser_bound: move _175, de_bound: move _177, tag: move _179, type_from: move _185, type_try_from: move _187, type_into: move _189, remote: move _191, identifier: move _193, serde_path: move _198, is_packed: move _200, expecting: move _201, non_exhaustive: move _203 },
            StorageDead(_203),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_201) -> [return: bb98, unwind: bb133],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_201),
            StorageDead(_200),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_198) -> [return: bb99, unwind: bb137],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_198),
            StorageDead(_193),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_191) -> [return: bb100, unwind: bb139],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_189) -> [return: bb101, unwind: bb141],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_189),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_187) -> [return: bb102, unwind: bb143],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_187),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_185) -> [return: bb103, unwind: bb145],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_185),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_179) -> [return: bb104, unwind: bb149],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_177) -> [return: bb105, unwind: bb151],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_177),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_175) -> [return: bb106, unwind: bb157],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_175),
            StorageDead(_166),
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_153) -> [return: bb107, unwind: bb161],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_153),
            StorageDead(_151),
            StorageDead(_149),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_140) -> [return: bb108, unwind: bb166],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_140),
            StorageDead(_118),
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[21],
                },
                kind: drop(_45) -> [return: bb109, unwind: bb167],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[20],
                },
                kind: drop(_43) -> [return: bb110, unwind: bb168],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[19],
                },
                kind: drop(_41) -> [return: bb111, unwind: bb169],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[18],
                },
                kind: drop(_39) -> [return: bb112, unwind: bb170],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[17],
                },
                kind: drop(_37) -> [return: bb113, unwind: bb171],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[16],
                },
                kind: drop(_35) -> [return: bb114, unwind: bb172],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[15],
                },
                kind: drop(_33) -> [return: bb115, unwind: bb173],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[14],
                },
                kind: drop(_31) -> [return: bb116, unwind: bb174],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_29) -> [return: bb117, unwind: bb175],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_27) -> [return: bb118, unwind: bb176],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_25) -> [return: bb119, unwind: bb177],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_23) -> [return: bb120, unwind: bb178],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_21) -> [return: bb121, unwind: bb179],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_19) -> [return: bb122, unwind: bb180],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_17) -> [return: bb123, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_15) -> [return: bb124, unwind: bb182],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_13) -> [return: bb125, unwind: bb183],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_11) -> [return: bb126, unwind: bb184],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_9) -> [return: bb127, unwind: bb185],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_7) -> [return: bb128, unwind: bb186],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb129, unwind: bb187],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb130, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_143) -> [return: bb131, unwind: bb214],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_145),
            StorageDead(_143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:6: 546:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:543:38: 543:39 (#0),
                    scope: scope[29],
                },
                kind: drop(_202) -> [return: bb133, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_198) -> [return: bb137, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:541:40: 541:41 (#0),
                    scope: scope[29],
                },
                kind: drop(_199) -> [return: bb137, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:540:89: 540:90 (#0),
                    scope: scope[29],
                },
                kind: drop(_197) -> [return: bb136, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:540:89: 540:90 (#0),
                    scope: scope[29],
                },
                kind: drop(_196) -> [return: bb137, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_191) -> [return: bb139, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:539:32: 539:33 (#0),
                    scope: scope[29],
                },
                kind: drop(_192) -> [return: bb139, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_189) -> [return: bb141, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:538:38: 538:39 (#0),
                    scope: scope[29],
                },
                kind: drop(_190) -> [return: bb141, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_187) -> [return: bb143, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:537:46: 537:47 (#0),
                    scope: scope[29],
                },
                kind: drop(_188) -> [return: bb143, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_185) -> [return: bb145, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:536:38: 536:39 (#0),
                    scope: scope[29],
                },
                kind: drop(_186) -> [return: bb145, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_179) -> [return: bb149, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:535:70: 535:71 (#0),
                    scope: scope[29],
                },
                kind: drop(_184) -> [return: bb147, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:535:70: 535:71 (#0),
                    scope: scope[29],
                },
                kind: drop(_183) -> [return: bb148, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:535:70: 535:71 (#0),
                    scope: scope[29],
                },
                kind: drop(_182) -> [return: bb149, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_177) -> [return: bb151, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:534:36: 534:37 (#0),
                    scope: scope[29],
                },
                kind: drop(_178) -> [return: bb151, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_175) -> [return: bb157, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:533:38: 533:39 (#0),
                    scope: scope[29],
                },
                kind: drop(_176) -> [return: bb157, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:531:60: 531:61 (#0),
                    scope: scope[29],
                },
                kind: drop(_173) -> [return: bb157, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:530:59: 530:60 (#0),
                    scope: scope[29],
                },
                kind: drop(_169) -> [return: bb157, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:527:53: 527:54 (#0),
                    scope: scope[29],
                },
                kind: drop(_164) -> [return: bb157, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:526:52: 526:53 (#0),
                    scope: scope[29],
                },
                kind: drop(_160) -> [return: bb157, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_153) -> [return: bb161, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:524:59: 524:60 (#0),
                    scope: scope[29],
                },
                kind: drop(_156) -> [return: bb159, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:524:59: 524:60 (#0),
                    scope: scope[29],
                },
                kind: drop(_154) -> [return: bb161, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:524:34: 524:35 (#0),
                    scope: scope[29],
                },
                kind: drop(_155) -> [return: bb161, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:545:9: 545:10 (#0),
                    scope: scope[29],
                },
                kind: drop(_140) -> [return: bb166, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:521:97: 521:98 (#0),
                    scope: scope[29],
                },
                kind: drop(_148) -> [return: bb163, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:521:97: 521:98 (#0),
                    scope: scope[29],
                },
                kind: drop(_147) -> [return: bb164, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:521:97: 521:98 (#0),
                    scope: scope[29],
                },
                kind: drop(_146) -> [return: bb165, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:521:97: 521:98 (#0),
                    scope: scope[29],
                },
                kind: drop(_141) -> [return: bb166, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[21],
                },
                kind: drop(_45) -> [return: bb167, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[20],
                },
                kind: drop(_43) -> [return: bb168, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[19],
                },
                kind: drop(_41) -> [return: bb169, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[18],
                },
                kind: drop(_39) -> [return: bb170, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[17],
                },
                kind: drop(_37) -> [return: bb171, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[16],
                },
                kind: drop(_35) -> [return: bb172, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[15],
                },
                kind: drop(_33) -> [return: bb173, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[14],
                },
                kind: drop(_31) -> [return: bb174, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_29) -> [return: bb175, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_27) -> [return: bb176, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_25) -> [return: bb177, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_23) -> [return: bb178, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_21) -> [return: bb179, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_19) -> [return: bb180, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_17) -> [return: bb181, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_15) -> [return: bb182, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_13) -> [return: bb183, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_11) -> [return: bb184, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_9) -> [return: bb185, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_7) -> [return: bb186, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb187, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb188, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_143) -> [return: bb214, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:502:33: 502:34 (#0),
                    scope: scope[28],
                },
                kind: drop(_117) -> [return: bb190, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:503:13: 503:14 (#0),
                    scope: scope[25],
                },
                kind: drop(_114) -> [return: bb191, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:504:9: 504:10 (#0),
                    scope: scope[24],
                },
                kind: drop(_86) -> [return: bb192, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[21],
                },
                kind: drop(_45) -> [return: bb193, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[20],
                },
                kind: drop(_43) -> [return: bb194, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[19],
                },
                kind: drop(_41) -> [return: bb195, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[18],
                },
                kind: drop(_39) -> [return: bb196, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[17],
                },
                kind: drop(_37) -> [return: bb197, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[16],
                },
                kind: drop(_35) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[15],
                },
                kind: drop(_33) -> [return: bb199, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[14],
                },
                kind: drop(_31) -> [return: bb200, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[13],
                },
                kind: drop(_29) -> [return: bb201, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[12],
                },
                kind: drop(_27) -> [return: bb202, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[11],
                },
                kind: drop(_25) -> [return: bb203, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[10],
                },
                kind: drop(_23) -> [return: bb204, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[9],
                },
                kind: drop(_21) -> [return: bb205, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[8],
                },
                kind: drop(_19) -> [return: bb206, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[7],
                },
                kind: drop(_17) -> [return: bb207, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[6],
                },
                kind: drop(_15) -> [return: bb208, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[5],
                },
                kind: drop(_13) -> [return: bb209, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[4],
                },
                kind: drop(_11) -> [return: bb210, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[3],
                },
                kind: drop(_9) -> [return: bb211, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[2],
                },
                kind: drop(_7) -> [return: bb212, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb213, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:546:5: 546:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb214, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:238:5: 546:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: internals::attr::Container,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:238:60: 238:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:238:25: 238:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:238:21: 238:23 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:238:21: 238:23 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:238:21: 238:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:238:38: 238:55 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:238:32: 238:36 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:238:32: 238:36 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::DeriveInput,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:238:32: 238:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:239:28: 239:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:239:13: 239:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:239:13: 239:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:239:39: 239:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:240:27: 240:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:240:13: 240:24 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:240:13: 240:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:240:38: 240:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:241:31: 241:62 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:241:13: 241:28 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:241:13: 241:28 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:241:46: 241:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:242:39: 242:78 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:242:13: 242:36 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:242:13: 242:36 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:242:54: 242:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:243:27: 243:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:243:13: 243:24 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:243:13: 243:24 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:243:38: 243:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:244:39: 244:65 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:244:13: 244:36 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:244:13: 244:36 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:244:50: 244:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:245:38: 245:64 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:245:13: 245:35 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:245:13: 245:35 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:245:49: 245:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:246:46: 246:79 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:246:13: 246:43 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:246:13: 246:43 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:246:57: 246:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:247:45: 247:78 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:247:13: 247:42 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:247:13: 247:42 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:247:56: 247:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:248:29: 248:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:248:13: 248:26 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:248:13: 248:26 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:248:40: 248:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:249:28: 249:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:249:13: 249:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:249:13: 249:25 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:249:39: 249:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:250:28: 250:56 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:250:13: 250:25 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:250:13: 250:25 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:250:43: 250:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:251:32: 251:51 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:251:13: 251:29 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:251:13: 251:29 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:251:43: 251:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:252:27: 252:50 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:252:13: 252:24 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:252:13: 252:24 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:252:38: 252:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:253:29: 253:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:253:13: 253:26 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:253:13: 253:26 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:253:40: 253:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:254:33: 254:57 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:254:13: 254:30 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:254:13: 254:30 (#0),
            scope: scope[15],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:254:44: 254:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:255:29: 255:49 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:255:13: 255:26 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:255:13: 255:26 (#0),
            scope: scope[16],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:255:40: 255:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:256:26: 256:48 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:256:13: 256:23 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:256:13: 256:23 (#0),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:256:37: 256:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:257:36: 257:72 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:257:13: 257:33 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:257:13: 257:33 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:257:51: 257:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:258:38: 258:76 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:258:13: 258:35 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:258:13: 258:35 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:258:53: 258:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:259:30: 259:51 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:259:13: 259:27 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:259:13: 259:27 (#0),
            scope: scope[20],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:259:41: 259:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:260:29: 260:54 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:260:13: 260:26 (#0),
                    },
                ),
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:260:13: 260:26 (#0),
            scope: scope[21],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:260:40: 260:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:261:34: 261:39 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:261:13: 261:31 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:261:13: 261:31 (#0),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:9: 504:10 (#247),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<syn::Attribute, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _49,
                                ),
                                serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
                    },
                ),
            ),
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
            scope: scope[23],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:238:5: 546:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:9: 504:10 (#247),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:9: 504:10 (#247),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _54,
                                ),
                                serde_derive_internals/src/attr.rs:263:21: 263:32 (#248),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:263:13: 263:17 (#249),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:263:13: 263:17 (#0),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:13: 268:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:16: 264:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:16: 264:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:16: 264:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:16: 264:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:31: 264:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:495 ~ serde_derive_internals[1ebf]::internals::symbol::SERDE),
            },
        ),
        ty: internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:31: 264:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:264:37: 268:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9: 460:10 (#40),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Meta,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:30: 266:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            FakeBorrow,
        ),
        ty: &'{erased} &'{erased} syn::Meta,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:30: 266:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            FakeBorrow,
        ),
        ty: &'{erased} syn::Meta,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:30: 266:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:42: 266:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _69,
                                ),
                                serde_derive_internals/src/attr.rs:266:30: 266:40 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:266:42: 266:63 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:58: 266:62 (#0),
            scope: scope[25],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                RefForGuard,
            ),
        ),
        ty: &'{erased} &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:58: 266:62 (#0),
            scope: scope[25],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:67: 266:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:67: 266:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:75: 266:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:488 ~ serde_derive_internals[1ebf]::internals::symbol::NON_EXHAUSTIVE),
            },
        ),
        ty: internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:266:75: 266:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:270:13: 274:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Meta,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:270:44: 270:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:270:20: 270:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _80,
                                ),
                                serde_derive_internals/src/attr.rs:270:44: 270:54 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:270:20: 270:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::MetaList,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:270:36: 270:40 (#0),
            scope: scope[27],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:271:17: 273:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:271:20: 271:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:271:17: 273:18 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:271:20: 271:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:271:17: 273:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:271:43: 273:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:276:13: 503:14 (#0),
                },
            ),
        ),
        ty: std::result::Result<(), syn::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:31: 501:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:276:13: 503:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:31: 276:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:276:13: 503:14 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:168 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((syn::meta::ParseNestedMeta<'^0>,)) -> std::result::Result<(), syn::Error>, bound_vars: [Region(BrAnon)] },
                (&'{erased} internals::ctxt::Ctxt, &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>, &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>, &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>, &'{erased} syn::DeriveInput, &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>, &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::Attr<'{erased}, internals::attr::Default>, &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>, &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::Attr<'{erased}, std::string::String>, &'{erased} mut internals::attr::Attr<'{erased}, std::string::String>, &'{erased} mut internals::attr::Attr<'{erased}, syn::Type>, &'{erased} mut internals::attr::Attr<'{erased}, syn::Type>, &'{erased} mut internals::attr::Attr<'{erased}, syn::Type>, &'{erased} mut internals::attr::Attr<'{erased}, syn::Path>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::BoolAttr<'{erased}>, &'{erased} mut internals::attr::Attr<'{erased}, syn::Path>, &'{erased} mut internals::attr::Attr<'{erased}, std::string::String>),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:276:13: 503:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:276:13: 503:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::DeriveInput,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:54: 501:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:20: 276:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _86,
                                ),
                                serde_derive_internals/src/attr.rs:276:31: 501:15 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:276:20: 276:28 (#0),
                    },
                ),
            ),
        ),
        ty: syn::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:276:24: 276:27 (#0),
            scope: scope[28],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:502:17: 502:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:502:17: 502:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:502:30: 502:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:506:29: 506:34 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:506:13: 506:26 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:506:13: 506:26 (#0),
            scope: scope[23],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:9: 518:10 (#300),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<syn::Attribute, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _120,
                                ),
                                serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
                    },
                ),
            ),
        ),
        ty: std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
            scope: scope[29],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::slice::Iter<'{erased}, syn::Attribute>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:9: 518:10 (#300),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:9: 518:10 (#300),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _124,
                                ),
                                serde_derive_internals/src/attr.rs:507:21: 507:32 (#301),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:507:13: 507:17 (#302),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:507:13: 507:17 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:508:13: 517:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:508:16: 508:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:508:13: 517:14 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:508:16: 508:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:508:13: 517:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:508:16: 508:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:508:13: 517:14 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:508:16: 508:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:508:13: 517:14 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:508:31: 508:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:494 ~ serde_derive_internals[1ebf]::internals::symbol::REPR),
            },
        ),
        ty: internals::symbol::Symbol,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:508:31: 508:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<(), syn::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:509:25: 516:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Attribute,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:509:25: 509:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Closure(
            DefId(0:169 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::{closure#1}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'^0.Named(DefId(0:616 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::'_), "'_") syn::parse::ParseBuffer<'^0.Named(DefId(0:616 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::'_), "'_")>,)) -> std::result::Result<(), syn::Error>, bound_vars: [Region(BrNamed(DefId(0:616 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::from_ast::'_), '_))] },
                (&'{erased} mut bool,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:509:46: 516:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:509:46: 516:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::name::MultiName,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:19: 521:98 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::name::Name,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:41: 521:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:52: 521:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:53: 521:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:59: 521:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:59: 521:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:74: 521:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::name::Name>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:84: 521:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::attr::VecAttr<'{erased}, internals::name::Name>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:521:93: 521:97 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:522:26: 522:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:522:26: 522:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:523:34: 523:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:523:34: 523:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:524:22: 524:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:524:22: 524:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::attr::Default>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:524:22: 524:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Default,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:524:46: 524:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::RenameAllRules,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:525:31: 528:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:526:28: 526:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:526:28: 526:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:526:28: 526:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:526:64: 526:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:527:30: 527:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:527:30: 527:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:527:30: 527:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:527:65: 527:81 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::RenameAllRules,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:529:38: 532:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:530:28: 530:88 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:530:28: 530:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:530:28: 530:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:530:71: 530:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:531:30: 531:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:531:30: 531:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, internals::case::RenameRule>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:531:30: 531:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:531:72: 531:88 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:533:24: 533:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:533:24: 533:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:534:23: 534:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::vec::Vec<syn::WherePredicate, std::alloc::Global>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:534:23: 534:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::TagType,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:535:18: 535:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:535:29: 535:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::DeriveInput,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:535:33: 535:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:535:39: 535:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:535:49: 535:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:535:63: 535:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:536:24: 536:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:536:24: 536:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:537:28: 537:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:537:28: 537:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:538:24: 538:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:538:24: 538:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:539:21: 539:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:539:21: 539:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: internals::attr::Identifier,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:540:25: 540:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::ctxt::Ctxt,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:540:43: 540:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::DeriveInput,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:540:47: 540:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:540:53: 540:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::BoolAttr<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:540:71: 540:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:541:25: 541:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:541:25: 541:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:542:13: 542:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:543:24: 543:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:520:9: 545:10 (#0),
                },
            ),
        ),
        ty: internals::attr::Attr<'{erased}, std::string::String>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:543:24: 543:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:544:13: 544:27 (#0),
            scope: scope[0],
        },
    },
]