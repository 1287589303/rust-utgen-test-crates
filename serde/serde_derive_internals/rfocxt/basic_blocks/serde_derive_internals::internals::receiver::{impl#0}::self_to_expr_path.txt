[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_1),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &((*_2).1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:56:49: 56:52 (#0),
                    scope: scope[0],
                },
                kind: _7 = <syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep> as std::ops::Index<usize>>::index(move _8, const 0_usize) -> [return: bb1, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _6 = &((*_7).0: proc_macro2::Ident),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:56:36: 56:65 (#0),
                    scope: scope[0],
                },
                kind: _5 = proc_macro2::Ident::span(move _6) -> [return: bb2, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:56:23: 56:66 (#0),
                    scope: scope[0],
                },
                kind: _3 = internals::receiver::ReplaceReceiver::<'_>::self_ty(move _4, move _5) -> [return: bb3, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageDead(_7),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &mut (*_2),
            StorageLive(_11),
            _11 = move (_3.1: syn::Path),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:57:23: 57:55 (#0),
                    scope: scope[1],
                },
                kind: _9 = std::mem::replace::<syn::Path>(move _10, move _11) -> [return: bb4, unwind: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            FakeRead(ForLet(None), _9),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &mut ((*_2).1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
                    scope: scope[2],
                },
                kind: _13 = <&mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep> as std::iter::IntoIterator>::into_iter(move _14) -> [return: bb5, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            PlaceMention(_13),
            StorageLive(_15),
            _15 = move _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:9: 64:10 (#564),
                    scope: scope[3],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:9: 64:10 (#564),
                    scope: scope[3],
                },
                kind: falseUnwind -> [real: bb7, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &mut _15,
            _19 = &mut (*_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
                    scope: scope[3],
                },
                kind: _18 = <syn::punctuated::IterMut<'_, syn::PathSegment> as std::iter::Iterator>::next(move _19) -> [return: bb8, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            PlaceMention(_18),
            _21 = discriminant(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
                    scope: scope[3],
                },
                kind: switchInt(move _21) -> [0: bb10, 1: bb11, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:9: 64:10 (#564),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_23),
            _23 = move ((_18 as Some).0: &mut syn::PathSegment),
            StorageLive(_24),
            _24 = &mut ((*_23).1: syn::PathArguments),
            PlaceMention(_24),
            _25 = discriminant((*_24)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:59:20: 59:60 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _25) -> [1: bb13, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = const (),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:64:9: 64:10 (#564),
                    scope: scope[2],
                },
                kind: drop(_15) -> [return: bb26, unwind: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:59:20: 59:60 (#0),
                    scope: scope[5],
                },
                kind: falseEdge -> [real: bb14, imaginary: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_26),
            _26 = &mut (((*_24) as AngleBracketed).0: syn::AngleBracketedGenericArguments),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &((*_26).0: std::option::Option<syn::token::PathSep>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:60:20: 60:52 (#0),
                    scope: scope[5],
                },
                kind: _27 = std::option::Option::<syn::token::PathSep>::is_none(move _28) -> [return: bb15, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:60:20: 60:52 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _27) -> [0: bb21, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &((*_26).2: syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:60:57: 60:82 (#0),
                    scope: scope[5],
                },
                kind: _29 = syn::punctuated::Punctuated::<syn::GenericArgument, syn::token::Comma>::is_empty(move _30) -> [return: bb17, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:60:57: 60:82 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _29) -> [0: bb19, otherwise: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:60:83: 62:18 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageLive(_31),
            StorageLive(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:61:51: 61:74 (#0),
                    scope: scope[5],
                },
                kind: _32 = <syn::token::PathSep as std::default::Default>::default() -> [return: bb20, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _31 = std::option::Option::<syn::token::PathSep>::Some(move _32),
            StorageDead(_32),
            ((*_26).0: std::option::Option<syn::token::PathSep>) = move _31,
            StorageDead(_31),
            _17 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:60:17: 62:18 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[5],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:60:17: 62:18 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageDead(_27),
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:59:13: 63:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:59:13: 63:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_17),
            _16 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:58:9: 64:10 (#564),
                    scope: scope[3],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:64:9: 64:10 (#564),
                    scope: scope[2],
                },
                kind: drop(_13) -> [return: bb27, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &(_9.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:65:12: 65:34 (#0),
                    scope: scope[2],
                },
                kind: _34 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::len(move _35) -> [return: bb28, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            _33 = Gt(move _34, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:65:12: 65:38 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _33) -> [0: bb35, otherwise: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageLive(_36),
            StorageLive(_37),
            _37 = &mut ((*_2).1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:66:38: 66:61 (#0),
                    scope: scope[2],
                },
                kind: _38 = <syn::token::PathSep as std::default::Default>::default() -> [return: bb30, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:66:13: 66:62 (#0),
                    scope: scope[2],
                },
                kind: _36 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::push_punct(move _37, move _38) -> [return: bb31, unwind: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            StorageDead(_36),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &mut ((*_2).1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            _43 = move (_9.1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:67:34: 67:63 (#0),
                    scope: scope[2],
                },
                kind: _42 = syn::punctuated::Punctuated::<syn::PathSegment, syn::token::PathSep>::into_pairs(move _43) -> [return: bb32, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:67:34: 67:71 (#0),
                    scope: scope[2],
                },
                kind: _41 = <syn::punctuated::IntoPairs<syn::PathSegment, syn::token::PathSep> as std::iter::Iterator>::skip(move _42, const 1_usize) -> [return: bb33, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:67:13: 67:72 (#0),
                    scope: scope[2],
                },
                kind: _39 = <syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep> as std::iter::Extend<syn::punctuated::Pair<syn::PathSegment, syn::token::PathSep>>>::extend::<std::iter::Skip<syn::punctuated::IntoPairs<syn::PathSegment, syn::token::PathSep>>>(move _40, move _41) -> [return: bb34, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_39),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:65:9: 68:10 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:65:9: 68:10 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:69:5: 69:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb37, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:69:5: 69:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb38, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:69:6: 69:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:67:71: 67:72 (#0),
                    scope: scope[2],
                },
                kind: drop(_41) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:67:70: 67:71 (#0),
                    scope: scope[2],
                },
                kind: drop(_42) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:67:62: 67:63 (#0),
                    scope: scope[2],
                },
                kind: drop(_43) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:64:9: 64:10 (#564),
                    scope: scope[2],
                },
                kind: drop(_15) -> [return: bb43, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:64:9: 64:10 (#564),
                    scope: scope[2],
                },
                kind: drop(_13) -> [return: bb44, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:69:5: 69:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb46, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:57:54: 57:55 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb46, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:69:5: 69:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb47, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/receiver.rs:55:5: 69:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:55:49: 55:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:55:26: 55:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/receiver.rs:55:39: 55:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/receiver.rs:55:33: 55:37 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:55:33: 55:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:55:33: 55:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/receiver.rs:56:23: 56:66 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:56:13: 56:20 (#0),
                    },
                ),
            ),
        ),
        ty: syn::TypePath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:56:13: 56:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} internals::receiver::ReplaceReceiver<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:56:23: 56:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:56:36: 56:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} proc_macro2::Ident,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:56:36: 56:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:56:49: 56:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:56:36: 56:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/receiver.rs:57:23: 57:55 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:57:13: 57:20 (#0),
                    },
                ),
            ),
        ),
        ty: syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:57:13: 57:20 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:57:36: 57:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::Path,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:57:42: 57:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:9: 64:10 (#564),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _13,
                                ),
                                serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
                    },
                ),
            ),
        ),
        ty: syn::punctuated::IterMut<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:55:5: 69:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} mut syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::IterMut<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:9: 64:10 (#564),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:9: 64:10 (#564),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                serde_derive_internals/src/receiver.rs:58:24: 58:42 (#565),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:58:13: 58:20 (#566),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:58:13: 58:20 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:59:13: 63:14 (#0),
                },
            ),
        ),
        ty: &'{erased} mut syn::PathArguments,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:59:63: 59:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:59:20: 59:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _24,
                                ),
                                serde_derive_internals/src/receiver.rs:59:63: 59:85 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/receiver.rs:59:20: 59:60 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut syn::AngleBracketedGenericArguments,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:59:50: 59:59 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:60:17: 62:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:60:20: 60:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:60:17: 62:18 (#0),
                },
            ),
        ),
        ty: &'{erased} std::option::Option<syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:60:20: 60:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:60:17: 62:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:60:57: 60:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:60:17: 62:18 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:60:57: 60:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:61:46: 61:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: syn::token::PathSep,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:61:51: 61:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:65:9: 68:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:65:12: 65:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:65:9: 68:10 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:65:12: 65:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/receiver.rs:65:9: 68:10 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:65:12: 65:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:66:13: 66:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:66:13: 66:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::token::PathSep,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:66:38: 66:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:67:13: 67:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:67:13: 67:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::iter::Skip<syn::punctuated::IntoPairs<syn::PathSegment, syn::token::PathSep>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:67:34: 67:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::punctuated::IntoPairs<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:67:34: 67:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/receiver.rs:67:34: 67:50 (#0),
            scope: scope[0],
        },
    },
]