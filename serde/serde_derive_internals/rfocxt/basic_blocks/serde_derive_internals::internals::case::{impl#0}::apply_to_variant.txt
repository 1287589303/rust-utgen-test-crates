[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _3 = discriminant(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:58:9: 58:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb9, 1: bb2, 2: bb3, 3: bb9, 4: bb4, 5: bb5, 6: bb6, 7: bb7, 8: bb8, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:58:15: 58:19 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:60:13: 60:22 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:61:13: 61:22 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb14, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:62:13: 62:22 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb16, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:63:13: 63:22 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb21, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:73:13: 73:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb43, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:74:13: 74:22 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb48, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_57),
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            StorageLive(_61),
            _61 = internals::case::RenameRule::ScreamingSnakeCase,
            StorageLive(_62),
            _62 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:75:35: 76:43 (#0),
                    scope: scope[0],
                },
                kind: _60 = internals::case::RenameRule::apply_to_variant(move _61, move _62) -> [return: bb53, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:59:13: 59:30 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:59:34: 59:52 (#0),
                    scope: scope[0],
                },
                kind: _0 = <str as std::borrow::ToOwned>::to_owned(move _4) -> [return: bb11, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:59:51: 59:52 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:60:26: 60:54 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::str::<impl str>::to_ascii_lowercase(move _5) -> [return: bb13, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:60:53: 60:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_6),
            _6 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:61:26: 61:54 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::str::<impl str>::to_ascii_uppercase(move _6) -> [return: bb15, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:61:53: 61:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &(*_2),
            StorageLive(_11),
            _11 = std::ops::RangeTo::<usize> { end: const 1_usize },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:62:33: 62:38 (#0),
                    scope: scope[0],
                },
                kind: _9 = <str as std::ops::Index<std::ops::RangeTo<usize>>>::index(move _10, move _11) -> [return: bb17, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = &(*_9),
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:62:26: 62:59 (#0),
                    scope: scope[0],
                },
                kind: _7 = std::str::<impl str>::to_ascii_lowercase(move _8) -> [return: bb18, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &(*_2),
            StorageLive(_16),
            _16 = std::ops::RangeFrom::<usize> { start: const 1_usize },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:62:70: 62:75 (#0),
                    scope: scope[0],
                },
                kind: _14 = <str as std::ops::Index<std::ops::RangeFrom<usize>>>::index(move _15, move _16) -> [return: bb19, unwind: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            _13 = &(*_14),
            _12 = &(*_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:62:26: 62:75 (#0),
                    scope: scope[0],
                },
                kind: _0 = <std::string::String as std::ops::Add<&str>>::add(move _7, move _12) -> [return: bb20, unwind: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_7),
            StorageDead(_14),
            StorageDead(_13),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:62:74: 62:75 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:64:33: 64:46 (#0),
                    scope: scope[0],
                },
                kind: _17 = std::string::String::new() -> [return: bb22, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:32: 65:54 (#0),
                    scope: scope[1],
                },
                kind: _20 = core::str::<impl str>::char_indices(move _21) -> [return: bb23, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                    scope: scope[1],
                },
                kind: _19 = <std::str::CharIndices<'_> as std::iter::IntoIterator>::into_iter(move _20) -> [return: bb24, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            PlaceMention(_19),
            StorageLive(_22),
            _22 = move _19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:17: 70:18 (#472),
                    scope: scope[2],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:17: 70:18 (#472),
                    scope: scope[2],
                },
                kind: falseUnwind -> [real: bb26, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &mut _22,
            _26 = &mut (*_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                    scope: scope[2],
                },
                kind: _25 = <std::str::CharIndices<'_> as std::iter::Iterator>::next(move _26) -> [return: bb27, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            PlaceMention(_25),
            _28 = discriminant(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                    scope: scope[2],
                },
                kind: switchInt(move _28) -> [0: bb29, 1: bb30, otherwise: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                    scope: scope[2],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:17: 70:18 (#472),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb31, imaginary: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_30),
            _30 = (((_25 as Some).0: (usize, char)).0: usize),
            StorageLive(_31),
            _31 = (((_25 as Some).0: (usize, char)).1: char),
            StorageLive(_32),
            StorageLive(_33),
            StorageLive(_34),
            _34 = _30,
            _33 = Gt(move _34, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:66:24: 66:29 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _33) -> [0: bb37, otherwise: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = const (),
            StorageDead(_27),
            StorageDead(_25),
            StorageDead(_24),
            StorageDead(_22),
            StorageDead(_19),
            StorageDead(_18),
            _0 = move _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:72:13: 72:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_17) -> [return: bb42, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageLive(_35),
            StorageLive(_36),
            _36 = _31,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:66:33: 66:50 (#0),
                    scope: scope[3],
                },
                kind: _35 = std::char::methods::<impl char>::is_uppercase(move _36) -> [return: bb33, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:66:33: 66:50 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _35) -> [0: bb36, otherwise: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &mut _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:67:25: 67:40 (#0),
                    scope: scope[3],
                },
                kind: _37 = std::string::String::push(move _38, const '_') -> [return: bb35, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            _32 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:66:21: 68:22 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[3],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _32 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:66:21: 68:22 (#0),
                    scope: scope[3],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
            StorageDead(_33),
            StorageDead(_32),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &mut _17,
            StorageLive(_41),
            StorageLive(_42),
            _42 = &_31,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:69:32: 69:55 (#0),
                    scope: scope[3],
                },
                kind: _41 = std::char::methods::<impl char>::to_ascii_lowercase(move _42) -> [return: bb40, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:69:21: 69:56 (#0),
                    scope: scope[3],
                },
                kind: _39 = std::string::String::push(move _40, move _41) -> [return: bb41, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_39),
            _24 = const (),
            StorageDead(_31),
            StorageDead(_30),
            StorageDead(_27),
            StorageDead(_25),
            StorageDead(_24),
            _23 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:65:17: 70:18 (#472),
                    scope: scope[2],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:72:13: 72:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            _47 = internals::case::RenameRule::SnakeCase,
            StorageLive(_48),
            _48 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:73:35: 73:70 (#0),
                    scope: scope[0],
                },
                kind: _46 = internals::case::RenameRule::apply_to_variant(move _47, move _48) -> [return: bb44, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = &_46,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:73:35: 73:91 (#0),
                    scope: scope[0],
                },
                kind: _44 = <std::string::String as std::ops::Deref>::deref(move _45) -> [return: bb45, unwind: bb60],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _43 = &(*_44),
            StorageDead(_48),
            StorageDead(_47),
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:73:35: 73:91 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::str::<impl str>::to_ascii_uppercase(move _43) -> [return: bb46, unwind: bb60],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:73:90: 73:91 (#0),
                    scope: scope[0],
                },
                kind: drop(_46) -> [return: bb47, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:73:90: 73:91 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_49),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            _53 = internals::case::RenameRule::SnakeCase,
            StorageLive(_54),
            _54 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:74:26: 74:61 (#0),
                    scope: scope[0],
                },
                kind: _52 = internals::case::RenameRule::apply_to_variant(move _53, move _54) -> [return: bb49, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _51 = &_52,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:74:26: 74:79 (#0),
                    scope: scope[0],
                },
                kind: _50 = <std::string::String as std::ops::Deref>::deref(move _51) -> [return: bb50, unwind: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _49 = &(*_50),
            StorageDead(_54),
            StorageDead(_53),
            StorageDead(_51),
            StorageLive(_55),
            StorageLive(_56),
            _56 = const "-",
            _55 = &(*_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:74:26: 74:79 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::str::<impl str>::replace::<'_, char>(move _49, const '_', move _55) -> [return: bb51, unwind: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            StorageDead(_49),
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:74:78: 74:79 (#0),
                    scope: scope[0],
                },
                kind: drop(_52) -> [return: bb52, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            StorageDead(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:74:78: 74:79 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _59 = &_60,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:75:35: 77:35 (#0),
                    scope: scope[0],
                },
                kind: _58 = <std::string::String as std::ops::Deref>::deref(move _59) -> [return: bb54, unwind: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _57 = &(*_58),
            StorageDead(_62),
            StorageDead(_61),
            StorageDead(_59),
            StorageLive(_63),
            StorageLive(_64),
            _64 = const "-",
            _63 = &(*_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:75:35: 77:35 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::str::<impl str>::replace::<'_, char>(move _57, const '_', move _63) -> [return: bb55, unwind: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageDead(_57),
            StorageDead(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:77:34: 77:35 (#0),
                    scope: scope[0],
                },
                kind: drop(_60) -> [return: bb56, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:77:34: 77:35 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:79:6: 79:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:77:34: 77:35 (#0),
                    scope: scope[0],
                },
                kind: drop(_60) -> [return: bb63, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:74:78: 74:79 (#0),
                    scope: scope[0],
                },
                kind: drop(_52) -> [return: bb63, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:73:90: 73:91 (#0),
                    scope: scope[0],
                },
                kind: drop(_46) -> [return: bb63, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:72:13: 72:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_17) -> [return: bb63, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:62:74: 62:75 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb63, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/case.rs:57:5: 79:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:57:53: 57:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:57:29: 57:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/case.rs:57:44: 57:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/case.rs:57:35: 57:42 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/case.rs:57:35: 57:42 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:57:35: 57:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:59:13: 59:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:59:34: 59:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:60:26: 60:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:61:26: 61:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:26: 62:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:26: 62:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:33: 62:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:26: 62:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: std::ops::RangeTo<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:34: 62:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:62: 62:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:62: 62:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:70: 62:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:63: 62:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: std::ops::RangeFrom<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:62:71: 62:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/case.rs:64:33: 64:46 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/case.rs:64:21: 64:30 (#0),
                    },
                ),
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:64:21: 64:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:17: 70:18 (#472),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::str::CharIndices<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::str::CharIndices<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _19,
                                ),
                                serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                    },
                ),
            ),
        ),
        ty: std::str::CharIndices<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:57:5: 79:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<(usize, char)>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::str::CharIndices<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::str::CharIndices<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:17: 70:18 (#472),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:17: 70:18 (#472),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _25,
                                ),
                                serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/case.rs:65:21: 65:28 (#474),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:22: 65:23 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _25,
                                ),
                                serde_derive_internals/src/case.rs:65:32: 65:54 (#473),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/case.rs:65:21: 65:28 (#474),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:65:25: 65:27 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:66:21: 68:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:66:24: 66:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:66:24: 66:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:66:33: 66:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:66:33: 66:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:67:25: 67:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:67:25: 67:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:69:21: 69:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:69:21: 69:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:69:32: 69:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:69:32: 69:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:73:35: 73:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:73:35: 73:91 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:73:35: 73:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:73:35: 73:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:73:35: 73:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:73:62: 73:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:26: 74:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:26: 74:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:26: 74:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:26: 74:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:26: 74:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:53: 74:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:75: 74:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:74:75: 74:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:75:35: 76:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:75:35: 77:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:75:35: 76:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:75:35: 76:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: internals::case::RenameRule,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:75:35: 75:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:76:35: 76:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:77:31: 77:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/case.rs:58:9: 78:10 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/case.rs:77:31: 77:34 (#0),
            scope: scope[0],
        },
    },
]