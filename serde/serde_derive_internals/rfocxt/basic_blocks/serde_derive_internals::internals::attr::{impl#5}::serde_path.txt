[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:613:9: 613:33 (#0),
                    scope: scope[0],
                },
                kind: _2 = internals::attr::Container::custom_serde_path(move _3) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_4),
            _4 = {closure@serde_derive_internals/src/attr.rs:614:26: 614:28},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:613:9: 614:77 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::option::Option::<&syn::Path>::map_or_else::<std::borrow::Cow<'_, syn::Path>, {closure@serde_derive_internals/src/attr.rs:614:26: 614:28}, fn(&syn::Path) -> std::borrow::Cow<'_, syn::Path> {std::borrow::Cow::<'_, syn::Path>::Borrowed}>(move _2, move _4, std::borrow::Cow::<'_, syn::Path>::Borrowed) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:615:6: 615:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:612:5: 615:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::borrow::Cow<'{erased}, syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:612:33: 612:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} internals::attr::Container,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:612:23: 612:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:613:9: 614:77 (#0),
                },
            ),
        ),
        ty: std::option::Option<&'{erased} syn::Path>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:613:9: 613:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:613:9: 614:77 (#0),
                },
            ),
        ),
        ty: &'{erased} internals::attr::Container,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:613:9: 613:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:613:9: 614:77 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:189 ~ serde_derive_internals[1ebf]::internals::attr::{impl#5}::serde_path::{closure#0}),
            [
                i32,
                Binder { value: extern "RustCall" fn(()) -> std::borrow::Cow<'{erased}, syn::Path>, bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:614:26: 614:61 (#0),
            scope: scope[0],
        },
    },
]