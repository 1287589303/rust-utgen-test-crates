[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _3 = discriminant((*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1751:5: 1751:13 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb3, 1: bb11, 2: bb9, 3: bb11, 4: bb11, 5: bb10, 6: bb11, 7: bb8, 8: bb7, 9: bb4, 10: bb5, 11: bb2, 12: bb11, 13: bb6, 14: bb11, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1813:14: 1813:16 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1753:9: 1753:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1756:9: 1756:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb14, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1759:9: 1759:27 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb16, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1762:9: 1762:33 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb18, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1766:9: 1766:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb23, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1771:9: 1771:28 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb35, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1797:9: 1797:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb77, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1800:9: 1800:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb79, imaginary: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1803:9: 1803:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb81, imaginary: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1806:9: 1811:33 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb84, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &(((*_1) as Slice).0: syn::TypeSlice),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &((*_4).1: std::boxed::Box<syn::Type>),
            _6 = &(*(*_7)),
            StorageLive(_8),
            _8 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1754:13: 1754:45 (#0),
                    scope: scope[1],
                },
                kind: _5 = internals::attr::collect_lifetimes(move _6, move _8) -> [return: bb13, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_6),
            StorageDead(_7),
            StorageDead(_5),
            _0 = const (),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1755:9: 1755:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = &(((*_1) as Array).0: syn::TypeArray),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &((*_9).1: std::boxed::Box<syn::Type>),
            _11 = &(*(*_12)),
            StorageLive(_13),
            _13 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1757:13: 1757:45 (#0),
                    scope: scope[2],
                },
                kind: _10 = internals::attr::collect_lifetimes(move _11, move _13) -> [return: bb15, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_11),
            StorageDead(_12),
            StorageDead(_10),
            _0 = const (),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1758:9: 1758:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_14),
            _14 = &(((*_1) as Ptr).0: syn::TypePtr),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &((*_14).3: std::boxed::Box<syn::Type>),
            _16 = &(*(*_17)),
            StorageLive(_18),
            _18 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1760:13: 1760:45 (#0),
                    scope: scope[3],
                },
                kind: _15 = internals::attr::collect_lifetimes(move _16, move _18) -> [return: bb17, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_17),
            StorageDead(_15),
            _0 = const (),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1761:9: 1761:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_19),
            _19 = &(((*_1) as Reference).0: syn::TypeReference),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &mut (*_2),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &((*_19).1: std::option::Option<syn::Lifetime>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1763:24: 1763:42 (#0),
                    scope: scope[4],
                },
                kind: _23 = std::option::Option::<syn::Lifetime>::iter(move _24) -> [return: bb19, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1763:24: 1763:51 (#0),
                    scope: scope[4],
                },
                kind: _22 = <std::option::Iter<'_, syn::Lifetime> as std::iter::Iterator>::cloned::<'_, syn::Lifetime>(move _23) -> [return: bb20, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1763:13: 1763:52 (#0),
                    scope: scope[4],
                },
                kind: _20 = <std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend::<std::iter::Cloned<std::option::Iter<'_, syn::Lifetime>>>(move _21, move _22) -> [return: bb21, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_20),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &((*_19).3: std::boxed::Box<syn::Type>),
            _26 = &(*(*_27)),
            StorageLive(_28),
            _28 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1764:13: 1764:45 (#0),
                    scope: scope[4],
                },
                kind: _25 = internals::attr::collect_lifetimes(move _26, move _28) -> [return: bb22, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_27),
            StorageDead(_25),
            _0 = const (),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1765:9: 1765:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_29),
            _29 = &(((*_1) as Tuple).0: syn::TypeTuple),
            StorageLive(_30),
            StorageLive(_31),
            _31 = &((*_29).1: syn::punctuated::Punctuated<syn::Type, syn::token::Comma>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
                    scope: scope[5],
                },
                kind: _30 = <&syn::punctuated::Punctuated<syn::Type, syn::token::Comma> as std::iter::IntoIterator>::into_iter(move _31) -> [return: bb24, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            PlaceMention(_30),
            StorageLive(_32),
            _32 = move _30,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
                    scope: scope[6],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
                    scope: scope[6],
                },
                kind: falseUnwind -> [real: bb26, unwind: bb92],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            _37 = &mut _32,
            _36 = &mut (*_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
                    scope: scope[6],
                },
                kind: _35 = <syn::punctuated::Iter<'_, syn::Type> as std::iter::Iterator>::next(move _36) -> [return: bb27, unwind: bb92],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            PlaceMention(_35),
            _38 = discriminant(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
                    scope: scope[6],
                },
                kind: switchInt(move _38) -> [0: bb29, 1: bb30, otherwise: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
                    scope: scope[6],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
                    scope: scope[6],
                },
                kind: falseEdge -> [real: bb31, imaginary: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_40),
            _40 = ((_35 as Some).0: &syn::Type),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &(*_40),
            StorageLive(_43),
            _43 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1768:17: 1768:45 (#0),
                    scope: scope[7],
                },
                kind: _41 = internals::attr::collect_lifetimes(move _42, move _43) -> [return: bb32, unwind: bb92],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
            StorageDead(_37),
            StorageDead(_35),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1769:13: 1769:14 (#455),
                    scope: scope[5],
                },
                kind: drop(_32) -> [return: bb33, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_42),
            StorageDead(_41),
            _34 = const (),
            StorageDead(_40),
            StorageDead(_37),
            StorageDead(_35),
            StorageDead(_34),
            _33 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
                    scope: scope[6],
                },
                kind: goto -> bb25,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1769:13: 1769:14 (#455),
                    scope: scope[5],
                },
                kind: drop(_30) -> [return: bb34, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1770:9: 1770:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_44),
            _44 = &(((*_1) as Path).0: syn::TypePath),
            StorageLive(_45),
            StorageLive(_46),
            _46 = &((*_44).0: std::option::Option<syn::QSelf>),
            PlaceMention(_46),
            _47 = discriminant((*_46)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1772:20: 1772:31 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _47) -> [1: bb36, otherwise: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1772:20: 1772:31 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb37, imaginary: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_48),
            _48 = &(((*_46) as Some).0: syn::QSelf),
            StorageLive(_49),
            StorageLive(_50),
            StorageLive(_51),
            _51 = &((*_48).1: std::boxed::Box<syn::Type>),
            _50 = &(*(*_51)),
            StorageLive(_52),
            _52 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1773:17: 1773:50 (#0),
                    scope: scope[9],
                },
                kind: _49 = internals::attr::collect_lifetimes(move _50, move _52) -> [return: bb38, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            StorageDead(_50),
            StorageDead(_51),
            StorageDead(_49),
            _45 = const (),
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1772:13: 1774:14 (#0),
                    scope: scope[8],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1772:13: 1774:14 (#0),
                    scope: scope[8],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_45),
            StorageLive(_53),
            StorageLive(_54),
            _54 = &(((*_44).1: syn::Path).1: syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
                    scope: scope[8],
                },
                kind: _53 = <&syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep> as std::iter::IntoIterator>::into_iter(move _54) -> [return: bb41, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            PlaceMention(_53),
            StorageLive(_55),
            _55 = move _53,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
                    scope: scope[10],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
                    scope: scope[10],
                },
                kind: falseUnwind -> [real: bb43, unwind: bb90],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            StorageLive(_59),
            _59 = &mut _55,
            _58 = &mut (*_59),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
                    scope: scope[10],
                },
                kind: _57 = <syn::punctuated::Iter<'_, syn::PathSegment> as std::iter::Iterator>::next(move _58) -> [return: bb44, unwind: bb90],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
            PlaceMention(_57),
            _60 = discriminant(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
                    scope: scope[10],
                },
                kind: switchInt(move _60) -> [0: bb46, 1: bb47, otherwise: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
                    scope: scope[10],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
                    scope: scope[10],
                },
                kind: falseEdge -> [real: bb48, imaginary: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_62),
            _62 = ((_57 as Some).0: &syn::PathSegment),
            StorageLive(_63),
            _63 = &((*_62).1: syn::PathArguments),
            PlaceMention(_63),
            _64 = discriminant((*_63)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1776:24: 1776:69 (#0),
                    scope: scope[12],
                },
                kind: switchInt(move _64) -> [1: bb49, otherwise: bb73],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
            StorageDead(_59),
            StorageDead(_57),
            StorageDead(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1795:13: 1795:14 (#458),
                    scope: scope[8],
                },
                kind: drop(_55) -> [return: bb75, unwind: bb91],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1776:24: 1776:69 (#0),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb50, imaginary: bb73],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_65),
            _65 = &(((*_63) as AngleBracketed).0: syn::AngleBracketedGenericArguments),
            StorageLive(_66),
            StorageLive(_67),
            _67 = &((*_65).2: syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
                    scope: scope[12],
                },
                kind: _66 = <&syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma> as std::iter::IntoIterator>::into_iter(move _67) -> [return: bb51, unwind: bb90],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            PlaceMention(_66),
            StorageLive(_68),
            _68 = move _66,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
                    scope: scope[13],
                },
                kind: goto -> bb52,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
                    scope: scope[13],
                },
                kind: falseUnwind -> [real: bb53, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_69),
            StorageLive(_70),
            StorageLive(_71),
            StorageLive(_72),
            _72 = &mut _68,
            _71 = &mut (*_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
                    scope: scope[13],
                },
                kind: _70 = <syn::punctuated::Iter<'_, syn::GenericArgument> as std::iter::Iterator>::next(move _71) -> [return: bb54, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_71),
            PlaceMention(_70),
            _73 = discriminant(_70),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
                    scope: scope[13],
                },
                kind: switchInt(move _73) -> [0: bb56, 1: bb57, otherwise: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _70),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
                    scope: scope[13],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
                    scope: scope[13],
                },
                kind: falseEdge -> [real: bb58, imaginary: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_75),
            _75 = ((_70 as Some).0: &syn::GenericArgument),
            PlaceMention(_75),
            _76 = discriminant((*_75)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1778:25: 1778:34 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _76) -> [0: bb59, 1: bb60, 2: bb62, 3: bb61, 4: bb62, 5: bb62, otherwise: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _56 = const (),
            StorageDead(_72),
            StorageDead(_70),
            StorageDead(_69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1793:21: 1793:22 (#461),
                    scope: scope[12],
                },
                kind: drop(_68) -> [return: bb71, unwind: bb89],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1779:29: 1779:69 (#0),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb63, imaginary: bb60],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1782:29: 1782:59 (#0),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb66, imaginary: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1785:29: 1785:69 (#0),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb68, imaginary: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _69 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1791:36: 1791:38 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_77),
            _77 = &(((*_75) as Lifetime).0: syn::Lifetime),
            StorageLive(_78),
            StorageLive(_79),
            _79 = &mut (*_2),
            StorageLive(_80),
            StorageLive(_81),
            _81 = &(*_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1780:44: 1780:60 (#0),
                    scope: scope[15],
                },
                kind: _80 = <syn::Lifetime as std::clone::Clone>::clone(move _81) -> [return: bb64, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_81),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1780:33: 1780:61 (#0),
                    scope: scope[15],
                },
                kind: _78 = std::collections::BTreeSet::<syn::Lifetime>::insert(move _79, move _80) -> [return: bb65, unwind: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            StorageDead(_79),
            StorageDead(_78),
            _69 = const (),
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1781:29: 1781:30 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_82),
            _82 = &(((*_75) as Type).0: syn::Type),
            StorageLive(_83),
            StorageLive(_84),
            _84 = &(*_82),
            StorageLive(_85),
            _85 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1783:33: 1783:59 (#0),
                    scope: scope[16],
                },
                kind: _83 = internals::attr::collect_lifetimes(move _84, move _85) -> [return: bb67, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_85),
            StorageDead(_84),
            StorageDead(_83),
            _69 = const (),
            StorageDead(_82),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1784:29: 1784:30 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_86),
            _86 = &(((*_75) as AssocType).0: syn::AssocType),
            StorageLive(_87),
            StorageLive(_88),
            StorageLive(_89),
            _89 = &((*_86).3: syn::Type),
            _88 = &(*_89),
            StorageLive(_90),
            _90 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1786:33: 1786:68 (#0),
                    scope: scope[17],
                },
                kind: _87 = internals::attr::collect_lifetimes(move _88, move _90) -> [return: bb69, unwind: bb88],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
            StorageDead(_88),
            StorageDead(_89),
            StorageDead(_87),
            _69 = const (),
            StorageDead(_86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1787:29: 1787:30 (#0),
                    scope: scope[14],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
            StorageDead(_72),
            StorageDead(_70),
            StorageDead(_69),
            _33 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
                    scope: scope[13],
                },
                kind: goto -> bb52,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1793:21: 1793:22 (#461),
                    scope: scope[12],
                },
                kind: drop(_66) -> [return: bb72, unwind: bb90],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
            StorageDead(_65),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1776:17: 1794:18 (#0),
                    scope: scope[11],
                },
                kind: goto -> bb74,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _56 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1776:17: 1794:18 (#0),
                    scope: scope[11],
                },
                kind: goto -> bb74,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
            StorageDead(_62),
            StorageDead(_59),
            StorageDead(_57),
            StorageDead(_56),
            _33 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
                    scope: scope[10],
                },
                kind: goto -> bb42,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1795:13: 1795:14 (#458),
                    scope: scope[8],
                },
                kind: drop(_53) -> [return: bb76, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
            StorageDead(_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1796:9: 1796:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_91),
            _91 = &(((*_1) as Paren).0: syn::TypeParen),
            StorageLive(_92),
            StorageLive(_93),
            StorageLive(_94),
            _94 = &((*_91).1: std::boxed::Box<syn::Type>),
            _93 = &(*(*_94)),
            StorageLive(_95),
            _95 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1798:13: 1798:45 (#0),
                    scope: scope[18],
                },
                kind: _92 = internals::attr::collect_lifetimes(move _93, move _95) -> [return: bb78, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            StorageDead(_93),
            StorageDead(_94),
            StorageDead(_92),
            _0 = const (),
            StorageDead(_91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1799:9: 1799:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_96),
            _96 = &(((*_1) as Group).0: syn::TypeGroup),
            StorageLive(_97),
            StorageLive(_98),
            StorageLive(_99),
            _99 = &((*_96).1: std::boxed::Box<syn::Type>),
            _98 = &(*(*_99)),
            StorageLive(_100),
            _100 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1801:13: 1801:45 (#0),
                    scope: scope[19],
                },
                kind: _97 = internals::attr::collect_lifetimes(move _98, move _100) -> [return: bb80, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
            StorageDead(_98),
            StorageDead(_99),
            StorageDead(_97),
            _0 = const (),
            StorageDead(_96),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1802:9: 1802:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_101),
            _101 = &(((*_1) as Macro).0: syn::TypeMacro),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            _104 = &(((*_101).0: syn::Macro).3: proc_macro2::TokenStream),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1804:43: 1804:64 (#0),
                    scope: scope[20],
                },
                kind: _103 = <proc_macro2::TokenStream as std::clone::Clone>::clone(move _104) -> [return: bb82, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_104),
            StorageLive(_105),
            _105 = &mut (*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1804:13: 1804:70 (#0),
                    scope: scope[20],
                },
                kind: _102 = internals::attr::collect_lifetimes_from_tokens(move _103, move _105) -> [return: bb83, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageDead(_103),
            StorageDead(_102),
            _0 = const (),
            StorageDead(_101),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1805:9: 1805:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1811:37: 1811:39 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1815:2: 1815:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1804:69: 1804:70 (#0),
                    scope: scope[20],
                },
                kind: drop(_103) -> [return: bb94, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1780:60: 1780:61 (#0),
                    scope: scope[15],
                },
                kind: drop(_80) -> [return: bb88, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1793:21: 1793:22 (#461),
                    scope: scope[12],
                },
                kind: drop(_68) -> [return: bb89, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1793:21: 1793:22 (#461),
                    scope: scope[12],
                },
                kind: drop(_66) -> [return: bb90, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1795:13: 1795:14 (#458),
                    scope: scope[8],
                },
                kind: drop(_55) -> [return: bb91, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1795:13: 1795:14 (#458),
                    scope: scope[8],
                },
                kind: drop(_53) -> [return: bb94, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1769:13: 1769:14 (#455),
                    scope: scope[5],
                },
                kind: drop(_32) -> [return: bb93, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1769:13: 1769:14 (#455),
                    scope: scope[5],
                },
                kind: drop(_30) -> [return: bb94, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1750:1: 1815:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1750:72: 1750:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1750:26: 1750:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1750:22: 1750:24 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1750:22: 1750:24 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1750:22: 1750:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1750:43: 1750:71 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1750:38: 1750:41 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1750:38: 1750:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1750:38: 1750:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1753:9: 1753:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1753:9: 1753:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1753:26: 1753:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1754:13: 1754:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1754:31: 1754:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1754:31: 1754:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1754:41: 1754:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1756:9: 1756:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeArray,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1756:26: 1756:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1757:13: 1757:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1757:31: 1757:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1757:31: 1757:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1757:41: 1757:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1759:9: 1759:27 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypePtr,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1759:24: 1759:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1760:13: 1760:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1760:31: 1760:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1760:31: 1760:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1760:41: 1760:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1762:9: 1762:33 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeReference,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1762:30: 1762:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1763:13: 1763:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1763:13: 1763:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::iter::Cloned<std::option::Iter<'{erased}, syn::Lifetime>>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1763:24: 1763:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Iter<'{erased}, syn::Lifetime>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1763:24: 1763:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::option::Option<syn::Lifetime>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1763:24: 1763:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1764:13: 1764:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1764:31: 1764:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1764:31: 1764:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1764:41: 1764:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1766:9: 1766:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeTuple,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1766:26: 1766:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
                },
            ),
        ),
        ty: syn::punctuated::Iter<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::Type, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _30,
                                ),
                                serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
                    },
                ),
            ),
        ),
        ty: syn::punctuated::Iter<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1750:1: 1815:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Iter<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Iter<'{erased}, syn::Type>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:13: 1769:14 (#455),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _35,
                                ),
                                serde_derive_internals/src/attr.rs:1767:25: 1767:34 (#456),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1767:17: 1767:21 (#457),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1767:17: 1767:21 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1768:17: 1768:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1768:35: 1768:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1768:41: 1768:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1771:9: 1771:28 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypePath,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1771:25: 1771:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1772:13: 1774:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::option::Option<syn::QSelf>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1772:34: 1772:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1772:20: 1772:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _46,
                                ),
                                serde_derive_internals/src/attr.rs:1772:34: 1772:43 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1772:20: 1772:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::QSelf,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1772:25: 1772:30 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1773:17: 1773:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1773:35: 1773:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1773:35: 1773:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1773:46: 1773:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
                },
            ),
        ),
        ty: syn::punctuated::Iter<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _53,
                                ),
                                serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
                    },
                ),
            ),
        ),
        ty: syn::punctuated::Iter<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Iter<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Iter<'{erased}, syn::PathSegment>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:13: 1795:14 (#458),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _57,
                                ),
                                serde_derive_internals/src/attr.rs:1775:24: 1775:41 (#459),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1775:17: 1775:20 (#460),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::PathSegment,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1775:17: 1775:20 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1776:17: 1794:18 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::PathArguments,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1776:72: 1776:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1776:24: 1776:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _63,
                                ),
                                serde_derive_internals/src/attr.rs:1776:72: 1776:86 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1776:24: 1776:69 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::AngleBracketedGenericArguments,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1776:59: 1776:68 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
                },
            ),
        ),
        ty: syn::punctuated::Iter<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
                },
            ),
        ),
        ty: &'{erased} syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _66,
                                ),
                                serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
                    },
                ),
            ),
        ),
        ty: syn::punctuated::Iter<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::option::Option<&'{erased} syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Iter<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut syn::punctuated::Iter<'{erased}, syn::GenericArgument>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:21: 1793:22 (#461),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _70,
                                ),
                                serde_derive_internals/src/attr.rs:1777:32: 1777:47 (#462),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1777:25: 1777:28 (#463),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::GenericArgument,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1777:25: 1777:28 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1779:29: 1779:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _75,
                                ),
                                serde_derive_internals/src/attr.rs:1778:31: 1778:34 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1779:29: 1779:69 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Lifetime,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1779:60: 1779:68 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1780:33: 1780:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1780:33: 1780:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: syn::Lifetime,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1780:44: 1780:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Lifetime,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1780:44: 1780:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _75,
                                ),
                                serde_derive_internals/src/attr.rs:1778:31: 1778:34 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1782:29: 1782:59 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1782:56: 1782:58 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1783:33: 1783:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1783:51: 1783:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1783:55: 1783:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _75,
                                ),
                                serde_derive_internals/src/attr.rs:1778:31: 1778:34 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1785:29: 1785:69 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::AssocType,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1785:61: 1785:68 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1786:33: 1786:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1786:51: 1786:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1786:51: 1786:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1786:64: 1786:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1797:9: 1797:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeParen,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1797:26: 1797:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1798:13: 1798:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1798:31: 1798:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1798:31: 1798:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1798:41: 1798:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1800:9: 1800:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeGroup,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1800:26: 1800:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1801:13: 1801:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1801:31: 1801:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1801:31: 1801:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1801:41: 1801:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                serde_derive_internals/src/attr.rs:1751:11: 1751:13 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1803:9: 1803:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeMacro,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1803:26: 1803:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1804:13: 1804:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1804:43: 1804:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1804:43: 1804:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::collections::BTreeSet<syn::Lifetime, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1804:66: 1804:69 (#0),
            scope: scope[0],
        },
    },
]