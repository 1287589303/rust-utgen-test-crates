[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1707:11: 1707:22 (#0),
                    scope: scope[0],
                },
                kind: _2 = internals::ungroup(move _3) -> [return: bb1, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            PlaceMention(_2),
            _4 = discriminant((*_2)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1707:5: 1707:22 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [11: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const false,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1709:14: 1709:19 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1708:9: 1708:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = &(((*_2) as Slice).0: syn::TypeSlice),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &((*_5).1: std::boxed::Box<syn::Type>),
            _6 = &(*(*_7)),
            StorageLive(_8),
            StorageLive(_9),
            _9 = const "u8",
            _8 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1708:33: 1708:66 (#0),
                    scope: scope[1],
                },
                kind: _0 = internals::attr::is_primitive_type(move _6, move _8) -> [return: bb5, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_6),
            StorageDead(_9),
            StorageDead(_7),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1708:65: 1708:66 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1711:2: 1711:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:1706:1: 1711:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1706:35: 1706:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:1706:20: 1706:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:1706:16: 1706:18 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1706:16: 1706:18 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1706:16: 1706:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1707:5: 1710:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1707:11: 1707:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1707:5: 1710:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1707:19: 1707:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1708:9: 1708:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                serde_derive_internals/src/attr.rs:1707:11: 1707:22 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:1708:9: 1708:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} syn::TypeSlice,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1708:26: 1708:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1707:5: 1710:6 (#0),
                },
            ),
        ),
        ty: &'{erased} syn::Type,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1708:51: 1708:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1707:5: 1710:6 (#0),
                },
            ),
        ),
        ty: &'{erased} std::boxed::Box<syn::Type, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1708:51: 1708:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1707:5: 1710:6 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1708:61: 1708:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde_derive_internals/src/attr.rs:1707:5: 1710:6 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:1708:61: 1708:65 (#0),
            scope: scope[0],
        },
    },
]