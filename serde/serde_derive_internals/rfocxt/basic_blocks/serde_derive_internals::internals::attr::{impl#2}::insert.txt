[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &((*_1).3: std::vec::Vec<T>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:112:12: 112:29 (#0),
                    scope: scope[0],
                },
                kind: _6 = std::vec::Vec::<T>::len(move _7) -> [return: bb1, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            _5 = Eq(move _6, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:112:12: 112:34 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb7, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageLive(_8),
            StorageLive(_9),
            _9 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:113:37: 113:60 (#0),
                    scope: scope[0],
                },
                kind: _8 = <A as quote::ToTokens>::into_token_stream(move _9) -> [return: bb3, unwind: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:113:13: 113:34 (#0),
                    scope: scope[0],
                },
                kind: drop(((*_1).2: proc_macro2::TokenStream)) -> [return: bb4, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: proc_macro2::TokenStream) = move _8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:113:59: 113:60 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb6, unwind: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: proc_macro2::TokenStream) = move _8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:113:59: 113:60 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb14, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            _4 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:112:9: 114:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            _4 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:112:9: 114:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &mut ((*_1).3: std::vec::Vec<T>),
            StorageLive(_12),
            _12 = move _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:115:9: 115:32 (#0),
                    scope: scope[0],
                },
                kind: _10 = std::vec::Vec::<T>::push(move _11, move _12) -> [return: bb9, unwind: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:116:5: 116:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb10, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:116:5: 116:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb11, unwind: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:116:6: 116:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:115:31: 115:32 (#0),
                    scope: scope[0],
                },
                kind: drop(_12) -> [return: bb14, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:113:59: 113:60 (#0),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb14, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:116:5: 116:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb15, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:116:5: 116:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb16, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde_derive_internals/src/attr.rs:111:5: 116:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:111:56: 111:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut internals::attr::VecAttr<'{erased}, T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:111:28: 111:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:111:44: 111:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:111:39: 111:42 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:111:39: 111:42 (#0),
                    },
                ),
            ),
        ),
        ty: A/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:111:39: 111:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde_derive_internals/src/attr.rs:111:54: 111:55 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde_derive_internals/src/attr.rs:111:47: 111:52 (#0),
                            ),
                        ),
                        pat_span: serde_derive_internals/src/attr.rs:111:47: 111:52 (#0),
                    },
                ),
            ),
        ),
        ty: T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:111:47: 111:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:112:9: 114:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:112:12: 112:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:112:12: 112:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<T/#1, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:112:12: 112:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: proc_macro2::TokenStream,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:113:37: 113:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: A/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:113:37: 113:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:115:9: 115:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<T/#1, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:115:9: 115:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: T/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: serde_derive_internals/src/attr.rs:115:26: 115:31 (#0),
            scope: scope[0],
        },
    },
]