{"mod_name":"de::value","calls":["std::option::Option::<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second>::take","std::option::Option::<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second>::expect","<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second as de::IntoDeserializer<'_, E>>::into_deserializer","<T as de::DeserializeSeed<'_>>::deserialize::<<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second as de::IntoDeserializer<'_, E>>::Deserializer>"],"types":["str","std::result::Result<<T as de::DeserializeSeed<'_>>::Value, E>","<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second","std::option::Option<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second>","T","E","<T as de::DeserializeSeed<'_>>::Value","<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second as de::IntoDeserializer<'_, E>>::Deserializer","I","de::value::MapDeserializer<'_, I, E>"]}