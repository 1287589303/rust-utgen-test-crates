{"mod_name":"de::value","calls":["<std::iter::Fuse<I> as std::iter::Iterator>::next","<T as de::IntoDeserializer<'_, E>>::into_deserializer","std::result::Result::<<V as de::DeserializeSeed<'_>>::Value, E>::map::<std::option::Option<<V as de::DeserializeSeed<'_>>::Value>, fn","<V as de::DeserializeSeed<'_>>::deserialize::<<T as de::IntoDeserializer<'_, E>>::Deserializer>"],"types":["<T as de::IntoDeserializer<'_, E>>::Deserializer","T","std::result::Result<std::option::Option<<V as de::DeserializeSeed<'_>>::Value>, E>","de::value::SeqDeserializer<I, E>","I","isize","std::result::Result<<V as de::DeserializeSeed<'_>>::Value, E>","std::iter::Fuse<I>","E","usize","fn(<V as de::DeserializeSeed<'_>>::Value) -> std::option::Option<<V as de::DeserializeSeed<'_>>::Value> {std::option::Option::<<V as de::DeserializeSeed<'_>>::Value>::Some}","V","<V as de::DeserializeSeed<'_>>::Value","std::option::Option<T>","std::option::Option<<V as de::DeserializeSeed<'_>>::Value>","(usize, bool)","bool"]}