{"mod_name":"__private::ser::content","calls":["<S as ser::Serializer>::serialize_str","<S as ser::Serializer>::serialize_struct_variant","<<S as ser::Serializer>::SerializeTupleStruct as ser::SerializeTupleStruct>::serialize_field::<__private::ser::content::Content>","<<S as ser::Serializer>::SerializeStruct as ser::SerializeStruct>::serialize_field::<__private::ser::content::Content>","<S as ser::Serializer>::serialize_unit_variant","<S as ser::Serializer>::serialize_some::<__private::ser::content::Content>","std::vec::Vec::<__private::ser::content::Content>::len","<<S as ser::Serializer>::SerializeMap as ser::SerializeMap>::serialize_entry::<__private::ser::content::Content, __private::ser::content::Content>","<S as ser::Serializer>::serialize_tuple_struct","<<S as ser::Serializer>::SerializeStructVariant as ser::SerializeStructVariant>::serialize_field::<__private::ser::content::Content>","<S as ser::Serializer>::serialize_i16","<S as ser::Serializer>::serialize_u8","<S as ser::Serializer>::serialize_u32","<S as ser::Serializer>::serialize_u64","<<S as ser::Serializer>::SerializeTuple as ser::SerializeTuple>::end","<S as ser::Serializer>::serialize_none","<<S as ser::Serializer>::SerializeTupleVariant as ser::SerializeTupleVariant>::serialize_field::<__private::ser::content::Content>","<std::string::String as std::ops::Deref>::deref","<S as ser::Serializer>::serialize_newtype_struct::<__private::ser::content::Content>","<S as ser::Serializer>::serialize_i8","<<S as ser::Serializer>::SerializeTuple as ser::SerializeTuple>::serialize_element::<__private::ser::content::Content>","<<S as ser::Serializer>::SerializeStructVariant as ser::SerializeStructVariant>::end","<S as ser::Serializer>::serialize_bool","<S as ser::Serializer>::serialize_unit_struct","<S as ser::Serializer>::serialize_tuple_variant","<S as ser::Serializer>::serialize_map","<&std::vec::Vec<","<std::slice::Iter<'_, ","<S as ser::Serializer>::serialize_tuple","<S as ser::Serializer>::serialize_f64","<<S as ser::Serializer>::SerializeMap as ser::SerializeMap>::end","<S as ser::Serializer>::serialize_i64","<std::vec::Vec<u8> as std::ops::Deref>::deref","<S as ser::Serializer>::serialize_char","std::vec::Vec::<","<S as ser::Serializer>::serialize_i32","<S as ser::Serializer>::serialize_u16","<S as ser::Serializer>::serialize_newtype_variant::<__private::ser::content::Content>","<std::vec::Vec<__private::ser::content::Content> as ser::Serialize>::serialize::<S>","<<S as ser::Serializer>::SerializeTupleStruct as ser::SerializeTupleStruct>::end","<<S as ser::Serializer>::SerializeTupleVariant as ser::SerializeTupleVariant>::end","<S as ser::Serializer>::serialize_struct","<std::slice::Iter<'_, __private::ser::content::Content> as std::iter::Iterator>::next","<S as ser::Serializer>::serialize_bytes","<S as ser::Serializer>::serialize_unit","<&std::vec::Vec<__private::ser::content::Content> as std::iter::IntoIterator>::into_iter","<S as ser::Serializer>::serialize_f32","<<S as ser::Serializer>::SerializeStruct as ser::SerializeStruct>::end"],"types":["<S as ser::Serializer>::SerializeStructVariant","isize","std::slice::Iter<'_, __private::ser::content::Content>","<S as ser::Serializer>::SerializeTupleStruct","<S as ser::Serializer>::SerializeTuple","u16","std::result::Result<<S as ser::Serializer>::SerializeStructVariant, <S as ser::Serializer>::Error>","u8","u32","[u8]","std::string::String","(__private::ser::content::Content, __private::ser::content::Content)","()","u64","i16","std::slice::Iter<'_, (__private::ser::content::Content, __private::ser::content::Content)>","!","std::option::Option<&(__private::ser::content::Content, __private::ser::content::Content)>","std::result::Result<<S as ser::Serializer>::SerializeTupleVariant, <S as ser::Serializer>::Error>","std::result::Result<(), <S as ser::Serializer>::Error>","<S as ser::Serializer>::SerializeStruct","std::result::Result<<S as ser::Serializer>::SerializeMap, <S as ser::Serializer>::Error>","<S as ser::Serializer>::Error","f32","char","std::vec::Vec<(__private::ser::content::Content, __private::ser::content::Content)>","<S as ser::Serializer>::SerializeTupleVariant","<S as ser::Serializer>::Ok","std::vec::Vec<__private::ser::content::Content>","i32","std::option::Option<&(&str, __private::ser::content::Content)>","<S as ser::Serializer>::SerializeMap","i64","std::slice::Iter<'_, (&str, __private::ser::content::Content)>","std::boxed::Box<__private::ser::content::Content>","(&str, __private::ser::content::Content)","std::alloc::Global","std::vec::Vec<(&str, __private::ser::content::Content)>","std::result::Result<<S as ser::Serializer>::Ok, <S as ser::Serializer>::Error>","std::result::Result<<S as ser::Serializer>::SerializeTupleStruct, <S as ser::Serializer>::Error>","std::option::Option<&__private::ser::content::Content>","i8","std::option::Option<usize>","bool","std::result::Result<<S as ser::Serializer>::SerializeTuple, <S as ser::Serializer>::Error>","std::vec::Vec<u8>","usize","f64","S","str","std::result::Result<<S as ser::Serializer>::SerializeStruct, <S as ser::Serializer>::Error>","__private::ser::content::Content"]}