[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:781:13: 781:34 (#0),
                    scope: scope[0],
                },
                kind: _3 = __private::de::content::ContentVisitor::<'_>::new() -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:781:13: 782:30 (#0),
                    scope: scope[0],
                },
                kind: _2 = <__private::de::content::ContentVisitor<'_> as de::Visitor<'_>>::visit_none::<F>(move _3) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:781:13: 783:44 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::result::Result::<__private::de::content::Content<'_>, F>::map::<__private::de::content::TagOrContent<'_>, fn(__private::de::content::Content<'_>) -> __private::de::content::TagOrContent<'_> {__private::de::content::TagOrContent::<'_>::Content}>(move _2, __private::de::content::TagOrContent::<'_>::Content) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:784:10: 784:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:783:43: 783:44 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:777:9: 784:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<__private::de::content::TagOrContent<'{erased}>, F/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:777:35: 777:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::de::content::TagOrContentVisitor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:777:26: 777:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:781:13: 783:44 (#0),
                },
            ),
        ),
        ty: std::result::Result<__private::de::content::Content<'{erased}>, F/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:781:13: 782:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:781:13: 783:44 (#0),
                },
            ),
        ),
        ty: __private::de::content::ContentVisitor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:781:13: 781:34 (#0),
            scope: scope[0],
        },
    },
]