[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            _5 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1395:15: 1395:31 (#0),
                    scope: scope[0],
                },
                kind: _4 = de::value::MapDeserializer::<'_, I, E>::next_pair(move _5) -> [return: bb1, unwind: bb64],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            PlaceMention(_4),
            _6 = discriminant(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1395:9: 1395:31 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb4, 1: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1395:15: 1395:31 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1396:13: 1396:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_33),
            _33 = std::option::Option::<(<TK as de::DeserializeSeed<'_>>::Value, <TV as de::DeserializeSeed<'_>>::Value)>::None,
            _0 = std::result::Result::<std::option::Option<(<TK as de::DeserializeSeed<'_>>::Value, <TV as de::DeserializeSeed<'_>>::Value)>, E>::Ok(move _33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1401:28: 1401:29 (#0),
                    scope: scope[0],
                },
                kind: drop(_33) -> [return: bb32, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = move (((_4 as Some).0: (<<I as std::iter::Iterator>::Item as de::value::private::Pair>::First, <<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second)).0: <<I as std::iter::Iterator>::Item as de::value::private::Pair>::First),
            StorageLive(_8),
            _8 = move (((_4 as Some).0: (<<I as std::iter::Iterator>::Item as de::value::private::Pair>::First, <<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second)).1: <<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = move _2,
            StorageLive(_12),
            StorageLive(_13),
            _13 = move _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:50: 1397:73 (#0),
                    scope: scope[1],
                },
                kind: _12 = <<<I as std::iter::Iterator>::Item as de::value::private::Pair>::First as de::IntoDeserializer<'_, E>>::into_deserializer(move _13) -> [return: bb6, unwind: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:32: 1397:74 (#0),
                    scope: scope[1],
                },
                kind: _10 = <TK as de::DeserializeSeed<'_>>::deserialize::<<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::First as de::IntoDeserializer<'_, E>>::Deserializer>(move _11, move _12) -> [return: bb7, unwind: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            PlaceMention(_10),
            _14 = discriminant(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:297:9: 297:9 (#1651),
                    scope: scope[1],
                },
                kind: switchInt(move _14) -> [0: bb9, 1: bb10, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:32: 1397:74 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:298:13: 298:20 (#1651),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb11, imaginary: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_16),
            _16 = move ((_10 as Err).0: E),
            StorageLive(_18),
            _18 = move _16,
            _0 = std::result::Result::<std::option::Option<(<TK as de::DeserializeSeed<'_>>::Value, <TV as de::DeserializeSeed<'_>>::Value)>, E>::Err(move _18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:299:39: 299:40 (#1651),
                    scope: scope[4],
                },
                kind: drop(_18) -> [return: bb13, unwind: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = move ((_10 as Ok).0: <TK as de::DeserializeSeed<'_>>::Value),
            _9 = move _15,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:298:26: 298:27 (#1651),
                    scope: scope[1],
                },
                kind: drop(_15) -> [return: bb12, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            FakeRead(ForLet(None), _9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:75: 1397:76 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb14, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:299:39: 299:40 (#1651),
                    scope: scope[1],
                },
                kind: drop(_16) -> [return: bb38, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            _21 = move _3,
            StorageLive(_22),
            StorageLive(_23),
            _23 = move _8,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:52: 1398:77 (#0),
                    scope: scope[2],
                },
                kind: _22 = <<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second as de::IntoDeserializer<'_, E>>::into_deserializer(move _23) -> [return: bb15, unwind: bb53],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:34: 1398:78 (#0),
                    scope: scope[2],
                },
                kind: _20 = <TV as de::DeserializeSeed<'_>>::deserialize::<<<<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second as de::IntoDeserializer<'_, E>>::Deserializer>(move _21, move _22) -> [return: bb16, unwind: bb52],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            PlaceMention(_20),
            _24 = discriminant(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:297:9: 297:9 (#1652),
                    scope: scope[2],
                },
                kind: switchInt(move _24) -> [0: bb18, 1: bb19, otherwise: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:34: 1398:78 (#0),
                    scope: scope[2],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:298:13: 298:20 (#1652),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb20, imaginary: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_26),
            _26 = move ((_20 as Err).0: E),
            StorageLive(_28),
            _28 = move _26,
            _0 = std::result::Result::<std::option::Option<(<TK as de::DeserializeSeed<'_>>::Value, <TV as de::DeserializeSeed<'_>>::Value)>, E>::Err(move _28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:299:39: 299:40 (#1652),
                    scope: scope[7],
                },
                kind: drop(_28) -> [return: bb22, unwind: bb50],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            _25 = move ((_20 as Ok).0: <TV as de::DeserializeSeed<'_>>::Value),
            _19 = move _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:298:26: 298:27 (#1652),
                    scope: scope[2],
                },
                kind: drop(_25) -> [return: bb21, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            FakeRead(ForLet(None), _19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:79: 1398:80 (#0),
                    scope: scope[2],
                },
                kind: drop(_20) -> [return: bb23, unwind: bb49],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:299:39: 299:40 (#1652),
                    scope: scope[2],
                },
                kind: drop(_26) -> [return: bb36, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            _31 = move _9,
            StorageLive(_32),
            _32 = move _19,
            _30 = (move _31, move _32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1399:36: 1399:37 (#0),
                    scope: scope[5],
                },
                kind: drop(_32) -> [return: bb24, unwind: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1399:36: 1399:37 (#0),
                    scope: scope[5],
                },
                kind: drop(_31) -> [return: bb25, unwind: bb48],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            _29 = std::option::Option::<(<TK as de::DeserializeSeed<'_>>::Value, <TV as de::DeserializeSeed<'_>>::Value)>::Some(move _30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1399:37: 1399:38 (#0),
                    scope: scope[5],
                },
                kind: drop(_30) -> [return: bb26, unwind: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            _0 = std::result::Result::<std::option::Option<(<TK as de::DeserializeSeed<'_>>::Value, <TV as de::DeserializeSeed<'_>>::Value)>, E>::Ok(move _29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1399:38: 1399:39 (#0),
                    scope: scope[5],
                },
                kind: drop(_29) -> [return: bb27, unwind: bb49],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[2],
                },
                kind: drop(_19) -> [return: bb28, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb29, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb30, unwind: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb31, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1401:28: 1401:29 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb33,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb34, unwind: bb64],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb35, unwind: bb65],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb45, unwind: bb66],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:79: 1398:80 (#0),
                    scope: scope[2],
                },
                kind: drop(_20) -> [return: bb37, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb40, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:75: 1397:76 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb39, unwind: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb41, unwind: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb42, unwind: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb43, unwind: bb64],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb44, unwind: bb65],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb45, unwind: bb66],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:6: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1399:38: 1399:39 (#0),
                    scope: scope[5],
                },
                kind: drop(_29) -> [return: bb49, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1399:36: 1399:37 (#0),
                    scope: scope[5],
                },
                kind: drop(_31) -> [return: bb48, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1399:37: 1399:38 (#0),
                    scope: scope[5],
                },
                kind: drop(_30) -> [return: bb49, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[2],
                },
                kind: drop(_19) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:299:39: 299:40 (#1652),
                    scope: scope[2],
                },
                kind: drop(_26) -> [return: bb51, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:79: 1398:80 (#0),
                    scope: scope[2],
                },
                kind: drop(_20) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:77: 1398:78 (#0),
                    scope: scope[2],
                },
                kind: drop(_22) -> [return: bb54, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:76: 1398:77 (#0),
                    scope: scope[2],
                },
                kind: drop(_23) -> [return: bb54, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1398:77: 1398:78 (#0),
                    scope: scope[2],
                },
                kind: drop(_21) -> [return: bb55, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_9) -> [return: bb61, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/lib.rs:299:39: 299:40 (#1651),
                    scope: scope[1],
                },
                kind: drop(_16) -> [return: bb57, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:75: 1397:76 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb61, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:73: 1397:74 (#0),
                    scope: scope[1],
                },
                kind: drop(_12) -> [return: bb60, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:72: 1397:73 (#0),
                    scope: scope[1],
                },
                kind: drop(_13) -> [return: bb60, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1397:73: 1397:74 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb61, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_8) -> [return: bb62, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1400:13: 1400:14 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb63, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb64, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb65, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1403:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb66, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:1386:5: 1403:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<std::option::Option<(Alias(Projection, AliasTy { args: [TK/#3, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }), Alias(Projection, AliasTy { args: [TV/#4, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }))>, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1390:10: 1390:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut de::value::MapDeserializer<'{erased}, I/#1, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1387:9: 1387:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/de/value.rs:1388:16: 1388:18 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/de/value.rs:1388:9: 1388:14 (#0),
                            ),
                        ),
                        pat_span: serde/src/de/value.rs:1388:9: 1388:14 (#0),
                    },
                ),
            ),
        ),
        ty: TK/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1388:9: 1388:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/de/value.rs:1389:16: 1389:18 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/de/value.rs:1389:9: 1389:14 (#0),
                            ),
                        ),
                        pat_span: serde/src/de/value.rs:1389:9: 1389:14 (#0),
                    },
                ),
            ),
        ),
        ty: TV/#4,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1389:9: 1389:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/de/value.rs:1395:9: 1402:10 (#0),
                },
            ),
        ),
        ty: std::option::Option<(Alias(Projection, AliasTy { args: [Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item) })], def_id: DefId(0:714 ~ serde[cd55]::de::value::private::Pair::First) }), Alias(Projection, AliasTy { args: [Alias(Projection, AliasTy { args: [I/#1], def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item) })], def_id: DefId(0:715 ~ serde[cd55]::de::value::private::Pair::Second) }))>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1395:15: 1395:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/de/value.rs:1395:9: 1402:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut de::value::MapDeserializer<'{erased}, I/#1, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1395:15: 1395:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1396:13: 1396:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                serde/src/de/value.rs:1395:15: 1395:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/de/value.rs:1396:13: 1396:31 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    Alias(
                        Projection,
                        AliasTy {
                            args: [
                                I/#1,
                            ],
                            def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item),
                        },
                    ),
                ],
                def_id: DefId(0:714 ~ serde[cd55]::de::value::private::Pair::First),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1396:19: 1396:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                serde/src/de/value.rs:1395:15: 1395:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/de/value.rs:1396:13: 1396:31 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    Alias(
                        Projection,
                        AliasTy {
                            args: [
                                I/#1,
                            ],
                            def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item),
                        },
                    ),
                ],
                def_id: DefId(0:715 ~ serde[cd55]::de::value::private::Pair::Second),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1396:24: 1396:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/lib.rs:297:9: 300:10 (#1651),
                            ),
                        ),
                        pat_span: serde/src/de/value.rs:1397:21: 1397:24 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    TK/#3,
                    '{erased},
                ],
                def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1397:21: 1397:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<Alias(Projection, AliasTy { args: [TK/#3, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }), E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1397:32: 1397:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: TK/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1397:32: 1397:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    Alias(
                        Projection,
                        AliasTy {
                            args: [
                                Alias(
                                    Projection,
                                    AliasTy {
                                        args: [
                                            I/#1,
                                        ],
                                        def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item),
                                    },
                                ),
                            ],
                            def_id: DefId(0:714 ~ serde[cd55]::de::value::private::Pair::First),
                        },
                    ),
                    '{erased},
                    E/#2,
                ],
                def_id: DefId(0:1671 ~ serde[cd55]::de::IntoDeserializer::Deserializer),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1397:50: 1397:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    Alias(
                        Projection,
                        AliasTy {
                            args: [
                                I/#1,
                            ],
                            def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item),
                        },
                    ),
                ],
                def_id: DefId(0:714 ~ serde[cd55]::de::value::private::Pair::First),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1397:50: 1397:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:298:13: 298:20 (#1651),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _10,
                                ),
                                serde/src/de/value.rs:1397:32: 1397:74 (#0),
                            ),
                        ),
                        pat_span: serde/src/lib.rs:298:13: 298:20 (#1651),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    TK/#3,
                    '{erased},
                ],
                def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:298:16: 298:19 (#1651),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _10,
                                ),
                                serde/src/de/value.rs:1397:32: 1397:74 (#0),
                            ),
                        ),
                        pat_span: serde/src/lib.rs:299:13: 299:21 (#1651),
                    },
                ),
            ),
        ),
        ty: E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:299:17: 299:20 (#1651),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:299:25: 299:40 (#1651),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:299:36: 299:39 (#1651),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/lib.rs:297:9: 300:10 (#1652),
                            ),
                        ),
                        pat_span: serde/src/de/value.rs:1398:21: 1398:26 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    TV/#4,
                    '{erased},
                ],
                def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1398:21: 1398:26 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<Alias(Projection, AliasTy { args: [TV/#4, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }), E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1398:34: 1398:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: TV/#4,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1398:34: 1398:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    Alias(
                        Projection,
                        AliasTy {
                            args: [
                                Alias(
                                    Projection,
                                    AliasTy {
                                        args: [
                                            I/#1,
                                        ],
                                        def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item),
                                    },
                                ),
                            ],
                            def_id: DefId(0:715 ~ serde[cd55]::de::value::private::Pair::Second),
                        },
                    ),
                    '{erased},
                    E/#2,
                ],
                def_id: DefId(0:1671 ~ serde[cd55]::de::IntoDeserializer::Deserializer),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1398:52: 1398:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    Alias(
                        Projection,
                        AliasTy {
                            args: [
                                I/#1,
                            ],
                            def_id: DefId(2:8502 ~ core[a245]::iter::traits::iterator::Iterator::Item),
                        },
                    ),
                ],
                def_id: DefId(0:715 ~ serde[cd55]::de::value::private::Pair::Second),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1398:52: 1398:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:298:13: 298:20 (#1652),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _20,
                                ),
                                serde/src/de/value.rs:1398:34: 1398:78 (#0),
                            ),
                        ),
                        pat_span: serde/src/lib.rs:298:13: 298:20 (#1652),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    TV/#4,
                    '{erased},
                ],
                def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:298:16: 298:19 (#1652),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _20,
                                ),
                                serde/src/de/value.rs:1398:34: 1398:78 (#0),
                            ),
                        ),
                        pat_span: serde/src/lib.rs:299:13: 299:21 (#1652),
                    },
                ),
            ),
        ),
        ty: E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:299:17: 299:20 (#1652),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:299:25: 299:40 (#1652),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/lib.rs:299:36: 299:39 (#1652),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<(Alias(Projection, AliasTy { args: [TK/#3, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }), Alias(Projection, AliasTy { args: [TV/#4, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }))>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1399:20: 1399:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (Alias(Projection, AliasTy { args: [TK/#3, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }), Alias(Projection, AliasTy { args: [TV/#4, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) })),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1399:25: 1399:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/de/value.rs:1399:17: 1399:39 (#0),
                },
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    TK/#3,
                    '{erased},
                ],
                def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1399:26: 1399:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/de/value.rs:1399:17: 1399:39 (#0),
                },
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    TV/#4,
                    '{erased},
                ],
                def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1399:31: 1399:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::option::Option<(Alias(Projection, AliasTy { args: [TK/#3, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }), Alias(Projection, AliasTy { args: [TV/#4, '{erased}], def_id: DefId(0:1454 ~ serde[cd55]::de::DeserializeSeed::Value) }))>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:1401:24: 1401:28 (#0),
            scope: scope[0],
        },
    },
]