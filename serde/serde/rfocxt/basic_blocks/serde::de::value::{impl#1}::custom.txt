[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = move _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:89:9: 89:31 (#0),
                    scope: scope[0],
                },
                kind: _0 = <de::value::Error as de::Error>::custom::<T>(move _2) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:90:5: 90:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:90:6: 90:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:89:30: 89:31 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:90:5: 90:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/value.rs:85:5: 90:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: de::value::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:85:29: 85:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/de/value.rs:85:23: 85:24 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/de/value.rs:85:18: 85:21 (#0),
                            ),
                        ),
                        pat_span: serde/src/de/value.rs:85:18: 85:21 (#0),
                    },
                ),
            ),
        ),
        ty: T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:85:18: 85:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/de/value.rs:89:9: 89:31 (#0),
                },
            ),
        ),
        ty: T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/value.rs:89:27: 89:30 (#0),
            scope: scope[0],
        },
    },
]