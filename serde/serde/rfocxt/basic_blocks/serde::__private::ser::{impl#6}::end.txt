[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = (),
            _0 = std::result::Result::<(), <M as ser::SerializeMap>::Error>::Ok(move _2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/ser.rs:1241:6: 1241:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<(), Alias(Projection, AliasTy { args: [M/#1], def_id: DefId(0:2050 ~ serde[cd55]::ser::SerializeMap::Error) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/ser.rs:1239:21: 1239:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::ser::FlatMapSerializeStruct<'{erased}, M/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/ser.rs:1239:12: 1239:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/ser.rs:1240:12: 1240:14 (#0),
            scope: scope[0],
        },
    },
]