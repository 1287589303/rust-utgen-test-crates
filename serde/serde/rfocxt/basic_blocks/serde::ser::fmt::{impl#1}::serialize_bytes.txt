[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = std::fmt::Error,
            _0 = std::result::Result::<(), std::fmt::Error>::Err(move _3),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/ser/fmt.rs:86:6: 86:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<(), std::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/ser/fmt.rs:84:44: 84:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: &'{erased} mut std::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/ser/fmt.rs:84:24: 84:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/ser/fmt.rs:84:34: 84:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/ser/fmt.rs:84:30: 84:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/ser/fmt.rs:84:30: 84:32 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/ser/fmt.rs:84:30: 84:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::fmt::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/ser/fmt.rs:85:13: 85:23 (#0),
            scope: scope[0],
        },
    },
]