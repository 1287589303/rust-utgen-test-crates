[
    BasicBlockData {
        statements: [
            PlaceMention((_1.0: __private::de::content::Content<'_>)),
            _3 = discriminant((_1.0: __private::de::content::Content<'_>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1076:13: 1076:31 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [1: bb2, 2: bb3, 3: bb4, 4: bb5, 5: bb6, 6: bb7, 7: bb8, 8: bb9, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            StorageLive(_29),
            _29 = move _1,
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = &_2,
            _31 = &(*_32),
            _30 = move _31 as &dyn de::Expected (PointerCoercion(Unsize)),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1085:26: 1085:53 (#0),
                    scope: scope[0],
                },
                kind: _28 = __private::de::content::ContentDeserializer::<'_, E>::invalid_type(move _29, move _30) -> [return: bb26, unwind: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1077:17: 1077:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1078:17: 1078:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1079:17: 1079:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb14, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1080:17: 1080:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb16, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1081:17: 1081:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb18, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1082:17: 1082:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb20, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1083:17: 1083:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb22, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1084:17: 1084:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb24, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = (((_1.0: __private::de::content::Content<'_>) as U8).0: u8),
            StorageLive(_5),
            _5 = move _2,
            StorageLive(_6),
            _6 = _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1077:35: 1077:54 (#0),
                    scope: scope[1],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u8::<E>(move _5, move _6) -> [return: bb11, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1077:53: 1077:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = (((_1.0: __private::de::content::Content<'_>) as U16).0: u16),
            StorageLive(_8),
            _8 = move _2,
            StorageLive(_9),
            _9 = _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1078:36: 1078:56 (#0),
                    scope: scope[2],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u16::<E>(move _8, move _9) -> [return: bb13, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1078:55: 1078:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            _10 = (((_1.0: __private::de::content::Content<'_>) as U32).0: u32),
            StorageLive(_11),
            _11 = move _2,
            StorageLive(_12),
            _12 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1079:36: 1079:56 (#0),
                    scope: scope[3],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u32::<E>(move _11, move _12) -> [return: bb15, unwind: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1079:55: 1079:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            _13 = (((_1.0: __private::de::content::Content<'_>) as U64).0: u64),
            StorageLive(_14),
            _14 = move _2,
            StorageLive(_15),
            _15 = _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1080:36: 1080:56 (#0),
                    scope: scope[4],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u64::<E>(move _14, move _15) -> [return: bb17, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1080:55: 1080:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_16),
            _16 = (((_1.0: __private::de::content::Content<'_>) as I8).0: i8),
            StorageLive(_17),
            _17 = move _2,
            StorageLive(_18),
            _18 = _16,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1081:35: 1081:54 (#0),
                    scope: scope[5],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i8::<E>(move _17, move _18) -> [return: bb19, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_17),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1081:53: 1081:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_19),
            _19 = (((_1.0: __private::de::content::Content<'_>) as I16).0: i16),
            StorageLive(_20),
            _20 = move _2,
            StorageLive(_21),
            _21 = _19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1082:36: 1082:56 (#0),
                    scope: scope[6],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i16::<E>(move _20, move _21) -> [return: bb21, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1082:55: 1082:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_22),
            _22 = (((_1.0: __private::de::content::Content<'_>) as I32).0: i32),
            StorageLive(_23),
            _23 = move _2,
            StorageLive(_24),
            _24 = _22,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1083:36: 1083:56 (#0),
                    scope: scope[7],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i32::<E>(move _23, move _24) -> [return: bb23, unwind: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1083:55: 1083:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            _25 = (((_1.0: __private::de::content::Content<'_>) as I64).0: i64),
            StorageLive(_26),
            _26 = move _2,
            StorageLive(_27),
            _27 = _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1084:36: 1084:56 (#0),
                    scope: scope[8],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i64::<E>(move _26, move _27) -> [return: bb25, unwind: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1084:55: 1084:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            _0 = std::result::Result::<<V as de::Visitor<'_>>::Value, E>::Err(move _28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1085:53: 1085:54 (#0),
                    scope: scope[0],
                },
                kind: drop(_28) -> [return: bb27, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1085:53: 1085:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1087:9: 1087:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb29, unwind: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1087:9: 1087:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb30, unwind: bb42],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1087:10: 1087:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1085:52: 1085:53 (#0),
                    scope: scope[0],
                },
                kind: drop(_29) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1084:55: 1084:56 (#0),
                    scope: scope[8],
                },
                kind: drop(_26) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1083:55: 1083:56 (#0),
                    scope: scope[7],
                },
                kind: drop(_23) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1082:55: 1082:56 (#0),
                    scope: scope[6],
                },
                kind: drop(_20) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1081:53: 1081:54 (#0),
                    scope: scope[5],
                },
                kind: drop(_17) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1080:55: 1080:56 (#0),
                    scope: scope[4],
                },
                kind: drop(_14) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1079:55: 1079:56 (#0),
                    scope: scope[3],
                },
                kind: drop(_11) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1078:55: 1078:56 (#0),
                    scope: scope[2],
                },
                kind: drop(_8) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1077:53: 1077:54 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1087:9: 1087:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb41, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1087:9: 1087:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb42, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1072:9: 1087:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<Alias(Projection, AliasTy { args: [V/#2, '{erased}], def_id: DefId(0:1533 ~ serde[cd55]::de::Visitor::Value) }), E/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1072:56: 1072:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::de::content::ContentDeserializer<'{erased}, E/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1072:35: 1072:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/private/de.rs:1072:50: 1072:51 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:1072:41: 1072:48 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1072:41: 1072:48 (#0),
                    },
                ),
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1072:41: 1072:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1077:17: 1077:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1077:17: 1077:31 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1077:29: 1077:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1077:35: 1077:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1077:52: 1077:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1078:17: 1078:32 (#0),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1078:30: 1078:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1078:36: 1078:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1078:54: 1078:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1079:17: 1079:32 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1079:30: 1079:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1079:36: 1079:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1079:54: 1079:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1080:17: 1080:32 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1080:30: 1080:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1080:36: 1080:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1080:54: 1080:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1081:17: 1081:31 (#0),
                    },
                ),
            ),
        ),
        ty: i8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1081:29: 1081:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1081:35: 1081:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: i8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1081:52: 1081:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1082:17: 1082:32 (#0),
                    },
                ),
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1082:30: 1082:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1082:36: 1082:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1082:54: 1082:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1083:17: 1083:32 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1083:30: 1083:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1083:36: 1083:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1083:54: 1083:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1076:19: 1076:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1084:17: 1084:32 (#0),
                    },
                ),
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1084:30: 1084:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1084:36: 1084:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1084:54: 1084:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: E/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1085:26: 1085:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: __private::de::content::ContentDeserializer<'{erased}, E/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1085:26: 1085:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(de::Expected), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1085:44: 1085:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1085:44: 1085:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1076:13: 1086:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1085:44: 1085:52 (#0),
            scope: scope[0],
        },
    },
]