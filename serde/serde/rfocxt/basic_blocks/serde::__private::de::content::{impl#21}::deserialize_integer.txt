[
    BasicBlockData {
        statements: [
            PlaceMention((*(_1.0: &__private::de::content::Content<'_>))),
            _3 = discriminant((*(_1.0: &__private::de::content::Content<'_>))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1665:13: 1665:32 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [1: bb2, 2: bb3, 3: bb4, 4: bb5, 5: bb6, 6: bb7, 7: bb8, 8: bb9, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            StorageLive(_29),
            _29 = _1,
            StorageLive(_30),
            StorageLive(_31),
            StorageLive(_32),
            _32 = &_2,
            _31 = &(*_32),
            _30 = move _31 as &dyn de::Expected (PointerCoercion(Unsize)),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1674:26: 1674:53 (#0),
                    scope: scope[0],
                },
                kind: _28 = __private::de::content::ContentRefDeserializer::<'_, '_, E>::invalid_type(move _29, move _30) -> [return: bb26, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1666:17: 1666:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1667:17: 1667:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1668:17: 1668:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb14, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1669:17: 1669:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb16, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1670:17: 1670:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb18, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1671:17: 1671:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb20, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1672:17: 1672:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb22, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1673:17: 1673:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb24, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = (((*(_1.0: &__private::de::content::Content<'_>)) as U8).0: u8),
            StorageLive(_5),
            _5 = move _2,
            StorageLive(_6),
            _6 = _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1666:35: 1666:54 (#0),
                    scope: scope[1],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u8::<E>(move _5, move _6) -> [return: bb11, unwind: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1666:53: 1666:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = (((*(_1.0: &__private::de::content::Content<'_>)) as U16).0: u16),
            StorageLive(_8),
            _8 = move _2,
            StorageLive(_9),
            _9 = _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1667:36: 1667:56 (#0),
                    scope: scope[2],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u16::<E>(move _8, move _9) -> [return: bb13, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1667:55: 1667:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            _10 = (((*(_1.0: &__private::de::content::Content<'_>)) as U32).0: u32),
            StorageLive(_11),
            _11 = move _2,
            StorageLive(_12),
            _12 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1668:36: 1668:56 (#0),
                    scope: scope[3],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u32::<E>(move _11, move _12) -> [return: bb15, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1668:55: 1668:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            _13 = (((*(_1.0: &__private::de::content::Content<'_>)) as U64).0: u64),
            StorageLive(_14),
            _14 = move _2,
            StorageLive(_15),
            _15 = _13,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1669:36: 1669:56 (#0),
                    scope: scope[4],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_u64::<E>(move _14, move _15) -> [return: bb17, unwind: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1669:55: 1669:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_16),
            _16 = (((*(_1.0: &__private::de::content::Content<'_>)) as I8).0: i8),
            StorageLive(_17),
            _17 = move _2,
            StorageLive(_18),
            _18 = _16,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1670:35: 1670:54 (#0),
                    scope: scope[5],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i8::<E>(move _17, move _18) -> [return: bb19, unwind: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_17),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1670:53: 1670:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_19),
            _19 = (((*(_1.0: &__private::de::content::Content<'_>)) as I16).0: i16),
            StorageLive(_20),
            _20 = move _2,
            StorageLive(_21),
            _21 = _19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1671:36: 1671:56 (#0),
                    scope: scope[6],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i16::<E>(move _20, move _21) -> [return: bb21, unwind: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1671:55: 1671:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_22),
            _22 = (((*(_1.0: &__private::de::content::Content<'_>)) as I32).0: i32),
            StorageLive(_23),
            _23 = move _2,
            StorageLive(_24),
            _24 = _22,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1672:36: 1672:56 (#0),
                    scope: scope[7],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i32::<E>(move _23, move _24) -> [return: bb23, unwind: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1672:55: 1672:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            _25 = (((*(_1.0: &__private::de::content::Content<'_>)) as I64).0: i64),
            StorageLive(_26),
            _26 = move _2,
            StorageLive(_27),
            _27 = _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1673:36: 1673:56 (#0),
                    scope: scope[8],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_i64::<E>(move _26, move _27) -> [return: bb25, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1673:55: 1673:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_29),
            _0 = std::result::Result::<<V as de::Visitor<'_>>::Value, E>::Err(move _28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1674:53: 1674:54 (#0),
                    scope: scope[0],
                },
                kind: drop(_28) -> [return: bb27, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1674:53: 1674:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1676:9: 1676:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb29, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1676:10: 1676:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1673:55: 1673:56 (#0),
                    scope: scope[8],
                },
                kind: drop(_26) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1672:55: 1672:56 (#0),
                    scope: scope[7],
                },
                kind: drop(_23) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1671:55: 1671:56 (#0),
                    scope: scope[6],
                },
                kind: drop(_20) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1670:53: 1670:54 (#0),
                    scope: scope[5],
                },
                kind: drop(_17) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1669:55: 1669:56 (#0),
                    scope: scope[4],
                },
                kind: drop(_14) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1668:55: 1668:56 (#0),
                    scope: scope[3],
                },
                kind: drop(_11) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1667:55: 1667:56 (#0),
                    scope: scope[2],
                },
                kind: drop(_8) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1666:53: 1666:54 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1676:9: 1676:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb39, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1661:9: 1676:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(0:1533 ~ serde[cd55]::de::Visitor::Value) }), E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1661:56: 1661:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::de::content::ContentRefDeserializer<'{erased}, '{erased}, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1661:35: 1661:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/private/de.rs:1661:50: 1661:51 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:1661:41: 1661:48 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1661:41: 1661:48 (#0),
                    },
                ),
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1661:41: 1661:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1666:17: 1666:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1666:17: 1666:31 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1666:29: 1666:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1666:35: 1666:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1666:52: 1666:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1667:17: 1667:32 (#0),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1667:30: 1667:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1667:36: 1667:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1667:54: 1667:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1668:17: 1668:32 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1668:30: 1668:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1668:36: 1668:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1668:54: 1668:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1669:17: 1669:32 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1669:30: 1669:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1669:36: 1669:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1669:54: 1669:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1670:17: 1670:31 (#0),
                    },
                ),
            ),
        ),
        ty: i8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1670:29: 1670:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1670:35: 1670:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: i8,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1670:52: 1670:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1671:17: 1671:32 (#0),
                    },
                ),
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1671:30: 1671:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1671:36: 1671:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1671:54: 1671:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1672:17: 1672:32 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1672:30: 1672:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1672:36: 1672:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1672:54: 1672:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1665:19: 1665:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1673:17: 1673:32 (#0),
                    },
                ),
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1673:30: 1673:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1673:36: 1673:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1673:54: 1673:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1674:26: 1674:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: __private::de::content::ContentRefDeserializer<'{erased}, '{erased}, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1674:26: 1674:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(de::Expected), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1674:44: 1674:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1674:44: 1674:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1665:13: 1675:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1674:44: 1674:52 (#0),
            scope: scope[0],
        },
    },
]