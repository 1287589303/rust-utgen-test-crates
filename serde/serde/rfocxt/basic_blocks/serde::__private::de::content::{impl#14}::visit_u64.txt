[
    BasicBlockData {
        statements: [
            PlaceMention(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1029:13: 1029:30 (#0),
                    scope: scope[0],
                },
                kind: switchInt(_2) -> [0: bb2, 1: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = __private::de::content::TagContentOtherField::Other,
            _0 = std::result::Result::<__private::de::content::TagContentOtherField, E>::Ok(move _5),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1032:52: 1032:53 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1030:17: 1030:18 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1031:17: 1031:18 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = __private::de::content::TagContentOtherField::Tag,
            _0 = std::result::Result::<__private::de::content::TagContentOtherField, E>::Ok(move _3),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1030:50: 1030:51 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = __private::de::content::TagContentOtherField::Content,
            _0 = std::result::Result::<__private::de::content::TagContentOtherField, E>::Ok(move _4),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1031:54: 1031:55 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb6,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1034:10: 1034:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<__private::de::content::TagContentOtherField, E/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1025:52: 1025:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::de::content::TagContentOtherFieldVisitor,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1025:25: 1025:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/private/de.rs:1025:44: 1025:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:1025:31: 1025:42 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1025:31: 1025:42 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1025:31: 1025:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: __private::de::content::TagContentOtherField,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1030:25: 1030:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: __private::de::content::TagContentOtherField,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1031:25: 1031:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: __private::de::content::TagContentOtherField,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1032:25: 1032:52 (#0),
            scope: scope[0],
        },
    },
]