[
    BasicBlockData {
        statements: [
            PlaceMention((*(_1.0: &__private::de::content::Content<'_>))),
            _3 = discriminant((*(_1.0: &__private::de::content::Content<'_>))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1889:13: 1889:32 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [12: bb2, 13: bb3, 14: bb4, 15: bb5, 20: bb6, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            StorageLive(_26),
            _26 = _1,
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &_2,
            _28 = &(*_29),
            _27 = move _28 as &dyn de::Expected (PointerCoercion(Unsize)),
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1895:26: 1895:53 (#0),
                    scope: scope[0],
                },
                kind: _25 = __private::de::content::ContentRefDeserializer::<'_, '_, E>::invalid_type(move _26, move _27) -> [return: bb20, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1890:17: 1890:39 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1891:17: 1891:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1892:17: 1892:40 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1893:17: 1893:34 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb15, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1894:17: 1894:36 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb17, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &(((*(_1.0: &__private::de::content::Content<'_>)) as String).0: std::string::String),
            StorageLive(_5),
            _5 = move _2,
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1890:61: 1890:62 (#0),
                    scope: scope[1],
                },
                kind: _7 = <std::string::String as std::ops::Deref>::deref(move _8) -> [return: bb8, unwind: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = &(*_7),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1890:43: 1890:63 (#0),
                    scope: scope[1],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_str::<E>(move _5, move _6) -> [return: bb9, unwind: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1890:62: 1890:63 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = (((*(_1.0: &__private::de::content::Content<'_>)) as Str).0: &str),
            StorageLive(_10),
            _10 = move _2,
            StorageLive(_11),
            _11 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1891:36: 1891:65 (#0),
                    scope: scope[2],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_borrowed_str::<E>(move _10, move _11) -> [return: bb11, unwind: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1891:64: 1891:65 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = &(((*(_1.0: &__private::de::content::Content<'_>)) as ByteBuf).0: std::vec::Vec<u8>),
            StorageLive(_13),
            _13 = move _2,
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            _16 = &(*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1892:64: 1892:65 (#0),
                    scope: scope[3],
                },
                kind: _15 = <std::vec::Vec<u8> as std::ops::Deref>::deref(move _16) -> [return: bb13, unwind: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _14 = &(*_15),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1892:44: 1892:66 (#0),
                    scope: scope[3],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_bytes::<E>(move _13, move _14) -> [return: bb14, unwind: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_13),
            StorageDead(_15),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1892:65: 1892:66 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            _17 = (((*(_1.0: &__private::de::content::Content<'_>)) as Bytes).0: &[u8]),
            StorageLive(_18),
            _18 = move _2,
            StorageLive(_19),
            _19 = &(*_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1893:38: 1893:69 (#0),
                    scope: scope[4],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_borrowed_bytes::<E>(move _18, move _19) -> [return: bb16, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1893:68: 1893:69 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_20),
            _20 = &(((*(_1.0: &__private::de::content::Content<'_>)) as Seq).0: std::vec::Vec<__private::de::content::Content<'_>>),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &(*_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1894:62: 1894:63 (#0),
                    scope: scope[5],
                },
                kind: _22 = <std::vec::Vec<__private::de::content::Content<'_>> as std::ops::Deref>::deref(move _23) -> [return: bb18, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _21 = &(*_22),
            StorageDead(_23),
            StorageLive(_24),
            _24 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1894:40: 1894:73 (#0),
                    scope: scope[5],
                },
                kind: _0 = __private::de::content::visit_content_seq_ref::<'_, V, E>(move _21, move _24) -> [return: bb19, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_21),
            StorageDead(_22),
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1894:72: 1894:73 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            _0 = std::result::Result::<<V as de::Visitor<'_>>::Value, E>::Err(move _25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1895:53: 1895:54 (#0),
                    scope: scope[0],
                },
                kind: drop(_25) -> [return: bb21, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1895:53: 1895:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1897:9: 1897:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb23, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1897:10: 1897:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1894:72: 1894:73 (#0),
                    scope: scope[5],
                },
                kind: drop(_24) -> [return: bb29, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1893:68: 1893:69 (#0),
                    scope: scope[4],
                },
                kind: drop(_18) -> [return: bb29, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1892:65: 1892:66 (#0),
                    scope: scope[3],
                },
                kind: drop(_13) -> [return: bb29, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1891:64: 1891:65 (#0),
                    scope: scope[2],
                },
                kind: drop(_10) -> [return: bb29, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1890:62: 1890:63 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb29, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1897:9: 1897:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb30, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1885:9: 1897:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(0:1533 ~ serde[cd55]::de::Visitor::Value) }), E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1885:54: 1885:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::de::content::ContentRefDeserializer<'{erased}, '{erased}, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1885:33: 1885:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/private/de.rs:1885:48: 1885:49 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:1885:39: 1885:46 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1885:39: 1885:46 (#0),
                    },
                ),
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1885:39: 1885:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1890:17: 1890:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1889:19: 1889:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1890:17: 1890:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1890:33: 1890:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1890:43: 1890:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1890:61: 1890:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1890:61: 1890:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1890:61: 1890:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1889:19: 1889:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1891:17: 1891:32 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1891:30: 1891:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1891:36: 1891:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1891:63: 1891:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1889:19: 1889:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1892:17: 1892:40 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::vec::Vec<u8, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1892:34: 1892:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1892:44: 1892:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1892:64: 1892:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1892:64: 1892:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<u8, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1892:64: 1892:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1889:19: 1889:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1893:17: 1893:34 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1893:32: 1893:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1893:38: 1893:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1893:67: 1893:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*(_1.0: &__private::de::content::Content<'_>)),
                                ),
                                serde/src/private/de.rs:1889:19: 1889:32 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1894:17: 1894:36 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::vec::Vec<__private::de::content::Content<'{erased}>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1894:30: 1894:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [__private::de::content::Content<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1894:62: 1894:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [__private::de::content::Content<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1894:62: 1894:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<__private::de::content::Content<'{erased}>, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1894:62: 1894:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1894:65: 1894:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1895:26: 1895:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: __private::de::content::ContentRefDeserializer<'{erased}, '{erased}, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1895:26: 1895:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(de::Expected), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1895:44: 1895:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1895:44: 1895:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1889:13: 1896:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1895:44: 1895:52 (#0),
            scope: scope[0],
        },
    },
]