[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:3167:9: 3167:18 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::str::<impl str>::parse::<T>(move _4) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:3167:9: 3167:41 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::result::Result::<T, <T as std::str::FromStr>::Err>::map_err::<E, fn(<T as std::str::FromStr>::Err) -> E {<E as de::Error>::custom::<<T as std::str::FromStr>::Err>}>(move _3, <E as de::Error>::custom::<<T as std::str::FromStr>::Err>) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:3168:6: 3168:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:3167:40: 3167:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:3163:5: 3168:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<T/#1, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:3163:39: 3163:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: de::impls::FromStrVisitor<T/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:3163:21: 3163:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/de/impls.rs:3163:30: 3163:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/de/impls.rs:3163:27: 3163:28 (#0),
                            ),
                        ),
                        pat_span: serde/src/de/impls.rs:3163:27: 3163:28 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:3163:27: 3163:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/de/impls.rs:3167:9: 3167:41 (#0),
                },
            ),
        ),
        ty: std::result::Result<T/#1, Alias(Projection, AliasTy { args: [T/#1], def_id: DefId(2:13398 ~ core[a245]::str::traits::FromStr::Err) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:3167:9: 3167:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/de/impls.rs:3167:9: 3167:41 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:3167:9: 3167:10 (#0),
            scope: scope[0],
        },
    },
]