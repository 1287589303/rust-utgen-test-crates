[
    BasicBlockData {
        statements: [
            StorageLive(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:2503:13: 2503:63 (#0),
                    scope: scope[0],
                },
                kind: _1 = <E as de::Error>::custom::<&str>(const "can only flatten structs and maps") -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = std::result::Result::<V, E>::Err(move _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:2503:63: 2503:64 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:2504:6: 2504:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:2502:5: 2504:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<V/#3, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:2502:34: 2502:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: E/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:2503:13: 2503:63 (#0),
            scope: scope[0],
        },
    },
]