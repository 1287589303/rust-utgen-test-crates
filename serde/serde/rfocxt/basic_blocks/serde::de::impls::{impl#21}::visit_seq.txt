[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = [],
            _0 = std::result::Result::<[T; 0], <A as de::SeqAccess<'_>>::Error>::Ok(move _3),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:1255:5: 1255:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:1255:6: 1255:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/de/impls.rs:1250:5: 1255:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<[T/#1; 0_usize], Alias(Projection, AliasTy { args: [A/#2, '{erased}], def_id: DefId(0:1596 ~ serde[cd55]::de::SeqAccess::Error) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:1250:36: 1250:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: de::impls::ArrayVisitor<[T/#1; 0_usize]>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:1250:21: 1250:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: A/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:1250:27: 1250:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: [T/#1; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/de/impls.rs:1254:12: 1254:14 (#0),
            scope: scope[0],
        },
    },
]