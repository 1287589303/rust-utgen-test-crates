[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:658:13: 658:34 (#0),
                    scope: scope[0],
                },
                kind: _4 = __private::de::content::ContentVisitor::<'_>::new() -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:658:13: 659:34 (#0),
                    scope: scope[0],
                },
                kind: _3 = <__private::de::content::ContentVisitor<'_> as de::Visitor<'_>>::visit_u64::<F>(move _4, move _5) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:658:13: 660:44 (#0),
                    scope: scope[0],
                },
                kind: _0 = std::result::Result::<__private::de::content::Content<'_>, F>::map::<__private::de::content::TagOrContent<'_>, fn(__private::de::content::Content<'_>) -> __private::de::content::TagOrContent<'_> {__private::de::content::TagOrContent::<'_>::Content}>(move _3, __private::de::content::TagOrContent::<'_>::Content) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:661:10: 661:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:660:43: 660:44 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:654:9: 661:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<__private::de::content::TagOrContent<'{erased}>, F/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:654:46: 654:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::de::content::TagOrContentVisitor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:654:25: 654:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/private/de.rs:654:38: 654:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:654:31: 654:36 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:654:31: 654:36 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:654:31: 654:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:658:13: 660:44 (#0),
                },
            ),
        ),
        ty: std::result::Result<__private::de::content::Content<'{erased}>, F/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:658:13: 659:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:658:13: 660:44 (#0),
                },
            ),
        ),
        ty: __private::de::content::ContentVisitor<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:658:13: 658:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:658:13: 660:44 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:659:28: 659:33 (#0),
            scope: scope[0],
        },
    },
]