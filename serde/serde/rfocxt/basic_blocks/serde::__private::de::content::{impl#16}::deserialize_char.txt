[
    BasicBlockData {
        statements: [
            PlaceMention((_1.0: __private::de::content::Content<'_>)),
            _3 = discriminant((_1.0: __private::de::content::Content<'_>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1256:13: 1256:31 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [11: bb2, 12: bb3, 13: bb4, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            StorageLive(_14),
            _14 = move _1,
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &_2,
            _16 = &(*_17),
            _15 = move _16 as &dyn de::Expected (PointerCoercion(Unsize)),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1260:26: 1260:53 (#0),
                    scope: scope[0],
                },
                kind: _13 = __private::de::content::ContentDeserializer::<'_, E>::invalid_type(move _14, move _15) -> [return: bb12, unwind: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1257:17: 1257:33 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1258:17: 1258:35 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1259:17: 1259:32 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = (((_1.0: __private::de::content::Content<'_>) as Char).0: char),
            StorageLive(_5),
            _5 = move _2,
            StorageLive(_6),
            _6 = _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1257:37: 1257:58 (#0),
                    scope: scope[1],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_char::<E>(move _5, move _6) -> [return: bb6, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1257:57: 1257:58 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = move (((_1.0: __private::de::content::Content<'_>) as String).0: std::string::String),
            StorageLive(_8),
            _8 = move _2,
            StorageLive(_9),
            _9 = move _7,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1258:39: 1258:62 (#0),
                    scope: scope[2],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_string::<E>(move _8, move _9) -> [return: bb8, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1258:61: 1258:62 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb9, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1258:61: 1258:62 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            _10 = (((_1.0: __private::de::content::Content<'_>) as Str).0: &str),
            StorageLive(_11),
            _11 = move _2,
            StorageLive(_12),
            _12 = &(*_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1259:36: 1259:65 (#0),
                    scope: scope[3],
                },
                kind: _0 = <V as de::Visitor<'_>>::visit_borrowed_str::<E>(move _11, move _12) -> [return: bb11, unwind: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1259:64: 1259:65 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_14),
            _0 = std::result::Result::<<V as de::Visitor<'_>>::Value, E>::Err(move _13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1260:53: 1260:54 (#0),
                    scope: scope[0],
                },
                kind: drop(_13) -> [return: bb13, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1260:53: 1260:54 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1262:9: 1262:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb15, unwind: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1262:9: 1262:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb16, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1262:10: 1262:10 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1260:52: 1260:53 (#0),
                    scope: scope[0],
                },
                kind: drop(_14) -> [return: bb23, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1259:64: 1259:65 (#0),
                    scope: scope[3],
                },
                kind: drop(_11) -> [return: bb23, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1258:61: 1258:62 (#0),
                    scope: scope[2],
                },
                kind: drop(_9) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1258:61: 1258:62 (#0),
                    scope: scope[2],
                },
                kind: drop(_8) -> [return: bb21, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1258:61: 1258:62 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb23, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1257:57: 1257:58 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb23, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1262:9: 1262:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb24, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1262:9: 1262:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb25, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:1252:9: 1262:10 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<Alias(Projection, AliasTy { args: [V/#2, '{erased}], def_id: DefId(0:1533 ~ serde[cd55]::de::Visitor::Value) }), E/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1252:53: 1252:82 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: __private::de::content::ContentDeserializer<'{erased}, E/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1252:32: 1252:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/private/de.rs:1252:47: 1252:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:1252:38: 1252:45 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1252:38: 1252:45 (#0),
                    },
                ),
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1252:38: 1252:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1257:17: 1257:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1256:19: 1256:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1257:17: 1257:33 (#0),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1257:31: 1257:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1257:37: 1257:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1257:56: 1257:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1256:19: 1256:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1258:17: 1258:35 (#0),
                    },
                ),
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1258:33: 1258:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1258:39: 1258:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1258:60: 1258:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (_1.0: __private::de::content::Content<'_>),
                                ),
                                serde/src/private/de.rs:1256:19: 1256:31 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:1259:17: 1259:32 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1259:30: 1259:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1259:36: 1259:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1259:63: 1259:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: E/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1260:26: 1260:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: __private::de::content::ContentDeserializer<'{erased}, E/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1260:26: 1260:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(de::Expected), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1260:44: 1260:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1260:44: 1260:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:1256:13: 1261:14 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:1260:44: 1260:52 (#0),
            scope: scope[0],
        },
    },
]