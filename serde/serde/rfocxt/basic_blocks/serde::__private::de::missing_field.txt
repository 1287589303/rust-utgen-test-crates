[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = _1,
            StorageLive(_4),
            _4 = std::marker::PhantomData::<E>,
            _2 = __private::de::missing_field::MissingFieldDeserializer::<E>(move _3, move _4),
            StorageDead(_4),
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_5),
            _5 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:58:5: 58:43 (#0),
                    scope: scope[1],
                },
                kind: _0 = <V as de::Deserialize<'_>>::deserialize::<__private::de::missing_field::MissingFieldDeserializer<E>>(move _5) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:59:2: 59:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: serde/src/private/de.rs:23:1: 59:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::result::Result<V/#1, E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:23:57: 23:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            serde/src/private/de.rs:23:40: 23:52 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:23:33: 23:38 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:23:33: 23:38 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:23:33: 23:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                serde/src/private/de.rs:57:24: 57:68 (#0),
                            ),
                        ),
                        pat_span: serde/src/private/de.rs:57:9: 57:21 (#0),
                    },
                ),
            ),
        ),
        ty: __private::de::missing_field::MissingFieldDeserializer<E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:57:9: 57:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:57:49: 57:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: std::marker::PhantomData<E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:57:56: 57:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: serde/src/private/de.rs:58:5: 58:43 (#0),
                },
            ),
        ),
        ty: __private::de::missing_field::MissingFieldDeserializer<E/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: serde/src/private/de.rs:58:30: 58:42 (#0),
            scope: scope[0],
        },
    },
]