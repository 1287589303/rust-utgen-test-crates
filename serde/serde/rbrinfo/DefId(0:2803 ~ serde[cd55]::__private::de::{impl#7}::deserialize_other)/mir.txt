bb0
  0: StorageLive(_1)
    SourceInfo(serde/src/private/de.rs:2503:13-2503:63)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2503:13-2503:63)
      kind: _1 = <E as de::Error>::custom::<&str>(const "can only flatten structs and maps") -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _0 = std::result::Result::<V, E>::Err(move _1)
    SourceInfo(serde/src/private/de.rs:2503:9-2503:64)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2503:63-2503:64)
      kind: drop(_1) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_1)
    SourceInfo(serde/src/private/de.rs:2503:63-2503:64)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2504:6-2504:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2502:5-2504:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

