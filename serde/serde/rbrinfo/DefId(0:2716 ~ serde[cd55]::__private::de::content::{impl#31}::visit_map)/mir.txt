bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/private/de.rs:2310:13-2310:83)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:13-2310:83)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:13-2310:83)
      kind: falseUnwind -> [real: bb2, unwind: bb19]
  }
  preds [bb0, bb11]
  succs [bb2, bb19]

bb2
  0: StorageLive(_5)
    SourceInfo(serde/src/private/de.rs:2310:19-2310:80)
  1: StorageLive(_6)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  2: StorageLive(_7)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  3: StorageLive(_8)
    SourceInfo(serde/src/private/de.rs:2310:24-2310:69)
  4: StorageLive(_9)
    SourceInfo(serde/src/private/de.rs:2310:24-2310:30)
  5: _9 = &mut _2
    SourceInfo(serde/src/private/de.rs:2310:24-2310:30)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:24-2310:69)
      kind: _8 = <M as de::MapAccess<'_>>::next_entry::<de::ignored_any::IgnoredAny, de::ignored_any::IgnoredAny>(move _9) -> [return: bb3, unwind: bb19]
  }
  preds [bb1]
  succs [bb3, bb19]

bb3
  0: StorageDead(_9)
    SourceInfo(serde/src/private/de.rs:2310:68-2310:69)
  1: PlaceMention(_8)
    SourceInfo(serde/src/private/de.rs:2310:24-2310:69)
  2: _10 = discriminant(_8)
    SourceInfo(serde/src/private/de.rs:2310:24-2310:69)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _10) -> [0: bb5, 1: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(serde/src/private/de.rs:2310:24-2310:69)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:24-2310:69)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_12)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _12 = move ((_8 as Err).0: <M as de::MapAccess<'_>>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_14)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _14 = move _12
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<(), <M as de::MapAccess<'_>>::Error>::Err(move _14)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_14) -> [return: bb8, unwind: bb17]
  }
  preds [bb3, bb5]
  succs [bb8, bb17]

bb7
  0: StorageLive(_11)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _11 = ((_8 as Ok).0: std::option::Option<(de::ignored_any::IgnoredAny, de::ignored_any::IgnoredAny)>)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _7 = _11
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  3: StorageDead(_11)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  4: _6 = &_7
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:19-2310:80)
      kind: _5 = std::option::Option::<(de::ignored_any::IgnoredAny, de::ignored_any::IgnoredAny)>::is_some(move _6) -> [return: bb9, unwind: bb18]
  }
  preds [bb5]
  succs [bb9, bb18]

bb8
  0: StorageDead(_14)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_12) -> [return: bb14, unwind: bb18]
  }
  preds [bb6]
  succs [bb14, bb18]

bb9
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:19-2310:80)
      kind: switchInt(move _5) -> [0: bb12, otherwise: bb10]
  }
  preds [bb7]
  succs [bb10, bb12]

bb10
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
      kind: drop(_8) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_8)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  1: StorageDead(_7)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  2: StorageDead(_6)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  3: _4 = const ()
    SourceInfo(serde/src/private/de.rs:2310:81-2310:83)
  4: StorageDead(_5)
    SourceInfo(serde/src/private/de.rs:2310:82-2310:83)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:13-2310:83)
      kind: goto -> bb1
  }
  preds [bb10]
  succs [bb1]

bb12
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
      kind: drop(_8) -> [return: bb13, unwind: bb19]
  }
  preds [bb9]
  succs [bb13, bb19]

bb13
  0: StorageDead(_8)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  1: StorageDead(_7)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  2: StorageDead(_6)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  3: StorageLive(_16)
    SourceInfo(serde/src/private/de.rs:2310:13-2310:83)
  4: _3 = const ()
    SourceInfo(serde/src/private/de.rs:2310:13-2310:83)
  5: StorageDead(_16)
    SourceInfo(serde/src/private/de.rs:2310:82-2310:83)
  6: StorageDead(_5)
    SourceInfo(serde/src/private/de.rs:2310:82-2310:83)
  7: StorageDead(_3)
    SourceInfo(serde/src/private/de.rs:2310:82-2310:83)
  8: StorageLive(_18)
    SourceInfo(serde/src/private/de.rs:2311:16-2311:18)
  9: _18 = ()
    SourceInfo(serde/src/private/de.rs:2311:16-2311:18)
  10: _0 = std::result::Result::<(), <M as de::MapAccess<'_>>::Error>::Ok(move _18)
    SourceInfo(serde/src/private/de.rs:2311:13-2311:19)
  11: StorageDead(_18)
    SourceInfo(serde/src/private/de.rs:2311:18-2311:19)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2312:9-2312:10)
      kind: drop(_2) -> [return: bb16, unwind: bb20]
  }
  preds [bb12]
  succs [bb16, bb20]

bb14
  0: StorageDead(_12)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
      kind: drop(_8) -> [return: bb15, unwind: bb19]
  }
  preds [bb8]
  succs [bb15, bb19]

bb15
  0: StorageDead(_8)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  1: StorageDead(_7)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  2: StorageDead(_6)
    SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
  3: StorageDead(_5)
    SourceInfo(serde/src/private/de.rs:2310:82-2310:83)
  4: StorageDead(_3)
    SourceInfo(serde/src/private/de.rs:2310:82-2310:83)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2312:9-2312:10)
      kind: drop(_2) -> [return: bb16, unwind: bb20]
  }
  preds [bb14]
  succs [bb16, bb20]

bb16
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2312:10-2312:10)
      kind: return
  }
  preds [bb13, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_12) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2310:79-2310:80)
      kind: drop(_8) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb7, bb8, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2312:9-2312:10)
      kind: drop(_2) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb10, bb12, bb14, bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:2306:9-2312:10)
      kind: resume
  }
  preds [bb13, bb15, bb19]
  succs []

