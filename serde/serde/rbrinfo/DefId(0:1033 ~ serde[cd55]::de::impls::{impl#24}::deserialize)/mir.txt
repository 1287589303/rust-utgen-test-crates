bb0
  0: StorageLive(_2)
    SourceInfo(serde/src/de/impls.rs:1712:12-1712:44)
  1: StorageLive(_3)
    SourceInfo(serde/src/de/impls.rs:1712:12-1712:24)
  2: _3 = &_1
    SourceInfo(serde/src/de/impls.rs:1712:12-1712:24)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1712:12-1712:44)
      kind: _2 = <D as de::Deserializer<'_>>::is_human_readable(move _3) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1712:12-1712:44)
      kind: switchInt(move _2) -> [0: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:1712:43-1712:44)
  1: StorageLive(_4)
    SourceInfo(serde/src/de/impls.rs:1713:13-1713:25)
  2: _4 = move _1
    SourceInfo(serde/src/de/impls.rs:1713:13-1713:25)
  3: StorageLive(_5)
    SourceInfo(serde/src/de/impls.rs:1713:42-1713:75)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1713:42-1713:75)
      kind: _5 = de::impls::FromStrVisitor::<std::net::IpAddr>::new(const "IP address") -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1713:13-1713:76)
      kind: _0 = <D as de::Deserializer<'_>>::deserialize_str::<de::impls::FromStrVisitor<std::net::IpAddr>>(move _4, move _5) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_5)
    SourceInfo(serde/src/de/impls.rs:1713:75-1713:76)
  1: StorageDead(_4)
    SourceInfo(serde/src/de/impls.rs:1713:75-1713:76)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1712:9-1721:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb5
  0: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:1712:43-1712:44)
  1: StorageLive(_6)
    SourceInfo(serde/src/de/impls.rs:1719:17-1719:29)
  2: _6 = move _1
    SourceInfo(serde/src/de/impls.rs:1719:17-1719:29)
  3: StorageLive(_7)
    SourceInfo(serde/src/de/impls.rs:1702:59-1702:67)
  4: StorageLive(_8)
    SourceInfo(serde/src/de/impls.rs:1702:59-1702:67)
  5: _8 = const {alloc1: &&[&str]}
    SourceInfo(serde/src/de/impls.rs:1702:59-1702:67)
  6: _7 = (*_8)
    SourceInfo(serde/src/de/impls.rs:1702:59-1702:67)
  7: StorageLive(_9)
    SourceInfo(serde/src/de/impls.rs:1702:69-1702:80)
  8: _9 = de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::EnumVisitor
    SourceInfo(serde/src/de/impls.rs:1702:69-1702:80)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1702:9-1702:81)
      kind: _0 = <D as de::Deserializer<'_>>::deserialize_enum::<de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::EnumVisitor>(move _6, const "IpAddr", move _7, move _9) -> [return: bb6, unwind: bb9]
  }
  preds [bb1]
  succs [bb6, bb9]

bb6
  0: StorageDead(_9)
    SourceInfo(serde/src/de/impls.rs:1702:80-1702:81)
  1: StorageDead(_7)
    SourceInfo(serde/src/de/impls.rs:1702:80-1702:81)
  2: StorageDead(_6)
    SourceInfo(serde/src/de/impls.rs:1702:80-1702:81)
  3: StorageDead(_8)
    SourceInfo(serde/src/de/impls.rs:1721:9-1721:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1712:9-1721:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_2)
    SourceInfo(serde/src/de/impls.rs:1721:9-1721:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1722:5-1722:6)
      kind: drop(_1) -> [return: bb8, unwind: bb12]
  }
  preds [bb4, bb6]
  succs [bb8, bb12]

bb8
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1722:6-1722:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1702:80-1702:81)
      kind: drop(_6) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb11]

bb10
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1713:75-1713:76)
      kind: drop(_4) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb2, bb3]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1722:5-1722:6)
      kind: drop(_1) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb0, bb9, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1708:5-1722:6)
      kind: resume
  }
  preds [bb7, bb11]
  succs []

