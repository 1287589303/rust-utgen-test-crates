bb0
  0: StorageLive(_2)
    SourceInfo(serde/src/de/impls.rs:1173:13-1173:20)
  1: StorageLive(_3)
    SourceInfo(serde/src/de/impls.rs:1174:21-1174:32)
  2: _3 = std::marker::PhantomData::<T>
    SourceInfo(serde/src/de/impls.rs:1174:21-1174:32)
  3: _2 = de::impls::<impl de::Deserialize<'de> for std::vec::Vec<T>>::deserialize::VecVisitor::<T> { marker: move _3 }
    SourceInfo(serde/src/de/impls.rs:1173:23-1175:10)
  4: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:1175:9-1175:10)
  5: FakeRead(ForLet(None), _2)
    SourceInfo(serde/src/de/impls.rs:1173:13-1173:20)
  6: StorageLive(_4)
    SourceInfo(serde/src/de/impls.rs:1176:9-1176:21)
  7: _4 = move _1
    SourceInfo(serde/src/de/impls.rs:1176:9-1176:21)
  8: StorageLive(_5)
    SourceInfo(serde/src/de/impls.rs:1176:38-1176:45)
  9: _5 = move _2
    SourceInfo(serde/src/de/impls.rs:1176:38-1176:45)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1176:9-1176:46)
      kind: _0 = <D as de::Deserializer<'_>>::deserialize_seq::<de::impls::<impl de::Deserialize<'de> for std::vec::Vec<T>>::deserialize::VecVisitor<T>>(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(serde/src/de/impls.rs:1176:45-1176:46)
  1: StorageDead(_4)
    SourceInfo(serde/src/de/impls.rs:1176:45-1176:46)
  2: StorageDead(_2)
    SourceInfo(serde/src/de/impls.rs:1177:5-1177:6)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1177:5-1177:6)
      kind: drop(_1) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1177:6-1177:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1176:45-1176:46)
      kind: drop(_4) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1177:5-1177:6)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:1140:5-1177:6)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

