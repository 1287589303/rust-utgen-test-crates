bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/ser/impls.rs:81:9-81:19)
  1: _3 = move _2
    SourceInfo(serde/src/ser/impls.rs:81:9-81:19)
  2: StorageLive(_4)
    SourceInfo(serde/src/ser/impls.rs:81:36-81:51)
  3: StorageLive(_5)
    SourceInfo(serde/src/ser/impls.rs:81:36-81:51)
  4: StorageLive(_6)
    SourceInfo(serde/src/ser/impls.rs:81:36-81:40)
  5: _6 = &(*_1)
    SourceInfo(serde/src/ser/impls.rs:81:36-81:40)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:81:36-81:51)
      kind: _5 = std::ffi::CStr::to_bytes(move _6) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _4 = &(*_5)
    SourceInfo(serde/src/ser/impls.rs:81:36-81:51)
  1: StorageDead(_6)
    SourceInfo(serde/src/ser/impls.rs:81:50-81:51)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:81:9-81:52)
      kind: _0 = <S as ser::Serializer>::serialize_bytes(move _3, move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:81:51-81:52)
  1: StorageDead(_3)
    SourceInfo(serde/src/ser/impls.rs:81:51-81:52)
  2: StorageDead(_5)
    SourceInfo(serde/src/ser/impls.rs:82:5-82:6)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:82:5-82:6)
      kind: drop(_2) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:82:6-82:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:81:51-81:52)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:82:5-82:6)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:77:5-82:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

