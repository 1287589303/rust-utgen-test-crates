bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/ser/impls.rs:809:12-809:42)
  1: StorageLive(_4)
    SourceInfo(serde/src/ser/impls.rs:809:12-809:22)
  2: _4 = &_2
    SourceInfo(serde/src/ser/impls.rs:809:12-809:22)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:809:12-809:42)
      kind: _3 = <S as ser::Serializer>::is_human_readable(move _4) -> [return: bb1, unwind: bb37]
  }
  preds []
  succs [bb1, bb37]

bb1
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:809:12-809:42)
      kind: switchInt(move _3) -> [0: bb30, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb30]

bb2
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:809:41-809:42)
  1: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9-348:10)
  2: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12-346:42)
  3: _6 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12-346:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:12-346:42)
      kind: switchInt(move _6) -> [0: bb7, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  1: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  3: StorageLive(_10)
    SourceInfo(serde/src/ser/impls.rs:811:30-811:37)
  4: _10 = const ser::impls::<impl ser::Serialize for std::net::Ipv4Addr>::serialize::MAX_LEN
    SourceInfo(serde/src/ser/impls.rs:811:30-811:37)
  5: _9 = &_10
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  6: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  7: StorageLive(_12)
    SourceInfo(serde/src/ser/impls.rs:811:39-811:62)
  8: StorageLive(_13)
    SourceInfo(serde/src/ser/impls.rs:811:39-811:56)
  9: StorageLive(_14)
    SourceInfo(serde/src/ser/impls.rs:811:39-811:56)
  10: _14 = const "101.102.103.104"
    SourceInfo(serde/src/ser/impls.rs:811:39-811:56)
  11: _13 = &(*_14)
    SourceInfo(serde/src/ser/impls.rs:811:39-811:56)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:811:39-811:62)
      kind: _12 = core::str::<impl str>::len(move _13) -> [return: bb4, unwind: bb37]
  }
  preds [bb2]
  succs [bb4, bb37]

bb4
  0: StorageDead(_13)
    SourceInfo(serde/src/ser/impls.rs:811:61-811:62)
  1: _11 = &_12
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  2: _8 = (move _9, move _11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  3: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  4: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  5: PlaceMention(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  6: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  7: _15 = (_8.0: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  8: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  9: _16 = (_8.1: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  10: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  11: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  12: _18 = (*_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  13: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  14: _19 = (*_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  15: _17 = Eq(move _18, move _19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _17) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _7 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  11: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:43-348:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9-348:10)
      kind: goto -> bb8
  }
  preds [bb4]
  succs [bb8]

bb6
  0: StorageDead(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _21 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _23 = move _21
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _25 = &(*_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _24 = &(*_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _27 = &(*_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _26 = &(*_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _28 = std::option::Option::<std::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _22 = core::panicking::assert_failed::<usize, usize>(move _23, move _24, move _26, move _28) -> bb37
  }
  preds [bb4]
  succs [bb37]

bb7
  0: _5 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:348:10-348:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:346:9-348:10)
      kind: goto -> bb8
  }
  preds [bb2]
  succs [bb8]

bb8
  0: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:348:9-348:10)
  1: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:348:9-348:10)
  2: StorageLive(_29)
    SourceInfo(serde/src/ser/impls.rs:812:17-812:24)
  3: _29 = [const 46_u8; 15]
    SourceInfo(serde/src/ser/impls.rs:812:27-812:42)
  4: FakeRead(ForLet(None), _29)
    SourceInfo(serde/src/ser/impls.rs:812:17-812:24)
  5: StorageLive(_30)
    SourceInfo(serde/src/ser/impls.rs:813:17-813:28)
  6: StorageLive(_31)
    SourceInfo(serde/src/ser/impls.rs:813:41-813:57)
  7: StorageLive(_32)
    SourceInfo(serde/src/ser/impls.rs:813:41-813:54)
  8: StorageLive(_33)
    SourceInfo(serde/src/ser/impls.rs:813:41-813:45)
  9: _33 = &(*_1)
    SourceInfo(serde/src/ser/impls.rs:813:41-813:45)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:813:41-813:54)
      kind: _32 = std::net::Ipv4Addr::octets(move _33) -> [return: bb9, unwind: bb37]
  }
  preds [bb5, bb7]
  succs [bb9, bb37]

bb9
  0: StorageDead(_33)
    SourceInfo(serde/src/ser/impls.rs:813:53-813:54)
  1: StorageLive(_34)
    SourceInfo(serde/src/ser/impls.rs:813:55-813:56)
  2: _34 = const 0_usize
    SourceInfo(serde/src/ser/impls.rs:813:55-813:56)
  3: _35 = Len(_32)
    SourceInfo(serde/src/ser/impls.rs:813:41-813:57)
  4: _36 = Lt(_34, _35)
    SourceInfo(serde/src/ser/impls.rs:813:41-813:57)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:813:41-813:57)
      kind: assert(move _36, "index out of bounds: the length is {} but the index is {}", move _35, _34) -> [success: bb10, unwind: bb37]
  }
  preds [bb8]
  succs [bb10, bb37]

bb10
  0: _31 = _32[_34]
    SourceInfo(serde/src/ser/impls.rs:813:41-813:57)
  1: StorageLive(_37)
    SourceInfo(serde/src/ser/impls.rs:813:59-813:67)
  2: StorageLive(_38)
    SourceInfo(serde/src/ser/impls.rs:813:59-813:67)
  3: StorageLive(_39)
    SourceInfo(serde/src/ser/impls.rs:813:59-813:67)
  4: _39 = &mut _29
    SourceInfo(serde/src/ser/impls.rs:813:59-813:67)
  5: _38 = &mut (*_39)
    SourceInfo(serde/src/ser/impls.rs:813:59-813:67)
  6: _37 = move _38 as &mut [u8] (PointerCoercion(Unsize))
    SourceInfo(serde/src/ser/impls.rs:813:59-813:67)
  7: StorageDead(_38)
    SourceInfo(serde/src/ser/impls.rs:813:66-813:67)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:813:31-813:68)
      kind: _30 = ser::impls::format_u8(move _31, move _37) -> [return: bb11, unwind: bb37]
  }
  preds [bb9]
  succs [bb11, bb37]

bb11
  0: StorageDead(_37)
    SourceInfo(serde/src/ser/impls.rs:813:67-813:68)
  1: StorageDead(_31)
    SourceInfo(serde/src/ser/impls.rs:813:67-813:68)
  2: FakeRead(ForLet(None), _30)
    SourceInfo(serde/src/ser/impls.rs:813:17-813:28)
  3: StorageDead(_39)
    SourceInfo(serde/src/ser/impls.rs:813:68-813:69)
  4: StorageDead(_34)
    SourceInfo(serde/src/ser/impls.rs:813:68-813:69)
  5: StorageDead(_32)
    SourceInfo(serde/src/ser/impls.rs:813:68-813:69)
  6: StorageLive(_40)
    SourceInfo(serde/src/ser/impls.rs:814:13-817:14)
  7: StorageLive(_41)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  8: StorageLive(_42)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  9: StorageLive(_43)
    SourceInfo(serde/src/ser/impls.rs:814:38-814:43)
  10: StorageLive(_44)
    SourceInfo(serde/src/ser/impls.rs:814:25-814:38)
  11: StorageLive(_45)
    SourceInfo(serde/src/ser/impls.rs:814:25-814:38)
  12: StorageLive(_46)
    SourceInfo(serde/src/ser/impls.rs:814:25-814:29)
  13: _46 = &(*_1)
    SourceInfo(serde/src/ser/impls.rs:814:25-814:29)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:25-814:38)
      kind: _45 = std::net::Ipv4Addr::octets(move _46) -> [return: bb12, unwind: bb37]
  }
  preds [bb10]
  succs [bb12, bb37]

bb12
  0: _44 = &_45
    SourceInfo(serde/src/ser/impls.rs:814:25-814:38)
  1: StorageDead(_46)
    SourceInfo(serde/src/ser/impls.rs:814:37-814:38)
  2: StorageLive(_47)
    SourceInfo(serde/src/ser/impls.rs:814:39-814:42)
  3: _47 = std::ops::RangeFrom::<usize> { start: const 1_usize }
    SourceInfo(serde/src/ser/impls.rs:814:39-814:42)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:38-814:43)
      kind: _43 = <[u8; 4] as std::ops::Index<std::ops::RangeFrom<usize>>>::index(move _44, move _47) -> [return: bb13, unwind: bb37]
  }
  preds [bb11]
  succs [bb13, bb37]

bb13
  0: StorageDead(_47)
    SourceInfo(serde/src/ser/impls.rs:814:42-814:43)
  1: StorageDead(_44)
    SourceInfo(serde/src/ser/impls.rs:814:42-814:43)
  2: _42 = &(*_43)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
      kind: _41 = <&[u8] as std::iter::IntoIterator>::into_iter(move _42) -> [return: bb14, unwind: bb37]
  }
  preds [bb12]
  succs [bb14, bb37]

bb14
  0: StorageDead(_42)
    SourceInfo(serde/src/ser/impls.rs:814:42-814:43)
  1: PlaceMention(_41)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  2: StorageLive(_48)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  3: _48 = move _41
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:13-817:14)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:13-817:14)
      kind: falseUnwind -> [real: bb16, unwind: bb37]
  }
  preds [bb14, bb26]
  succs [bb16, bb37]

bb16
  0: StorageLive(_50)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  1: StorageLive(_51)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  2: StorageLive(_52)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  3: StorageLive(_53)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  4: _53 = &mut _48
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  5: _52 = &mut (*_53)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
      kind: _51 = <std::slice::Iter<'_, u8> as std::iter::Iterator>::next(move _52) -> [return: bb17, unwind: bb37]
  }
  preds [bb15]
  succs [bb17, bb37]

bb17
  0: StorageDead(_52)
    SourceInfo(serde/src/ser/impls.rs:814:42-814:43)
  1: PlaceMention(_51)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  2: _54 = discriminant(_51)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
      kind: switchInt(move _54) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _51)
    SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:24-814:43)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:13-817:14)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_56)
    SourceInfo(serde/src/ser/impls.rs:814:17-814:20)
  1: _56 = ((_51 as Some).0: &u8)
    SourceInfo(serde/src/ser/impls.rs:814:17-814:20)
  2: StorageLive(_57)
    SourceInfo(serde/src/ser/impls.rs:816:28-816:72)
  3: StorageLive(_58)
    SourceInfo(serde/src/ser/impls.rs:816:28-816:68)
  4: StorageLive(_59)
    SourceInfo(serde/src/ser/impls.rs:816:38-816:42)
  5: _59 = (*_56)
    SourceInfo(serde/src/ser/impls.rs:816:38-816:42)
  6: StorageLive(_60)
    SourceInfo(serde/src/ser/impls.rs:816:44-816:67)
  7: StorageLive(_61)
    SourceInfo(serde/src/ser/impls.rs:816:44-816:67)
  8: StorageLive(_62)
    SourceInfo(serde/src/ser/impls.rs:816:52-816:67)
  9: StorageLive(_63)
    SourceInfo(serde/src/ser/impls.rs:816:49-816:52)
  10: _63 = &mut _29
    SourceInfo(serde/src/ser/impls.rs:816:49-816:52)
  11: StorageLive(_64)
    SourceInfo(serde/src/ser/impls.rs:816:53-816:66)
  12: StorageLive(_65)
    SourceInfo(serde/src/ser/impls.rs:816:53-816:64)
  13: StorageLive(_66)
    SourceInfo(serde/src/ser/impls.rs:816:53-816:60)
  14: _66 = _30
    SourceInfo(serde/src/ser/impls.rs:816:53-816:60)
  15: _67 = AddWithOverflow(_66, const 1_usize)
    SourceInfo(serde/src/ser/impls.rs:816:53-816:64)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:816:53-816:64)
      kind: assert(!move (_67.1: bool), "attempt to compute `{} + {}`, which would overflow", move _66, const 1_usize) -> [success: bb22, unwind: bb37]
  }
  preds [bb17, bb19]
  succs [bb22, bb37]

bb21
  0: _40 = const ()
    SourceInfo(serde/src/ser/impls.rs:814:13-817:14)
  1: StorageDead(_53)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  2: StorageDead(_51)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  3: StorageDead(_50)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  4: StorageDead(_48)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  5: StorageDead(_45)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  6: StorageDead(_43)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  7: StorageDead(_41)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  8: StorageDead(_40)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  9: StorageLive(_70)
    SourceInfo(serde/src/ser/impls.rs:819:17-819:20)
  10: StorageLive(_71)
    SourceInfo(serde/src/ser/impls.rs:819:57-819:72)
  11: StorageLive(_72)
    SourceInfo(serde/src/ser/impls.rs:819:57-819:72)
  12: StorageLive(_73)
    SourceInfo(serde/src/ser/impls.rs:819:61-819:72)
  13: StorageLive(_74)
    SourceInfo(serde/src/ser/impls.rs:819:58-819:61)
  14: _74 = &_29
    SourceInfo(serde/src/ser/impls.rs:819:58-819:61)
  15: StorageLive(_75)
    SourceInfo(serde/src/ser/impls.rs:819:62-819:71)
  16: StorageLive(_76)
    SourceInfo(serde/src/ser/impls.rs:819:64-819:71)
  17: _76 = _30
    SourceInfo(serde/src/ser/impls.rs:819:64-819:71)
  18: _75 = std::ops::RangeTo::<usize> { end: move _76 }
    SourceInfo(serde/src/ser/impls.rs:819:62-819:71)
  19: StorageDead(_76)
    SourceInfo(serde/src/ser/impls.rs:819:70-819:71)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:819:61-819:72)
      kind: _73 = <[u8; 15] as std::ops::Index<std::ops::RangeTo<usize>>>::index(move _74, move _75) -> [return: bb27, unwind: bb37]
  }
  preds [bb19]
  succs [bb27, bb37]

bb22
  0: _65 = move (_67.0: usize)
    SourceInfo(serde/src/ser/impls.rs:816:53-816:64)
  1: StorageDead(_66)
    SourceInfo(serde/src/ser/impls.rs:816:63-816:64)
  2: _64 = std::ops::RangeFrom::<usize> { start: move _65 }
    SourceInfo(serde/src/ser/impls.rs:816:53-816:66)
  3: StorageDead(_65)
    SourceInfo(serde/src/ser/impls.rs:816:65-816:66)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:816:52-816:67)
      kind: _62 = <[u8; 15] as std::ops::IndexMut<std::ops::RangeFrom<usize>>>::index_mut(move _63, move _64) -> [return: bb23, unwind: bb37]
  }
  preds [bb20]
  succs [bb23, bb37]

bb23
  0: StorageDead(_64)
    SourceInfo(serde/src/ser/impls.rs:816:66-816:67)
  1: StorageDead(_63)
    SourceInfo(serde/src/ser/impls.rs:816:66-816:67)
  2: _61 = &mut (*_62)
    SourceInfo(serde/src/ser/impls.rs:816:44-816:67)
  3: _60 = &mut (*_61)
    SourceInfo(serde/src/ser/impls.rs:816:44-816:67)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:816:28-816:68)
      kind: _58 = ser::impls::format_u8(move _59, move _60) -> [return: bb24, unwind: bb37]
  }
  preds [bb22]
  succs [bb24, bb37]

bb24
  0: StorageDead(_60)
    SourceInfo(serde/src/ser/impls.rs:816:67-816:68)
  1: StorageDead(_59)
    SourceInfo(serde/src/ser/impls.rs:816:67-816:68)
  2: _68 = AddWithOverflow(_58, const 1_usize)
    SourceInfo(serde/src/ser/impls.rs:816:28-816:72)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:816:28-816:72)
      kind: assert(!move (_68.1: bool), "attempt to compute `{} + {}`, which would overflow", move _58, const 1_usize) -> [success: bb25, unwind: bb37]
  }
  preds [bb23]
  succs [bb25, bb37]

bb25
  0: _57 = move (_68.0: usize)
    SourceInfo(serde/src/ser/impls.rs:816:28-816:72)
  1: StorageDead(_58)
    SourceInfo(serde/src/ser/impls.rs:816:71-816:72)
  2: _69 = AddWithOverflow(_30, _57)
    SourceInfo(serde/src/ser/impls.rs:816:17-816:72)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:816:17-816:72)
      kind: assert(!move (_69.1: bool), "attempt to compute `{} + {}`, which would overflow", _30, move _57) -> [success: bb26, unwind: bb37]
  }
  preds [bb24]
  succs [bb26, bb37]

bb26
  0: _30 = move (_69.0: usize)
    SourceInfo(serde/src/ser/impls.rs:816:17-816:72)
  1: StorageDead(_57)
    SourceInfo(serde/src/ser/impls.rs:816:71-816:72)
  2: StorageDead(_62)
    SourceInfo(serde/src/ser/impls.rs:816:72-816:73)
  3: StorageDead(_61)
    SourceInfo(serde/src/ser/impls.rs:816:72-816:73)
  4: _50 = const ()
    SourceInfo(serde/src/ser/impls.rs:814:44-817:14)
  5: StorageDead(_56)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  6: StorageDead(_53)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  7: StorageDead(_51)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  8: StorageDead(_50)
    SourceInfo(serde/src/ser/impls.rs:817:13-817:14)
  9: _49 = const ()
    SourceInfo(serde/src/ser/impls.rs:814:13-817:14)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:814:13-817:14)
      kind: goto -> bb15
  }
  preds [bb25]
  succs [bb15]

bb27
  0: StorageDead(_75)
    SourceInfo(serde/src/ser/impls.rs:819:71-819:72)
  1: StorageDead(_74)
    SourceInfo(serde/src/ser/impls.rs:819:71-819:72)
  2: _72 = &(*_73)
    SourceInfo(serde/src/ser/impls.rs:819:57-819:72)
  3: _71 = &(*_72)
    SourceInfo(serde/src/ser/impls.rs:819:57-819:72)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:819:32-819:73)
      kind: _70 = std::str::from_utf8_unchecked(move _71) -> [return: bb28, unwind: bb37]
  }
  preds [bb21]
  succs [bb28, bb37]

bb28
  0: StorageDead(_71)
    SourceInfo(serde/src/ser/impls.rs:819:72-819:73)
  1: FakeRead(ForLet(None), _70)
    SourceInfo(serde/src/ser/impls.rs:819:17-819:20)
  2: StorageDead(_73)
    SourceInfo(serde/src/ser/impls.rs:819:75-819:76)
  3: StorageDead(_72)
    SourceInfo(serde/src/ser/impls.rs:819:75-819:76)
  4: StorageLive(_77)
    SourceInfo(serde/src/ser/impls.rs:820:13-820:23)
  5: _77 = move _2
    SourceInfo(serde/src/ser/impls.rs:820:13-820:23)
  6: StorageLive(_78)
    SourceInfo(serde/src/ser/impls.rs:820:38-820:41)
  7: _78 = &(*_70)
    SourceInfo(serde/src/ser/impls.rs:820:38-820:41)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:820:13-820:42)
      kind: _0 = <S as ser::Serializer>::serialize_str(move _77, move _78) -> [return: bb29, unwind: bb36]
  }
  preds [bb27]
  succs [bb29, bb36]

bb29
  0: StorageDead(_78)
    SourceInfo(serde/src/ser/impls.rs:820:41-820:42)
  1: StorageDead(_77)
    SourceInfo(serde/src/ser/impls.rs:820:41-820:42)
  2: StorageDead(_70)
    SourceInfo(serde/src/ser/impls.rs:821:9-821:10)
  3: StorageDead(_30)
    SourceInfo(serde/src/ser/impls.rs:821:9-821:10)
  4: StorageDead(_29)
    SourceInfo(serde/src/ser/impls.rs:821:9-821:10)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:809:9-823:10)
      kind: goto -> bb33
  }
  preds [bb28]
  succs [bb33]

bb30
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:809:41-809:42)
  1: StorageLive(_79)
    SourceInfo(serde/src/ser/impls.rs:822:13-822:26)
  2: StorageLive(_80)
    SourceInfo(serde/src/ser/impls.rs:822:13-822:26)
  3: StorageLive(_81)
    SourceInfo(serde/src/ser/impls.rs:822:13-822:17)
  4: _81 = &(*_1)
    SourceInfo(serde/src/ser/impls.rs:822:13-822:17)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:822:13-822:26)
      kind: _80 = std::net::Ipv4Addr::octets(move _81) -> [return: bb31, unwind: bb37]
  }
  preds [bb1]
  succs [bb31, bb37]

bb31
  0: _79 = &_80
    SourceInfo(serde/src/ser/impls.rs:822:13-822:26)
  1: StorageDead(_81)
    SourceInfo(serde/src/ser/impls.rs:822:25-822:26)
  2: StorageLive(_82)
    SourceInfo(serde/src/ser/impls.rs:822:37-822:47)
  3: _82 = move _2
    SourceInfo(serde/src/ser/impls.rs:822:37-822:47)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:822:13-822:48)
      kind: _0 = <[u8; 4] as ser::Serialize>::serialize::<S>(move _79, move _82) -> [return: bb32, unwind: bb35]
  }
  preds [bb30]
  succs [bb32, bb35]

bb32
  0: StorageDead(_82)
    SourceInfo(serde/src/ser/impls.rs:822:47-822:48)
  1: StorageDead(_79)
    SourceInfo(serde/src/ser/impls.rs:822:47-822:48)
  2: StorageDead(_80)
    SourceInfo(serde/src/ser/impls.rs:823:9-823:10)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:809:9-823:10)
      kind: goto -> bb33
  }
  preds [bb31]
  succs [bb33]

bb33
  0: StorageDead(_3)
    SourceInfo(serde/src/ser/impls.rs:823:9-823:10)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:824:5-824:6)
      kind: drop(_2) -> [return: bb34, unwind: bb38]
  }
  preds [bb29, bb32]
  succs [bb34, bb38]

bb34
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:824:6-824:6)
      kind: return
  }
  preds [bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:822:47-822:48)
      kind: drop(_82) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb31]
  succs [bb37]

bb36
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:820:41-820:42)
      kind: drop(_77) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:824:5-824:6)
      kind: drop(_2) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb0, bb3, bb6, bb8, bb9, bb10, bb11, bb12, bb13, bb15, bb16, bb20, bb21, bb22, bb23, bb24, bb25, bb27, bb30, bb35, bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:805:5-824:6)
      kind: resume
  }
  preds [bb33, bb37]
  succs []

