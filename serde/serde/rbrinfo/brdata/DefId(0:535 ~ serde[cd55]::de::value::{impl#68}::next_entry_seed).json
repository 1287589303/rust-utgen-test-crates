{
  "name": "serde::de::value::{impl#68}::next_entry_seed",
  "mod_info": {
    "name": "de::value",
    "loc": "serde/src/de/mod.rs:119:1:119:15"
  },
  "visible": true,
  "loc": "serde/src/de/value.rs:1386:5:1403:6",
  "doc": "",
  "code": [
    "fn next_entry_seed<TK, TV>(",
    "    &mut self,",
    "    kseed: TK,",
    "    vseed: TV,",
    ") -> Result<Option<(TK::Value, TV::Value)>, Self::Error>",
    "where",
    "    TK: de::DeserializeSeed<'de>,",
    "    TV: de::DeserializeSeed<'de>,",
    "{",
    "    match self.next_pair() {",
    "        Some((key, value)) => {",
    "            let key = tri!(kseed.deserialize(key.into_deserializer()));",
    "            let value = tri!(vseed.deserialize(value.into_deserializer()));",
    "            Ok(Some((key, value)))",
    "        }",
    "        None => Ok(None),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1395,
          "bound": null
        },
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1395,
          "bound": null
        },
        {
          "cond": "kseed.deserialize(key.into_deserializer()) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 1397,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        10,
        13,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1395,
          "bound": null
        },
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1395,
          "bound": null
        },
        {
          "cond": "kseed.deserialize(key.into_deserializer()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1397,
          "bound": null
        },
        {
          "cond": "vseed.deserialize(value.into_deserializer()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1398,
          "bound": null
        },
        {
          "cond": "vseed.deserialize(value.into_deserializer()) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 1398,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        9,
        11,
        12,
        14,
        15,
        16,
        19,
        22,
        36,
        37,
        40,
        41,
        42,
        43,
        44,
        45
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1395,
          "bound": null
        },
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1395,
          "bound": null
        },
        {
          "cond": "kseed.deserialize(key.into_deserializer()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1397,
          "bound": null
        },
        {
          "cond": "vseed.deserialize(value.into_deserializer()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1398,
          "bound": null
        },
        {
          "cond": "vseed.deserialize(value.into_deserializer()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1398,
          "bound": null
        },
        {
          "cond": "vseed.deserialize(value.into_deserializer()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1398,
          "bound": null
        }
      ],
      "ret": "Ok(Some((key, value)))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        9,
        11,
        12,
        14,
        15,
        16,
        18,
        20,
        21,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        33,
        34,
        35,
        45
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.next_pair() matches None",
          "norm": null,
          "value": "true",
          "line": 1395,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        4,
        32,
        33,
        34,
        35,
        45
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}