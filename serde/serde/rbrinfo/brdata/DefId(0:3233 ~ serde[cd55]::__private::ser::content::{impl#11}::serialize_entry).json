{
  "name": "serde::__private::ser::content::{impl#11}::serialize_entry",
  "mod_info": {
    "name": "__private::ser::content",
    "loc": "serde/src/private/ser.rs:337:1:987:2"
  },
  "visible": true,
  "loc": "serde/src/private/ser.rs:915:9:924:10",
  "doc": "",
  "code": [
    "fn serialize_entry<K, V>(&mut self, key: &K, value: &V) -> Result<(), E>",
    "where",
    "    K: ?Sized + Serialize,",
    "    V: ?Sized + Serialize,",
    "{",
    "    let key = tri!(key.serialize(ContentSerializer::<E>::new()));",
    "    let value = tri!(value.serialize(ContentSerializer::<E>::new()));",
    "    self.entries.push((key, value));",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "key.serialize(ContentSerializer::<E>::new()) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 920,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        26,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "key.serialize(ContentSerializer::<E>::new()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 920,
          "bound": null
        },
        {
          "cond": "value.serialize(ContentSerializer::<E>::new()) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 921,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        14,
        17,
        24,
        25,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "key.serialize(ContentSerializer::<E>::new()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 920,
          "bound": null
        },
        {
          "cond": "value.serialize(ContentSerializer::<E>::new()) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 921,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        11,
        13,
        15,
        16,
        18,
        19,
        20,
        21,
        22,
        23,
        29
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}