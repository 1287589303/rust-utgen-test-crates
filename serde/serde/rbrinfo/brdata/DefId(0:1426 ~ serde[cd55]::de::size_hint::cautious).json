{
  "name": "serde::de::size_hint::cautious",
  "mod_info": {
    "name": "de::size_hint",
    "loc": "serde/src/de/mod.rs:123:1:123:26"
  },
  "visible": true,
  "loc": "serde/src/de/size_hint.rs:12:1:23:2",
  "doc": "",
  "code": [
    "pub fn cautious<Element>(hint: Option<usize>) -> usize {",
    "    const MAX_PREALLOC_BYTES: usize = 1024 * 1024;",
    "",
    "    if mem::size_of::<Element>() == 0 {",
    "        0",
    "    } else {",
    "        cmp::min(",
    "            hint.unwrap_or(0),",
    "            MAX_PREALLOC_BYTES / mem::size_of::<Element>(),",
    "        )",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "mem::size_of::<Element>() == 0",
          "norm": "0 == mem::size_of::<Element>()",
          "value": "false",
          "line": 15,
          "bound": null
        }
      ],
      "ret": "0",
      "path": [
        0,
        1,
        2,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "mem::size_of::<Element>() == 0",
          "norm": "0 == mem::size_of::<Element>()",
          "value": "true",
          "line": 15,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}