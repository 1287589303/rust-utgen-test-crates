{
  "name": "serde::__private::de::content::visit_content_seq_ref",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": false,
  "loc": "serde/src/private/de.rs:1698:5:1710:6",
  "doc": "",
  "code": [
    "fn visit_content_seq_ref<'a, 'de, V, E>(",
    "    content: &'a [Content<'de>],",
    "    visitor: V,",
    ") -> Result<V::Value, E>",
    "where",
    "    V: Visitor<'de>,",
    "    E: de::Error,",
    "{",
    "    let mut seq_visitor = SeqDeserializer::new(content.iter());",
    "    let value = tri!(visitor.visit_seq(&mut seq_visitor));",
    "    tri!(seq_visitor.end());",
    "    Ok(value)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "visitor.visit_seq(&mut seq_visitor) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 1707,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        22,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "visitor.visit_seq(&mut seq_visitor) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "seq_visitor.end() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 1708,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        10,
        11,
        14,
        16,
        20,
        21,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "visitor.visit_seq(&mut seq_visitor) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "seq_visitor.end() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1708,
          "bound": null
        }
      ],
      "ret": "Ok(value)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        10,
        11,
        13,
        15,
        17,
        18,
        19,
        25
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}