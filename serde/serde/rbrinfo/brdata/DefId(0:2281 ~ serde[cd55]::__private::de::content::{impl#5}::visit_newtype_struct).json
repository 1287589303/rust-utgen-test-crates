{
  "name": "serde::__private::de::content::{impl#5}::visit_newtype_struct",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:494:9:500:10",
  "doc": "",
  "code": [
    "fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>",
    "where",
    "    D: Deserializer<'de>,",
    "{",
    "    let v = tri!(Deserialize::deserialize(deserializer));",
    "    Ok(Content::Newtype(Box::new(v)))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "Deserialize::deserialize(deserializer) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 498,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        4,
        7,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "Deserialize::deserialize(deserializer) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 498,
          "bound": null
        },
        {
          "cond": "Deserialize::deserialize(deserializer) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 498,
          "bound": null
        }
      ],
      "ret": "Ok(Content::Newtype(Box::new(v)))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        8,
        9,
        10,
        11,
        12,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}