{
  "name": "serde::de::impls::{impl#30}::visit_enum",
  "mod_info": {
    "name": "de::impls",
    "loc": "serde/src/de/mod.rs:122:1:122:11"
  },
  "visible": true,
  "loc": "serde/src/de/impls.rs:1910:5:1922:6",
  "doc": "",
  "code": [
    "fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>",
    "where",
    "    A: EnumAccess<'de>,",
    "{",
    "    use std::os::unix::ffi::OsStringExt;",
    "",
    "    match tri!(data.variant()) {",
    "        (OsStringKind::Unix, v) => v.newtype_variant().map(OsString::from_vec),",
    "        (OsStringKind::Windows, _) => Err(Error::custom(",
    "            \"cannot deserialize Windows OS string on Unix\",",
    "        )),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "data.variant() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 1916,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        4,
        7,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "data.variant() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1916,
          "bound": null
        },
        {
          "cond": "data.variant() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1916,
          "bound": null
        },
        {
          "cond": "data.variant() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 1916,
          "bound": null
        }
      ],
      "ret": "Err(Error::custom(\n                \"cannot deserialize Windows OS string on Unix\",\n            ))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        10,
        15,
        16,
        17,
        18,
        19,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "data.variant() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1916,
          "bound": null
        },
        {
          "cond": "data.variant() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1916,
          "bound": null
        },
        {
          "cond": "data.variant() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 1916,
          "bound": null
        },
        {
          "cond": "match $expr {\n            Ok(val) => val,\n            Err(err) => return Err(err),\n        } matches (OsStringKind::Unix, v)",
          "norm": null,
          "value": "true",
          "line": 297,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        9,
        11,
        12,
        13,
        14,
        17,
        18,
        19,
        22
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}