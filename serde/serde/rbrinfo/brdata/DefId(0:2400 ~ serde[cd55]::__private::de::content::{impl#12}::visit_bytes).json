{
  "name": "serde::__private::de::content::{impl#12}::visit_bytes",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:971:9:982:10",
  "doc": "",
  "code": [
    "fn visit_bytes<E>(self, field: &[u8]) -> Result<Self::Value, E>",
    "where",
    "    E: de::Error,",
    "{",
    "    if field == self.tag.as_bytes() {",
    "        Ok(TagOrContentField::Tag)",
    "    } else if field == self.content.as_bytes() {",
    "        Ok(TagOrContentField::Content)",
    "    } else {",
    "        Err(de::Error::invalid_value(Unexpected::Bytes(field), &self))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "field == self.tag.as_bytes()",
          "norm": null,
          "value": "true",
          "line": 975,
          "bound": null
        }
      ],
      "ret": "Ok(TagOrContentField::Tag)",
      "path": [
        0,
        1,
        2,
        3,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "field == self.tag.as_bytes()",
          "norm": null,
          "value": "false",
          "line": 975,
          "bound": null
        },
        {
          "cond": "field == self.content.as_bytes()",
          "norm": null,
          "value": "true",
          "line": 977,
          "bound": null
        }
      ],
      "ret": "Ok(TagOrContentField::Content)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "field == self.tag.as_bytes()",
          "norm": null,
          "value": "false",
          "line": 975,
          "bound": null
        },
        {
          "cond": "field == self.content.as_bytes()",
          "norm": null,
          "value": "false",
          "line": 977,
          "bound": null
        }
      ],
      "ret": "Err(de::Error::invalid_value(Unexpected::Bytes(field), &self))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        8,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}