{
  "name": "serde::de::value::{impl#72}::deserialize_tuple",
  "mod_info": {
    "name": "de::value",
    "loc": "serde/src/de/mod.rs:119:1:119:15"
  },
  "visible": true,
  "loc": "serde/src/de/value.rs:1513:5:1524:6",
  "doc": "",
  "code": [
    "fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>",
    "where",
    "    V: de::Visitor<'de>,",
    "{",
    "    if len == 2 {",
    "        self.deserialize_seq(visitor)",
    "    } else {",
    "        // First argument is the number of elements in the data, second",
    "        // argument is the number of elements expected by the Deserialize.",
    "        Err(de::Error::invalid_length(2, &ExpectedInSeq(len)))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "len == 2",
          "norm": "2 == len",
          "value": "false",
          "line": 1517,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "len == 2",
          "norm": "2 == len",
          "value": "true",
          "line": 1517,
          "bound": null
        }
      ],
      "ret": "Err(de::Error::invalid_length(2, &ExpectedInSeq(len)))",
      "path": [
        0,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}