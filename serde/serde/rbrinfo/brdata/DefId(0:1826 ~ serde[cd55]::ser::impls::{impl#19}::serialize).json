{
  "name": "serde::ser::impls::{impl#19}::serialize",
  "mod_info": {
    "name": "ser::impls",
    "loc": "serde/src/ser/mod.rs:113:1:113:11"
  },
  "visible": true,
  "loc": "serde/src/ser/impls.rs:650:5:658:6",
  "doc": "",
  "code": [
    "fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>",
    "where",
    "    S: Serializer,",
    "{",
    "    match self.read() {",
    "        Ok(locked) => locked.serialize(serializer),",
    "        Err(_) => Err(S::Error::custom(\"lock poison error while serializing\")),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.read() matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 654,
          "bound": null
        }
      ],
      "ret": "Err(S::Error::custom(\"lock poison error while serializing\"))",
      "path": [
        0,
        1,
        4,
        9,
        10,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.read() matches Ok(locked)",
          "norm": null,
          "value": "true",
          "line": 654,
          "bound": null
        },
        {
          "cond": "self.read() matches Ok(locked)",
          "norm": null,
          "value": "true",
          "line": 654,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        8,
        11,
        12,
        13
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}