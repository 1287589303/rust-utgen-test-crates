{
  "name": "serde::ser::SerializeStruct::skip_field",
  "mod_info": {
    "name": "ser",
    "loc": "serde/src/lib.rs:313:1:313:13"
  },
  "visible": true,
  "loc": "serde/src/ser/mod.rs:1872:5:1875:6",
  "doc": "/// Indicate that a struct field has been skipped.\n///\n/// The default implementation does nothing.\n",
  "code": [
    "fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {",
    "    let _ = key;",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Ok(())",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}