{
  "name": "serde::ser::impossible::{impl#0}::serialize_element",
  "mod_info": {
    "name": "ser::impossible",
    "loc": "serde/src/ser/mod.rs:114:1:114:16"
  },
  "visible": true,
  "loc": "serde/src/ser/impossible.rs:75:5:81:6",
  "doc": "",
  "code": [
    "fn serialize_element<T>(&mut self, value: &T) -> Result<(), Error>",
    "where",
    "    T: ?Sized + Serialize,",
    "{",
    "    let _ = value;",
    "    match self.void {}",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}