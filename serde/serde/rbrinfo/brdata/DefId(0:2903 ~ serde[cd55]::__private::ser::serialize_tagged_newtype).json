{
  "name": "serde::__private::ser::serialize_tagged_newtype",
  "mod_info": {
    "name": "__private::ser",
    "loc": "serde/src/private/mod.rs:4:1:4:13"
  },
  "visible": true,
  "loc": "serde/src/private/ser.rs:17:1:36:2",
  "doc": "/// Not public API.\n",
  "code": [
    "pub fn serialize_tagged_newtype<S, T>(",
    "    serializer: S,",
    "    type_ident: &'static str,",
    "    variant_ident: &'static str,",
    "    tag: &'static str,",
    "    variant_name: &'static str,",
    "    value: &T,",
    ") -> Result<S::Ok, S::Error>",
    "where",
    "    S: Serializer,",
    "    T: Serialize,",
    "{",
    "    value.serialize(TaggedSerializer {",
    "        type_ident,",
    "        variant_ident,",
    "        tag,",
    "        variant_name,",
    "        delegate: serializer,",
    "    })",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}