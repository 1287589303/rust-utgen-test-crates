{
  "name": "serde::de::value::{impl#68}::next_key_seed",
  "mod_info": {
    "name": "de::value",
    "loc": "serde/src/de/mod.rs:119:1:119:15"
  },
  "visible": true,
  "loc": "serde/src/de/value.rs:1362:5:1373:6",
  "doc": "",
  "code": [
    "fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>",
    "where",
    "    T: de::DeserializeSeed<'de>,",
    "{",
    "    match self.next_pair() {",
    "        Some((key, value)) => {",
    "            self.value = Some(value);",
    "            seed.deserialize(key.into_deserializer()).map(Some)",
    "        }",
    "        None => Ok(None),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1366,
          "bound": null
        },
        {
          "cond": "self.next_pair() matches Some((key, value))",
          "norm": null,
          "value": "true",
          "line": 1366,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        9,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.next_pair() matches None",
          "norm": null,
          "value": "true",
          "line": 1366,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        4,
        15,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}