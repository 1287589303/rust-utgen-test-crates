{
  "name": "serde::__private::de::content::{impl#31}::visit_map",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:2306:9:2312:10",
  "doc": "",
  "code": [
    "fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>",
    "where",
    "    M: MapAccess<'de>,",
    "{",
    "    while tri!(access.next_entry::<IgnoredAny, IgnoredAny>()).is_some() {}",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "access.next_entry::<IgnoredAny, IgnoredAny>() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2310,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        8,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "access.next_entry::<IgnoredAny, IgnoredAny>() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2310,
          "bound": null
        },
        {
          "cond": "access.next_entry::<IgnoredAny, IgnoredAny>() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2310,
          "bound": null
        },
        {
          "cond": "tri!(access.next_entry::<IgnoredAny, IgnoredAny>()).is_some()",
          "norm": null,
          "value": "true",
          "line": 2310,
          "bound": null
        },
        {
          "cond": "access.next_entry::<IgnoredAny, IgnoredAny>() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2310,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        11,
        1,
        2,
        3,
        6,
        8,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "access.next_entry::<IgnoredAny, IgnoredAny>() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2310,
          "bound": null
        },
        {
          "cond": "access.next_entry::<IgnoredAny, IgnoredAny>() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2310,
          "bound": null
        },
        {
          "cond": "tri!(access.next_entry::<IgnoredAny, IgnoredAny>()).is_some()",
          "norm": null,
          "value": "false",
          "line": 2310,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        12,
        13,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}