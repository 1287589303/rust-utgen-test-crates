{
  "name": "serde::__private::de::content::{impl#16}::deserialize_unit_struct",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:1338:9:1365:10",
  "doc": "",
  "code": [
    "fn deserialize_unit_struct<V>(",
    "    self,",
    "    _name: &'static str,",
    "    visitor: V,",
    ") -> Result<V::Value, Self::Error>",
    "where",
    "    V: Visitor<'de>,",
    "{",
    "    match self.content {",
    "        // As a special case, allow deserializing untagged newtype",
    "        // variant containing unit struct.",
    "        //",
    "        //     #[derive(Deserialize)]",
    "        //     struct Info;",
    "        //",
    "        //     #[derive(Deserialize)]",
    "        //     #[serde(tag = \"topic\")]",
    "        //     enum Message {",
    "        //         Info(Info),",
    "        //     }",
    "        //",
    "        // We want {\"topic\":\"Info\"} to deserialize even though",
    "        // ordinarily unit structs do not deserialize from empty map/seq.",
    "        Content::Map(ref v) if v.is_empty() => visitor.visit_unit(),",
    "        Content::Seq(ref v) if v.is_empty() => visitor.visit_unit(),",
    "        _ => self.deserialize_any(visitor),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.content matches _",
          "norm": null,
          "value": "true",
          "line": 1363,
          "bound": null
        },
        {
          "cond": "self.content matches Content::Seq(ref v)",
          "norm": null,
          "value": "false",
          "line": 1362,
          "bound": null
        },
        {
          "cond": "self.content matches Content::Map(ref v)",
          "norm": null,
          "value": "false",
          "line": 1361,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.content matches Content::Map(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "self.content matches Content::Map(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "v.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1361,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        6,
        8,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.content matches Content::Map(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "self.content matches Content::Map(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "v.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1361,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        7,
        1,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.content matches Content::Seq(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "self.content matches Content::Seq(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "v.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1362,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        9,
        10,
        11,
        13,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.content matches Content::Seq(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "self.content matches Content::Seq(ref v)",
          "norm": null,
          "value": "true",
          "line": 1346,
          "bound": null
        },
        {
          "cond": "v.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1362,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        9,
        10,
        12,
        1,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}