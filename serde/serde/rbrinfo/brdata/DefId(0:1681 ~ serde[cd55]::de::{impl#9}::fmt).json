{
  "name": "serde::de::{impl#9}::fmt",
  "mod_info": {
    "name": "de",
    "loc": "serde/src/lib.rs:312:1:312:12"
  },
  "visible": true,
  "loc": "serde/src/de/mod.rs:2303:5:2334:6",
  "doc": "",
  "code": [
    "fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
    "    struct LookForDecimalPoint<'f, 'a> {",
    "        formatter: &'f mut fmt::Formatter<'a>,",
    "        has_decimal_point: bool,",
    "    }",
    "",
    "    impl<'f, 'a> fmt::Write for LookForDecimalPoint<'f, 'a> {",
    "        fn write_str(&mut self, fragment: &str) -> fmt::Result {",
    "            self.has_decimal_point |= fragment.contains('.');",
    "            self.formatter.write_str(fragment)",
    "        }",
    "",
    "        fn write_char(&mut self, ch: char) -> fmt::Result {",
    "            self.has_decimal_point |= ch == '.';",
    "            self.formatter.write_char(ch)",
    "        }",
    "    }",
    "",
    "    if self.0.is_finite() {",
    "        let mut writer = LookForDecimalPoint {",
    "            formatter,",
    "            has_decimal_point: false,",
    "        };",
    "        tri!(write!(writer, \"{}\", self.0));",
    "        if !writer.has_decimal_point {",
    "            tri!(formatter.write_str(\".0\"));",
    "        }",
    "    } else {",
    "        tri!(write!(formatter, \"{}\", self.0));",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.0.is_finite()",
          "norm": null,
          "value": "true",
          "line": 2321,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.0.is_finite()",
          "norm": null,
          "value": "true",
          "line": 2321,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "writer.has_decimal_point",
          "norm": null,
          "value": "true",
          "line": 2327,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        10,
        17,
        26,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.0.is_finite()",
          "norm": null,
          "value": "true",
          "line": 2321,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "writer.has_decimal_point",
          "norm": null,
          "value": "false",
          "line": 2327,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        11,
        12,
        15,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.0.is_finite()",
          "norm": null,
          "value": "true",
          "line": 2321,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "writer.has_decimal_point",
          "norm": null,
          "value": "false",
          "line": 2327,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        11,
        12,
        14,
        16,
        17,
        26,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.0.is_finite()",
          "norm": null,
          "value": "false",
          "line": 2321,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        18,
        19,
        20,
        21,
        24,
        28,
        29
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.0.is_finite()",
          "norm": null,
          "value": "false",
          "line": 2321,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        },
        {
          "cond": "formatter.write_str(\".0\") matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2328,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        18,
        19,
        20,
        21,
        23,
        25,
        26,
        29
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}