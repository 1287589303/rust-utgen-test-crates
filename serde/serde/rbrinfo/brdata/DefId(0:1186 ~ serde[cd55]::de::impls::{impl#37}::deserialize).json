{
  "name": "serde::de::impls::{impl#37}::deserialize",
  "mod_info": {
    "name": "de::impls",
    "loc": "serde/src/de/mod.rs:122:1:122:11"
  },
  "visible": true,
  "loc": "serde/src/de/impls.rs:2448:5:2461:6",
  "doc": "",
  "code": [
    "fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>",
    "where",
    "    D: Deserializer<'de>,",
    "{",
    "    let (start, end) = tri!(deserializer.deserialize_struct(",
    "        \"RangeInclusive\",",
    "        range::FIELDS,",
    "        range::RangeVisitor {",
    "            expecting: \"struct RangeInclusive\",",
    "            phantom: PhantomData,",
    "        },",
    "    ));",
    "    Ok(RangeInclusive::new(start, end))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "deserializer.deserialize_struct(\n            \"RangeInclusive\",\n            range::FIELDS,\n            range::RangeVisitor {\n                expecting: \"struct RangeInclusive\",\n                phantom: PhantomData,\n            },\n        ) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2452,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        4,
        7,
        14,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "deserializer.deserialize_struct(\n            \"RangeInclusive\",\n            range::FIELDS,\n            range::RangeVisitor {\n                expecting: \"struct RangeInclusive\",\n                phantom: PhantomData,\n            },\n        ) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2452,
          "bound": null
        }
      ],
      "ret": "Ok(RangeInclusive::new(start, end))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        8,
        9,
        10,
        11,
        12,
        13,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}