{
  "name": "serde::de::Error::invalid_length",
  "mod_info": {
    "name": "de",
    "loc": "serde/src/lib.rs:312:1:312:12"
  },
  "visible": true,
  "loc": "serde/src/de/mod.rs:241:13:243:14",
  "doc": "/// Raised when deserializing a sequence or map and the input data contains\n/// too many or too few elements.\n///\n/// The `len` argument is the number of elements encountered. The sequence\n/// or map may have expected more arguments or fewer arguments.\n///\n/// The `exp` argument provides information about what data was being\n/// expected. For example `exp` might say that a tuple of size 6 was\n/// expected.\n",
  "code": [
    "fn invalid_length(len: usize, exp: &dyn Expected) -> Self {",
    "    Error::custom(format_args!(\"invalid length {}, expected {}\", len, exp))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}