{
  "name": "serde::de::Visitor::visit_newtype_struct",
  "mod_info": {
    "name": "de",
    "loc": "serde/src/lib.rs:312:1:312:12"
  },
  "visible": true,
  "loc": "serde/src/de/mod.rs:1638:5:1644:6",
  "doc": "/// The input contains a newtype struct.\n///\n/// The content of the newtype struct may be read from the given\n/// `Deserializer`.\n///\n/// The default implementation fails with a type error.\n",
  "code": [
    "fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>",
    "where",
    "    D: Deserializer<'de>,",
    "{",
    "    let _ = deserializer;",
    "    Err(Error::invalid_type(Unexpected::NewtypeStruct, &self))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Err(Error::invalid_type(Unexpected::NewtypeStruct, &self))",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}