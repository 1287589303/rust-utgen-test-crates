{
  "name": "serde::__private::de::{impl#10}::next_key_seed",
  "mod_info": {
    "name": "__private::de",
    "loc": "serde/src/private/mod.rs:2:1:2:12"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:2708:5:2719:6",
  "doc": "",
  "code": [
    "fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>",
    "where",
    "    T: DeserializeSeed<'de>,",
    "{",
    "    for entry in self.iter.by_ref() {",
    "        if let Some((key, content)) = flat_map_take_entry(entry, self.fields) {",
    "            self.pending_content = Some(content);",
    "            return seed.deserialize(ContentDeserializer::new(key)).map(Some);",
    "        }",
    "    }",
    "    Ok(None)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "entry in self.iter.by_ref()",
          "norm": null,
          "value": "true",
          "line": 2712,
          "bound": null
        },
        {
          "cond": "let Some((key, content)) = flat_map_take_entry(entry, self.fields)",
          "norm": null,
          "value": "true",
          "line": 2713,
          "bound": null
        },
        {
          "cond": "entry in self.iter.by_ref()",
          "norm": null,
          "value": "false",
          "line": 2712,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        20,
        21,
        3,
        4,
        5,
        7,
        9,
        22,
        26
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "entry in self.iter.by_ref()",
          "norm": null,
          "value": "true",
          "line": 2712,
          "bound": null
        },
        {
          "cond": "let Some((key, content)) = flat_map_take_entry(entry, self.fields)",
          "norm": null,
          "value": "true",
          "line": 2713,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        11,
        12,
        13,
        14,
        16,
        17,
        18,
        19,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "entry in self.iter.by_ref()",
          "norm": null,
          "value": "false",
          "line": 2712,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        22,
        26
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}