{
  "name": "serde::__private::de::content::{impl#20}::newtype_variant_seed",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:1587:9:1598:10",
  "doc": "",
  "code": [
    "fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>",
    "where",
    "    T: de::DeserializeSeed<'de>,",
    "{",
    "    match self.value {",
    "        Some(value) => seed.deserialize(ContentDeserializer::new(value)),",
    "        None => Err(de::Error::invalid_type(",
    "            de::Unexpected::UnitVariant,",
    "            &\"newtype variant\",",
    "        )),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.value matches Some(value)",
          "norm": null,
          "value": "true",
          "line": 1591,
          "bound": null
        },
        {
          "cond": "self.value matches Some(value)",
          "norm": null,
          "value": "true",
          "line": 1591,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        6,
        7,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.value matches None",
          "norm": null,
          "value": "true",
          "line": 1591,
          "bound": null
        }
      ],
      "ret": "Err(de::Error::invalid_type(\n                    de::Unexpected::UnitVariant,\n                    &\"newtype variant\",\n                ))",
      "path": [
        0,
        3,
        8,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}