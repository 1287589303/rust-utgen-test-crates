{
  "name": "serde::__private::de::content::{impl#26}::variant_seed",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:2141:9:2151:10",
  "doc": "",
  "code": [
    "fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>",
    "where",
    "    V: de::DeserializeSeed<'de>,",
    "{",
    "    let visitor = VariantRefDeserializer {",
    "        value: self.value,",
    "        err: PhantomData,",
    "    };",
    "    seed.deserialize(ContentRefDeserializer::new(self.variant))",
    "        .map(|v| (v, visitor))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}