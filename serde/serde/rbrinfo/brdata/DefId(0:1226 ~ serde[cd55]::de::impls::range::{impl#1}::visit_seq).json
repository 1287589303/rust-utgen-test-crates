{
  "name": "serde::de::impls::range::{impl#1}::visit_seq",
  "mod_info": {
    "name": "de::impls::range",
    "loc": "serde/src/de/impls.rs:2464:1:2591:2"
  },
  "visible": true,
  "loc": "serde/src/de/impls.rs:2539:9:2556:10",
  "doc": "",
  "code": [
    "fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>",
    "where",
    "    A: SeqAccess<'de>,",
    "{",
    "    let start: Idx = match tri!(seq.next_element()) {",
    "        Some(value) => value,",
    "        None => {",
    "            return Err(Error::invalid_length(0, &self));",
    "        }",
    "    };",
    "    let end: Idx = match tri!(seq.next_element()) {",
    "        Some(value) => value,",
    "        None => {",
    "            return Err(Error::invalid_length(1, &self));",
    "        }",
    "    };",
    "    Ok((start, end))",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "seq.next_element() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        4,
        7,
        41,
        42,
        43,
        44,
        45
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        },
        {
          "cond": "match $expr {\n            Ok(val) => val,\n            Err(err) => return Err(err),\n        } matches Some(value)",
          "norm": null,
          "value": "true",
          "line": 297,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        3,
        5,
        6,
        9,
        11,
        12,
        15,
        16,
        17,
        20,
        23,
        38,
        39,
        40,
        44,
        45
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        },
        {
          "cond": "match $expr {\n            Ok(val) => val,\n            Err(err) => return Err(err),\n        } matches Some(value)",
          "norm": null,
          "value": "true",
          "line": 297,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "match $expr {\n            Ok(val) => val,\n            Err(err) => return Err(err),\n        } matches Some(value)",
          "norm": null,
          "value": "true",
          "line": 297,
          "bound": null
        }
      ],
      "ret": "Ok((start, end))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        9,
        11,
        12,
        15,
        16,
        17,
        19,
        21,
        22,
        25,
        27,
        28,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        45
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        },
        {
          "cond": "match $expr {\n            Ok(val) => val,\n            Err(err) => return Err(err),\n        } matches Some(value)",
          "norm": null,
          "value": "true",
          "line": 297,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        }
      ],
      "ret": "Err(Error::invalid_length(1, &self))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        9,
        11,
        12,
        15,
        16,
        17,
        19,
        21,
        22,
        26,
        29,
        30,
        39,
        40,
        44,
        45
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2549,
          "bound": null
        },
        {
          "cond": "seq.next_element() matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2543,
          "bound": null
        }
      ],
      "ret": "Err(Error::invalid_length(0, &self))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        10,
        13,
        14,
        42,
        43,
        44,
        45
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}