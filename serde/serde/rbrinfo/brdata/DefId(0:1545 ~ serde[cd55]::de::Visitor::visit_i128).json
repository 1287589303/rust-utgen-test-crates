{
  "name": "serde::de::Visitor::visit_i128",
  "mod_info": {
    "name": "de",
    "loc": "serde/src/lib.rs:312:1:312:12"
  },
  "visible": true,
  "loc": "serde/src/de/mod.rs:1371:5:1382:6",
  "doc": "/// The input contains a `i128`.\n///\n/// The default implementation fails with a type error.\n",
  "code": [
    "fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>",
    "where",
    "    E: Error,",
    "{",
    "    let mut buf = [0u8; 58];",
    "    let mut writer = crate::format::Buf::new(&mut buf);",
    "    fmt::Write::write_fmt(&mut writer, format_args!(\"integer `{}` as i128\", v)).unwrap();",
    "    Err(Error::invalid_type(",
    "        Unexpected::Other(writer.as_str()),",
    "        &self,",
    "    ))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Err(Error::invalid_type(\n            Unexpected::Other(writer.as_str()),\n            &self,\n        ))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}