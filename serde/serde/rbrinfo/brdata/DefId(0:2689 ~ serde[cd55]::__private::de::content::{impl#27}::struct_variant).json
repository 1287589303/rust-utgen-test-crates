{
  "name": "serde::__private::de::content::{impl#27}::struct_variant",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:2220:9:2245:10",
  "doc": "",
  "code": [
    "fn struct_variant<V>(",
    "    self,",
    "    _fields: &'static [&'static str],",
    "    visitor: V,",
    ") -> Result<V::Value, Self::Error>",
    "where",
    "    V: de::Visitor<'de>,",
    "{",
    "    match self.value {",
    "        // Covered by tests/test_enum_untagged.rs",
    "        //      newtype_enum::struct_from_map",
    "        Some(Content::Map(v)) => visit_content_map_ref(v, visitor),",
    "        // Covered by tests/test_enum_untagged.rs",
    "        //      newtype_enum::struct_from_seq",
    "        //      newtype_enum::empty_struct_from_seq",
    "        Some(Content::Seq(v)) => visit_content_seq_ref(v, visitor),",
    "        Some(other) => Err(de::Error::invalid_type(",
    "            other.unexpected(),",
    "            &\"struct variant\",",
    "        )),",
    "        None => Err(de::Error::invalid_type(",
    "            de::Unexpected::UnitVariant,",
    "            &\"struct variant\",",
    "        )),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.value matches Some(other) or Some(Content::Map(v)) or Some(Content::Seq(v))",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        },
        {
          "cond": "self.value matches Some(other)",
          "norm": null,
          "value": "false",
          "line": 2236,
          "bound": null
        },
        {
          "cond": "self.value matches Some(Content::Map(v))",
          "norm": null,
          "value": "false",
          "line": 2231,
          "bound": null
        },
        {
          "cond": "self.value matches Some(Content::Seq(v))",
          "norm": null,
          "value": "false",
          "line": 2235,
          "bound": null
        },
        {
          "cond": "self.value matches None",
          "norm": null,
          "value": "false",
          "line": 2240,
          "bound": null
        },
        {
          "cond": "self.value matches Some(other)",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        }
      ],
      "ret": "Err(de::Error::invalid_type(\n                    other.unexpected(),\n                    &\"struct variant\",\n                ))",
      "path": [
        0,
        2,
        3,
        13,
        14,
        15,
        16,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.value matches Some(other) or Some(Content::Map(v)) or Some(Content::Seq(v))",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        },
        {
          "cond": "self.value matches ",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        },
        {
          "cond": "self.value matches Some(Content::Map(v))",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        8,
        9,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.value matches Some(other) or Some(Content::Map(v)) or Some(Content::Seq(v))",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        },
        {
          "cond": "self.value matches ",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        },
        {
          "cond": "self.value matches Some(Content::Seq(v))",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        5,
        10,
        11,
        12,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.value matches None",
          "norm": null,
          "value": "true",
          "line": 2228,
          "bound": null
        }
      ],
      "ret": "Err(de::Error::invalid_type(\n                    de::Unexpected::UnitVariant,\n                    &\"struct variant\",\n                ))",
      "path": [
        0,
        6,
        17,
        18,
        19,
        20
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}