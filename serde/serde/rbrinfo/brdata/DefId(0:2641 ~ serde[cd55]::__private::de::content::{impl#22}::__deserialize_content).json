{
  "name": "serde::__private::de::content::{impl#22}::__deserialize_content",
  "mod_info": {
    "name": "__private::de::content",
    "loc": "serde/src/private/de.rs:198:1:2358:2"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:2094:9:2104:10",
  "doc": "",
  "code": [
    "fn __deserialize_content<V>(",
    "    self,",
    "    _: actually_private::T,",
    "    visitor: V,",
    ") -> Result<Content<'de>, Self::Error>",
    "where",
    "    V: Visitor<'de, Value = Content<'de>>,",
    "{",
    "    let _ = visitor;",
    "    Ok(self.content.clone())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Ok(self.content.clone())",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}