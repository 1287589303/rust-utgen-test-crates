{
  "name": "serde::__private::de::{impl#12}::deserialize",
  "mod_info": {
    "name": "__private::de",
    "loc": "serde/src/private/mod.rs:2:1:2:12"
  },
  "visible": true,
  "loc": "serde/src/private/de.rs:2791:5:2803:6",
  "doc": "",
  "code": [
    "fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>",
    "where",
    "    D: Deserializer<'de>,",
    "{",
    "    deserializer.deserialize_enum(",
    "        self.enum_name,",
    "        self.variants,",
    "        AdjacentlyTaggedEnumVariantVisitor {",
    "            enum_name: self.enum_name,",
    "            fields_enum: PhantomData,",
    "        },",
    "    )",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}