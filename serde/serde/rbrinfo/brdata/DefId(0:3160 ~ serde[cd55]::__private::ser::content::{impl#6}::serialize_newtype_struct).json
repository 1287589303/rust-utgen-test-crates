{
  "name": "serde::__private::ser::content::{impl#6}::serialize_newtype_struct",
  "mod_info": {
    "name": "__private::ser::content",
    "loc": "serde/src/private/ser.rs:337:1:987:2"
  },
  "visible": true,
  "loc": "serde/src/private/ser.rs:656:9:664:10",
  "doc": "",
  "code": [
    "fn serialize_newtype_struct<T>(self, name: &'static str, value: &T) -> Result<Content, E>",
    "where",
    "    T: ?Sized + Serialize,",
    "{",
    "    Ok(Content::NewtypeStruct(",
    "        name,",
    "        Box::new(tri!(value.serialize(self))),",
    "    ))",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "value.serialize(self) matches Err(err)",
          "norm": null,
          "value": "true",
          "line": 662,
          "bound": null
        }
      ],
      "ret": "Err(err)",
      "path": [
        0,
        1,
        4,
        7,
        12,
        13,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "value.serialize(self) matches Ok(val)",
          "norm": null,
          "value": "true",
          "line": 662,
          "bound": null
        }
      ],
      "ret": "Ok(Content::NewtypeStruct(\n                name,\n                Box::new(tri!(value.serialize(self))),\n            ))",
      "path": [
        0,
        1,
        3,
        5,
        6,
        8,
        9,
        10,
        11,
        14
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}