bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/de/impls.rs:2711:17-2711:26)
  1: _3 = std::option::Option::<Idx>::None
    SourceInfo(serde/src/de/impls.rs:2711:42-2711:46)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(serde/src/de/impls.rs:2711:17-2711:26)
  3: AscribeUserType(_3, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(serde/src/de/impls.rs:2711:28-2711:39)
  4: StorageLive(_4)
    SourceInfo(serde/src/de/impls.rs:2712:13-2721:14)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2712:13-2721:14)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2712:13-2721:14)
      kind: falseUnwind -> [real: bb2, unwind: bb56]
  }
  preds [bb0, bb29]
  succs [bb2, bb56]

bb2
  0: StorageLive(_6)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  1: StorageLive(_7)
    SourceInfo(serde/src/de/impls.rs:2712:40-2712:54)
  2: StorageLive(_8)
    SourceInfo(serde/src/de/impls.rs:2712:40-2712:43)
  3: _8 = &mut _2
    SourceInfo(serde/src/de/impls.rs:2712:40-2712:43)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2712:40-2712:54)
      kind: _7 = <A as de::MapAccess<'_>>::next_key::<de::impls::range_from::Field>(move _8) -> [return: bb3, unwind: bb56]
  }
  preds [bb1]
  succs [bb3, bb56]

bb3
  0: StorageDead(_8)
    SourceInfo(serde/src/de/impls.rs:2712:53-2712:54)
  1: PlaceMention(_7)
    SourceInfo(serde/src/de/impls.rs:2712:40-2712:54)
  2: _9 = discriminant(_7)
    SourceInfo(serde/src/de/impls.rs:2712:40-2712:54)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _9) -> [0: bb5, 1: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _7)
    SourceInfo(serde/src/de/impls.rs:2712:40-2712:54)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2712:40-2712:54)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_11)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _11 = move ((_7 as Err).0: <A as de::MapAccess<'_>>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_13)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _13 = move _11
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<Idx, <A as de::MapAccess<'_>>::Error>::Err(move _13)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_13) -> [return: bb8, unwind: bb54]
  }
  preds [bb3, bb5]
  succs [bb8, bb54]

bb7
  0: StorageLive(_10)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _10 = move ((_7 as Ok).0: std::option::Option<de::impls::range_from::Field>)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _6 = move _10
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  3: StorageDead(_10)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  4: PlaceMention(_6)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  5: _14 = discriminant(_6)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2712:23-2712:32)
      kind: switchInt(move _14) -> [1: bb10, otherwise: bb9]
  }
  preds [bb5]
  succs [bb9, bb10]

bb8
  0: StorageDead(_13)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_11) -> [return: bb44, unwind: bb55]
  }
  preds [bb6]
  succs [bb44, bb55]

bb9
  0: StorageLive(_31)
    SourceInfo(serde/src/de/impls.rs:2712:13-2721:14)
  1: _4 = const ()
    SourceInfo(serde/src/de/impls.rs:2712:13-2721:14)
  2: StorageDead(_31)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
      kind: drop(_7) -> [return: bb30, unwind: bb56]
  }
  preds [bb7, bb10]
  succs [bb30, bb56]

bb10
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2712:23-2712:32)
      kind: falseEdge -> [real: bb11, imaginary: bb9]
  }
  preds [bb7]
  succs [bb9, bb11]

bb11
  0: StorageLive(_15)
    SourceInfo(serde/src/de/impls.rs:2712:28-2712:31)
  1: _15 = move ((_6 as Some).0: de::impls::range_from::Field)
    SourceInfo(serde/src/de/impls.rs:2712:28-2712:31)
  2: PlaceMention(_15)
    SourceInfo(serde/src/de/impls.rs:2713:23-2713:26)
  3: StorageLive(_16)
    SourceInfo(serde/src/de/impls.rs:2715:25-2717:26)
  4: StorageLive(_17)
    SourceInfo(serde/src/de/impls.rs:2715:28-2715:43)
  5: StorageLive(_18)
    SourceInfo(serde/src/de/impls.rs:2715:28-2715:33)
  6: _18 = &_3
    SourceInfo(serde/src/de/impls.rs:2715:28-2715:33)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2715:28-2715:43)
      kind: _17 = std::option::Option::<Idx>::is_some(move _18) -> [return: bb12, unwind: bb55]
  }
  preds [bb10]
  succs [bb12, bb55]

bb12
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2715:28-2715:43)
      kind: switchInt(move _17) -> [0: bb16, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb16]

bb13
  0: StorageDead(_18)
    SourceInfo(serde/src/de/impls.rs:2715:42-2715:43)
  1: StorageLive(_20)
    SourceInfo(serde/src/de/impls.rs:2716:40-2716:85)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2716:40-2716:85)
      kind: _20 = <<A as de::MapAccess<'_>>::Error as de::Error>::duplicate_field(const "start") -> [return: bb14, unwind: bb55]
  }
  preds [bb12]
  succs [bb14, bb55]

bb14
  0: _0 = std::result::Result::<Idx, <A as de::MapAccess<'_>>::Error>::Err(move _20)
    SourceInfo(serde/src/de/impls.rs:2716:36-2716:86)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2716:85-2716:86)
      kind: drop(_20) -> [return: bb15, unwind: bb55]
  }
  preds [bb13]
  succs [bb15, bb55]

bb15
  0: StorageDead(_20)
    SourceInfo(serde/src/de/impls.rs:2716:85-2716:86)
  1: StorageDead(_17)
    SourceInfo(serde/src/de/impls.rs:2717:25-2717:26)
  2: StorageDead(_16)
    SourceInfo(serde/src/de/impls.rs:2717:25-2717:26)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb14]
  succs [bb43]

bb16
  0: StorageDead(_18)
    SourceInfo(serde/src/de/impls.rs:2715:42-2715:43)
  1: _16 = const ()
    SourceInfo(serde/src/de/impls.rs:2717:26-2717:26)
  2: StorageDead(_17)
    SourceInfo(serde/src/de/impls.rs:2717:25-2717:26)
  3: StorageDead(_16)
    SourceInfo(serde/src/de/impls.rs:2717:25-2717:26)
  4: StorageLive(_21)
    SourceInfo(serde/src/de/impls.rs:2718:33-2718:61)
  5: StorageLive(_22)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  6: StorageLive(_23)
    SourceInfo(serde/src/de/impls.rs:2718:43-2718:59)
  7: StorageLive(_24)
    SourceInfo(serde/src/de/impls.rs:2718:43-2718:46)
  8: _24 = &mut _2
    SourceInfo(serde/src/de/impls.rs:2718:43-2718:46)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:43-2718:59)
      kind: _23 = <A as de::MapAccess<'_>>::next_value::<Idx>(move _24) -> [return: bb17, unwind: bb55]
  }
  preds [bb12]
  succs [bb17, bb55]

bb17
  0: StorageDead(_24)
    SourceInfo(serde/src/de/impls.rs:2718:58-2718:59)
  1: PlaceMention(_23)
    SourceInfo(serde/src/de/impls.rs:2718:43-2718:59)
  2: _25 = discriminant(_23)
    SourceInfo(serde/src/de/impls.rs:2718:43-2718:59)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _25) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _23)
    SourceInfo(serde/src/de/impls.rs:2718:43-2718:59)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:43-2718:59)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_27)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _27 = move ((_23 as Err).0: <A as de::MapAccess<'_>>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_29)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _29 = move _27
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<Idx, <A as de::MapAccess<'_>>::Error>::Err(move _29)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_29) -> [return: bb23, unwind: bb52]
  }
  preds [bb17, bb19]
  succs [bb23, bb52]

bb21
  0: StorageLive(_26)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _26 = move ((_23 as Ok).0: Idx)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _22 = move _26
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:26-298:27)
      kind: drop(_26) -> [return: bb22, unwind: bb53]
  }
  preds [bb19]
  succs [bb22, bb53]

bb22
  0: StorageDead(_26)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  1: _21 = std::option::Option::<Idx>::Some(move _22)
    SourceInfo(serde/src/de/impls.rs:2718:33-2718:61)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:60-2718:61)
      kind: drop(_22) -> [return: bb24, unwind: bb51]
  }
  preds [bb21]
  succs [bb24, bb51]

bb23
  0: StorageDead(_29)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_27) -> [return: bb41, unwind: bb53]
  }
  preds [bb20]
  succs [bb41, bb53]

bb24
  0: StorageDead(_22)
    SourceInfo(serde/src/de/impls.rs:2718:60-2718:61)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:25-2718:30)
      kind: drop(_3) -> [return: bb25, unwind: bb26]
  }
  preds [bb22]
  succs [bb25, bb26]

bb25
  0: _3 = move _21
    SourceInfo(serde/src/de/impls.rs:2718:25-2718:30)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:60-2718:61)
      kind: drop(_21) -> [return: bb27, unwind: bb53]
  }
  preds [bb24]
  succs [bb27, bb53]

bb26
  0: _3 = move _21
    SourceInfo(serde/src/de/impls.rs:2718:25-2718:30)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:25-2718:30)
      kind: goto -> bb51
  }
  preds [bb24]
  succs [bb51]

bb27
  0: StorageDead(_21)
    SourceInfo(serde/src/de/impls.rs:2718:60-2718:61)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:61-2718:62)
      kind: drop(_23) -> [return: bb28, unwind: bb55]
  }
  preds [bb25]
  succs [bb28, bb55]

bb28
  0: StorageDead(_23)
    SourceInfo(serde/src/de/impls.rs:2718:61-2718:62)
  1: _5 = const ()
    SourceInfo(serde/src/de/impls.rs:2714:37-2719:22)
  2: StorageDead(_15)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
      kind: drop(_7) -> [return: bb29, unwind: bb56]
  }
  preds [bb27]
  succs [bb29, bb56]

bb29
  0: StorageDead(_7)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  1: StorageDead(_6)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2712:13-2721:14)
      kind: goto -> bb1
  }
  preds [bb28]
  succs [bb1]

bb30
  0: StorageDead(_7)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  1: StorageDead(_6)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  2: StorageDead(_4)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  3: StorageLive(_33)
    SourceInfo(serde/src/de/impls.rs:2722:17-2722:22)
  4: PlaceMention(_3)
    SourceInfo(serde/src/de/impls.rs:2722:31-2722:36)
  5: _34 = discriminant(_3)
    SourceInfo(serde/src/de/impls.rs:2722:31-2722:36)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2722:25-2722:36)
      kind: switchInt(move _34) -> [0: bb33, 1: bb32, otherwise: bb31]
  }
  preds [bb9]
  succs [bb31, bb32, bb33]

bb31
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(serde/src/de/impls.rs:2722:31-2722:36)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2722:31-2722:36)
      kind: unreachable
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2723:17-2723:28)
      kind: falseEdge -> [real: bb34, imaginary: bb33]
  }
  preds [bb30]
  succs [bb33, bb34]

bb33
  0: StorageLive(_37)
    SourceInfo(serde/src/de/impls.rs:2724:36-2724:79)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2724:36-2724:79)
      kind: _37 = <<A as de::MapAccess<'_>>::Error as de::Error>::missing_field(const "start") -> [return: bb36, unwind: bb56]
  }
  preds [bb30, bb32]
  succs [bb36, bb56]

bb34
  0: StorageLive(_35)
    SourceInfo(serde/src/de/impls.rs:2723:22-2723:27)
  1: _35 = move ((_3 as Some).0: Idx)
    SourceInfo(serde/src/de/impls.rs:2723:22-2723:27)
  2: _33 = move _35
    SourceInfo(serde/src/de/impls.rs:2723:32-2723:37)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2723:36-2723:37)
      kind: drop(_35) -> [return: bb35, unwind: bb56]
  }
  preds [bb32]
  succs [bb35, bb56]

bb35
  0: StorageDead(_35)
    SourceInfo(serde/src/de/impls.rs:2723:36-2723:37)
  1: FakeRead(ForLet(None), _33)
    SourceInfo(serde/src/de/impls.rs:2722:17-2722:22)
  2: StorageLive(_38)
    SourceInfo(serde/src/de/impls.rs:2726:16-2726:21)
  3: _38 = move _33
    SourceInfo(serde/src/de/impls.rs:2726:16-2726:21)
  4: _0 = std::result::Result::<Idx, <A as de::MapAccess<'_>>::Error>::Ok(move _38)
    SourceInfo(serde/src/de/impls.rs:2726:13-2726:22)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2726:21-2726:22)
      kind: drop(_38) -> [return: bb38, unwind: bb50]
  }
  preds [bb34]
  succs [bb38, bb50]

bb36
  0: _0 = std::result::Result::<Idx, <A as de::MapAccess<'_>>::Error>::Err(move _37)
    SourceInfo(serde/src/de/impls.rs:2724:32-2724:80)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2724:79-2724:80)
      kind: drop(_37) -> [return: bb37, unwind: bb56]
  }
  preds [bb33]
  succs [bb37, bb56]

bb37
  0: StorageDead(_37)
    SourceInfo(serde/src/de/impls.rs:2724:79-2724:80)
  1: StorageDead(_33)
    SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb36]
  succs [bb47]

bb38
  0: StorageDead(_38)
    SourceInfo(serde/src/de/impls.rs:2726:21-2726:22)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_33) -> [return: bb39, unwind: bb56]
  }
  preds [bb35]
  succs [bb39, bb56]

bb39
  0: StorageDead(_33)
    SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_3) -> [return: bb40, unwind: bb57]
  }
  preds [bb38]
  succs [bb40, bb57]

bb40
  0: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_2) -> [return: bb49, unwind: bb58]
  }
  preds [bb39]
  succs [bb49, bb58]

bb41
  0: StorageDead(_27)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  1: StorageDead(_22)
    SourceInfo(serde/src/de/impls.rs:2718:60-2718:61)
  2: StorageDead(_21)
    SourceInfo(serde/src/de/impls.rs:2718:60-2718:61)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:61-2718:62)
      kind: drop(_23) -> [return: bb42, unwind: bb55]
  }
  preds [bb23]
  succs [bb42, bb55]

bb42
  0: StorageDead(_23)
    SourceInfo(serde/src/de/impls.rs:2718:61-2718:62)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb41]
  succs [bb43]

bb43
  0: StorageDead(_15)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb15, bb42]
  succs [bb45]

bb44
  0: StorageDead(_11)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb8]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
      kind: drop(_7) -> [return: bb46, unwind: bb56]
  }
  preds [bb43, bb44]
  succs [bb46, bb56]

bb46
  0: StorageDead(_7)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  1: StorageDead(_6)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  2: StorageDead(_4)
    SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_3) -> [return: bb48, unwind: bb57]
  }
  preds [bb37, bb46]
  succs [bb48, bb57]

bb48
  0: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_2) -> [return: bb49, unwind: bb58]
  }
  preds [bb47]
  succs [bb49, bb58]

bb49
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:10-2727:10)
      kind: return
  }
  preds [bb40, bb48]
  succs []

bb50
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_33) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb56]

bb51
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:60-2718:61)
      kind: drop(_21) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb22, bb26]
  succs [bb53]

bb52
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_27) -> [return: bb53, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2718:61-2718:62)
      kind: drop(_23) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb21, bb23, bb25, bb51, bb52]
  succs [bb55]

bb54
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_11) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2721:13-2721:14)
      kind: drop(_7) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb8, bb11, bb13, bb14, bb16, bb27, bb41, bb53, bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_3) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb9, bb28, bb33, bb34, bb36, bb38, bb45, bb50, bb55]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2727:9-2727:10)
      kind: drop(_2) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb39, bb47, bb56]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2707:9-2727:10)
      kind: resume
  }
  preds [bb40, bb48, bb57]
  succs []

