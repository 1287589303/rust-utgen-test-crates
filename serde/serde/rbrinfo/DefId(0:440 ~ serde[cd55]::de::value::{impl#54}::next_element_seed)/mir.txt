bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/de/value.rs:1093:15-1093:31)
  1: StorageLive(_4)
    SourceInfo(serde/src/de/value.rs:1093:15-1093:24)
  2: _4 = &mut ((*_1).0: std::iter::Fuse<I>)
    SourceInfo(serde/src/de/value.rs:1093:15-1093:24)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1093:15-1093:31)
      kind: _3 = <std::iter::Fuse<I> as std::iter::Iterator>::next(move _4) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: StorageDead(_4)
    SourceInfo(serde/src/de/value.rs:1093:30-1093:31)
  1: PlaceMention(_3)
    SourceInfo(serde/src/de/value.rs:1093:15-1093:31)
  2: _5 = discriminant(_3)
    SourceInfo(serde/src/de/value.rs:1093:15-1093:31)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1093:9-1093:31)
      kind: switchInt(move _5) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(serde/src/de/value.rs:1093:15-1093:31)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1093:15-1093:31)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1094:13-1094:24)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_12)
    SourceInfo(serde/src/de/value.rs:1098:24-1098:28)
  1: _12 = std::option::Option::<<V as de::DeserializeSeed<'_>>::Value>::None
    SourceInfo(serde/src/de/value.rs:1098:24-1098:28)
  2: _0 = std::result::Result::<std::option::Option<<V as de::DeserializeSeed<'_>>::Value>, E>::Ok(move _12)
    SourceInfo(serde/src/de/value.rs:1098:21-1098:29)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1098:28-1098:29)
      kind: drop(_12) -> [return: bb11, unwind: bb20]
  }
  preds [bb1, bb3]
  succs [bb11, bb20]

bb5
  0: StorageLive(_6)
    SourceInfo(serde/src/de/value.rs:1094:18-1094:23)
  1: _6 = move ((_3 as Some).0: T)
    SourceInfo(serde/src/de/value.rs:1094:18-1094:23)
  2: _7 = AddWithOverflow(((*_1).1: usize), const 1_usize)
    SourceInfo(serde/src/de/value.rs:1095:17-1095:32)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1095:17-1095:32)
      kind: assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).1: usize), const 1_usize) -> [success: bb6, unwind: bb19]
  }
  preds [bb3]
  succs [bb6, bb19]

bb6
  0: ((*_1).1: usize) = move (_7.0: usize)
    SourceInfo(serde/src/de/value.rs:1095:17-1095:32)
  1: StorageLive(_8)
    SourceInfo(serde/src/de/value.rs:1096:17-1096:60)
  2: StorageLive(_9)
    SourceInfo(serde/src/de/value.rs:1096:17-1096:21)
  3: _9 = move _2
    SourceInfo(serde/src/de/value.rs:1096:17-1096:21)
  4: StorageLive(_10)
    SourceInfo(serde/src/de/value.rs:1096:34-1096:59)
  5: StorageLive(_11)
    SourceInfo(serde/src/de/value.rs:1096:34-1096:39)
  6: _11 = move _6
    SourceInfo(serde/src/de/value.rs:1096:34-1096:39)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1096:34-1096:59)
      kind: _10 = <T as de::IntoDeserializer<'_, E>>::into_deserializer(move _11) -> [return: bb7, unwind: bb17]
  }
  preds [bb5]
  succs [bb7, bb17]

bb7
  0: StorageDead(_11)
    SourceInfo(serde/src/de/value.rs:1096:58-1096:59)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1096:17-1096:60)
      kind: _8 = <V as de::DeserializeSeed<'_>>::deserialize::<<T as de::IntoDeserializer<'_, E>>::Deserializer>(move _9, move _10) -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: StorageDead(_10)
    SourceInfo(serde/src/de/value.rs:1096:59-1096:60)
  1: StorageDead(_9)
    SourceInfo(serde/src/de/value.rs:1096:59-1096:60)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1096:17-1096:70)
      kind: _0 = std::result::Result::<<V as de::DeserializeSeed<'_>>::Value, E>::map::<std::option::Option<<V as de::DeserializeSeed<'_>>::Value>, fn(<V as de::DeserializeSeed<'_>>::Value) -> std::option::Option<<V as de::DeserializeSeed<'_>>::Value> {std::option::Option::<<V as de::DeserializeSeed<'_>>::Value>::Some}>(move _8, std::option::Option::<<V as de::DeserializeSeed<'_>>::Value>::Some) -> [return: bb9, unwind: bb15]
  }
  preds [bb7]
  succs [bb9, bb15]

bb9
  0: StorageDead(_8)
    SourceInfo(serde/src/de/value.rs:1096:69-1096:70)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1097:13-1097:14)
      kind: drop(_6) -> [return: bb10, unwind: bb20]
  }
  preds [bb8]
  succs [bb10, bb20]

bb10
  0: StorageDead(_6)
    SourceInfo(serde/src/de/value.rs:1097:13-1097:14)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1097:13-1097:14)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb11
  0: StorageDead(_12)
    SourceInfo(serde/src/de/value.rs:1098:28-1098:29)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1098:28-1098:29)
      kind: goto -> bb12
  }
  preds [bb4]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1100:5-1100:6)
      kind: drop(_3) -> [return: bb13, unwind: bb21]
  }
  preds [bb10, bb11]
  succs [bb13, bb21]

bb13
  0: StorageDead(_3)
    SourceInfo(serde/src/de/value.rs:1100:5-1100:6)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1100:5-1100:6)
      kind: drop(_2) -> [return: bb14, unwind: bb22]
  }
  preds [bb12]
  succs [bb14, bb22]

bb14
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1100:6-1100:6)
      kind: return
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1096:69-1096:70)
      kind: drop(_8) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb19]

bb16
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1096:59-1096:60)
      kind: drop(_10) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb18]

bb17
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1096:58-1096:59)
      kind: drop(_11) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1096:59-1096:60)
      kind: drop(_9) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb16, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1097:13-1097:14)
      kind: drop(_6) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb5, bb15, bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1100:5-1100:6)
      kind: drop(_3) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb4, bb9, bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1100:5-1100:6)
      kind: drop(_2) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb0, bb12, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1089:5-1100:6)
      kind: resume
  }
  preds [bb13, bb21]
  succs []

