bb0
  0: StorageLive(_2)
    SourceInfo(serde/src/de/value.rs:1264:13-1264:22)
  1: StorageLive(_3)
    SourceInfo(serde/src/de/value.rs:1264:25-1264:34)
  2: _3 = move (_1.0: std::iter::Fuse<I>)
    SourceInfo(serde/src/de/value.rs:1264:25-1264:34)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1264:25-1264:42)
      kind: _2 = <std::iter::Fuse<I> as std::iter::Iterator>::count(move _3) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_3)
    SourceInfo(serde/src/de/value.rs:1264:41-1264:42)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(serde/src/de/value.rs:1264:13-1264:22)
  2: StorageLive(_4)
    SourceInfo(serde/src/de/value.rs:1265:12-1265:26)
  3: StorageLive(_5)
    SourceInfo(serde/src/de/value.rs:1265:12-1265:21)
  4: _5 = _2
    SourceInfo(serde/src/de/value.rs:1265:12-1265:21)
  5: _4 = Eq(move _5, const 0_usize)
    SourceInfo(serde/src/de/value.rs:1265:12-1265:26)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1265:12-1265:26)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(serde/src/de/value.rs:1265:25-1265:26)
  1: StorageLive(_6)
    SourceInfo(serde/src/de/value.rs:1266:16-1266:18)
  2: _6 = ()
    SourceInfo(serde/src/de/value.rs:1266:16-1266:18)
  3: _0 = std::result::Result::<(), E>::Ok(move _6)
    SourceInfo(serde/src/de/value.rs:1266:13-1266:19)
  4: StorageDead(_6)
    SourceInfo(serde/src/de/value.rs:1266:18-1266:19)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1265:9-1274:10)
      kind: goto -> bb7
  }
  preds [bb1]
  succs [bb7]

bb3
  0: StorageDead(_5)
    SourceInfo(serde/src/de/value.rs:1265:25-1265:26)
  1: StorageLive(_7)
    SourceInfo(serde/src/de/value.rs:1270:17-1273:14)
  2: StorageLive(_8)
    SourceInfo(serde/src/de/value.rs:1271:17-1271:39)
  3: StorageLive(_9)
    SourceInfo(serde/src/de/value.rs:1271:17-1271:27)
  4: _9 = (_1.2: usize)
    SourceInfo(serde/src/de/value.rs:1271:17-1271:27)
  5: StorageLive(_10)
    SourceInfo(serde/src/de/value.rs:1271:30-1271:39)
  6: _10 = _2
    SourceInfo(serde/src/de/value.rs:1271:30-1271:39)
  7: _11 = AddWithOverflow(_9, _10)
    SourceInfo(serde/src/de/value.rs:1271:17-1271:39)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1271:17-1271:39)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, move _10) -> [success: bb4, unwind: bb10]
  }
  preds [bb1]
  succs [bb4, bb10]

bb4
  0: _8 = move (_11.0: usize)
    SourceInfo(serde/src/de/value.rs:1271:17-1271:39)
  1: StorageDead(_10)
    SourceInfo(serde/src/de/value.rs:1271:38-1271:39)
  2: StorageDead(_9)
    SourceInfo(serde/src/de/value.rs:1271:38-1271:39)
  3: StorageLive(_12)
    SourceInfo(serde/src/de/value.rs:1272:17-1272:43)
  4: StorageLive(_13)
    SourceInfo(serde/src/de/value.rs:1272:17-1272:43)
  5: StorageLive(_14)
    SourceInfo(serde/src/de/value.rs:1272:17-1272:43)
  6: StorageLive(_15)
    SourceInfo(serde/src/de/value.rs:1272:18-1272:43)
  7: StorageLive(_16)
    SourceInfo(serde/src/de/value.rs:1272:32-1272:42)
  8: _16 = (_1.2: usize)
    SourceInfo(serde/src/de/value.rs:1272:32-1272:42)
  9: _15 = de::value::ExpectedInMap(move _16)
    SourceInfo(serde/src/de/value.rs:1272:18-1272:43)
  10: StorageDead(_16)
    SourceInfo(serde/src/de/value.rs:1272:42-1272:43)
  11: _14 = &_15
    SourceInfo(serde/src/de/value.rs:1272:17-1272:43)
  12: _13 = &(*_14)
    SourceInfo(serde/src/de/value.rs:1272:17-1272:43)
  13: _12 = move _13 as &dyn de::Expected (PointerCoercion(Unsize))
    SourceInfo(serde/src/de/value.rs:1272:17-1272:43)
  14: StorageDead(_13)
    SourceInfo(serde/src/de/value.rs:1272:42-1272:43)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1270:17-1273:14)
      kind: _7 = <E as de::Error>::invalid_length(move _8, move _12) -> [return: bb5, unwind: bb10]
  }
  preds [bb3]
  succs [bb5, bb10]

bb5
  0: StorageDead(_12)
    SourceInfo(serde/src/de/value.rs:1273:13-1273:14)
  1: StorageDead(_8)
    SourceInfo(serde/src/de/value.rs:1273:13-1273:14)
  2: _0 = std::result::Result::<(), E>::Err(move _7)
    SourceInfo(serde/src/de/value.rs:1270:13-1273:15)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1273:14-1273:15)
      kind: drop(_7) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_7)
    SourceInfo(serde/src/de/value.rs:1273:14-1273:15)
  1: StorageDead(_15)
    SourceInfo(serde/src/de/value.rs:1274:9-1274:10)
  2: StorageDead(_14)
    SourceInfo(serde/src/de/value.rs:1274:9-1274:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1265:9-1274:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  0: StorageDead(_4)
    SourceInfo(serde/src/de/value.rs:1274:9-1274:10)
  1: StorageDead(_2)
    SourceInfo(serde/src/de/value.rs:1275:5-1275:6)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1275:5-1275:6)
      kind: drop(_1) -> [return: bb8, unwind: bb11]
  }
  preds [bb2, bb6]
  succs [bb8, bb11]

bb8
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1275:6-1275:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1264:41-1264:42)
      kind: drop(_3) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1275:5-1275:6)
      kind: drop(_1) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb5, bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1263:5-1275:6)
      kind: resume
  }
  preds [bb7, bb10]
  succs []

