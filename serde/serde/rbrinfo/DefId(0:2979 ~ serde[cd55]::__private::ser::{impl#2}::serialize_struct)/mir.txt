bb0
  0: StorageLive(_4)
    SourceInfo(serde/src/private/ser.rs:291:13-291:22)
  1: StorageLive(_5)
    SourceInfo(serde/src/private/ser.rs:291:30-291:75)
  2: StorageLive(_6)
    SourceInfo(serde/src/private/ser.rs:291:30-291:43)
  3: _6 = move (_1.4: S)
    SourceInfo(serde/src/private/ser.rs:291:30-291:43)
  4: StorageLive(_7)
    SourceInfo(serde/src/private/ser.rs:291:61-291:65)
  5: _7 = _2
    SourceInfo(serde/src/private/ser.rs:291:61-291:65)
  6: StorageLive(_8)
    SourceInfo(serde/src/private/ser.rs:291:67-291:74)
  7: StorageLive(_9)
    SourceInfo(serde/src/private/ser.rs:291:67-291:70)
  8: _9 = _3
    SourceInfo(serde/src/private/ser.rs:291:67-291:70)
  9: _10 = AddWithOverflow(_9, const 1_usize)
    SourceInfo(serde/src/private/ser.rs:291:67-291:74)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:291:67-291:74)
      kind: assert(!move (_10.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, const 1_usize) -> [success: bb1, unwind: bb30]
  }
  preds []
  succs [bb1, bb30]

bb1
  0: _8 = move (_10.0: usize)
    SourceInfo(serde/src/private/ser.rs:291:67-291:74)
  1: StorageDead(_9)
    SourceInfo(serde/src/private/ser.rs:291:73-291:74)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:291:30-291:75)
      kind: _5 = <S as ser::Serializer>::serialize_struct(move _6, move _7, move _8) -> [return: bb2, unwind: bb30]
  }
  preds [bb0]
  succs [bb2, bb30]

bb2
  0: StorageDead(_8)
    SourceInfo(serde/src/private/ser.rs:291:74-291:75)
  1: StorageDead(_7)
    SourceInfo(serde/src/private/ser.rs:291:74-291:75)
  2: StorageDead(_6)
    SourceInfo(serde/src/private/ser.rs:291:74-291:75)
  3: PlaceMention(_5)
    SourceInfo(serde/src/private/ser.rs:291:30-291:75)
  4: _11 = discriminant(_5)
    SourceInfo(serde/src/private/ser.rs:291:30-291:75)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _11) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(serde/src/private/ser.rs:291:30-291:75)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:291:30-291:75)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_13)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _13 = move ((_5 as Err).0: <S as ser::Serializer>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_15)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _15 = move _13
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<<S as ser::Serializer>::SerializeStruct, <S as ser::Serializer>::Error>::Err(move _15)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_15) -> [return: bb8, unwind: bb28]
  }
  preds [bb2, bb4]
  succs [bb8, bb28]

bb6
  0: StorageLive(_12)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _12 = move ((_5 as Ok).0: <S as ser::Serializer>::SerializeStruct)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _4 = move _12
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:26-298:27)
      kind: drop(_12) -> [return: bb7, unwind: bb29]
  }
  preds [bb4]
  succs [bb7, bb29]

bb7
  0: StorageDead(_12)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(serde/src/private/ser.rs:291:13-291:22)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:291:76-291:77)
      kind: drop(_5) -> [return: bb9, unwind: bb27]
  }
  preds [bb6]
  succs [bb9, bb27]

bb8
  0: StorageDead(_15)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_13) -> [return: bb21, unwind: bb29]
  }
  preds [bb5]
  succs [bb21, bb29]

bb9
  0: StorageDead(_5)
    SourceInfo(serde/src/private/ser.rs:291:76-291:77)
  1: StorageLive(_16)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  2: StorageLive(_17)
    SourceInfo(serde/src/private/ser.rs:292:14-292:64)
  3: StorageLive(_18)
    SourceInfo(serde/src/private/ser.rs:292:14-292:19)
  4: _18 = &mut _4
    SourceInfo(serde/src/private/ser.rs:292:14-292:19)
  5: StorageLive(_19)
    SourceInfo(serde/src/private/ser.rs:292:36-292:44)
  6: _19 = (_1.2: &str)
    SourceInfo(serde/src/private/ser.rs:292:36-292:44)
  7: StorageLive(_20)
    SourceInfo(serde/src/private/ser.rs:292:46-292:63)
  8: _20 = &(*(_1.3: &str))
    SourceInfo(serde/src/private/ser.rs:292:46-292:63)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:292:14-292:64)
      kind: _17 = <<S as ser::Serializer>::SerializeStruct as ser::SerializeStruct>::serialize_field::<str>(move _18, move _19, move _20) -> [return: bb10, unwind: bb27]
  }
  preds [bb7]
  succs [bb10, bb27]

bb10
  0: StorageDead(_20)
    SourceInfo(serde/src/private/ser.rs:292:63-292:64)
  1: StorageDead(_19)
    SourceInfo(serde/src/private/ser.rs:292:63-292:64)
  2: StorageDead(_18)
    SourceInfo(serde/src/private/ser.rs:292:63-292:64)
  3: PlaceMention(_17)
    SourceInfo(serde/src/private/ser.rs:292:14-292:64)
  4: _21 = discriminant(_17)
    SourceInfo(serde/src/private/ser.rs:292:14-292:64)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _21) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(serde/src/private/ser.rs:292:14-292:64)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:292:14-292:64)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_23)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _23 = move ((_17 as Err).0: <S as ser::Serializer>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_25)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _25 = move _23
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<<S as ser::Serializer>::SerializeStruct, <S as ser::Serializer>::Error>::Err(move _25)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_25) -> [return: bb15, unwind: bb25]
  }
  preds [bb10, bb12]
  succs [bb15, bb25]

bb14
  0: StorageLive(_22)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _22 = ((_17 as Ok).0: ())
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _16 = _22
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  3: StorageDead(_22)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_17) -> [return: bb16, unwind: bb27]
  }
  preds [bb12]
  succs [bb16, bb27]

bb15
  0: StorageDead(_25)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_23) -> [return: bb19, unwind: bb26]
  }
  preds [bb13]
  succs [bb19, bb26]

bb16
  0: StorageDead(_17)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_16)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  2: StorageLive(_26)
    SourceInfo(serde/src/private/ser.rs:293:12-293:17)
  3: _26 = move _4
    SourceInfo(serde/src/private/ser.rs:293:12-293:17)
  4: _0 = std::result::Result::<<S as ser::Serializer>::SerializeStruct, <S as ser::Serializer>::Error>::Ok(move _26)
    SourceInfo(serde/src/private/ser.rs:293:9-293:18)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:293:17-293:18)
      kind: drop(_26) -> [return: bb17, unwind: bb27]
  }
  preds [bb14]
  succs [bb17, bb27]

bb17
  0: StorageDead(_26)
    SourceInfo(serde/src/private/ser.rs:293:17-293:18)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:294:5-294:6)
      kind: drop(_4) -> [return: bb18, unwind: bb31]
  }
  preds [bb16]
  succs [bb18, bb31]

bb18
  0: StorageDead(_4)
    SourceInfo(serde/src/private/ser.rs:294:5-294:6)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:294:5-294:6)
      kind: drop(_1) -> [return: bb24, unwind: bb32]
  }
  preds [bb17]
  succs [bb24, bb32]

bb19
  0: StorageDead(_23)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_17) -> [return: bb20, unwind: bb27]
  }
  preds [bb15]
  succs [bb20, bb27]

bb20
  0: StorageDead(_17)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_16)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:294:5-294:6)
      kind: drop(_4) -> [return: bb23, unwind: bb31]
  }
  preds [bb19]
  succs [bb23, bb31]

bb21
  0: StorageDead(_13)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:291:76-291:77)
      kind: drop(_5) -> [return: bb22, unwind: bb31]
  }
  preds [bb8]
  succs [bb22, bb31]

bb22
  0: StorageDead(_5)
    SourceInfo(serde/src/private/ser.rs:291:76-291:77)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  0: StorageDead(_4)
    SourceInfo(serde/src/private/ser.rs:294:5-294:6)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:294:5-294:6)
      kind: drop(_1) -> [return: bb24, unwind: bb32]
  }
  preds [bb20, bb22]
  succs [bb24, bb32]

bb24
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:294:6-294:6)
      kind: return
  }
  preds [bb18, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_23) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_17) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb15, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:294:5-294:6)
      kind: drop(_4) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb7, bb9, bb14, bb16, bb19, bb26]
  succs [bb31]

bb28
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_13) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:291:76-291:77)
      kind: drop(_5) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb6, bb8, bb28]
  succs [bb31]

bb30
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:291:74-291:75)
      kind: drop(_6) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:294:5-294:6)
      kind: drop(_1) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb17, bb20, bb21, bb27, bb29, bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:286:5-294:6)
      kind: resume
  }
  preds [bb18, bb23, bb31]
  succs []

