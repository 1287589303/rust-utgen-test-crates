bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/private/de.rs:1047:16-1047:44)
  1: StorageLive(_4)
    SourceInfo(serde/src/private/de.rs:1047:16-1047:21)
  2: _4 = &_2
    SourceInfo(serde/src/private/de.rs:1047:16-1047:21)
  3: StorageLive(_5)
    SourceInfo(serde/src/private/de.rs:1047:25-1047:44)
  4: StorageLive(_6)
    SourceInfo(serde/src/private/de.rs:1047:25-1047:44)
  5: StorageLive(_7)
    SourceInfo(serde/src/private/de.rs:1047:25-1047:33)
  6: _7 = &(*(_1.0: &str))
    SourceInfo(serde/src/private/de.rs:1047:25-1047:33)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1047:25-1047:44)
      kind: _6 = core::str::<impl str>::as_bytes(move _7) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: _5 = &_6
    SourceInfo(serde/src/private/de.rs:1047:25-1047:44)
  1: StorageDead(_7)
    SourceInfo(serde/src/private/de.rs:1047:43-1047:44)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1047:16-1047:44)
      kind: _3 = <&[u8] as std::cmp::PartialEq>::eq(move _4, move _5) -> [return: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1047:16-1047:44)
      kind: switchInt(move _3) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_6)
    SourceInfo(serde/src/private/de.rs:1047:43-1047:44)
  1: StorageDead(_5)
    SourceInfo(serde/src/private/de.rs:1047:43-1047:44)
  2: StorageDead(_4)
    SourceInfo(serde/src/private/de.rs:1047:43-1047:44)
  3: StorageLive(_8)
    SourceInfo(serde/src/private/de.rs:1048:20-1048:45)
  4: _8 = __private::de::content::TagContentOtherField::Tag
    SourceInfo(serde/src/private/de.rs:1048:20-1048:45)
  5: _0 = std::result::Result::<__private::de::content::TagContentOtherField, E>::Ok(move _8)
    SourceInfo(serde/src/private/de.rs:1048:17-1048:46)
  6: StorageDead(_8)
    SourceInfo(serde/src/private/de.rs:1048:45-1048:46)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1047:13-1053:14)
      kind: goto -> bb10
  }
  preds [bb2]
  succs [bb10]

bb4
  0: StorageDead(_6)
    SourceInfo(serde/src/private/de.rs:1047:43-1047:44)
  1: StorageDead(_5)
    SourceInfo(serde/src/private/de.rs:1047:43-1047:44)
  2: StorageDead(_4)
    SourceInfo(serde/src/private/de.rs:1047:43-1047:44)
  3: StorageLive(_9)
    SourceInfo(serde/src/private/de.rs:1049:23-1049:55)
  4: StorageLive(_10)
    SourceInfo(serde/src/private/de.rs:1049:23-1049:28)
  5: _10 = &_2
    SourceInfo(serde/src/private/de.rs:1049:23-1049:28)
  6: StorageLive(_11)
    SourceInfo(serde/src/private/de.rs:1049:32-1049:55)
  7: StorageLive(_12)
    SourceInfo(serde/src/private/de.rs:1049:32-1049:55)
  8: StorageLive(_13)
    SourceInfo(serde/src/private/de.rs:1049:32-1049:44)
  9: _13 = &(*(_1.1: &str))
    SourceInfo(serde/src/private/de.rs:1049:32-1049:44)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1049:32-1049:55)
      kind: _12 = core::str::<impl str>::as_bytes(move _13) -> [return: bb5, unwind: bb11]
  }
  preds [bb2]
  succs [bb5, bb11]

bb5
  0: _11 = &_12
    SourceInfo(serde/src/private/de.rs:1049:32-1049:55)
  1: StorageDead(_13)
    SourceInfo(serde/src/private/de.rs:1049:54-1049:55)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1049:23-1049:55)
      kind: _9 = <&[u8] as std::cmp::PartialEq>::eq(move _10, move _11) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1049:23-1049:55)
      kind: switchInt(move _9) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_12)
    SourceInfo(serde/src/private/de.rs:1049:54-1049:55)
  1: StorageDead(_11)
    SourceInfo(serde/src/private/de.rs:1049:54-1049:55)
  2: StorageDead(_10)
    SourceInfo(serde/src/private/de.rs:1049:54-1049:55)
  3: StorageLive(_14)
    SourceInfo(serde/src/private/de.rs:1050:20-1050:49)
  4: _14 = __private::de::content::TagContentOtherField::Content
    SourceInfo(serde/src/private/de.rs:1050:20-1050:49)
  5: _0 = std::result::Result::<__private::de::content::TagContentOtherField, E>::Ok(move _14)
    SourceInfo(serde/src/private/de.rs:1050:17-1050:50)
  6: StorageDead(_14)
    SourceInfo(serde/src/private/de.rs:1050:49-1050:50)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1049:20-1053:14)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb8
  0: StorageDead(_12)
    SourceInfo(serde/src/private/de.rs:1049:54-1049:55)
  1: StorageDead(_11)
    SourceInfo(serde/src/private/de.rs:1049:54-1049:55)
  2: StorageDead(_10)
    SourceInfo(serde/src/private/de.rs:1049:54-1049:55)
  3: StorageLive(_15)
    SourceInfo(serde/src/private/de.rs:1052:20-1052:47)
  4: _15 = __private::de::content::TagContentOtherField::Other
    SourceInfo(serde/src/private/de.rs:1052:20-1052:47)
  5: _0 = std::result::Result::<__private::de::content::TagContentOtherField, E>::Ok(move _15)
    SourceInfo(serde/src/private/de.rs:1052:17-1052:48)
  6: StorageDead(_15)
    SourceInfo(serde/src/private/de.rs:1052:47-1052:48)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1049:20-1053:14)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb9
  0: StorageDead(_9)
    SourceInfo(serde/src/private/de.rs:1053:13-1053:14)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1047:13-1053:14)
      kind: goto -> bb10
  }
  preds [bb7, bb8]
  succs [bb10]

bb10
  0: StorageDead(_3)
    SourceInfo(serde/src/private/de.rs:1053:13-1053:14)
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1054:10-1054:10)
      kind: return
  }
  preds [bb3, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(serde/src/private/de.rs:1043:9-1054:10)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb5]
  succs []

