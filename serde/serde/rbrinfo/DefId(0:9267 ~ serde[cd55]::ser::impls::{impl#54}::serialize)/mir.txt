bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/ser/impls.rs:155:25-155:32)
  1: StorageLive(_4)
    SourceInfo(serde/src/ser/impls.rs:155:40-155:72)
  2: StorageLive(_5)
    SourceInfo(serde/src/ser/impls.rs:155:40-155:50)
  3: _5 = move _2
    SourceInfo(serde/src/ser/impls.rs:155:40-155:50)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:155:40-155:72)
      kind: _4 = <S as ser::Serializer>::serialize_tuple(move _5, const 3_usize) -> [return: bb1, unwind: bb38]
  }
  preds []
  succs [bb1, bb38]

bb1
  0: StorageDead(_5)
    SourceInfo(serde/src/ser/impls.rs:155:71-155:72)
  1: PlaceMention(_4)
    SourceInfo(serde/src/ser/impls.rs:155:40-155:72)
  2: _6 = discriminant(_4)
    SourceInfo(serde/src/ser/impls.rs:155:40-155:72)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(serde/src/ser/impls.rs:155:40-155:72)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:155:40-155:72)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_8)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _8 = move ((_4 as Err).0: <S as ser::Serializer>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_10)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _10 = move _8
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<<S as ser::Serializer>::Ok, <S as ser::Serializer>::Error>::Err(move _10)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_10) -> [return: bb7, unwind: bb36]
  }
  preds [bb1, bb3]
  succs [bb7, bb36]

bb5
  0: StorageLive(_7)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _7 = move ((_4 as Ok).0: <S as ser::Serializer>::SerializeTuple)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _3 = move _7
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:26-298:27)
      kind: drop(_7) -> [return: bb6, unwind: bb37]
  }
  preds [bb3]
  succs [bb6, bb37]

bb6
  0: StorageDead(_7)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(serde/src/ser/impls.rs:155:25-155:32)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:155:73-155:74)
      kind: drop(_4) -> [return: bb8, unwind: bb35]
  }
  preds [bb5]
  succs [bb8, bb35]

bb7
  0: StorageDead(_10)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_8) -> [return: bb28, unwind: bb37]
  }
  preds [bb4]
  succs [bb28, bb37]

bb8
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:155:73-155:74)
  1: StorageLive(_11)
    SourceInfo(serde/src/ser/impls.rs:156:21-158:22)
  2: StorageLive(_12)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  3: StorageLive(_13)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  4: _13 = _1
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
      kind: _12 = <&[T; 3] as std::iter::IntoIterator>::into_iter(move _13) -> [return: bb9, unwind: bb35]
  }
  preds [bb6]
  succs [bb9, bb35]

bb9
  0: StorageDead(_13)
    SourceInfo(serde/src/ser/impls.rs:156:33-156:34)
  1: PlaceMention(_12)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  2: StorageLive(_14)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  3: _14 = move _12
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:21-158:22)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:21-158:22)
      kind: falseUnwind -> [real: bb11, unwind: bb35]
  }
  preds [bb9, bb23]
  succs [bb11, bb35]

bb11
  0: StorageLive(_16)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  1: StorageLive(_17)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  2: StorageLive(_18)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  3: StorageLive(_19)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  4: _19 = &mut _14
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  5: _18 = &mut (*_19)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
      kind: _17 = <std::slice::Iter<'_, T> as std::iter::Iterator>::next(move _18) -> [return: bb12, unwind: bb35]
  }
  preds [bb10]
  succs [bb12, bb35]

bb12
  0: StorageDead(_18)
    SourceInfo(serde/src/ser/impls.rs:156:33-156:34)
  1: PlaceMention(_17)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  2: _20 = discriminant(_17)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
      kind: switchInt(move _20) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:30-156:34)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:21-158:22)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_22)
    SourceInfo(serde/src/ser/impls.rs:156:25-156:26)
  1: _22 = ((_17 as Some).0: &T)
    SourceInfo(serde/src/ser/impls.rs:156:25-156:26)
  2: StorageLive(_23)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  3: StorageLive(_24)
    SourceInfo(serde/src/ser/impls.rs:157:30-157:54)
  4: StorageLive(_25)
    SourceInfo(serde/src/ser/impls.rs:157:30-157:33)
  5: _25 = &mut _3
    SourceInfo(serde/src/ser/impls.rs:157:30-157:33)
  6: StorageLive(_26)
    SourceInfo(serde/src/ser/impls.rs:157:52-157:53)
  7: _26 = &(*_22)
    SourceInfo(serde/src/ser/impls.rs:157:52-157:53)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:157:30-157:54)
      kind: _24 = <<S as ser::Serializer>::SerializeTuple as ser::SerializeTuple>::serialize_element::<T>(move _25, move _26) -> [return: bb17, unwind: bb35]
  }
  preds [bb12, bb14]
  succs [bb17, bb35]

bb16
  0: _11 = const ()
    SourceInfo(serde/src/ser/impls.rs:156:21-158:22)
  1: StorageDead(_19)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  2: StorageDead(_17)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  3: StorageDead(_16)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  4: StorageDead(_14)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  5: StorageDead(_12)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  6: StorageDead(_11)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  7: StorageLive(_32)
    SourceInfo(serde/src/ser/impls.rs:159:21-159:24)
  8: _32 = move _3
    SourceInfo(serde/src/ser/impls.rs:159:21-159:24)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:159:21-159:30)
      kind: _0 = <<S as ser::Serializer>::SerializeTuple as ser::SerializeTuple>::end(move _32) -> [return: bb24, unwind: bb32]
  }
  preds [bb14]
  succs [bb24, bb32]

bb17
  0: StorageDead(_26)
    SourceInfo(serde/src/ser/impls.rs:157:53-157:54)
  1: StorageDead(_25)
    SourceInfo(serde/src/ser/impls.rs:157:53-157:54)
  2: PlaceMention(_24)
    SourceInfo(serde/src/ser/impls.rs:157:30-157:54)
  3: _27 = discriminant(_24)
    SourceInfo(serde/src/ser/impls.rs:157:30-157:54)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _27) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb15]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(serde/src/ser/impls.rs:157:30-157:54)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:157:30-157:54)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_29)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _29 = move ((_24 as Err).0: <S as ser::Serializer>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_31)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _31 = move _29
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<<S as ser::Serializer>::Ok, <S as ser::Serializer>::Error>::Err(move _31)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_31) -> [return: bb22, unwind: bb33]
  }
  preds [bb17, bb19]
  succs [bb22, bb33]

bb21
  0: StorageLive(_28)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _28 = ((_24 as Ok).0: ())
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _23 = _28
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  3: StorageDead(_28)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_24) -> [return: bb23, unwind: bb35]
  }
  preds [bb19]
  succs [bb23, bb35]

bb22
  0: StorageDead(_31)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_29) -> [return: bb26, unwind: bb34]
  }
  preds [bb20]
  succs [bb26, bb34]

bb23
  0: StorageDead(_24)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_23)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  2: _16 = const ()
    SourceInfo(serde/src/ser/impls.rs:156:35-158:22)
  3: StorageDead(_22)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  4: StorageDead(_19)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  5: StorageDead(_17)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  6: StorageDead(_16)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  7: _15 = const ()
    SourceInfo(serde/src/ser/impls.rs:156:21-158:22)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:156:21-158:22)
      kind: goto -> bb10
  }
  preds [bb21]
  succs [bb10]

bb24
  0: StorageDead(_32)
    SourceInfo(serde/src/ser/impls.rs:159:29-159:30)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
      kind: drop(_3) -> [return: bb25, unwind: bb39]
  }
  preds [bb16]
  succs [bb25, bb39]

bb25
  0: StorageDead(_3)
    SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
      kind: drop(_2) -> [return: bb31, unwind: bb40]
  }
  preds [bb24]
  succs [bb31, bb40]

bb26
  0: StorageDead(_29)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_24) -> [return: bb27, unwind: bb35]
  }
  preds [bb22]
  succs [bb27, bb35]

bb27
  0: StorageDead(_24)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_23)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  2: StorageDead(_22)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  3: StorageDead(_19)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  4: StorageDead(_17)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  5: StorageDead(_16)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  6: StorageDead(_14)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  7: StorageDead(_12)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  8: StorageDead(_11)
    SourceInfo(serde/src/ser/impls.rs:158:21-158:22)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
      kind: drop(_3) -> [return: bb30, unwind: bb39]
  }
  preds [bb26]
  succs [bb30, bb39]

bb28
  0: StorageDead(_8)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:155:73-155:74)
      kind: drop(_4) -> [return: bb29, unwind: bb39]
  }
  preds [bb7]
  succs [bb29, bb39]

bb29
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:155:73-155:74)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb28]
  succs [bb30]

bb30
  0: StorageDead(_3)
    SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
      kind: drop(_2) -> [return: bb31, unwind: bb40]
  }
  preds [bb27, bb29]
  succs [bb31, bb40]

bb31
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:160:18-160:18)
      kind: return
  }
  preds [bb25, bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:159:29-159:30)
      kind: drop(_32) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb35]

bb33
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_29) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_24) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb22, bb33]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
      kind: drop(_3) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb6, bb8, bb10, bb11, bb15, bb21, bb26, bb32, bb34]
  succs [bb39]

bb36
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_8) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:155:73-155:74)
      kind: drop(_4) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb36]
  succs [bb39]

bb38
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:155:71-155:72)
      kind: drop(_5) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:160:17-160:18)
      kind: drop(_2) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb24, bb27, bb28, bb35, bb37, bb38]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:151:17-160:18)
      kind: resume
  }
  preds [bb25, bb30, bb39]
  succs []

