bb0
  0: StorageLive(_2)
    SourceInfo(serde/src/de/value.rs:1284:15-1284:31)
  1: StorageLive(_3)
    SourceInfo(serde/src/de/value.rs:1284:15-1284:24)
  2: _3 = &mut ((*_1).0: std::iter::Fuse<I>)
    SourceInfo(serde/src/de/value.rs:1284:15-1284:24)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1284:15-1284:31)
      kind: _2 = <std::iter::Fuse<I> as std::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_3)
    SourceInfo(serde/src/de/value.rs:1284:30-1284:31)
  1: PlaceMention(_2)
    SourceInfo(serde/src/de/value.rs:1284:15-1284:31)
  2: _4 = discriminant(_2)
    SourceInfo(serde/src/de/value.rs:1284:15-1284:31)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1284:9-1284:31)
      kind: switchInt(move _4) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(serde/src/de/value.rs:1284:15-1284:31)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1284:15-1284:31)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1285:13-1285:21)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: _0 = std::option::Option::<(<<I as std::iter::Iterator>::Item as de::value::private::Pair>::First, <<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second)>::None
    SourceInfo(serde/src/de/value.rs:1289:21-1289:25)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1289:21-1289:25)
      kind: goto -> bb10
  }
  preds [bb1, bb3]
  succs [bb10]

bb5
  0: StorageLive(_5)
    SourceInfo(serde/src/de/value.rs:1285:18-1285:20)
  1: _5 = move ((_2 as Some).0: <I as std::iter::Iterator>::Item)
    SourceInfo(serde/src/de/value.rs:1285:18-1285:20)
  2: _6 = AddWithOverflow(((*_1).2: usize), const 1_usize)
    SourceInfo(serde/src/de/value.rs:1286:17-1286:32)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1286:17-1286:32)
      kind: assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).2: usize), const 1_usize) -> [success: bb6, unwind: bb13]
  }
  preds [bb3]
  succs [bb6, bb13]

bb6
  0: ((*_1).2: usize) = move (_6.0: usize)
    SourceInfo(serde/src/de/value.rs:1286:17-1286:32)
  1: StorageLive(_7)
    SourceInfo(serde/src/de/value.rs:1287:22-1287:46)
  2: StorageLive(_8)
    SourceInfo(serde/src/de/value.rs:1287:43-1287:45)
  3: _8 = move _5
    SourceInfo(serde/src/de/value.rs:1287:43-1287:45)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1287:22-1287:46)
      kind: _7 = <<I as std::iter::Iterator>::Item as de::value::private::Pair>::split(move _8) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_8)
    SourceInfo(serde/src/de/value.rs:1287:45-1287:46)
  1: _0 = std::option::Option::<(<<I as std::iter::Iterator>::Item as de::value::private::Pair>::First, <<I as std::iter::Iterator>::Item as de::value::private::Pair>::Second)>::Some(move _7)
    SourceInfo(serde/src/de/value.rs:1287:17-1287:47)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1287:46-1287:47)
      kind: drop(_7) -> [return: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_7)
    SourceInfo(serde/src/de/value.rs:1287:46-1287:47)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1288:13-1288:14)
      kind: drop(_5) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  0: StorageDead(_5)
    SourceInfo(serde/src/de/value.rs:1288:13-1288:14)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1288:13-1288:14)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1291:5-1291:6)
      kind: drop(_2) -> [return: bb11, unwind: bb15]
  }
  preds [bb4, bb9]
  succs [bb11, bb15]

bb11
  0: StorageDead(_2)
    SourceInfo(serde/src/de/value.rs:1291:5-1291:6)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1291:6-1291:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1287:45-1287:46)
      kind: drop(_8) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1288:13-1288:14)
      kind: drop(_5) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1291:5-1291:6)
      kind: drop(_2) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb8, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1283:5-1291:6)
      kind: resume
  }
  preds [bb0, bb10, bb14]
  succs []

