bb0
  0: PlaceMention(_1)
    SourceInfo(serde/src/de/size_hint.rs:26:11-26:17)
  1: _3 = discriminant((_1.1: std::option::Option<usize>))
    SourceInfo(serde/src/de/size_hint.rs:26:11-26:17)
  Terminator {
      source_info: SourceInfo(serde/src/de/size_hint.rs:26:5-26:17)
      kind: switchInt(move _3) -> [1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = std::option::Option::<usize>::None
    SourceInfo(serde/src/de/size_hint.rs:28:14-28:18)
  Terminator {
      source_info: SourceInfo(serde/src/de/size_hint.rs:28:14-28:18)
      kind: goto -> bb6
  }
  preds [bb0, bb2, bb5, bb5]
  succs [bb6]

bb2
  Terminator {
      source_info: SourceInfo(serde/src/de/size_hint.rs:27:9-27:29)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_5)
    SourceInfo(serde/src/de/size_hint.rs:27:10-27:15)
  1: _5 = &(_1.0: usize)
    SourceInfo(serde/src/de/size_hint.rs:27:10-27:15)
  2: StorageLive(_7)
    SourceInfo(serde/src/de/size_hint.rs:27:22-27:27)
  3: _7 = &(((_1.1: std::option::Option<usize>) as Some).0: usize)
    SourceInfo(serde/src/de/size_hint.rs:27:22-27:27)
  4: _2 = &fake shallow (_1.1: std::option::Option<usize>)
    SourceInfo(serde/src/de/size_hint.rs:26:11-26:17)
  5: StorageLive(_8)
    SourceInfo(serde/src/de/size_hint.rs:27:33-27:47)
  6: StorageLive(_9)
    SourceInfo(serde/src/de/size_hint.rs:27:33-27:38)
  7: _9 = (*_5)
    SourceInfo(serde/src/de/size_hint.rs:27:33-27:38)
  8: StorageLive(_10)
    SourceInfo(serde/src/de/size_hint.rs:27:42-27:47)
  9: _10 = (*_7)
    SourceInfo(serde/src/de/size_hint.rs:27:42-27:47)
  10: _8 = Eq(move _9, move _10)
    SourceInfo(serde/src/de/size_hint.rs:27:33-27:47)
  Terminator {
      source_info: SourceInfo(serde/src/de/size_hint.rs:27:33-27:47)
      kind: switchInt(move _8) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  1: StorageDead(_9)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  2: StorageDead(_8)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  3: FakeRead(ForMatchGuard, _2)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  4: FakeRead(ForGuardBinding, _5)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  5: FakeRead(ForGuardBinding, _7)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  6: StorageLive(_4)
    SourceInfo(serde/src/de/size_hint.rs:27:10-27:15)
  7: _4 = (_1.0: usize)
    SourceInfo(serde/src/de/size_hint.rs:27:10-27:15)
  8: StorageLive(_6)
    SourceInfo(serde/src/de/size_hint.rs:27:22-27:27)
  9: _6 = (((_1.1: std::option::Option<usize>) as Some).0: usize)
    SourceInfo(serde/src/de/size_hint.rs:27:22-27:27)
  10: StorageLive(_11)
    SourceInfo(serde/src/de/size_hint.rs:27:56-27:61)
  11: _11 = _6
    SourceInfo(serde/src/de/size_hint.rs:27:56-27:61)
  12: _0 = std::option::Option::<usize>::Some(move _11)
    SourceInfo(serde/src/de/size_hint.rs:27:51-27:62)
  13: StorageDead(_11)
    SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
  14: StorageDead(_6)
    SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
  15: StorageDead(_4)
    SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
  16: StorageDead(_7)
    SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
  17: StorageDead(_5)
    SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
  Terminator {
      source_info: SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_10)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  1: StorageDead(_9)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  2: StorageDead(_8)
    SourceInfo(serde/src/de/size_hint.rs:27:46-27:47)
  3: StorageDead(_7)
    SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
  4: StorageDead(_5)
    SourceInfo(serde/src/de/size_hint.rs:27:61-27:62)
  Terminator {
      source_info: SourceInfo(serde/src/de/size_hint.rs:27:33-27:47)
      kind: falseEdge -> [real: bb1, imaginary: bb1]
  }
  preds [bb3]
  succs [bb1, bb1]

bb6
  Terminator {
      source_info: SourceInfo(serde/src/de/size_hint.rs:30:2-30:2)
      kind: return
  }
  preds [bb1, bb4]
  succs []

