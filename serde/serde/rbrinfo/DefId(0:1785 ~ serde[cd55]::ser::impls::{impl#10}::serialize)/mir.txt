bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/ser/impls.rs:274:13-274:22)
  1: StorageLive(_4)
    SourceInfo(serde/src/ser/impls.rs:274:30-274:73)
  2: StorageLive(_5)
    SourceInfo(serde/src/ser/impls.rs:274:30-274:40)
  3: _5 = move _2
    SourceInfo(serde/src/ser/impls.rs:274:30-274:40)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:274:30-274:73)
      kind: _4 = <S as ser::Serializer>::serialize_struct(move _5, const "RangeFrom", const 1_usize) -> [return: bb1, unwind: bb30]
  }
  preds []
  succs [bb1, bb30]

bb1
  0: StorageDead(_5)
    SourceInfo(serde/src/ser/impls.rs:274:72-274:73)
  1: PlaceMention(_4)
    SourceInfo(serde/src/ser/impls.rs:274:30-274:73)
  2: _6 = discriminant(_4)
    SourceInfo(serde/src/ser/impls.rs:274:30-274:73)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(serde/src/ser/impls.rs:274:30-274:73)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:274:30-274:73)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_8)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _8 = move ((_4 as Err).0: <S as ser::Serializer>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_10)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _10 = move _8
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<<S as ser::Serializer>::Ok, <S as ser::Serializer>::Error>::Err(move _10)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_10) -> [return: bb7, unwind: bb28]
  }
  preds [bb1, bb3]
  succs [bb7, bb28]

bb5
  0: StorageLive(_7)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _7 = move ((_4 as Ok).0: <S as ser::Serializer>::SerializeStruct)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _3 = move _7
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:26-298:27)
      kind: drop(_7) -> [return: bb6, unwind: bb29]
  }
  preds [bb3]
  succs [bb6, bb29]

bb6
  0: StorageDead(_7)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(serde/src/ser/impls.rs:274:13-274:22)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:274:74-274:75)
      kind: drop(_4) -> [return: bb8, unwind: bb27]
  }
  preds [bb5]
  succs [bb8, bb27]

bb7
  0: StorageDead(_10)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_8) -> [return: bb20, unwind: bb29]
  }
  preds [bb4]
  succs [bb20, bb29]

bb8
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:274:74-274:75)
  1: StorageLive(_11)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  2: StorageLive(_12)
    SourceInfo(serde/src/ser/impls.rs:275:14-275:57)
  3: StorageLive(_13)
    SourceInfo(serde/src/ser/impls.rs:275:14-275:19)
  4: _13 = &mut _3
    SourceInfo(serde/src/ser/impls.rs:275:14-275:19)
  5: StorageLive(_14)
    SourceInfo(serde/src/ser/impls.rs:275:45-275:56)
  6: StorageLive(_15)
    SourceInfo(serde/src/ser/impls.rs:275:45-275:56)
  7: _15 = &((*_1).0: Idx)
    SourceInfo(serde/src/ser/impls.rs:275:45-275:56)
  8: _14 = &(*_15)
    SourceInfo(serde/src/ser/impls.rs:275:45-275:56)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:275:14-275:57)
      kind: _12 = <<S as ser::Serializer>::SerializeStruct as ser::SerializeStruct>::serialize_field::<Idx>(move _13, const "start", move _14) -> [return: bb9, unwind: bb27]
  }
  preds [bb6]
  succs [bb9, bb27]

bb9
  0: StorageDead(_14)
    SourceInfo(serde/src/ser/impls.rs:275:56-275:57)
  1: StorageDead(_13)
    SourceInfo(serde/src/ser/impls.rs:275:56-275:57)
  2: PlaceMention(_12)
    SourceInfo(serde/src/ser/impls.rs:275:14-275:57)
  3: _16 = discriminant(_12)
    SourceInfo(serde/src/ser/impls.rs:275:14-275:57)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _16) -> [0: bb11, 1: bb12, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(serde/src/ser/impls.rs:275:14-275:57)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:275:14-275:57)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_18)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _18 = move ((_12 as Err).0: <S as ser::Serializer>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_20)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _20 = move _18
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<<S as ser::Serializer>::Ok, <S as ser::Serializer>::Error>::Err(move _20)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_20) -> [return: bb14, unwind: bb25]
  }
  preds [bb9, bb11]
  succs [bb14, bb25]

bb13
  0: StorageLive(_17)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _17 = ((_12 as Ok).0: ())
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _11 = _17
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  3: StorageDead(_17)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_12) -> [return: bb15, unwind: bb27]
  }
  preds [bb11]
  succs [bb15, bb27]

bb14
  0: StorageDead(_20)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_18) -> [return: bb18, unwind: bb26]
  }
  preds [bb12]
  succs [bb18, bb26]

bb15
  0: StorageDead(_15)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_12)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  2: StorageDead(_11)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  3: StorageLive(_21)
    SourceInfo(serde/src/ser/impls.rs:276:9-276:14)
  4: _21 = move _3
    SourceInfo(serde/src/ser/impls.rs:276:9-276:14)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:276:9-276:20)
      kind: _0 = <<S as ser::Serializer>::SerializeStruct as ser::SerializeStruct>::end(move _21) -> [return: bb16, unwind: bb24]
  }
  preds [bb13]
  succs [bb16, bb24]

bb16
  0: StorageDead(_21)
    SourceInfo(serde/src/ser/impls.rs:276:19-276:20)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
      kind: drop(_3) -> [return: bb17, unwind: bb31]
  }
  preds [bb15]
  succs [bb17, bb31]

bb17
  0: StorageDead(_3)
    SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
      kind: drop(_2) -> [return: bb23, unwind: bb32]
  }
  preds [bb16]
  succs [bb23, bb32]

bb18
  0: StorageDead(_18)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_12) -> [return: bb19, unwind: bb27]
  }
  preds [bb14]
  succs [bb19, bb27]

bb19
  0: StorageDead(_15)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_12)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  2: StorageDead(_11)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
      kind: drop(_3) -> [return: bb22, unwind: bb31]
  }
  preds [bb18]
  succs [bb22, bb31]

bb20
  0: StorageDead(_8)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:274:74-274:75)
      kind: drop(_4) -> [return: bb21, unwind: bb31]
  }
  preds [bb7]
  succs [bb21, bb31]

bb21
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:274:74-274:75)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_3)
    SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
      kind: drop(_2) -> [return: bb23, unwind: bb32]
  }
  preds [bb19, bb21]
  succs [bb23, bb32]

bb23
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:277:6-277:6)
      kind: return
  }
  preds [bb17, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:276:19-276:20)
      kind: drop(_21) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb27]

bb25
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_18) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_12) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb14, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
      kind: drop(_3) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb6, bb8, bb13, bb18, bb24, bb26]
  succs [bb31]

bb28
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_8) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:274:74-274:75)
      kind: drop(_4) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb28]
  succs [bb31]

bb30
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:274:72-274:73)
      kind: drop(_5) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:277:5-277:6)
      kind: drop(_2) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb16, bb19, bb20, bb27, bb29, bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:269:5-277:6)
      kind: resume
  }
  preds [bb17, bb22, bb31]
  succs []

