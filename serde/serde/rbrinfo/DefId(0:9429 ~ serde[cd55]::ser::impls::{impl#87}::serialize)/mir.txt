bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/ser/impls.rs:203:17-203:27)
  1: _3 = move _2
    SourceInfo(serde/src/ser/impls.rs:203:17-203:27)
  2: StorageLive(_4)
    SourceInfo(serde/src/ser/impls.rs:203:40-203:44)
  3: _4 = _1
    SourceInfo(serde/src/ser/impls.rs:203:40-203:44)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:203:17-203:45)
      kind: _0 = <S as ser::Serializer>::collect_seq::<&std::collections::LinkedList<T>>(move _3, move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(serde/src/ser/impls.rs:203:44-203:45)
  1: StorageDead(_3)
    SourceInfo(serde/src/ser/impls.rs:203:44-203:45)
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:204:13-204:14)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:204:14-204:14)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:203:44-203:45)
      kind: drop(_3) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:204:13-204:14)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(serde/src/ser/impls.rs:199:13-204:14)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

