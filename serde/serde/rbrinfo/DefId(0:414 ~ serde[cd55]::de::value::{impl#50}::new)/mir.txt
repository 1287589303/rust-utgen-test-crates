bb0
  0: StorageLive(_2)
    SourceInfo(serde/src/de/value.rs:1015:19-1015:30)
  1: StorageLive(_3)
    SourceInfo(serde/src/de/value.rs:1015:19-1015:23)
  2: _3 = move _1
    SourceInfo(serde/src/de/value.rs:1015:19-1015:23)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1015:19-1015:30)
      kind: _2 = <I as std::iter::Iterator>::fuse(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(serde/src/de/value.rs:1015:29-1015:30)
  1: StorageLive(_4)
    SourceInfo(serde/src/de/value.rs:1017:21-1017:32)
  2: _4 = std::marker::PhantomData::<E>
    SourceInfo(serde/src/de/value.rs:1017:21-1017:32)
  3: _0 = de::value::SeqDeserializer::<I, E> { iter: move _2, count: const 0_usize, marker: move _4 }
    SourceInfo(serde/src/de/value.rs:1014:9-1018:10)
  4: StorageDead(_4)
    SourceInfo(serde/src/de/value.rs:1018:9-1018:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1018:9-1018:10)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_2)
    SourceInfo(serde/src/de/value.rs:1018:9-1018:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1019:5-1019:6)
      kind: drop(_1) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1019:6-1019:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1015:29-1015:30)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1019:5-1019:6)
      kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:1013:5-1019:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

