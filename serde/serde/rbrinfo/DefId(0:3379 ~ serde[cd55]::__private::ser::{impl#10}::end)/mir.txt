bb0
  0: StorageLive(_2)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  1: StorageLive(_3)
    SourceInfo(serde/src/private/ser.rs:1329:14-1331:71)
  2: StorageLive(_4)
    SourceInfo(serde/src/private/ser.rs:1329:14-1330:17)
  3: _4 = &mut (*(_1.0: &mut M))
    SourceInfo(serde/src/private/ser.rs:1329:14-1330:17)
  4: StorageLive(_5)
    SourceInfo(serde/src/private/ser.rs:1331:30-1331:70)
  5: StorageLive(_6)
    SourceInfo(serde/src/private/ser.rs:1331:30-1331:70)
  6: StorageLive(_7)
    SourceInfo(serde/src/private/ser.rs:1331:31-1331:70)
  7: StorageLive(_8)
    SourceInfo(serde/src/private/ser.rs:1331:47-1331:56)
  8: _8 = (_1.1: &str)
    SourceInfo(serde/src/private/ser.rs:1331:47-1331:56)
  9: StorageLive(_9)
    SourceInfo(serde/src/private/ser.rs:1331:58-1331:69)
  10: _9 = move (_1.2: std::vec::Vec<(&str, __private::ser::content::Content)>)
    SourceInfo(serde/src/private/ser.rs:1331:58-1331:69)
  11: _7 = __private::ser::content::Content::Struct(move _8, move _9)
    SourceInfo(serde/src/private/ser.rs:1331:31-1331:70)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1331:69-1331:70)
      kind: drop(_9) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_9)
    SourceInfo(serde/src/private/ser.rs:1331:69-1331:70)
  1: StorageDead(_8)
    SourceInfo(serde/src/private/ser.rs:1331:69-1331:70)
  2: _6 = &_7
    SourceInfo(serde/src/private/ser.rs:1331:30-1331:70)
  3: _5 = &(*_6)
    SourceInfo(serde/src/private/ser.rs:1331:30-1331:70)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1329:14-1331:71)
      kind: _3 = <M as ser::SerializeMap>::serialize_value::<__private::ser::content::Content>(move _4, move _5) -> [return: bb2, unwind: bb16]
  }
  preds [bb0]
  succs [bb2, bb16]

bb2
  0: StorageDead(_5)
    SourceInfo(serde/src/private/ser.rs:1331:70-1331:71)
  1: StorageDead(_4)
    SourceInfo(serde/src/private/ser.rs:1331:70-1331:71)
  2: PlaceMention(_3)
    SourceInfo(serde/src/private/ser.rs:1329:14-1331:71)
  3: _10 = discriminant(_3)
    SourceInfo(serde/src/private/ser.rs:1329:14-1331:71)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _10) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(serde/src/private/ser.rs:1329:14-1331:71)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1329:14-1331:71)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _12 = move ((_3 as Err).0: <M as ser::SerializeMap>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_14)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _14 = move _12
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<(), <M as ser::SerializeMap>::Error>::Err(move _14)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_14) -> [return: bb7, unwind: bb14]
  }
  preds [bb2, bb4]
  succs [bb7, bb14]

bb6
  0: StorageLive(_11)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _11 = ((_3 as Ok).0: ())
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _2 = _11
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  3: StorageDead(_11)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_3) -> [return: bb8, unwind: bb16]
  }
  preds [bb4]
  succs [bb8, bb16]

bb7
  0: StorageDead(_14)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_12) -> [return: bb10, unwind: bb15]
  }
  preds [bb5]
  succs [bb10, bb15]

bb8
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_7) -> [return: bb9, unwind: bb17]
  }
  preds [bb6]
  succs [bb9, bb17]

bb9
  0: StorageDead(_7)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_6)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  2: StorageDead(_3)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  3: StorageDead(_2)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  4: StorageLive(_15)
    SourceInfo(serde/src/private/ser.rs:1332:12-1332:14)
  5: _15 = ()
    SourceInfo(serde/src/private/ser.rs:1332:12-1332:14)
  6: _0 = std::result::Result::<(), <M as ser::SerializeMap>::Error>::Ok(move _15)
    SourceInfo(serde/src/private/ser.rs:1332:9-1332:15)
  7: StorageDead(_15)
    SourceInfo(serde/src/private/ser.rs:1332:14-1332:15)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1333:5-1333:6)
      kind: drop(_1) -> [return: bb13, unwind: bb18]
  }
  preds [bb8]
  succs [bb13, bb18]

bb10
  0: StorageDead(_12)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_3) -> [return: bb11, unwind: bb16]
  }
  preds [bb7]
  succs [bb11, bb16]

bb11
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_7) -> [return: bb12, unwind: bb17]
  }
  preds [bb10]
  succs [bb12, bb17]

bb12
  0: StorageDead(_7)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  1: StorageDead(_6)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  2: StorageDead(_3)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  3: StorageDead(_2)
    SourceInfo(serde/src/lib.rs:300:9-300:10)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1333:5-1333:6)
      kind: drop(_1) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1333:6-1333:6)
      kind: return
  }
  preds [bb9, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_12) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_3) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb7, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:300:9-300:10)
      kind: drop(_7) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb6, bb10, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1333:5-1333:6)
      kind: drop(_1) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb8, bb11, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1328:5-1333:6)
      kind: resume
  }
  preds [bb9, bb12, bb17]
  succs []

