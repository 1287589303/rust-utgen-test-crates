bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/de/impls.rs:2698:17-2698:22)
  1: StorageLive(_4)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  2: StorageLive(_5)
    SourceInfo(serde/src/de/impls.rs:2698:41-2698:59)
  3: StorageLive(_6)
    SourceInfo(serde/src/de/impls.rs:2698:41-2698:44)
  4: _6 = &mut _2
    SourceInfo(serde/src/de/impls.rs:2698:41-2698:44)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2698:41-2698:59)
      kind: _5 = <A as de::SeqAccess<'_>>::next_element::<Idx>(move _6) -> [return: bb1, unwind: bb28]
  }
  preds []
  succs [bb1, bb28]

bb1
  0: StorageDead(_6)
    SourceInfo(serde/src/de/impls.rs:2698:58-2698:59)
  1: PlaceMention(_5)
    SourceInfo(serde/src/de/impls.rs:2698:41-2698:59)
  2: _7 = discriminant(_5)
    SourceInfo(serde/src/de/impls.rs:2698:41-2698:59)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-297:9)
      kind: switchInt(move _7) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(serde/src/de/impls.rs:2698:41-2698:59)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2698:41-2698:59)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:13-298:20)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_9)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  1: _9 = move ((_5 as Err).0: <A as de::SeqAccess<'_>>::Error)
    SourceInfo(serde/src/lib.rs:299:17-299:20)
  2: StorageLive(_11)
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  3: _11 = move _9
    SourceInfo(serde/src/lib.rs:299:36-299:39)
  4: _0 = std::result::Result::<Idx, <A as de::SeqAccess<'_>>::Error>::Err(move _11)
    SourceInfo(serde/src/lib.rs:299:32-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_11) -> [return: bb7, unwind: bb26]
  }
  preds [bb1, bb3]
  succs [bb7, bb26]

bb5
  0: StorageLive(_8)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  1: _8 = move ((_5 as Ok).0: std::option::Option<Idx>)
    SourceInfo(serde/src/lib.rs:298:16-298:19)
  2: _4 = move _8
    SourceInfo(serde/src/lib.rs:298:24-298:27)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:298:26-298:27)
      kind: drop(_8) -> [return: bb6, unwind: bb27]
  }
  preds [bb3]
  succs [bb6, bb27]

bb6
  0: StorageDead(_8)
    SourceInfo(serde/src/lib.rs:298:26-298:27)
  1: PlaceMention(_4)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  2: _12 = discriminant(_4)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-300:10)
      kind: switchInt(move _12) -> [0: bb10, 1: bb9, otherwise: bb8]
  }
  preds [bb5]
  succs [bb8, bb9, bb10]

bb7
  0: StorageDead(_11)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_9) -> [return: bb19, unwind: bb27]
  }
  preds [bb4]
  succs [bb19, bb27]

bb8
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(serde/src/lib.rs:297:9-300:10)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:297:9-300:10)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2699:17-2699:28)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb6]
  succs [bb10, bb11]

bb10
  0: StorageLive(_15)
    SourceInfo(serde/src/de/impls.rs:2701:32-2701:63)
  1: StorageLive(_16)
    SourceInfo(serde/src/de/impls.rs:2701:57-2701:62)
  2: StorageLive(_17)
    SourceInfo(serde/src/de/impls.rs:2701:57-2701:62)
  3: StorageLive(_18)
    SourceInfo(serde/src/de/impls.rs:2701:57-2701:62)
  4: _18 = &_1
    SourceInfo(serde/src/de/impls.rs:2701:57-2701:62)
  5: _17 = &(*_18)
    SourceInfo(serde/src/de/impls.rs:2701:57-2701:62)
  6: _16 = move _17 as &dyn de::Expected (PointerCoercion(Unsize))
    SourceInfo(serde/src/de/impls.rs:2701:57-2701:62)
  7: StorageDead(_17)
    SourceInfo(serde/src/de/impls.rs:2701:61-2701:62)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2701:32-2701:63)
      kind: _15 = <<A as de::SeqAccess<'_>>::Error as de::Error>::invalid_length(const 0_usize, move _16) -> [return: bb13, unwind: bb25]
  }
  preds [bb6, bb9]
  succs [bb13, bb25]

bb11
  0: StorageLive(_13)
    SourceInfo(serde/src/de/impls.rs:2699:22-2699:27)
  1: _13 = move ((_4 as Some).0: Idx)
    SourceInfo(serde/src/de/impls.rs:2699:22-2699:27)
  2: _3 = move _13
    SourceInfo(serde/src/de/impls.rs:2699:32-2699:37)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2699:36-2699:37)
      kind: drop(_13) -> [return: bb12, unwind: bb25]
  }
  preds [bb9]
  succs [bb12, bb25]

bb12
  0: StorageDead(_13)
    SourceInfo(serde/src/de/impls.rs:2699:36-2699:37)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(serde/src/de/impls.rs:2698:17-2698:22)
  2: AscribeUserType(_3, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(serde/src/de/impls.rs:2698:24-2698:27)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
      kind: drop(_4) -> [return: bb15, unwind: bb23]
  }
  preds [bb11]
  succs [bb15, bb23]

bb13
  0: StorageDead(_16)
    SourceInfo(serde/src/de/impls.rs:2701:62-2701:63)
  1: _0 = std::result::Result::<Idx, <A as de::SeqAccess<'_>>::Error>::Err(move _15)
    SourceInfo(serde/src/de/impls.rs:2701:28-2701:64)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2701:63-2701:64)
      kind: drop(_15) -> [return: bb14, unwind: bb25]
  }
  preds [bb10]
  succs [bb14, bb25]

bb14
  0: StorageDead(_15)
    SourceInfo(serde/src/de/impls.rs:2701:63-2701:64)
  1: StorageDead(_18)
    SourceInfo(serde/src/de/impls.rs:2701:64-2701:65)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
      kind: drop(_4) -> [return: bb20, unwind: bb27]
  }
  preds [bb13]
  succs [bb20, bb27]

bb15
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
      kind: drop(_5) -> [return: bb16, unwind: bb24]
  }
  preds [bb12]
  succs [bb16, bb24]

bb16
  0: StorageDead(_5)
    SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
  1: StorageDead(_4)
    SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
  2: StorageLive(_19)
    SourceInfo(serde/src/de/impls.rs:2704:16-2704:21)
  3: _19 = move _3
    SourceInfo(serde/src/de/impls.rs:2704:16-2704:21)
  4: _0 = std::result::Result::<Idx, <A as de::SeqAccess<'_>>::Error>::Ok(move _19)
    SourceInfo(serde/src/de/impls.rs:2704:13-2704:22)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2704:21-2704:22)
      kind: drop(_19) -> [return: bb17, unwind: bb24]
  }
  preds [bb15]
  succs [bb17, bb24]

bb17
  0: StorageDead(_19)
    SourceInfo(serde/src/de/impls.rs:2704:21-2704:22)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2705:9-2705:10)
      kind: drop(_3) -> [return: bb18, unwind: bb28]
  }
  preds [bb16]
  succs [bb18, bb28]

bb18
  0: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:2705:9-2705:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2705:9-2705:10)
      kind: drop(_2) -> [return: bb22, unwind: bb29]
  }
  preds [bb17]
  succs [bb22, bb29]

bb19
  0: StorageDead(_9)
    SourceInfo(serde/src/lib.rs:299:39-299:40)
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb7]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
      kind: drop(_5) -> [return: bb21, unwind: bb28]
  }
  preds [bb14, bb19]
  succs [bb21, bb28]

bb21
  0: StorageDead(_5)
    SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
  1: StorageDead(_4)
    SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
  2: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:2705:9-2705:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2705:9-2705:10)
      kind: drop(_2) -> [return: bb22, unwind: bb29]
  }
  preds [bb20]
  succs [bb22, bb29]

bb22
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2705:10-2705:10)
      kind: return
  }
  preds [bb18, bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
      kind: drop(_5) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2705:9-2705:10)
      kind: drop(_3) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb15, bb16, bb23]
  succs [bb28]

bb25
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
      kind: drop(_4) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb10, bb11, bb13]
  succs [bb27]

bb26
  Terminator {
      source_info: SourceInfo(serde/src/lib.rs:299:39-299:40)
      kind: drop(_9) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2703:14-2703:15)
      kind: drop(_5) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb14, bb25, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2705:9-2705:10)
      kind: drop(_2) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb0, bb17, bb20, bb24, bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:2694:9-2705:10)
      kind: resume
  }
  preds [bb18, bb21, bb28]
  succs []

