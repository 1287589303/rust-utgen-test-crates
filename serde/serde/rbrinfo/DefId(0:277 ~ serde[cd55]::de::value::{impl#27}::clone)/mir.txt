bb0
  0: StorageLive(_2)
    SourceInfo(serde/src/de/value.rs:645:20-645:38)
  1: StorageLive(_3)
    SourceInfo(serde/src/de/value.rs:645:20-645:30)
  2: _3 = &((*_1).0: std::string::String)
    SourceInfo(serde/src/de/value.rs:645:20-645:30)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:645:20-645:38)
      kind: _2 = <std::string::String as std::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(serde/src/de/value.rs:645:37-645:38)
  1: StorageLive(_4)
    SourceInfo(serde/src/de/value.rs:646:21-646:32)
  2: _4 = std::marker::PhantomData::<E>
    SourceInfo(serde/src/de/value.rs:646:21-646:32)
  3: _0 = de::value::StringDeserializer::<E> { value: move _2, marker: move _4 }
    SourceInfo(serde/src/de/value.rs:644:9-647:10)
  4: StorageDead(_4)
    SourceInfo(serde/src/de/value.rs:647:9-647:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:647:9-647:10)
      kind: drop(_2) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_2)
    SourceInfo(serde/src/de/value.rs:647:9-647:10)
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:648:6-648:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/de/value.rs:643:5-648:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

