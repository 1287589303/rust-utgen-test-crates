bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/de/impls.rs:560:13-560:21)
  1: StorageLive(_4)
    SourceInfo(serde/src/de/impls.rs:560:24-560:25)
  2: _4 = &(*_2)
    SourceInfo(serde/src/de/impls.rs:560:24-560:25)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:560:24-560:33)
      kind: _3 = core::str::<impl str>::chars(move _4) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_4)
    SourceInfo(serde/src/de/impls.rs:560:32-560:33)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(serde/src/de/impls.rs:560:13-560:21)
  2: StorageLive(_5)
    SourceInfo(serde/src/de/impls.rs:561:15-561:41)
  3: StorageLive(_6)
    SourceInfo(serde/src/de/impls.rs:561:16-561:27)
  4: StorageLive(_7)
    SourceInfo(serde/src/de/impls.rs:561:16-561:20)
  5: _7 = &mut _3
    SourceInfo(serde/src/de/impls.rs:561:16-561:20)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:561:16-561:27)
      kind: _6 = <std::str::Chars<'_> as std::iter::Iterator>::next(move _7) -> [return: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_7)
    SourceInfo(serde/src/de/impls.rs:561:26-561:27)
  1: StorageLive(_8)
    SourceInfo(serde/src/de/impls.rs:561:29-561:40)
  2: StorageLive(_9)
    SourceInfo(serde/src/de/impls.rs:561:29-561:33)
  3: _9 = &mut _3
    SourceInfo(serde/src/de/impls.rs:561:29-561:33)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:561:29-561:40)
      kind: _8 = <std::str::Chars<'_> as std::iter::Iterator>::next(move _9) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_9)
    SourceInfo(serde/src/de/impls.rs:561:39-561:40)
  1: _5 = (move _6, move _8)
    SourceInfo(serde/src/de/impls.rs:561:15-561:41)
  2: StorageDead(_8)
    SourceInfo(serde/src/de/impls.rs:561:40-561:41)
  3: StorageDead(_6)
    SourceInfo(serde/src/de/impls.rs:561:40-561:41)
  4: PlaceMention(_5)
    SourceInfo(serde/src/de/impls.rs:561:15-561:41)
  5: _11 = discriminant((_5.0: std::option::Option<char>))
    SourceInfo(serde/src/de/impls.rs:561:15-561:41)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:561:9-561:41)
      kind: switchInt(move _11) -> [1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageLive(_14)
    SourceInfo(serde/src/de/impls.rs:563:22-563:69)
  1: StorageLive(_15)
    SourceInfo(serde/src/de/impls.rs:563:43-563:61)
  2: StorageLive(_16)
    SourceInfo(serde/src/de/impls.rs:563:59-563:60)
  3: _16 = &(*_2)
    SourceInfo(serde/src/de/impls.rs:563:59-563:60)
  4: _15 = de::Unexpected::<'_>::Str(move _16)
    SourceInfo(serde/src/de/impls.rs:563:43-563:61)
  5: StorageDead(_16)
    SourceInfo(serde/src/de/impls.rs:563:60-563:61)
  6: StorageLive(_17)
    SourceInfo(serde/src/de/impls.rs:563:63-563:68)
  7: StorageLive(_18)
    SourceInfo(serde/src/de/impls.rs:563:63-563:68)
  8: StorageLive(_19)
    SourceInfo(serde/src/de/impls.rs:563:63-563:68)
  9: _19 = &_1
    SourceInfo(serde/src/de/impls.rs:563:63-563:68)
  10: _18 = &(*_19)
    SourceInfo(serde/src/de/impls.rs:563:63-563:68)
  11: _17 = move _18 as &dyn de::Expected (PointerCoercion(Unsize))
    SourceInfo(serde/src/de/impls.rs:563:63-563:68)
  12: StorageDead(_18)
    SourceInfo(serde/src/de/impls.rs:563:67-563:68)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:563:22-563:69)
      kind: _14 = <E as de::Error>::invalid_value(move _15, move _17) -> [return: bb8, unwind: bb11]
  }
  preds [bb3, bb5, bb6]
  succs [bb8, bb11]

bb5
  0: _10 = discriminant((_5.1: std::option::Option<char>))
    SourceInfo(serde/src/de/impls.rs:561:15-561:41)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:561:9-561:41)
      kind: switchInt(move _10) -> [0: bb6, otherwise: bb4]
  }
  preds [bb3]
  succs [bb4, bb6]

bb6
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:562:13-562:28)
      kind: falseEdge -> [real: bb7, imaginary: bb4]
  }
  preds [bb5]
  succs [bb4, bb7]

bb7
  0: StorageLive(_12)
    SourceInfo(serde/src/de/impls.rs:562:19-562:20)
  1: _12 = (((_5.0: std::option::Option<char>) as Some).0: char)
    SourceInfo(serde/src/de/impls.rs:562:19-562:20)
  2: StorageLive(_13)
    SourceInfo(serde/src/de/impls.rs:562:35-562:36)
  3: _13 = _12
    SourceInfo(serde/src/de/impls.rs:562:35-562:36)
  4: _0 = std::result::Result::<char, E>::Ok(move _13)
    SourceInfo(serde/src/de/impls.rs:562:32-562:37)
  5: StorageDead(_13)
    SourceInfo(serde/src/de/impls.rs:562:36-562:37)
  6: StorageDead(_12)
    SourceInfo(serde/src/de/impls.rs:562:36-562:37)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:562:36-562:37)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb8
  0: StorageDead(_17)
    SourceInfo(serde/src/de/impls.rs:563:68-563:69)
  1: StorageDead(_15)
    SourceInfo(serde/src/de/impls.rs:563:68-563:69)
  2: _0 = std::result::Result::<char, E>::Err(move _14)
    SourceInfo(serde/src/de/impls.rs:563:18-563:70)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:563:69-563:70)
      kind: drop(_14) -> [return: bb9, unwind: bb11]
  }
  preds [bb4]
  succs [bb9, bb11]

bb9
  0: StorageDead(_14)
    SourceInfo(serde/src/de/impls.rs:563:69-563:70)
  1: StorageDead(_19)
    SourceInfo(serde/src/de/impls.rs:563:69-563:70)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:563:69-563:70)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  0: StorageDead(_3)
    SourceInfo(serde/src/de/impls.rs:565:5-565:6)
  1: StorageDead(_5)
    SourceInfo(serde/src/de/impls.rs:565:5-565:6)
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:565:6-565:6)
      kind: return
  }
  preds [bb7, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(serde/src/de/impls.rs:556:5-565:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb8]
  succs []

