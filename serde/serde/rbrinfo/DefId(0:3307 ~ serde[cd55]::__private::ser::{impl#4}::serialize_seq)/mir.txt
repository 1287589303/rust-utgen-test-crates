bb0
  0: StorageLive(_3)
    SourceInfo(serde/src/private/ser.rs:1130:13-1130:50)
  1: StorageLive(_4)
    SourceInfo(serde/src/private/ser.rs:1130:28-1130:49)
  2: _4 = __private::ser::Unsupported::Sequence
    SourceInfo(serde/src/private/ser.rs:1130:28-1130:49)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1130:13-1130:50)
      kind: _3 = __private::ser::FlatMapSerializer::<'_, M>::bad_type(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(serde/src/private/ser.rs:1130:49-1130:50)
  1: _0 = std::result::Result::<ser::impossible::Impossible<(), <M as ser::SerializeMap>::Error>, <M as ser::SerializeMap>::Error>::Err(move _3)
    SourceInfo(serde/src/private/ser.rs:1130:9-1130:51)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1130:50-1130:51)
      kind: drop(_3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(serde/src/private/ser.rs:1130:50-1130:51)
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1131:6-1131:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(serde/src/private/ser.rs:1129:5-1131:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

