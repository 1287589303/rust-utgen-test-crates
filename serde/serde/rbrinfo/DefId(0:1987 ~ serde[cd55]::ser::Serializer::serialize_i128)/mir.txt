bb0
  0: PlaceMention(_2)
    SourceInfo(serde/src/ser/mod.rs:517:17-517:18)
  1: StorageLive(_3)
    SourceInfo(serde/src/ser/mod.rs:518:13-518:51)
  Terminator {
      source_info: SourceInfo(serde/src/ser/mod.rs:518:13-518:51)
      kind: _3 = <<Self as ser::Serializer>::Error as ser::Error>::custom::<&str>(const "i128 is not supported") -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _0 = std::result::Result::<<Self as ser::Serializer>::Ok, <Self as ser::Serializer>::Error>::Err(move _3)
    SourceInfo(serde/src/ser/mod.rs:518:9-518:52)
  Terminator {
      source_info: SourceInfo(serde/src/ser/mod.rs:518:51-518:52)
      kind: drop(_3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(serde/src/ser/mod.rs:518:51-518:52)
  Terminator {
      source_info: SourceInfo(serde/src/ser/mod.rs:519:5-519:6)
      kind: drop(_1) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(serde/src/ser/mod.rs:519:6-519:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(serde/src/ser/mod.rs:519:5-519:6)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(serde/src/ser/mod.rs:516:5-519:6)
      kind: resume
  }
  preds [bb2, bb4]
  succs []

