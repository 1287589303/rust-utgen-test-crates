{
  "serde/src/lib.rs:297:9:300:10": [
    {
      "Match": {
        "match_source": "serde/src/de/impls.rs:795:38:795:56",
        "match_str": "seq.next_element()",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "serde/src/lib.rs:298:13:298:20": {
            "pat": {
              "pat_str": "Ok(val)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          },
          "serde/src/lib.rs:299:13:299:21": {
            "pat": {
              "pat_str": "Err(err)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "serde/src/de/impls.rs:795:38:795:56": [
    {
      "Match": {
        "match_source": "serde/src/de/impls.rs:795:38:795:56",
        "match_str": "seq.next_element()",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "serde/src/lib.rs:298:13:298:20": {
            "pat": {
              "pat_str": "Ok(val)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          },
          "serde/src/lib.rs:299:13:299:21": {
            "pat": {
              "pat_str": "Err(err)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "serde/src/de/impls.rs:795:15:795:57": [
    {
      "Bool": {
        "Other": "let Some(value) = tri!(seq.next_element())"
      }
    }
  ]
}