{
  "name": "serde::__private::ser::{impl#4}::serialize_u8",
  "mod_info": {
    "name": "__private::ser",
    "loc": "serde/src/private/mod.rs:4:1:4:13"
  },
  "visible": true,
  "loc": "serde/src/private/ser.rs:1041:5:1043:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Err(Self::bad_type(Unsupported::Integer))\n"
      ],
      "input_infer": "u8 values within the range 0 to 255, including edge cases 0 and 255\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct DummySerializer;",
                "    let serializer = DummySerializer;",
                "    let result = serializer.serialize_u8(0);",
                "}"
              ],
              "oracle": [
                "    result.is_err();",
                "    assert_eq!(result, Err(DummySerializer::bad_type(Unsupported::Integer)));"
              ],
              "code": [
                "{",
                "    struct DummySerializer;",
                "    let serializer = DummySerializer;",
                "    let result = serializer.serialize_u8(0);",
                "    result.is_err();",
                "    assert_eq!(result, Err(DummySerializer::bad_type(Unsupported::Integer)));",
                "}"
              ],
              "can_compile": false,
              "repaired": true
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct DummySerializer;",
                "    let serializer = DummySerializer;",
                "    let result = serializer.serialize_u8(128);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, Err(DummySerializer::bad_type(Unsupported::Integer)));"
              ],
              "code": [
                "{",
                "    struct DummySerializer;",
                "    let serializer = DummySerializer;",
                "    let result = serializer.serialize_u8(128);",
                "    assert_eq!(result, Err(DummySerializer::bad_type(Unsupported::Integer)));",
                "}"
              ],
              "can_compile": false,
              "repaired": true
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct DummySerializer;",
                "    let serializer = DummySerializer;",
                "    let result = serializer.serialize_u8(255);",
                "}"
              ],
              "oracle": [
                "    let expected = Err(DummySerializer::bad_type(Unsupported::Integer));",
                "    assert_eq!(result, expected);"
              ],
              "code": [
                "{",
                "    struct DummySerializer;",
                "    let serializer = DummySerializer;",
                "    let result = serializer.serialize_u8(255);",
                "    let expected = Err(DummySerializer::bad_type(Unsupported::Integer));",
                "    assert_eq!(result, expected);",
                "}"
              ],
              "can_compile": false,
              "repaired": true
            }
          ]
        }
      ]
    }
  ]
}