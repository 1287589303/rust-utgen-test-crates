{
  "name": "serde::__private::ser::{impl#4}::serialize_u32",
  "mod_info": {
    "name": "__private::ser",
    "loc": "serde/src/private/mod.rs:4:1:4:13"
  },
  "visible": true,
  "loc": "serde/src/private/ser.rs:1049:5:1051:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Err(Self::bad_type(Unsupported::Integer))\n"
      ],
      "input_infer": "Test input conditions or ranges: u32 values in the range 0 to 4,294,967,295, inclusive.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct TestSerializer;",
                "    impl Serializer for TestSerializer {",
                "        type Ok = ();",
                "        type Error = ();",
                "        type SerializeSeq = ();",
                "        type SerializeTuple = ();",
                "        type SerializeTupleStruct = ();",
                "        type SerializeTupleVariant = ();",
                "        type SerializeMap = ();",
                "        type SerializeStruct = ();",
                "        type SerializeStructVariant = ();",
                "        ",
                "        fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {",
                "            Err(())",
                "        }",
                "        ",
                "        // Other trait methods omitted for brevity",
                "        // ...",
                "    }",
                "    ",
                "    let serializer = TestSerializer;",
                "    let _ = serializer.serialize_u32(0);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(serializer.serialize_u32(0), Err(()));"
              ],
              "code": [
                "{",
                "    struct TestSerializer;",
                "    impl Serializer for TestSerializer {",
                "        type Ok = ();",
                "        type Error = ();",
                "        type SerializeSeq = ();",
                "        type SerializeTuple = ();",
                "        type SerializeTupleStruct = ();",
                "        type SerializeTupleVariant = ();",
                "        type SerializeMap = ();",
                "        type SerializeStruct = ();",
                "        type SerializeStructVariant = ();",
                "        ",
                "        fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {",
                "            Err(())",
                "        }",
                "        ",
                "        // Other trait methods omitted for brevity",
                "        // ...",
                "    }",
                "    ",
                "    let serializer = TestSerializer;",
                "    let _ = serializer.serialize_u32(0);",
                "    assert_eq!(serializer.serialize_u32(0), Err(()));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct TestSerializer;",
                "    impl Serializer for TestSerializer {",
                "        type Ok = ();",
                "        type Error = ();",
                "        type SerializeSeq = ();",
                "        type SerializeTuple = ();",
                "        type SerializeTupleStruct = ();",
                "        type SerializeTupleVariant = ();",
                "        type SerializeMap = ();",
                "        type SerializeStruct = ();",
                "        type SerializeStructVariant = ();",
                "        ",
                "        fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {",
                "            Err(())",
                "        }",
                "        ",
                "        // Other trait methods omitted for brevity",
                "        // ...",
                "    }",
                "    ",
                "    let serializer = TestSerializer;",
                "    let _ = serializer.serialize_u32(4_294_967_295);",
                "}"
              ],
              "oracle": [
                "    Err(Self::bad_type(Unsupported::Integer))"
              ],
              "code": [
                "{",
                "    struct TestSerializer;",
                "    impl Serializer for TestSerializer {",
                "        type Ok = ();",
                "        type Error = ();",
                "        type SerializeSeq = ();",
                "        type SerializeTuple = ();",
                "        type SerializeTupleStruct = ();",
                "        type SerializeTupleVariant = ();",
                "        type SerializeMap = ();",
                "        type SerializeStruct = ();",
                "        type SerializeStructVariant = ();",
                "        ",
                "        fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {",
                "            Err(())",
                "        }",
                "        ",
                "        // Other trait methods omitted for brevity",
                "        // ...",
                "    }",
                "    ",
                "    let serializer = TestSerializer;",
                "    let _ = serializer.serialize_u32(4_294_967_295);",
                "    Err(Self::bad_type(Unsupported::Integer))",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    struct TestSerializer;",
                "    impl Serializer for TestSerializer {",
                "        type Ok = ();",
                "        type Error = ();",
                "        type SerializeSeq = ();",
                "        type SerializeTuple = ();",
                "        type SerializeTupleStruct = ();",
                "        type SerializeTupleVariant = ();",
                "        type SerializeMap = ();",
                "        type SerializeStruct = ();",
                "        type SerializeStructVariant = ();",
                "        ",
                "        fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {",
                "            Err(())",
                "        }",
                "        ",
                "        // Other trait methods omitted for brevity",
                "        // ...",
                "    }",
                "    ",
                "    let serializer = TestSerializer;",
                "    let _ = serializer.serialize_u32(2_147_483_647);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(serializer.serialize_u32(2_147_483_647), Err(TestSerializer::bad_type(Unsupported::Integer)));"
              ],
              "code": [
                "{",
                "    struct TestSerializer;",
                "    impl Serializer for TestSerializer {",
                "        type Ok = ();",
                "        type Error = ();",
                "        type SerializeSeq = ();",
                "        type SerializeTuple = ();",
                "        type SerializeTupleStruct = ();",
                "        type SerializeTupleVariant = ();",
                "        type SerializeMap = ();",
                "        type SerializeStruct = ();",
                "        type SerializeStructVariant = ();",
                "        ",
                "        fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {",
                "            Err(())",
                "        }",
                "        ",
                "        // Other trait methods omitted for brevity",
                "        // ...",
                "    }",
                "    ",
                "    let serializer = TestSerializer;",
                "    let _ = serializer.serialize_u32(2_147_483_647);",
                "    assert_eq!(serializer.serialize_u32(2_147_483_647), Err(TestSerializer::bad_type(Unsupported::Integer)));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}