[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(-9223372036854775808);",
          "}"
        ],
        "oracle": [
          "    Err(Error::invalid_type(Unexpected::Signed(-9223372036854775808), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(0), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(9223372036854775807), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))"
        ],
        "code": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(-9223372036854775808);",
          "    Err(Error::invalid_type(Unexpected::Signed(-9223372036854775808), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(0), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(9223372036854775807), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(-1);",
          "}"
        ],
        "oracle": [
          "    Err(Error::invalid_type(Unexpected::Signed(-1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(0), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(i64::MIN), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(i64::MAX), &TestVisitor))"
        ],
        "code": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(-1);",
          "    Err(Error::invalid_type(Unexpected::Signed(-1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(0), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(i64::MIN), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(i64::MAX), &TestVisitor))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(0);",
          "}"
        ],
        "oracle": [
          "    Err(Error::invalid_type(Unexpected::Signed(0), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(9223372036854775807), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-9223372036854775808), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(123456789), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-123456789), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(42), &TestVisitor))"
        ],
        "code": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(0);",
          "    Err(Error::invalid_type(Unexpected::Signed(0), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-1), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(9223372036854775807), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-9223372036854775808), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(123456789), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(-123456789), &TestVisitor))",
          "    Err(Error::invalid_type(Unexpected::Signed(42), &TestVisitor))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(1);",
          "}"
        ],
        "oracle": [
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))"
        ],
        "code": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(1);",
          "    Err(Error::invalid_type(Unexpected::Signed(1), &TestVisitor))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(9223372036854775807);",
          "}"
        ],
        "oracle": [
          "    Err(Error::invalid_type(Unexpected::Signed(9223372036854775807), &self))"
        ],
        "code": [
          "{",
          "    struct TestVisitor;",
          "    impl<'de> Visitor<'de> for TestVisitor {",
          "        type Value = ();",
          "        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
          "            formatter.write_str(\"test\")",
          "        }",
          "    }",
          "",
          "    let _ = TestVisitor.visit_i64(9223372036854775807);",
          "    Err(Error::invalid_type(Unexpected::Signed(9223372036854775807), &self))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]