[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor {",
          "        tag: &'static str,",
          "        content: &'static str,",
          "    }",
          "",
          "    let visitor = TestVisitor {",
          "        tag: \"not_tag\",",
          "        content: \"content_value\",",
          "    };",
          "    ",
          "    let result = visitor.visit_str(\"content_value\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(TagOrContentField::Content));"
        ],
        "code": [
          "{",
          "    struct TestVisitor {",
          "        tag: &'static str,",
          "        content: &'static str,",
          "    }",
          "",
          "    let visitor = TestVisitor {",
          "        tag: \"not_tag\",",
          "        content: \"content_value\",",
          "    };",
          "    ",
          "    let result = visitor.visit_str(\"content_value\");",
          "    assert_eq!(result, Ok(TagOrContentField::Content));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor {",
          "        tag: &'static str,",
          "        content: &'static str,",
          "    }",
          "",
          "    let visitor = TestVisitor {",
          "        tag: \"tag_value\",",
          "        content: \"content_value\",",
          "    };",
          "",
          "    let result = visitor.visit_str(\"content_value\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(TagOrContentField::Content));"
        ],
        "code": [
          "{",
          "    struct TestVisitor {",
          "        tag: &'static str,",
          "        content: &'static str,",
          "    }",
          "",
          "    let visitor = TestVisitor {",
          "        tag: \"tag_value\",",
          "        content: \"content_value\",",
          "    };",
          "",
          "    let result = visitor.visit_str(\"content_value\");",
          "    assert_eq!(result, Ok(TagOrContentField::Content));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestVisitor {",
          "        tag: &'static str,",
          "        content: &'static str,",
          "    }",
          "",
          "    let visitor = TestVisitor {",
          "        tag: \"TAG\",",
          "        content: \"Content\",",
          "    };",
          "",
          "    let result = visitor.visit_str(\"Content\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(TagOrContentField::Content));"
        ],
        "code": [
          "{",
          "    struct TestVisitor {",
          "        tag: &'static str,",
          "        content: &'static str,",
          "    }",
          "",
          "    let visitor = TestVisitor {",
          "        tag: \"TAG\",",
          "        content: \"Content\",",
          "    };",
          "",
          "    let result = visitor.visit_str(\"Content\");",
          "    assert_eq!(result, Ok(TagOrContentField::Content));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]