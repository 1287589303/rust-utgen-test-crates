[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(i64::MIN);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(serializer.serialize_i64(i64::MIN), Ok(Content::I64(i64::MIN)));",
          "    assert_eq!(serializer.serialize_i64(0), Ok(Content::I64(0)));",
          "    assert_eq!(serializer.serialize_i64(i64::MAX), Ok(Content::I64(i64::MAX)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(i64::MIN);",
          "    assert_eq!(serializer.serialize_i64(i64::MIN), Ok(Content::I64(i64::MIN)));",
          "    assert_eq!(serializer.serialize_i64(0), Ok(Content::I64(0)));",
          "    assert_eq!(serializer.serialize_i64(i64::MAX), Ok(Content::I64(i64::MAX)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(serializer.serialize_i64(0), Ok(Content::I64(0)));",
          "    assert_eq!(serializer.serialize_i64(1), Ok(Content::I64(1)));",
          "    assert_eq!(serializer.serialize_i64(-1), Ok(Content::I64(-1)));",
          "    assert_eq!(serializer.serialize_i64(i64::MAX), Ok(Content::I64(i64::MAX)));",
          "    assert_eq!(serializer.serialize_i64(i64::MIN), Ok(Content::I64(i64::MIN)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(0);",
          "    assert_eq!(serializer.serialize_i64(0), Ok(Content::I64(0)));",
          "    assert_eq!(serializer.serialize_i64(1), Ok(Content::I64(1)));",
          "    assert_eq!(serializer.serialize_i64(-1), Ok(Content::I64(-1)));",
          "    assert_eq!(serializer.serialize_i64(i64::MAX), Ok(Content::I64(i64::MAX)));",
          "    assert_eq!(serializer.serialize_i64(i64::MIN), Ok(Content::I64(i64::MIN)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(123456789);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(serializer.serialize_i64(123456789), Ok(Content::I64(123456789)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(123456789);",
          "    assert_eq!(serializer.serialize_i64(123456789), Ok(Content::I64(123456789)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(i64::MAX);",
          "}"
        ],
        "oracle": [
          "    assert!(matches!(serializer.serialize_i64(i64::MAX), Ok(Content::I64(i64::MAX))));",
          "    assert!(matches!(serializer.serialize_i64(i64::MIN), Ok(Content::I64(i64::MIN))));",
          "    assert!(matches!(serializer.serialize_i64(0), Ok(Content::I64(0))));",
          "    assert!(matches!(serializer.serialize_i64(123), Ok(Content::I64(123))));",
          "    assert!(matches!(serializer.serialize_i64(-456), Ok(Content::I64(-456))));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_i64(i64::MAX);",
          "    assert!(matches!(serializer.serialize_i64(i64::MAX), Ok(Content::I64(i64::MAX))));",
          "    assert!(matches!(serializer.serialize_i64(i64::MIN), Ok(Content::I64(i64::MIN))));",
          "    assert!(matches!(serializer.serialize_i64(0), Ok(Content::I64(0))));",
          "    assert!(matches!(serializer.serialize_i64(123), Ok(Content::I64(123))));",
          "    assert!(matches!(serializer.serialize_i64(-456), Ok(Content::I64(-456))));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]