[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let content = Content::Bool(true);",
          "    let _result = content.unexpected();",
          "}"
        ],
        "oracle": [
          "    let content = Content::Bool(true);",
          "    let expected = Unexpected::Bool(true);",
          "    let result = content.unexpected();",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let content = Content::Bool(true);",
          "    let _result = content.unexpected();",
          "    let content = Content::Bool(true);",
          "    let expected = Unexpected::Bool(true);",
          "    let result = content.unexpected();",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let content = Content::Bool(false);",
          "    let _result = content.unexpected();",
          "}"
        ],
        "oracle": [
          "    let content = Content::Bool(false);",
          "    let expected = Unexpected::Bool(false);",
          "    let result = content.unexpected();",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let content = Content::Bool(false);",
          "    let _result = content.unexpected();",
          "    let content = Content::Bool(false);",
          "    let expected = Unexpected::Bool(false);",
          "    let result = content.unexpected();",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]