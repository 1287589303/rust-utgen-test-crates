[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let content = Content::Unit;",
          "    let result = content.unexpected();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Unexpected::Unit);"
        ],
        "code": [
          "{",
          "    let content = Content::Unit;",
          "    let result = content.unexpected();",
          "    assert_eq!(result, Unexpected::Unit);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let content = Content::None;",
          "    let result = content.unexpected();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Content::Unit.unexpected(), Unexpected::Unit);"
        ],
        "code": [
          "{",
          "    let content = Content::None;",
          "    let result = content.unexpected();",
          "    assert_eq!(Content::Unit.unexpected(), Unexpected::Unit);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let content = Content::Some(Box::new(Content::Unit));",
          "    let result = content.unexpected();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Unexpected::Unit);"
        ],
        "code": [
          "{",
          "    let content = Content::Some(Box::new(Content::Unit));",
          "    let result = content.unexpected();",
          "    assert_eq!(result, Unexpected::Unit);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]