[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::U16(0)));",
          "    let result = serializer.serialize_u16(255);",
          "    assert_eq!(result, Ok(Content::U16(255)));",
          "    let result = serializer.serialize_u16(65535);",
          "    assert_eq!(result, Ok(Content::U16(65535)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(0);",
          "    assert_eq!(result, Ok(Content::U16(0)));",
          "    let result = serializer.serialize_u16(255);",
          "    assert_eq!(result, Ok(Content::U16(255)));",
          "    let result = serializer.serialize_u16(65535);",
          "    assert_eq!(result, Ok(Content::U16(65535)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::U16(1)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(1);",
          "    assert_eq!(result, Ok(Content::U16(1)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(32768);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::U16(32768));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(32768);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::U16(32768));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(65535);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::U16(65535));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_u16(65535);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::U16(65535));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]