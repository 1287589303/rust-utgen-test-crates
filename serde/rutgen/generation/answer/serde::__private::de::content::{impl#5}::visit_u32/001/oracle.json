[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = ContentVisitor { value: PhantomData };",
          "    let result = visitor.visit_u32(0u32);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::U32(0u32)));"
        ],
        "code": [
          "{",
          "    let visitor = ContentVisitor { value: PhantomData };",
          "    let result = visitor.visit_u32(0u32);",
          "    assert_eq!(result, Ok(Content::U32(0u32)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = ContentVisitor { value: PhantomData };",
          "    let result = visitor.visit_u32(1u32);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::U32(1)));",
          "    let result = visitor.visit_u32(0u32);",
          "    assert_eq!(result, Ok(Content::U32(0)));",
          "    let result = visitor.visit_u32(u32::MAX);",
          "    assert_eq!(result, Ok(Content::U32(u32::MAX)));",
          "    let result = visitor.visit_u32(42u32);",
          "    assert_eq!(result, Ok(Content::U32(42)));"
        ],
        "code": [
          "{",
          "    let visitor = ContentVisitor { value: PhantomData };",
          "    let result = visitor.visit_u32(1u32);",
          "    assert_eq!(result, Ok(Content::U32(1)));",
          "    let result = visitor.visit_u32(0u32);",
          "    assert_eq!(result, Ok(Content::U32(0)));",
          "    let result = visitor.visit_u32(u32::MAX);",
          "    assert_eq!(result, Ok(Content::U32(u32::MAX)));",
          "    let result = visitor.visit_u32(42u32);",
          "    assert_eq!(result, Ok(Content::U32(42)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = ContentVisitor { value: PhantomData };",
          "    let result = visitor.visit_u32(4294967295u32);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::U32(4294967295u32)));"
        ],
        "code": [
          "{",
          "    let visitor = ContentVisitor { value: PhantomData };",
          "    let result = visitor.visit_u32(4294967295u32);",
          "    assert_eq!(result, Ok(Content::U32(4294967295u32)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]