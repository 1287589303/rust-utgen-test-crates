[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(-128);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::I8(-128));",
          "    ",
          "    let result = serializer.serialize_i8(0);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::I8(0));",
          "    ",
          "    let result = serializer.serialize_i8(127);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::I8(127));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(-128);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::I8(-128));",
          "    ",
          "    let result = serializer.serialize_i8(0);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::I8(0));",
          "    ",
          "    let result = serializer.serialize_i8(127);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::I8(127));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::I8(0)));",
          "    let result = serializer.serialize_i8(-128);",
          "    assert_eq!(result, Ok(Content::I8(-128)));",
          "    let result = serializer.serialize_i8(127);",
          "    assert_eq!(result, Ok(Content::I8(127)));",
          "    let result = serializer.serialize_i8(1);",
          "    assert_eq!(result, Ok(Content::I8(1)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(0);",
          "    assert_eq!(result, Ok(Content::I8(0)));",
          "    let result = serializer.serialize_i8(-128);",
          "    assert_eq!(result, Ok(Content::I8(-128)));",
          "    let result = serializer.serialize_i8(127);",
          "    assert_eq!(result, Ok(Content::I8(127)));",
          "    let result = serializer.serialize_i8(1);",
          "    assert_eq!(result, Ok(Content::I8(1)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(127);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::I8(127)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(127);",
          "    assert_eq!(result, Ok(Content::I8(127)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(64);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::I8(64)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(64);",
          "    assert_eq!(result, Ok(Content::I8(64)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(-64);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::I8(-64)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i8(-64);",
          "    assert_eq!(result, Ok(Content::I8(-64)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]