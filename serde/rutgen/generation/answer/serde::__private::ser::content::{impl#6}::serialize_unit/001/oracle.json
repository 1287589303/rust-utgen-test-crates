[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_unit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(serializer.serialize_unit(), Ok(Content::Unit));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let _ = serializer.serialize_unit();",
          "    assert_eq!(serializer.serialize_unit(), Ok(Content::Unit));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct CustomError;",
          "    impl ser::Error for CustomError {}",
          "",
          "    let serializer = ContentSerializer::<CustomError>::default();",
          "    let _ = serializer.serialize_unit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(serializer.serialize_unit().unwrap(), Content::Unit);"
        ],
        "code": [
          "{",
          "    struct CustomError;",
          "    impl ser::Error for CustomError {}",
          "",
          "    let serializer = ContentSerializer::<CustomError>::default();",
          "    let _ = serializer.serialize_unit();",
          "    assert_eq!(serializer.serialize_unit().unwrap(), Content::Unit);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]