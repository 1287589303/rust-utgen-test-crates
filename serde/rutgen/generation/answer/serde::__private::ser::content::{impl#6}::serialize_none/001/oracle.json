[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer: ContentSerializer<SomeErrorType> = ContentSerializer { error: PhantomData };",
          "    let result = serializer.serialize_none();",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::None);"
        ],
        "code": [
          "{",
          "    let serializer: ContentSerializer<SomeErrorType> = ContentSerializer { error: PhantomData };",
          "    let result = serializer.serialize_none();",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), Content::None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer: ContentSerializer<AnotherErrorType> = ContentSerializer { error: PhantomData };",
          "    let result = serializer.serialize_none();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::None));"
        ],
        "code": [
          "{",
          "    let serializer: ContentSerializer<AnotherErrorType> = ContentSerializer { error: PhantomData };",
          "    let result = serializer.serialize_none();",
          "    assert_eq!(result, Ok(Content::None));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]