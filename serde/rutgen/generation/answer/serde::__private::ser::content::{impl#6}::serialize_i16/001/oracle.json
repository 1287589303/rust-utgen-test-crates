[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i16(-32768);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::I16(-32768)));",
          "    let result = serializer.serialize_i16(0);",
          "    assert_eq!(result, Ok(Content::I16(0)));",
          "    let result = serializer.serialize_i16(32767);",
          "    assert_eq!(result, Ok(Content::I16(32767)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i16(-32768);",
          "    assert_eq!(result, Ok(Content::I16(-32768)));",
          "    let result = serializer.serialize_i16(0);",
          "    assert_eq!(result, Ok(Content::I16(0)));",
          "    let result = serializer.serialize_i16(32767);",
          "    assert_eq!(result, Ok(Content::I16(32767)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i16(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::I16(0)));",
          "    let result = serializer.serialize_i16(-1);",
          "    assert_eq!(result, Ok(Content::I16(-1)));",
          "    let result = serializer.serialize_i16(1);",
          "    assert_eq!(result, Ok(Content::I16(1)));",
          "    let result = serializer.serialize_i16(32767);",
          "    assert_eq!(result, Ok(Content::I16(32767)));",
          "    let result = serializer.serialize_i16(-32768);",
          "    assert_eq!(result, Ok(Content::I16(-32768)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i16(0);",
          "    assert_eq!(result, Ok(Content::I16(0)));",
          "    let result = serializer.serialize_i16(-1);",
          "    assert_eq!(result, Ok(Content::I16(-1)));",
          "    let result = serializer.serialize_i16(1);",
          "    assert_eq!(result, Ok(Content::I16(1)));",
          "    let result = serializer.serialize_i16(32767);",
          "    assert_eq!(result, Ok(Content::I16(32767)));",
          "    let result = serializer.serialize_i16(-32768);",
          "    assert_eq!(result, Ok(Content::I16(-32768)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i16(32767);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Content::I16(32767)));"
        ],
        "code": [
          "{",
          "    let serializer = ContentSerializer::<()>::default();",
          "    let result = serializer.serialize_i16(32767);",
          "    assert_eq!(result, Ok(Content::I16(32767)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]