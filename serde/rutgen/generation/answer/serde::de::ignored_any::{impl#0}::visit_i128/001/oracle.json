[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(-128);",
          "}"
        ],
        "oracle": [
          "    result.unwrap() == IgnoredAny;"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(-128);",
          "    result.unwrap() == IgnoredAny;",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(0);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(127);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(127);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(128);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(128);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(2i128.pow(63) - 1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(2i128.pow(63) - 1);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(-2i128.pow(63));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(-2i128.pow(63));",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(2i128.pow(64) - 1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(-2i128.pow(64));",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(0);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(i128::MAX);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(i128::MIN);",
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(2i128.pow(64) - 1);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(-2i128.pow(64));",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(0);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(i128::MAX);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "    let result = visitor.visit_i128(i128::MIN);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(-2i128.pow(64));",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(-2i128.pow(64));",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(123456789012345678901234567890i128);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(IgnoredAny));"
        ],
        "code": [
          "{",
          "    let visitor = IgnoredAny;",
          "    let result = visitor.visit_i128(123456789012345678901234567890i128);",
          "    assert_eq!(result, Ok(IgnoredAny));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]