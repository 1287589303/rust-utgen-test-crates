[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Unexpected::Bool(true);",
          "    let mut formatter = std::fmt::Formatter::new();",
          "    let _ = input.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.to_string(), \"boolean `true`\");"
        ],
        "code": [
          "{",
          "    let input = Unexpected::Bool(true);",
          "    let mut formatter = std::fmt::Formatter::new();",
          "    let _ = input.fmt(&mut formatter);",
          "    assert_eq!(formatter.to_string(), \"boolean `true`\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Unexpected::Bool(false);",
          "    let mut formatter = std::fmt::Formatter::new();",
          "    let _ = input.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    write!(formatter, \"boolean `false`\")",
          "    assert_eq!(formatter.to_string(), \"boolean `false`\")"
        ],
        "code": [
          "{",
          "    let input = Unexpected::Bool(false);",
          "    let mut formatter = std::fmt::Formatter::new();",
          "    let _ = input.fmt(&mut formatter);",
          "    write!(formatter, \"boolean `false`\")",
          "    assert_eq!(formatter.to_string(), \"boolean `false`\")",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]